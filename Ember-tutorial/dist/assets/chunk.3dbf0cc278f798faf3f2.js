/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkmy_app"] = self["webpackChunkmy_app"] || []).push([["vendors-assets_my-app_js-rewritten-packages_ember-data_adapter_85bda234_node_modules_ember-da-04bcb3"],{

/***/ "../../css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[0]!./app.css":
/*!***************************************************************************************************************************************!*\
  !*** ../../css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[0]!./app.css ***!
  \***************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../css-loader/dist/runtime/api.js */ \"../../css-loader/dist/runtime/api.js\");\n/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);\n// Imports\n\nvar ___CSS_LOADER_EXPORT___ = _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/*\\n! tailwindcss v3.4.3 | MIT License | https://tailwindcss.com\\n*//*\\n1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)\\n2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)\\n*/\\n\\n*,\\n::before,\\n::after {\\n  box-sizing: border-box; /* 1 */\\n  border-width: 0; /* 2 */\\n  border-style: solid; /* 2 */\\n  border-color: #e5e7eb; /* 2 */\\n}\\n\\n::before,\\n::after {\\n  --tw-content: '';\\n}\\n\\n/*\\n1. Use a consistent sensible line-height in all browsers.\\n2. Prevent adjustments of font size after orientation changes in iOS.\\n3. Use a more readable tab size.\\n4. Use the user's configured `sans` font-family by default.\\n5. Use the user's configured `sans` font-feature-settings by default.\\n6. Use the user's configured `sans` font-variation-settings by default.\\n7. Disable tap highlights on iOS\\n*/\\n\\nhtml,\\n:host {\\n  line-height: 1.5; /* 1 */\\n  -webkit-text-size-adjust: 100%; /* 2 */\\n  -moz-tab-size: 4; /* 3 */\\n  -o-tab-size: 4;\\n     tab-size: 4; /* 3 */\\n  font-family: ui-sans-serif, system-ui, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\", \\\"Noto Color Emoji\\\"; /* 4 */\\n  font-feature-settings: normal; /* 5 */\\n  font-variation-settings: normal; /* 6 */\\n  -webkit-tap-highlight-color: transparent; /* 7 */\\n}\\n\\n/*\\n1. Remove the margin in all browsers.\\n2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.\\n*/\\n\\nbody {\\n  margin: 0; /* 1 */\\n  line-height: inherit; /* 2 */\\n}\\n\\n/*\\n1. Add the correct height in Firefox.\\n2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)\\n3. Ensure horizontal rules are visible by default.\\n*/\\n\\nhr {\\n  height: 0; /* 1 */\\n  color: inherit; /* 2 */\\n  border-top-width: 1px; /* 3 */\\n}\\n\\n/*\\nAdd the correct text decoration in Chrome, Edge, and Safari.\\n*/\\n\\nabbr:where([title]) {\\n  -webkit-text-decoration: underline dotted;\\n          text-decoration: underline dotted;\\n}\\n\\n/*\\nRemove the default font size and weight for headings.\\n*/\\n\\nh1,\\nh2,\\nh3,\\nh4,\\nh5,\\nh6 {\\n  font-size: inherit;\\n  font-weight: inherit;\\n}\\n\\n/*\\nReset links to optimize for opt-in styling instead of opt-out.\\n*/\\n\\na {\\n  color: inherit;\\n  text-decoration: inherit;\\n}\\n\\n/*\\nAdd the correct font weight in Edge and Safari.\\n*/\\n\\nb,\\nstrong {\\n  font-weight: bolder;\\n}\\n\\n/*\\n1. Use the user's configured `mono` font-family by default.\\n2. Use the user's configured `mono` font-feature-settings by default.\\n3. Use the user's configured `mono` font-variation-settings by default.\\n4. Correct the odd `em` font sizing in all browsers.\\n*/\\n\\ncode,\\nkbd,\\nsamp,\\npre {\\n  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, \\\"Liberation Mono\\\", \\\"Courier New\\\", monospace; /* 1 */\\n  font-feature-settings: normal; /* 2 */\\n  font-variation-settings: normal; /* 3 */\\n  font-size: 1em; /* 4 */\\n}\\n\\n/*\\nAdd the correct font size in all browsers.\\n*/\\n\\nsmall {\\n  font-size: 80%;\\n}\\n\\n/*\\nPrevent `sub` and `sup` elements from affecting the line height in all browsers.\\n*/\\n\\nsub,\\nsup {\\n  font-size: 75%;\\n  line-height: 0;\\n  position: relative;\\n  vertical-align: baseline;\\n}\\n\\nsub {\\n  bottom: -0.25em;\\n}\\n\\nsup {\\n  top: -0.5em;\\n}\\n\\n/*\\n1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)\\n2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)\\n3. Remove gaps between table borders by default.\\n*/\\n\\ntable {\\n  text-indent: 0; /* 1 */\\n  border-color: inherit; /* 2 */\\n  border-collapse: collapse; /* 3 */\\n}\\n\\n/*\\n1. Change the font styles in all browsers.\\n2. Remove the margin in Firefox and Safari.\\n3. Remove default padding in all browsers.\\n*/\\n\\nbutton,\\ninput,\\noptgroup,\\nselect,\\ntextarea {\\n  font-family: inherit; /* 1 */\\n  font-feature-settings: inherit; /* 1 */\\n  font-variation-settings: inherit; /* 1 */\\n  font-size: 100%; /* 1 */\\n  font-weight: inherit; /* 1 */\\n  line-height: inherit; /* 1 */\\n  letter-spacing: inherit; /* 1 */\\n  color: inherit; /* 1 */\\n  margin: 0; /* 2 */\\n  padding: 0; /* 3 */\\n}\\n\\n/*\\nRemove the inheritance of text transform in Edge and Firefox.\\n*/\\n\\nbutton,\\nselect {\\n  text-transform: none;\\n}\\n\\n/*\\n1. Correct the inability to style clickable types in iOS and Safari.\\n2. Remove default button styles.\\n*/\\n\\nbutton,\\ninput:where([type='button']),\\ninput:where([type='reset']),\\ninput:where([type='submit']) {\\n  -webkit-appearance: button; /* 1 */\\n  background-color: transparent; /* 2 */\\n  background-image: none; /* 2 */\\n}\\n\\n/*\\nUse the modern Firefox focus style for all focusable elements.\\n*/\\n\\n:-moz-focusring {\\n  outline: auto;\\n}\\n\\n/*\\nRemove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)\\n*/\\n\\n:-moz-ui-invalid {\\n  box-shadow: none;\\n}\\n\\n/*\\nAdd the correct vertical alignment in Chrome and Firefox.\\n*/\\n\\nprogress {\\n  vertical-align: baseline;\\n}\\n\\n/*\\nCorrect the cursor style of increment and decrement buttons in Safari.\\n*/\\n\\n::-webkit-inner-spin-button,\\n::-webkit-outer-spin-button {\\n  height: auto;\\n}\\n\\n/*\\n1. Correct the odd appearance in Chrome and Safari.\\n2. Correct the outline style in Safari.\\n*/\\n\\n[type='search'] {\\n  -webkit-appearance: textfield; /* 1 */\\n  outline-offset: -2px; /* 2 */\\n}\\n\\n/*\\nRemove the inner padding in Chrome and Safari on macOS.\\n*/\\n\\n::-webkit-search-decoration {\\n  -webkit-appearance: none;\\n}\\n\\n/*\\n1. Correct the inability to style clickable types in iOS and Safari.\\n2. Change font properties to `inherit` in Safari.\\n*/\\n\\n::-webkit-file-upload-button {\\n  -webkit-appearance: button; /* 1 */\\n  font: inherit; /* 2 */\\n}\\n\\n/*\\nAdd the correct display in Chrome and Safari.\\n*/\\n\\nsummary {\\n  display: list-item;\\n}\\n\\n/*\\nRemoves the default spacing and border for appropriate elements.\\n*/\\n\\nblockquote,\\ndl,\\ndd,\\nh1,\\nh2,\\nh3,\\nh4,\\nh5,\\nh6,\\nhr,\\nfigure,\\np,\\npre {\\n  margin: 0;\\n}\\n\\nfieldset {\\n  margin: 0;\\n  padding: 0;\\n}\\n\\nlegend {\\n  padding: 0;\\n}\\n\\nol,\\nul,\\nmenu {\\n  list-style: none;\\n  margin: 0;\\n  padding: 0;\\n}\\n\\n/*\\nReset default styling for dialogs.\\n*/\\ndialog {\\n  padding: 0;\\n}\\n\\n/*\\nPrevent resizing textareas horizontally by default.\\n*/\\n\\ntextarea {\\n  resize: vertical;\\n}\\n\\n/*\\n1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)\\n2. Set the default placeholder color to the user's configured gray 400 color.\\n*/\\n\\ninput::-moz-placeholder, textarea::-moz-placeholder {\\n  opacity: 1; /* 1 */\\n  color: #9ca3af; /* 2 */\\n}\\n\\ninput::placeholder,\\ntextarea::placeholder {\\n  opacity: 1; /* 1 */\\n  color: #9ca3af; /* 2 */\\n}\\n\\n/*\\nSet the default cursor for buttons.\\n*/\\n\\nbutton,\\n[role=\\\"button\\\"] {\\n  cursor: pointer;\\n}\\n\\n/*\\nMake sure disabled buttons don't get the pointer cursor.\\n*/\\n:disabled {\\n  cursor: default;\\n}\\n\\n/*\\n1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)\\n2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)\\n   This can trigger a poorly considered lint error in some tools but is included by design.\\n*/\\n\\nimg,\\nsvg,\\nvideo,\\ncanvas,\\naudio,\\niframe,\\nembed,\\nobject {\\n  display: block; /* 1 */\\n  vertical-align: middle; /* 2 */\\n}\\n\\n/*\\nConstrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)\\n*/\\n\\nimg,\\nvideo {\\n  max-width: 100%;\\n  height: auto;\\n}\\n\\n/* Make elements with the HTML hidden attribute stay hidden by default */\\n[hidden] {\\n  display: none;\\n}\\n\\n*, ::before, ::after {\\n  --tw-border-spacing-x: 0;\\n  --tw-border-spacing-y: 0;\\n  --tw-translate-x: 0;\\n  --tw-translate-y: 0;\\n  --tw-rotate: 0;\\n  --tw-skew-x: 0;\\n  --tw-skew-y: 0;\\n  --tw-scale-x: 1;\\n  --tw-scale-y: 1;\\n  --tw-pan-x:  ;\\n  --tw-pan-y:  ;\\n  --tw-pinch-zoom:  ;\\n  --tw-scroll-snap-strictness: proximity;\\n  --tw-gradient-from-position:  ;\\n  --tw-gradient-via-position:  ;\\n  --tw-gradient-to-position:  ;\\n  --tw-ordinal:  ;\\n  --tw-slashed-zero:  ;\\n  --tw-numeric-figure:  ;\\n  --tw-numeric-spacing:  ;\\n  --tw-numeric-fraction:  ;\\n  --tw-ring-inset:  ;\\n  --tw-ring-offset-width: 0px;\\n  --tw-ring-offset-color: #fff;\\n  --tw-ring-color: rgb(59 130 246 / 0.5);\\n  --tw-ring-offset-shadow: 0 0 #0000;\\n  --tw-ring-shadow: 0 0 #0000;\\n  --tw-shadow: 0 0 #0000;\\n  --tw-shadow-colored: 0 0 #0000;\\n  --tw-blur:  ;\\n  --tw-brightness:  ;\\n  --tw-contrast:  ;\\n  --tw-grayscale:  ;\\n  --tw-hue-rotate:  ;\\n  --tw-invert:  ;\\n  --tw-saturate:  ;\\n  --tw-sepia:  ;\\n  --tw-drop-shadow:  ;\\n  --tw-backdrop-blur:  ;\\n  --tw-backdrop-brightness:  ;\\n  --tw-backdrop-contrast:  ;\\n  --tw-backdrop-grayscale:  ;\\n  --tw-backdrop-hue-rotate:  ;\\n  --tw-backdrop-invert:  ;\\n  --tw-backdrop-opacity:  ;\\n  --tw-backdrop-saturate:  ;\\n  --tw-backdrop-sepia:  ;\\n  --tw-contain-size:  ;\\n  --tw-contain-layout:  ;\\n  --tw-contain-paint:  ;\\n  --tw-contain-style:  ;\\n}\\n\\n::backdrop {\\n  --tw-border-spacing-x: 0;\\n  --tw-border-spacing-y: 0;\\n  --tw-translate-x: 0;\\n  --tw-translate-y: 0;\\n  --tw-rotate: 0;\\n  --tw-skew-x: 0;\\n  --tw-skew-y: 0;\\n  --tw-scale-x: 1;\\n  --tw-scale-y: 1;\\n  --tw-pan-x:  ;\\n  --tw-pan-y:  ;\\n  --tw-pinch-zoom:  ;\\n  --tw-scroll-snap-strictness: proximity;\\n  --tw-gradient-from-position:  ;\\n  --tw-gradient-via-position:  ;\\n  --tw-gradient-to-position:  ;\\n  --tw-ordinal:  ;\\n  --tw-slashed-zero:  ;\\n  --tw-numeric-figure:  ;\\n  --tw-numeric-spacing:  ;\\n  --tw-numeric-fraction:  ;\\n  --tw-ring-inset:  ;\\n  --tw-ring-offset-width: 0px;\\n  --tw-ring-offset-color: #fff;\\n  --tw-ring-color: rgb(59 130 246 / 0.5);\\n  --tw-ring-offset-shadow: 0 0 #0000;\\n  --tw-ring-shadow: 0 0 #0000;\\n  --tw-shadow: 0 0 #0000;\\n  --tw-shadow-colored: 0 0 #0000;\\n  --tw-blur:  ;\\n  --tw-brightness:  ;\\n  --tw-contrast:  ;\\n  --tw-grayscale:  ;\\n  --tw-hue-rotate:  ;\\n  --tw-invert:  ;\\n  --tw-saturate:  ;\\n  --tw-sepia:  ;\\n  --tw-drop-shadow:  ;\\n  --tw-backdrop-blur:  ;\\n  --tw-backdrop-brightness:  ;\\n  --tw-backdrop-contrast:  ;\\n  --tw-backdrop-grayscale:  ;\\n  --tw-backdrop-hue-rotate:  ;\\n  --tw-backdrop-invert:  ;\\n  --tw-backdrop-opacity:  ;\\n  --tw-backdrop-saturate:  ;\\n  --tw-backdrop-sepia:  ;\\n  --tw-contain-size:  ;\\n  --tw-contain-layout:  ;\\n  --tw-contain-paint:  ;\\n  --tw-contain-style:  ;\\n}\\n.visible {\\n  visibility: visible;\\n}\\n.static {\\n  position: static;\\n}\\n.mx-auto {\\n  margin-left: auto;\\n  margin-right: auto;\\n}\\n.-ml-56 {\\n  margin-left: -14rem;\\n}\\n.mb-12 {\\n  margin-bottom: 3rem;\\n}\\n.mb-16 {\\n  margin-bottom: 4rem;\\n}\\n.mb-2 {\\n  margin-bottom: 0.5rem;\\n}\\n.mb-4 {\\n  margin-bottom: 1rem;\\n}\\n.mb-5 {\\n  margin-bottom: 1.25rem;\\n}\\n.mb-6 {\\n  margin-bottom: 1.5rem;\\n}\\n.mb-8 {\\n  margin-bottom: 2rem;\\n}\\n.ml-10 {\\n  margin-left: 2.5rem;\\n}\\n.ml-2 {\\n  margin-left: 0.5rem;\\n}\\n.ml-4 {\\n  margin-left: 1rem;\\n}\\n.ml-8 {\\n  margin-left: 2rem;\\n}\\n.mr-2 {\\n  margin-right: 0.5rem;\\n}\\n.mt-3 {\\n  margin-top: 0.75rem;\\n}\\n.mt-4 {\\n  margin-top: 1rem;\\n}\\n.mt-9 {\\n  margin-top: 2.25rem;\\n}\\n.box-border {\\n  box-sizing: border-box;\\n}\\n.block {\\n  display: block;\\n}\\n.flex {\\n  display: flex;\\n}\\n.grid {\\n  display: grid;\\n}\\n.h-14 {\\n  height: 3.5rem;\\n}\\n.w-48 {\\n  width: 12rem;\\n}\\n.w-full {\\n  width: 100%;\\n}\\n.max-w-sm {\\n  max-width: 24rem;\\n}\\n.grid-cols-2 {\\n  grid-template-columns: repeat(2, minmax(0, 1fr));\\n}\\n.grid-cols-3 {\\n  grid-template-columns: repeat(3, minmax(0, 1fr));\\n}\\n.place-content-center {\\n  place-content: center;\\n}\\n.content-center {\\n  align-content: center;\\n}\\n.items-center {\\n  align-items: center;\\n}\\n.items-stretch {\\n  align-items: stretch;\\n}\\n.justify-center {\\n  justify-content: center;\\n}\\n.rounded {\\n  border-radius: 0.25rem;\\n}\\n.rounded-lg {\\n  border-radius: 0.5rem;\\n}\\n.rounded-xl {\\n  border-radius: 0.75rem;\\n}\\n.border {\\n  border-width: 1px;\\n}\\n.border-black {\\n  --tw-border-opacity: 1;\\n  border-color: rgb(0 0 0 / var(--tw-border-opacity));\\n}\\n.border-blue-700 {\\n  --tw-border-opacity: 1;\\n  border-color: rgb(29 78 216 / var(--tw-border-opacity));\\n}\\n.border-gray-300 {\\n  --tw-border-opacity: 1;\\n  border-color: rgb(209 213 219 / var(--tw-border-opacity));\\n}\\n.border-white {\\n  --tw-border-opacity: 1;\\n  border-color: rgb(255 255 255 / var(--tw-border-opacity));\\n}\\n.bg-blue-600 {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(37 99 235 / var(--tw-bg-opacity));\\n}\\n.bg-blue-950 {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(23 37 84 / var(--tw-bg-opacity));\\n}\\n.bg-cyan-500 {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(6 182 212 / var(--tw-bg-opacity));\\n}\\n.bg-gray-50 {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(249 250 251 / var(--tw-bg-opacity));\\n}\\n.bg-welcome {\\n  background-color: #f6f6f6;;\\n}\\n.bg-yellow-500 {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(234 179 8 / var(--tw-bg-opacity));\\n}\\n.bg-gradient-to-r {\\n  background-image: linear-gradient(to right, var(--tw-gradient-stops));\\n}\\n.from-violet-500 {\\n  --tw-gradient-from: #8b5cf6 var(--tw-gradient-from-position);\\n  --tw-gradient-to: rgb(139 92 246 / 0) var(--tw-gradient-to-position);\\n  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\\n}\\n.to-fuchsia-500 {\\n  --tw-gradient-to: #d946ef var(--tw-gradient-to-position);\\n}\\n.object-cover {\\n  -o-object-fit: cover;\\n     object-fit: cover;\\n}\\n.p-16 {\\n  padding: 4rem;\\n}\\n.p-2 {\\n  padding: 0.5rem;\\n}\\n.p-2\\\\.5 {\\n  padding: 0.625rem;\\n}\\n.p-3 {\\n  padding: 0.75rem;\\n}\\n.p-4 {\\n  padding: 1rem;\\n}\\n.px-4 {\\n  padding-left: 1rem;\\n  padding-right: 1rem;\\n}\\n.py-2 {\\n  padding-top: 0.5rem;\\n  padding-bottom: 0.5rem;\\n}\\n.pb-2 {\\n  padding-bottom: 0.5rem;\\n}\\n.pl-64 {\\n  padding-left: 16rem;\\n}\\n.pr-64 {\\n  padding-right: 16rem;\\n}\\n.pt-0 {\\n  padding-top: 0px;\\n}\\n.text-center {\\n  text-align: center;\\n}\\n.text-2xl {\\n  font-size: 1.5rem;\\n  line-height: 2rem;\\n}\\n.text-4xl {\\n  font-size: 2.25rem;\\n  line-height: 2.5rem;\\n}\\n.text-5xl {\\n  font-size: 3rem;\\n  line-height: 1;\\n}\\n.text-rental-custom {\\n  font-size: 1.8rem;\\n}\\n.text-sm {\\n  font-size: 0.875rem;\\n  line-height: 1.25rem;\\n}\\n.text-xl {\\n  font-size: 1.25rem;\\n  line-height: 1.75rem;\\n}\\n.font-bold {\\n  font-weight: 700;\\n}\\n.font-light {\\n  font-weight: 300;\\n}\\n.font-medium {\\n  font-weight: 500;\\n}\\n.font-thin {\\n  font-weight: 100;\\n}\\n.italic {\\n  font-style: italic;\\n}\\n.text-black {\\n  --tw-text-opacity: 1;\\n  color: rgb(0 0 0 / var(--tw-text-opacity));\\n}\\n.text-blue-500 {\\n  --tw-text-opacity: 1;\\n  color: rgb(59 130 246 / var(--tw-text-opacity));\\n}\\n.text-blue-600 {\\n  --tw-text-opacity: 1;\\n  color: rgb(37 99 235 / var(--tw-text-opacity));\\n}\\n.text-gray-900 {\\n  --tw-text-opacity: 1;\\n  color: rgb(17 24 39 / var(--tw-text-opacity));\\n}\\n.text-white {\\n  --tw-text-opacity: 1;\\n  color: rgb(255 255 255 / var(--tw-text-opacity));\\n}\\n.shadow-lg {\\n  --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);\\n  --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);\\n  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);\\n}\\n.shadow-cyan-500\\\\/50 {\\n  --tw-shadow-color: rgb(6 182 212 / 0.5);\\n  --tw-shadow: var(--tw-shadow-colored);\\n}\\n.filter {\\n  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);\\n}\\n.hover\\\\:box-content:hover {\\n  box-sizing: content-box;\\n}\\n.hover\\\\:bg-blue-200:hover {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(191 219 254 / var(--tw-bg-opacity));\\n}\\n.hover\\\\:bg-blue-700:hover {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(29 78 216 / var(--tw-bg-opacity));\\n}\\n.hover\\\\:bg-sky-700:hover {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(3 105 161 / var(--tw-bg-opacity));\\n}\\n.focus\\\\:border-blue-500:focus {\\n  --tw-border-opacity: 1;\\n  border-color: rgb(59 130 246 / var(--tw-border-opacity));\\n}\\n.focus\\\\:ring-blue-500:focus {\\n  --tw-ring-opacity: 1;\\n  --tw-ring-color: rgb(59 130 246 / var(--tw-ring-opacity));\\n}\\n@media (prefers-color-scheme: dark) {\\n\\n  .dark\\\\:border-gray-600 {\\n    --tw-border-opacity: 1;\\n    border-color: rgb(75 85 99 / var(--tw-border-opacity));\\n  }\\n\\n  .dark\\\\:bg-gray-700 {\\n    --tw-bg-opacity: 1;\\n    background-color: rgb(55 65 81 / var(--tw-bg-opacity));\\n  }\\n\\n  .dark\\\\:text-white {\\n    --tw-text-opacity: 1;\\n    color: rgb(255 255 255 / var(--tw-text-opacity));\\n  }\\n\\n  .dark\\\\:placeholder-gray-400::-moz-placeholder {\\n    --tw-placeholder-opacity: 1;\\n    color: rgb(156 163 175 / var(--tw-placeholder-opacity));\\n  }\\n\\n  .dark\\\\:placeholder-gray-400::placeholder {\\n    --tw-placeholder-opacity: 1;\\n    color: rgb(156 163 175 / var(--tw-placeholder-opacity));\\n  }\\n\\n  .dark\\\\:focus\\\\:border-blue-500:focus {\\n    --tw-border-opacity: 1;\\n    border-color: rgb(59 130 246 / var(--tw-border-opacity));\\n  }\\n\\n  .dark\\\\:focus\\\\:ring-blue-500:focus {\\n    --tw-ring-opacity: 1;\\n    --tw-ring-color: rgb(59 130 246 / var(--tw-ring-opacity));\\n  }\\n}\\n\\n\\n\\n\", \"\"]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://my-app/./app.css?../../css-loader/dist/cjs.js??ruleSet%5B1%5D.rules%5B2%5D.use%5B1%5D!../../postcss-loader/dist/cjs.js??ruleSet%5B1%5D.rules%5B3%5D.use%5B0%5D");

/***/ }),

/***/ "../../css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[0]!../../ember-welcome-page/dist/components/welcome-page.css":
/*!***************************************************************************************************************************************************************************************!*\
  !*** ../../css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[0]!../../ember-welcome-page/dist/components/welcome-page.css ***!
  \***************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../css-loader/dist/runtime/api.js */ \"../../css-loader/dist/runtime/api.js\");\n/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);\n// Imports\n\nvar ___CSS_LOADER_EXPORT___ = _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"body {\\n  color: rgb(28, 30, 36);\\n  background: rgb(244, 246, 248);\\n  font-family: \\\"Inter var\\\",\\\"Inter web\\\",-apple-system,BlinkMacSystemFont,Segoe UI,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji;\\n  font-size: 18px;\\n  font-weight: 200;\\n  line-height: 1.5;\\n  margin: 0 auto;\\n  padding: 0;\\n}\\n#ember-welcome-page-id-selector {\\n  height: 100vh;\\n  padding: 2em;\\n}\\n#ember-welcome-page-id-selector img {\\n  max-width: 100%;\\n}\\n#ember-welcome-page-id-selector p {\\n  font-size: 1.25em;\\n  margin: 0 0 .75em;\\n}\\n#ember-welcome-page-id-selector h1 {\\n  font-size: 2.5em;\\n  font-weight: 200;\\n  line-height: 1.2;\\n  margin-top: 0;\\n}\\n#ember-welcome-page-id-selector a:link,\\n#ember-welcome-page-id-selector a:visited {\\n  color:rgb(255, 92, 68);\\n}\\n#ember-welcome-page-id-selector a:hover,\\n#ember-welcome-page-id-selector a:active {\\n  color: rgb(255, 92, 68);\\n}\\n#ember-welcome-page-id-selector .tomster {\\n  flex: 2;\\n}\\n#ember-welcome-page-id-selector .welcome {\\n  flex: 3;\\n}\\n#ember-welcome-page-id-selector .columns {\\n  display: flex;\\n  margin: 0 auto;\\n  max-width: 960px;\\n}\\n#ember-welcome-page-id-selector .welcome > ul > li {\\n  padding-bottom: 0.5em;\\n  font-size: 1.1em;\\n}\\n#ember-welcome-page-id-selector .welcome > ul > li > a {\\n  font-weight: bold;\\n}\\n#ember-welcome-page-id-selector .postscript {\\n  color: rgb(28, 30, 36);\\n  background: rgb(244, 246, 248);\\n  font-style: italic;\\n  line-height: 2;\\n  margin: 0 auto;\\n  max-width: 960px;\\n  padding-top: 3em;\\n  text-align: center;\\n}\\n#ember-welcome-page-id-selector .postscript code {\\n  color: rgb(244, 246, 248);\\n  border-radius: 3px;\\n  background-color: rgb(28, 30, 36);\\n  display: inline-block;\\n  font-family: Menlo, Courier, monospace;\\n  font-size: 0.9em;\\n  margin: 0 0.1em;\\n  padding: 0 0.5em;\\n}\\n@media (max-width: 700px) {\\n  #ember-welcome-page-id-selector {\\n    padding: 1em;\\n  }\\n  #ember-welcome-page-id-selector .columns {\\n    flex-direction: column;\\n  }\\n  #ember-welcome-page-id-selector .tomster img {\\n    display: block;\\n    margin: auto;\\n    width: 50%;\\n  }\\n  #ember-welcome-page-id-selector h2 {\\n    text-align: center;\\n  }\\n}\\n@media (max-width: 400px) {\\n  #ember-welcome-page-id-selector .tomster img {\\n    width: 60%;\\n  }\\n  #ember-welcome-page-id-selector .welcome,\\n  #ember-welcome-page-id-selector .tomster {\\n    float: none;\\n    margin: auto;\\n    width: 100%;\\n  }\\n}\\n\", \"\"]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://my-app/../../ember-welcome-page/dist/components/welcome-page.css?../../css-loader/dist/cjs.js??ruleSet%5B1%5D.rules%5B2%5D.use%5B1%5D!../../postcss-loader/dist/cjs.js??ruleSet%5B1%5D.rules%5B3%5D.use%5B0%5D");

/***/ }),

/***/ "./app.css":
/*!*****************!*\
  !*** ./app.css ***!
  \*****************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _css_loader_dist_cjs_js_ruleSet_1_rules_2_use_1_postcss_loader_dist_cjs_js_ruleSet_1_rules_3_use_0_app_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !!../../css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[0]!./app.css */ \"../../css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[0]!./app.css\");\n\n            \n\nvar options = {\"injectType\":\"styleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_css_loader_dist_cjs_js_ruleSet_1_rules_2_use_1_postcss_loader_dist_cjs_js_ruleSet_1_rules_3_use_0_app_css__WEBPACK_IMPORTED_MODULE_1__[\"default\"], options);\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_css_loader_dist_cjs_js_ruleSet_1_rules_2_use_1_postcss_loader_dist_cjs_js_ruleSet_1_rules_3_use_0_app_css__WEBPACK_IMPORTED_MODULE_1__[\"default\"].locals || {});\n\n//# sourceURL=webpack://my-app/./app.css?");

/***/ }),

/***/ "../../ember-welcome-page/dist/components/welcome-page.css":
/*!*****************************************************************!*\
  !*** ../../ember-welcome-page/dist/components/welcome-page.css ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _css_loader_dist_cjs_js_ruleSet_1_rules_2_use_1_postcss_loader_dist_cjs_js_ruleSet_1_rules_3_use_0_welcome_page_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !!../../../css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[0]!./welcome-page.css */ \"../../css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[0]!../../ember-welcome-page/dist/components/welcome-page.css\");\n\n            \n\nvar options = {\"injectType\":\"styleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_css_loader_dist_cjs_js_ruleSet_1_rules_2_use_1_postcss_loader_dist_cjs_js_ruleSet_1_rules_3_use_0_welcome_page_css__WEBPACK_IMPORTED_MODULE_1__[\"default\"], options);\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_css_loader_dist_cjs_js_ruleSet_1_rules_2_use_1_postcss_loader_dist_cjs_js_ruleSet_1_rules_3_use_0_welcome_page_css__WEBPACK_IMPORTED_MODULE_1__[\"default\"].locals || {});\n\n//# sourceURL=webpack://my-app/../../ember-welcome-page/dist/components/welcome-page.css?");

/***/ }),

/***/ "../../style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!*******************************************************************!*\
  !*** ../../style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \*******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar isOldIE = function isOldIE() {\n  var memo;\n  return function memorize() {\n    if (typeof memo === 'undefined') {\n      // Test for IE <= 9 as proposed by Browserhacks\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n      // Tests for existence of standard globals is to allow style-loader\n      // to operate correctly into non-standard environments\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\n      memo = Boolean(window && document && document.all && !window.atob);\n    }\n\n    return memo;\n  };\n}();\n\nvar getTarget = function getTarget() {\n  var memo = {};\n  return function memorize(target) {\n    if (typeof memo[target] === 'undefined') {\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n        try {\n          // This will throw an exception if access to iframe is blocked\n          // due to cross-origin restrictions\n          styleTarget = styleTarget.contentDocument.head;\n        } catch (e) {\n          // istanbul ignore next\n          styleTarget = null;\n        }\n      }\n\n      memo[target] = styleTarget;\n    }\n\n    return memo[target];\n  };\n}();\n\nvar stylesInDom = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDom.length; i++) {\n    if (stylesInDom[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var index = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3]\n    };\n\n    if (index !== -1) {\n      stylesInDom[index].references++;\n      stylesInDom[index].updater(obj);\n    } else {\n      stylesInDom.push({\n        identifier: identifier,\n        updater: addStyle(obj, options),\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction insertStyleElement(options) {\n  var style = document.createElement('style');\n  var attributes = options.attributes || {};\n\n  if (typeof attributes.nonce === 'undefined') {\n    var nonce =  true ? __webpack_require__.nc : 0;\n\n    if (nonce) {\n      attributes.nonce = nonce;\n    }\n  }\n\n  Object.keys(attributes).forEach(function (key) {\n    style.setAttribute(key, attributes[key]);\n  });\n\n  if (typeof options.insert === 'function') {\n    options.insert(style);\n  } else {\n    var target = getTarget(options.insert || 'head');\n\n    if (!target) {\n      throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n    }\n\n    target.appendChild(style);\n  }\n\n  return style;\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nvar replaceText = function replaceText() {\n  var textStore = [];\n  return function replace(index, replacement) {\n    textStore[index] = replacement;\n    return textStore.filter(Boolean).join('\\n');\n  };\n}();\n\nfunction applyToSingletonTag(style, index, remove, obj) {\n  var css = remove ? '' : obj.media ? \"@media \".concat(obj.media, \" {\").concat(obj.css, \"}\") : obj.css; // For old IE\n\n  /* istanbul ignore if  */\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = replaceText(index, css);\n  } else {\n    var cssNode = document.createTextNode(css);\n    var childNodes = style.childNodes;\n\n    if (childNodes[index]) {\n      style.removeChild(childNodes[index]);\n    }\n\n    if (childNodes.length) {\n      style.insertBefore(cssNode, childNodes[index]);\n    } else {\n      style.appendChild(cssNode);\n    }\n  }\n}\n\nfunction applyToTag(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute('media', media);\n  } else {\n    style.removeAttribute('media');\n  }\n\n  if (sourceMap && typeof btoa !== 'undefined') {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar singleton = null;\nvar singletonCounter = 0;\n\nfunction addStyle(obj, options) {\n  var style;\n  var update;\n  var remove;\n\n  if (options.singleton) {\n    var styleIndex = singletonCounter++;\n    style = singleton || (singleton = insertStyleElement(options));\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n  } else {\n    style = insertStyleElement(options);\n    update = applyToTag.bind(null, style, options);\n\n    remove = function remove() {\n      removeStyleElement(style);\n    };\n  }\n\n  update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      update(obj = newObj);\n    } else {\n      remove();\n    }\n  };\n}\n\nmodule.exports = function (list, options) {\n  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n  // tags it will allow on a page\n\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\n    options.singleton = isOldIE();\n  }\n\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    if (Object.prototype.toString.call(newList) !== '[object Array]') {\n      return;\n    }\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDom[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDom[_index].references === 0) {\n        stylesInDom[_index].updater();\n\n        stylesInDom.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};\n\n//# sourceURL=webpack://my-app/../../style-loader/dist/runtime/injectStylesIntoStyleTag.js?");

/***/ }),

/***/ "./components/buttons/share/template.hbs":
/*!***********************************************!*\
  !*** ./components/buttons/share/template.hbs ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _ember_template_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/template-factory */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Ftemplate-factory&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_template_factory__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_template_factory__WEBPACK_IMPORTED_MODULE_0__);\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_ember_template_factory__WEBPACK_IMPORTED_MODULE_0__.createTemplateFactory)(\n/*\n  <a ...attributes {{!para acceder a los atributos}} href={{this.shareURL}} target=\"_blank\"\n  rel=\"external nofollow noopener noreferrer\">\n  {{yield}}\n</a>\n*/\n{\n  \"id\": \"221HMSqC\",\n  \"block\": \"[[[11,3],[17,1],[16,6,[30,0,[\\\"shareURL\\\"]]],[24,\\\"target\\\",\\\"_blank\\\"],[24,\\\"rel\\\",\\\"external nofollow noopener noreferrer\\\"],[12],[1,\\\"\\\\n  \\\"],[18,2,null],[1,\\\"\\\\n\\\"],[13]],[\\\"&attrs\\\",\\\"&default\\\"],false,[\\\"a\\\",\\\"yield\\\"]]\",\n  \"moduleName\": \"my-app/components/buttons/share/template.hbs\",\n  \"isStrictMode\": false\n}));\n\n//# sourceURL=webpack://my-app/./components/buttons/share/template.hbs?");

/***/ }),

/***/ "./components/dog/template.hbs":
/*!*************************************!*\
  !*** ./components/dog/template.hbs ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _ember_template_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/template-factory */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Ftemplate-factory&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_template_factory__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_template_factory__WEBPACK_IMPORTED_MODULE_0__);\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_ember_template_factory__WEBPACK_IMPORTED_MODULE_0__.createTemplateFactory)(\n/*\n  <div class=\"place-content-center \">\n    <div>\n        <h2 class=\"mb-2 text-center text-2xl\">If you press the following button u will get a random dog</h2>\n    </div>\n    <div class=\"mb-2  flex items-center justify-center \">\n        {{! aquí cuando le damos click llamamos a la funcion changeDogState pasandole el parametro dog para cambiar el\n        estado}}\n        <button class=\" bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 border border-blue-700\n            rounded  \" {{on \"click\" (fn this.changeDogState 'dog' )}}>Get a random dog image</button>\n\n    </div>\n    <div>\n        <h2 class=\"mb-2 text-center text-2xl\">If you press the followinf button u will get a boxer dog</h2>\n    </div>\n    <div class=\"mb-2  flex items-center justify-center \">\n        {{!En este hacemos lo mismo que arriba pero pasandole el parametro boxer para cambiar el estado}}\n        <button class=\" bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 border border-blue-700\n            rounded  \" {{on \"click\" (fn this.changeDogState 'boxer' )}}>Change to boxer</button>\n    </div>\n    <div class=\" mb-2 flex items-center justify-center \">\n        {{! Se muestra la imagen \"dogImage(que es la variable que contiene la ruta de la imagen)\"\n        // cuando se renderiza el componente gracias al did-insert llama a la funcion que toca para renderizar la imagen\n        //Con el did-update llamamos a la funcion updateDog y le pasamos como parametro dogImageStated\n        //de esta manera puedo llamar con la funcion \"updateDog\" a la funcion \"getRandomDog\" o \"getBoxerDog\" y me pone\n        un perro u otro\n        }}\n        <img class=\"w-50 h-50 \" src={{this.dogImage}} alt='Random Dog' {{did-insert this.getRandomDog}} {{did-update\n            this.updateDog this.dogImageStated}}>\n\n    </div>\n\n    <div class=\" mb-2 flex items-center justify-center \">\n\n\n\n\n    </div>\n\n\n\n\n</div>\n*/\n{\n  \"id\": \"qnOcheP9\",\n  \"block\": \"[[[10,0],[14,0,\\\"place-content-center \\\"],[12],[1,\\\"\\\\n    \\\"],[10,0],[12],[1,\\\"\\\\n        \\\"],[10,\\\"h2\\\"],[14,0,\\\"mb-2 text-center text-2xl\\\"],[12],[1,\\\"If you press the following button u will get a random dog\\\"],[13],[1,\\\"\\\\n    \\\"],[13],[1,\\\"\\\\n    \\\"],[10,0],[14,0,\\\"mb-2  flex items-center justify-center \\\"],[12],[1,\\\"\\\\n\\\"],[1,\\\"        \\\"],[11,\\\"button\\\"],[24,0,\\\" bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 border border-blue-700\\\\n            rounded  \\\"],[4,[38,3],[\\\"click\\\",[28,[37,4],[[30,0,[\\\"changeDogState\\\"]],\\\"dog\\\"],null]],null],[12],[1,\\\"Get a random dog image\\\"],[13],[1,\\\"\\\\n\\\\n    \\\"],[13],[1,\\\"\\\\n    \\\"],[10,0],[12],[1,\\\"\\\\n        \\\"],[10,\\\"h2\\\"],[14,0,\\\"mb-2 text-center text-2xl\\\"],[12],[1,\\\"If you press the followinf button u will get a boxer dog\\\"],[13],[1,\\\"\\\\n    \\\"],[13],[1,\\\"\\\\n    \\\"],[10,0],[14,0,\\\"mb-2  flex items-center justify-center \\\"],[12],[1,\\\"\\\\n\\\"],[1,\\\"        \\\"],[11,\\\"button\\\"],[24,0,\\\" bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 border border-blue-700\\\\n            rounded  \\\"],[4,[38,3],[\\\"click\\\",[28,[37,4],[[30,0,[\\\"changeDogState\\\"]],\\\"boxer\\\"],null]],null],[12],[1,\\\"Change to boxer\\\"],[13],[1,\\\"\\\\n    \\\"],[13],[1,\\\"\\\\n    \\\"],[10,0],[14,0,\\\" mb-2 flex items-center justify-center \\\"],[12],[1,\\\"\\\\n\\\"],[1,\\\"        \\\"],[11,\\\"img\\\"],[24,0,\\\"w-50 h-50 \\\"],[16,\\\"src\\\",[30,0,[\\\"dogImage\\\"]]],[24,\\\"alt\\\",\\\"Random Dog\\\"],[4,[38,6],[[30,0,[\\\"getRandomDog\\\"]]],null],[4,[38,7],[[30,0,[\\\"updateDog\\\"]],[30,0,[\\\"dogImageStated\\\"]]],null],[12],[13],[1,\\\"\\\\n\\\\n    \\\"],[13],[1,\\\"\\\\n\\\\n    \\\"],[10,0],[14,0,\\\" mb-2 flex items-center justify-center \\\"],[12],[1,\\\"\\\\n\\\\n\\\\n\\\\n\\\\n    \\\"],[13],[1,\\\"\\\\n\\\\n\\\\n\\\\n\\\\n\\\"],[13]],[],false,[\\\"div\\\",\\\"h2\\\",\\\"button\\\",\\\"on\\\",\\\"fn\\\",\\\"img\\\",\\\"did-insert\\\",\\\"did-update\\\"]]\",\n  \"moduleName\": \"my-app/components/dog/template.hbs\",\n  \"isStrictMode\": false\n}));\n\n//# sourceURL=webpack://my-app/./components/dog/template.hbs?");

/***/ }),

/***/ "./components/endpoints/template.hbs":
/*!*******************************************!*\
  !*** ./components/endpoints/template.hbs ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _ember_template_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/template-factory */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Ftemplate-factory&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_template_factory__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_template_factory__WEBPACK_IMPORTED_MODULE_0__);\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_ember_template_factory__WEBPACK_IMPORTED_MODULE_0__.createTemplateFactory)(\n/*\n  <div>\n    <div class=\"mt-3 flex items-center justify-center\">\n        <h1 class=\"italic text-2xl\">Testing information from mock</h1>\n\n    </div>\n    <div class=\"mt-3 flex items-center justify-center\">\n        <h1>The following information is the default info, push the button to update it from my personal endpoint</h1>\n    </div>\n\n    <div class=\"mt-3 flex items-center justify-center\">\n        <h2 {{did-insert this.writeData}} {{did-update this.writeData this.buttonState }}>\n            Name: {{this.dogName}} ---- Breed: {{this.dogBreed}}</h2>\n\n    </div>\n\n    <div class=\"mt-3 flex items-center justify-center\">\n        <button\n            class=\"bg-cyan-500 shadow-lg shadow-cyan-500/50 hover:bg-sky-700  text-black font-bold py-2 px-4 border border-black rounded ml-2\"\n            {{on \"click\" (fn this.changeButtonState true )}}>Upater</button>\n\n    </div>\n\n</div>\n*/\n{\n  \"id\": \"CkvwrWuq\",\n  \"block\": \"[[[10,0],[12],[1,\\\"\\\\n    \\\"],[10,0],[14,0,\\\"mt-3 flex items-center justify-center\\\"],[12],[1,\\\"\\\\n        \\\"],[10,\\\"h1\\\"],[14,0,\\\"italic text-2xl\\\"],[12],[1,\\\"Testing information from mock\\\"],[13],[1,\\\"\\\\n\\\\n    \\\"],[13],[1,\\\"\\\\n    \\\"],[10,0],[14,0,\\\"mt-3 flex items-center justify-center\\\"],[12],[1,\\\"\\\\n        \\\"],[10,\\\"h1\\\"],[12],[1,\\\"The following information is the default info, push the button to update it from my personal endpoint\\\"],[13],[1,\\\"\\\\n    \\\"],[13],[1,\\\"\\\\n\\\\n    \\\"],[10,0],[14,0,\\\"mt-3 flex items-center justify-center\\\"],[12],[1,\\\"\\\\n        \\\"],[11,\\\"h2\\\"],[4,[38,3],[[30,0,[\\\"writeData\\\"]]],null],[4,[38,4],[[30,0,[\\\"writeData\\\"]],[30,0,[\\\"buttonState\\\"]]],null],[12],[1,\\\"\\\\n            Name: \\\"],[1,[30,0,[\\\"dogName\\\"]]],[1,\\\" ---- Breed: \\\"],[1,[30,0,[\\\"dogBreed\\\"]]],[13],[1,\\\"\\\\n\\\\n    \\\"],[13],[1,\\\"\\\\n\\\\n    \\\"],[10,0],[14,0,\\\"mt-3 flex items-center justify-center\\\"],[12],[1,\\\"\\\\n        \\\"],[11,\\\"button\\\"],[24,0,\\\"bg-cyan-500 shadow-lg shadow-cyan-500/50 hover:bg-sky-700  text-black font-bold py-2 px-4 border border-black rounded ml-2\\\"],[4,[38,6],[\\\"click\\\",[28,[37,7],[[30,0,[\\\"changeButtonState\\\"]],true],null]],null],[12],[1,\\\"Upater\\\"],[13],[1,\\\"\\\\n\\\\n    \\\"],[13],[1,\\\"\\\\n\\\\n\\\"],[13]],[],false,[\\\"div\\\",\\\"h1\\\",\\\"h2\\\",\\\"did-insert\\\",\\\"did-update\\\",\\\"button\\\",\\\"on\\\",\\\"fn\\\"]]\",\n  \"moduleName\": \"my-app/components/endpoints/template.hbs\",\n  \"isStrictMode\": false\n}));\n\n//# sourceURL=webpack://my-app/./components/endpoints/template.hbs?");

/***/ }),

/***/ "./components/excercises/template.hbs":
/*!********************************************!*\
  !*** ./components/excercises/template.hbs ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _ember_template_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/template-factory */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Ftemplate-factory&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_template_factory__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_template_factory__WEBPACK_IMPORTED_MODULE_0__);\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_ember_template_factory__WEBPACK_IMPORTED_MODULE_0__.createTemplateFactory)(\n/*\n  <div class=\"bg-[url('../../../public/assests/images/bg.jpeg)] items-center justify-center   \">\n    <div class=\"mb-2  flex items-center justify-center   \">\n\n        <h1 class=\"italic \">HERE YOU CAN CHECK EVERY EXERCISES I DO</h1>\n    </div>\n    <div\n        class=\"flex box-border hover:box-content items-center justify-center    h-14 bg-gradient-to-r from-violet-500 to-fuchsia-500 \">\n        <div>\n            <LinkTo\n                class=\"bg-cyan-500 shadow-lg shadow-cyan-500/50 ml-2 hover:bg-sky-700 text-black font-bold py-2 px-4 border border-white rounded \"\n                @route=\"dog\">Dogs</LinkTo>\n        </div>\n\n        <div>\n            <LinkTo\n                class=\"bg-cyan-500 shadow-lg shadow-cyan-500/50 hover:bg-sky-700  text-black font-bold py-2 px-4 border border-white rounded ml-2\"\n                @route=\"magicform\">MagicForm</LinkTo>\n        </div>\n\n        <div>\n            <LinkTo\n                class=\"bg-cyan-500 shadow-lg shadow-cyan-500/50 hover:bg-sky-700 mr-2 text-black font-bold py-2 px-4 border border-white rounded ml-2\"\n                @route=\"mock\">Mock</LinkTo>\n        </div>\n\n    </div>\n</div>\n*/\n{\n  \"id\": \"x43QWjpN\",\n  \"block\": \"[[[10,0],[14,0,\\\"bg-[url('../../../public/assests/images/bg.jpeg)] items-center justify-center   \\\"],[12],[1,\\\"\\\\n    \\\"],[10,0],[14,0,\\\"mb-2  flex items-center justify-center   \\\"],[12],[1,\\\"\\\\n\\\\n        \\\"],[10,\\\"h1\\\"],[14,0,\\\"italic \\\"],[12],[1,\\\"HERE YOU CAN CHECK EVERY EXERCISES I DO\\\"],[13],[1,\\\"\\\\n    \\\"],[13],[1,\\\"\\\\n    \\\"],[10,0],[14,0,\\\"flex box-border hover:box-content items-center justify-center    h-14 bg-gradient-to-r from-violet-500 to-fuchsia-500 \\\"],[12],[1,\\\"\\\\n        \\\"],[10,0],[12],[1,\\\"\\\\n            \\\"],[8,[39,2],[[24,0,\\\"bg-cyan-500 shadow-lg shadow-cyan-500/50 ml-2 hover:bg-sky-700 text-black font-bold py-2 px-4 border border-white rounded \\\"]],[[\\\"@route\\\"],[\\\"dog\\\"]],[[\\\"default\\\"],[[[[1,\\\"Dogs\\\"]],[]]]]],[1,\\\"\\\\n        \\\"],[13],[1,\\\"\\\\n\\\\n        \\\"],[10,0],[12],[1,\\\"\\\\n            \\\"],[8,[39,2],[[24,0,\\\"bg-cyan-500 shadow-lg shadow-cyan-500/50 hover:bg-sky-700  text-black font-bold py-2 px-4 border border-white rounded ml-2\\\"]],[[\\\"@route\\\"],[\\\"magicform\\\"]],[[\\\"default\\\"],[[[[1,\\\"MagicForm\\\"]],[]]]]],[1,\\\"\\\\n        \\\"],[13],[1,\\\"\\\\n\\\\n        \\\"],[10,0],[12],[1,\\\"\\\\n            \\\"],[8,[39,2],[[24,0,\\\"bg-cyan-500 shadow-lg shadow-cyan-500/50 hover:bg-sky-700 mr-2 text-black font-bold py-2 px-4 border border-white rounded ml-2\\\"]],[[\\\"@route\\\"],[\\\"mock\\\"]],[[\\\"default\\\"],[[[[1,\\\"Mock\\\"]],[]]]]],[1,\\\"\\\\n        \\\"],[13],[1,\\\"\\\\n\\\\n    \\\"],[13],[1,\\\"\\\\n\\\"],[13]],[],false,[\\\"div\\\",\\\"h1\\\",\\\"link-to\\\"]]\",\n  \"moduleName\": \"my-app/components/excercises/template.hbs\",\n  \"isStrictMode\": false\n}));\n\n//# sourceURL=webpack://my-app/./components/excercises/template.hbs?");

/***/ }),

/***/ "./components/header/template.hbs":
/*!****************************************!*\
  !*** ./components/header/template.hbs ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _ember_template_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/template-factory */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Ftemplate-factory&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_template_factory__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_template_factory__WEBPACK_IMPORTED_MODULE_0__);\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_ember_template_factory__WEBPACK_IMPORTED_MODULE_0__.createTemplateFactory)(\n/*\n  <div class=\"bg-welcome p-16\">\n  <div></div>\n  {{yield}}\n</div>\n*/\n{\n  \"id\": \"JKlzsX1t\",\n  \"block\": \"[[[10,0],[14,0,\\\"bg-welcome p-16\\\"],[12],[1,\\\"\\\\n  \\\"],[10,0],[12],[13],[1,\\\"\\\\n  \\\"],[18,1,null],[1,\\\"\\\\n\\\"],[13]],[\\\"&default\\\"],false,[\\\"div\\\",\\\"yield\\\"]]\",\n  \"moduleName\": \"my-app/components/header/template.hbs\",\n  \"isStrictMode\": false\n}));\n\n//# sourceURL=webpack://my-app/./components/header/template.hbs?");

/***/ }),

/***/ "./components/magicform/template.hbs":
/*!*******************************************!*\
  !*** ./components/magicform/template.hbs ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _ember_template_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/template-factory */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Ftemplate-factory&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_template_factory__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_template_factory__WEBPACK_IMPORTED_MODULE_0__);\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_ember_template_factory__WEBPACK_IMPORTED_MODULE_0__.createTemplateFactory)(\n/*\n  <div>\n    <div class=\"mt-3 flex items-center justify-center\">\n        <h2 class=\"italic\">We are going to use get ur data from the form to the bottom of the page</h2>\n    </div>\n    <form {{on \"submit\" this.onSubmit}} class=\"max-w-sm mx-auto bg-yellow-500 mt-4 rounded\">\n        <div class=\"mb-5 p-3\">\n            <label for=\"email\" class=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\">Isert an\n                email</label>\n\n            <Input @value={{this.email}}\n                class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\" />\n        </div>\n        <div class=\"mb-5 p-3\">\n            <label for=\"email\" class=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\">Insert one color of\n                this:gree,blue,yellow</label>\n            <Input @value={{this.color}}\n                class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\" />\n        </div>\n        <div class=\"mb-5 p-3\">\n            <button type=\"submit\" disabled={{this.disableSubmit}}\n                class=\"bg-cyan-500 shadow-lg shadow-cyan-500/50 hover:bg-sky-700  text-black font-bold py-2 px-4 border border-black rounded ml-2\">Create</button>\n        </div>\n    </form>\n\n    <div class=\"mt-3 flex items-center justify-center\">\n        {{!-- <img class=\"w-50 h-50 \" src=\"\" alt={{this.text}} {{did-insert this.writeData}} {{did-update this.writeData\n            this.magicState}}> --}}\n        <h2 {{did-insert this.writeData}} {{did-update this.writeData this.magicState}}>{{this.text}}</h2>\n\n\n    </div>\n\n\n</div>\n*/\n{\n  \"id\": \"J0TgEe5h\",\n  \"block\": \"[[[10,0],[12],[1,\\\"\\\\n    \\\"],[10,0],[14,0,\\\"mt-3 flex items-center justify-center\\\"],[12],[1,\\\"\\\\n        \\\"],[10,\\\"h2\\\"],[14,0,\\\"italic\\\"],[12],[1,\\\"We are going to use get ur data from the form to the bottom of the page\\\"],[13],[1,\\\"\\\\n    \\\"],[13],[1,\\\"\\\\n    \\\"],[11,\\\"form\\\"],[24,0,\\\"max-w-sm mx-auto bg-yellow-500 mt-4 rounded\\\"],[4,[38,3],[\\\"submit\\\",[30,0,[\\\"onSubmit\\\"]]],null],[12],[1,\\\"\\\\n        \\\"],[10,0],[14,0,\\\"mb-5 p-3\\\"],[12],[1,\\\"\\\\n            \\\"],[10,\\\"label\\\"],[14,\\\"for\\\",\\\"email\\\"],[14,0,\\\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\\\"],[12],[1,\\\"Isert an\\\\n                email\\\"],[13],[1,\\\"\\\\n\\\\n            \\\"],[8,[39,5],[[24,0,\\\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\\\"]],[[\\\"@value\\\"],[[30,0,[\\\"email\\\"]]]],null],[1,\\\"\\\\n        \\\"],[13],[1,\\\"\\\\n        \\\"],[10,0],[14,0,\\\"mb-5 p-3\\\"],[12],[1,\\\"\\\\n            \\\"],[10,\\\"label\\\"],[14,\\\"for\\\",\\\"email\\\"],[14,0,\\\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\\\"],[12],[1,\\\"Insert one color of\\\\n                this:gree,blue,yellow\\\"],[13],[1,\\\"\\\\n            \\\"],[8,[39,5],[[24,0,\\\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\\\"]],[[\\\"@value\\\"],[[30,0,[\\\"color\\\"]]]],null],[1,\\\"\\\\n        \\\"],[13],[1,\\\"\\\\n        \\\"],[10,0],[14,0,\\\"mb-5 p-3\\\"],[12],[1,\\\"\\\\n            \\\"],[10,\\\"button\\\"],[15,\\\"disabled\\\",[30,0,[\\\"disableSubmit\\\"]]],[14,0,\\\"bg-cyan-500 shadow-lg shadow-cyan-500/50 hover:bg-sky-700  text-black font-bold py-2 px-4 border border-black rounded ml-2\\\"],[14,4,\\\"submit\\\"],[12],[1,\\\"Create\\\"],[13],[1,\\\"\\\\n        \\\"],[13],[1,\\\"\\\\n    \\\"],[13],[1,\\\"\\\\n\\\\n    \\\"],[10,0],[14,0,\\\"mt-3 flex items-center justify-center\\\"],[12],[1,\\\"\\\\n\\\"],[1,\\\"        \\\"],[11,\\\"h2\\\"],[4,[38,7],[[30,0,[\\\"writeData\\\"]]],null],[4,[38,8],[[30,0,[\\\"writeData\\\"]],[30,0,[\\\"magicState\\\"]]],null],[12],[1,[30,0,[\\\"text\\\"]]],[13],[1,\\\"\\\\n\\\\n\\\\n    \\\"],[13],[1,\\\"\\\\n\\\\n\\\\n\\\"],[13]],[],false,[\\\"div\\\",\\\"h2\\\",\\\"form\\\",\\\"on\\\",\\\"label\\\",\\\"input\\\",\\\"button\\\",\\\"did-insert\\\",\\\"did-update\\\"]]\",\n  \"moduleName\": \"my-app/components/magicform/template.hbs\",\n  \"isStrictMode\": false\n}));\n\n//# sourceURL=webpack://my-app/./components/magicform/template.hbs?");

/***/ }),

/***/ "./components/navbar/template.hbs":
/*!****************************************!*\
  !*** ./components/navbar/template.hbs ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _ember_template_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/template-factory */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Ftemplate-factory&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_template_factory__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_template_factory__WEBPACK_IMPORTED_MODULE_0__);\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_ember_template_factory__WEBPACK_IMPORTED_MODULE_0__.createTemplateFactory)(\n/*\n  <nav class=\"bg-blue-950 flex items-center  \">\n  <LinkTo @route=\"index\" class=\"menu-index pt- 2 pb-2\">\n    <h1 class=\" ml-2 text-white text-rental-custom italic \">SuperRentals</h1>\n  </LinkTo>\n  <div class=\"pt-0 pr-21 items-stretch ... ml-8 \">\n    <LinkTo class=\"ml-10 text-white\" @route=\"about\">\n      About\n    </LinkTo>\n    <LinkTo class=\" ml-4 text-white\" @route=\"contact\">\n      Contact\n    </LinkTo>\n    <LinkTo class=\" ml-4 text-white\" @route=\"exercises\">\n      Exercises</LinkTo>\n\n\n  </div>\n</nav>\n*/\n{\n  \"id\": \"ckpjMLou\",\n  \"block\": \"[[[10,\\\"nav\\\"],[14,0,\\\"bg-blue-950 flex items-center  \\\"],[12],[1,\\\"\\\\n  \\\"],[8,[39,1],[[24,0,\\\"menu-index pt- 2 pb-2\\\"]],[[\\\"@route\\\"],[\\\"index\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n    \\\"],[10,\\\"h1\\\"],[14,0,\\\" ml-2 text-white text-rental-custom italic \\\"],[12],[1,\\\"SuperRentals\\\"],[13],[1,\\\"\\\\n  \\\"]],[]]]]],[1,\\\"\\\\n  \\\"],[10,0],[14,0,\\\"pt-0 pr-21 items-stretch ... ml-8 \\\"],[12],[1,\\\"\\\\n    \\\"],[8,[39,1],[[24,0,\\\"ml-10 text-white\\\"]],[[\\\"@route\\\"],[\\\"about\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n      About\\\\n    \\\"]],[]]]]],[1,\\\"\\\\n    \\\"],[8,[39,1],[[24,0,\\\" ml-4 text-white\\\"]],[[\\\"@route\\\"],[\\\"contact\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n      Contact\\\\n    \\\"]],[]]]]],[1,\\\"\\\\n    \\\"],[8,[39,1],[[24,0,\\\" ml-4 text-white\\\"]],[[\\\"@route\\\"],[\\\"exercises\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n      Exercises\\\"]],[]]]]],[1,\\\"\\\\n\\\\n\\\\n  \\\"],[13],[1,\\\"\\\\n\\\"],[13]],[],false,[\\\"nav\\\",\\\"link-to\\\",\\\"h1\\\",\\\"div\\\"]]\",\n  \"moduleName\": \"my-app/components/navbar/template.hbs\",\n  \"isStrictMode\": false\n}));\n\n//# sourceURL=webpack://my-app/./components/navbar/template.hbs?");

/***/ }),

/***/ "./components/rental/detailed/template.hbs":
/*!*************************************************!*\
  !*** ./components/rental/detailed/template.hbs ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _ember_template_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/template-factory */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Ftemplate-factory&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_template_factory__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_template_factory__WEBPACK_IMPORTED_MODULE_0__);\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_ember_template_factory__WEBPACK_IMPORTED_MODULE_0__.createTemplateFactory)(\n/*\n  <Header>\n  <h2 class=\"text-5xl\">{{@rental.title}}</h2>\n  <div class=\"mb-6\">\n    <p>Nice find! This looks like a nice place to stay near {{@rental.city}}.</p>\n  </div>\n  {{!creando el boton al cual le paso los datos que cojo de la propia pagina para que me cree solo el tweet}}\n  <Buttons::Share class=\"bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 border border-blue-700 rounded\"\n    @text=\"Check out {{@rental.title}} on Super Rentals!\" @hashtags=\"vacation,travel,authentic,blessed,superrentals\"\n    @via=\"emberjs\">\n    Share on Twitter\n  </Buttons::Share>\n</Header>\n\n{{#if this.isSmall}}\n\n<div class=\"mb-16\">\n  <div class=\"p-16  \">\n    <div class=\"grid grid-cols-2\">\n      <div class=\"content-center\">\n        <Rental::Images::Detailed src={{@rental.image}} @toggleImage={{this.toggleImage}} @isSmall={{this.isSmall}}\n          alt=\"A picture of {{@rental.title}}\" />\n      </div>\n      <div class=\"ml-10\">\n        <div>\n          <div class=\"mb-4\">\n            <h3 class=\"text-5xl  \">\n              <LinkTo @route=\"rental\" @model={{@rental}}> About{{!----}}\n                {{@rental.title}}{{!----}}\n              </LinkTo>\n            </h3>\n          </div>\n          <div class=\"grid mb-4\">\n            <div class=\"mb-8\">\n              <span>Owner:</span> <span class=\"font-thin\">{{@rental.owner}}</span>\n            </div>\n            <div class=\"mb-8 \">\n              <span>Type:</span> <span class=\"font-thin\">{{@rental.type}}</span>\n\n            </div>\n            <div class=\"mb-8\">\n              <span>Location:</span> <span class=\"font-thin\">{{@rental.city}}</span>\n\n            </div>\n            <div class=\"mb-8\">\n              <span>Number of bedrooms:</span> <span class=\"font-thin\">{{@rental.bedrooms}}</span>\n            </div>\n          </div>\n\n\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n{{else}}\n<div class=\"bg-welcome mb-16 flex justify-center ...\">\n  <div class=\"p-16  \">\n\n    <div class=\"mb-12\">\n      {{!Le pasoel alias de @toggleimage con la funcion \"toggleImage\" y le paso la variable\n      isSmall}}\n      <Rental::Images::Detailed src={{@rental.image}} @toggleImage={{this.toggleImage}} @isSmall={{this.isSmall}}\n        alt=\"A picture of {{@rental.title}}\" />\n    </div>\n    <div class=\" ml-10 \">\n      <div>\n        <div class=\"mb-4\">\n          <h3 class=\"text-5xl  \">\n            <LinkTo @route=\"rental\" @model={{@rental}}> About{{!----}}\n              {{@rental.title}}{{!----}}\n            </LinkTo>\n          </h3>\n        </div>\n        <div class=\"grid mb-4\">\n          <div class=\"mb-8\">\n            <span>Owner:</span> <span class=\"font-thin\">{{@rental.owner}}</span>\n          </div>\n          <div class=\"mb-8 \">\n            <span>Type:</span> <span class=\"font-thin\">{{@rental.type}}</span>\n\n          </div>\n          <div class=\"mb-8\">\n            <span>Location:</span> <span class=\"font-thin\">{{@rental.city}}</span>\n\n          </div>\n          <div class=\"mb-8\">\n            <span>Number of bedrooms:</span> <span class=\"font-thin\">{{@rental.bedrooms}}</span>\n          </div>\n        </div>\n\n      </div>\n    </div>\n  </div>\n\n\n</div>\n{{/if}}\n*/\n{\n  \"id\": \"En9Ch5w0\",\n  \"block\": \"[[[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n  \\\"],[10,\\\"h2\\\"],[14,0,\\\"text-5xl\\\"],[12],[1,[30,1,[\\\"title\\\"]]],[13],[1,\\\"\\\\n  \\\"],[10,0],[14,0,\\\"mb-6\\\"],[12],[1,\\\"\\\\n    \\\"],[10,2],[12],[1,\\\"Nice find! This looks like a nice place to stay near \\\"],[1,[30,1,[\\\"city\\\"]]],[1,\\\".\\\"],[13],[1,\\\"\\\\n  \\\"],[13],[1,\\\"\\\\n\\\"],[1,\\\"  \\\"],[8,[39,4],[[24,0,\\\"bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 border border-blue-700 rounded\\\"]],[[\\\"@text\\\",\\\"@hashtags\\\",\\\"@via\\\"],[[29,[\\\"Check out \\\",[30,1,[\\\"title\\\"]],\\\" on Super Rentals!\\\"]],\\\"vacation,travel,authentic,blessed,superrentals\\\",\\\"emberjs\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n    Share on Twitter\\\\n  \\\"]],[]]]]],[1,\\\"\\\\n\\\"]],[]]]]],[1,\\\"\\\\n\\\\n\\\"],[41,[30,0,[\\\"isSmall\\\"]],[[[1,\\\"\\\\n\\\"],[10,0],[14,0,\\\"mb-16\\\"],[12],[1,\\\"\\\\n  \\\"],[10,0],[14,0,\\\"p-16  \\\"],[12],[1,\\\"\\\\n    \\\"],[10,0],[14,0,\\\"grid grid-cols-2\\\"],[12],[1,\\\"\\\\n      \\\"],[10,0],[14,0,\\\"content-center\\\"],[12],[1,\\\"\\\\n        \\\"],[8,[39,6],[[16,\\\"src\\\",[30,1,[\\\"image\\\"]]],[16,\\\"alt\\\",[29,[\\\"A picture of \\\",[30,1,[\\\"title\\\"]]]]]],[[\\\"@toggleImage\\\",\\\"@isSmall\\\"],[[30,0,[\\\"toggleImage\\\"]],[30,0,[\\\"isSmall\\\"]]]],null],[1,\\\"\\\\n      \\\"],[13],[1,\\\"\\\\n      \\\"],[10,0],[14,0,\\\"ml-10\\\"],[12],[1,\\\"\\\\n        \\\"],[10,0],[12],[1,\\\"\\\\n          \\\"],[10,0],[14,0,\\\"mb-4\\\"],[12],[1,\\\"\\\\n            \\\"],[10,\\\"h3\\\"],[14,0,\\\"text-5xl  \\\"],[12],[1,\\\"\\\\n              \\\"],[8,[39,8],null,[[\\\"@route\\\",\\\"@model\\\"],[\\\"rental\\\",[30,1]]],[[\\\"default\\\"],[[[[1,\\\" About\\\"],[1,\\\"\\\\n                \\\"],[1,[30,1,[\\\"title\\\"]]],[1,\\\"\\\\n              \\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[13],[1,\\\"\\\\n          \\\"],[13],[1,\\\"\\\\n          \\\"],[10,0],[14,0,\\\"grid mb-4\\\"],[12],[1,\\\"\\\\n            \\\"],[10,0],[14,0,\\\"mb-8\\\"],[12],[1,\\\"\\\\n              \\\"],[10,1],[12],[1,\\\"Owner:\\\"],[13],[1,\\\" \\\"],[10,1],[14,0,\\\"font-thin\\\"],[12],[1,[30,1,[\\\"owner\\\"]]],[13],[1,\\\"\\\\n            \\\"],[13],[1,\\\"\\\\n            \\\"],[10,0],[14,0,\\\"mb-8 \\\"],[12],[1,\\\"\\\\n              \\\"],[10,1],[12],[1,\\\"Type:\\\"],[13],[1,\\\" \\\"],[10,1],[14,0,\\\"font-thin\\\"],[12],[1,[30,1,[\\\"type\\\"]]],[13],[1,\\\"\\\\n\\\\n            \\\"],[13],[1,\\\"\\\\n            \\\"],[10,0],[14,0,\\\"mb-8\\\"],[12],[1,\\\"\\\\n              \\\"],[10,1],[12],[1,\\\"Location:\\\"],[13],[1,\\\" \\\"],[10,1],[14,0,\\\"font-thin\\\"],[12],[1,[30,1,[\\\"city\\\"]]],[13],[1,\\\"\\\\n\\\\n            \\\"],[13],[1,\\\"\\\\n            \\\"],[10,0],[14,0,\\\"mb-8\\\"],[12],[1,\\\"\\\\n              \\\"],[10,1],[12],[1,\\\"Number of bedrooms:\\\"],[13],[1,\\\" \\\"],[10,1],[14,0,\\\"font-thin\\\"],[12],[1,[30,1,[\\\"bedrooms\\\"]]],[13],[1,\\\"\\\\n            \\\"],[13],[1,\\\"\\\\n          \\\"],[13],[1,\\\"\\\\n\\\\n\\\\n        \\\"],[13],[1,\\\"\\\\n      \\\"],[13],[1,\\\"\\\\n    \\\"],[13],[1,\\\"\\\\n  \\\"],[13],[1,\\\"\\\\n\\\"],[13],[1,\\\"\\\\n\\\"]],[]],[[[10,0],[14,0,\\\"bg-welcome mb-16 flex justify-center ...\\\"],[12],[1,\\\"\\\\n  \\\"],[10,0],[14,0,\\\"p-16  \\\"],[12],[1,\\\"\\\\n\\\\n    \\\"],[10,0],[14,0,\\\"mb-12\\\"],[12],[1,\\\"\\\\n\\\"],[1,\\\"      \\\"],[8,[39,6],[[16,\\\"src\\\",[30,1,[\\\"image\\\"]]],[16,\\\"alt\\\",[29,[\\\"A picture of \\\",[30,1,[\\\"title\\\"]]]]]],[[\\\"@toggleImage\\\",\\\"@isSmall\\\"],[[30,0,[\\\"toggleImage\\\"]],[30,0,[\\\"isSmall\\\"]]]],null],[1,\\\"\\\\n    \\\"],[13],[1,\\\"\\\\n    \\\"],[10,0],[14,0,\\\" ml-10 \\\"],[12],[1,\\\"\\\\n      \\\"],[10,0],[12],[1,\\\"\\\\n        \\\"],[10,0],[14,0,\\\"mb-4\\\"],[12],[1,\\\"\\\\n          \\\"],[10,\\\"h3\\\"],[14,0,\\\"text-5xl  \\\"],[12],[1,\\\"\\\\n            \\\"],[8,[39,8],null,[[\\\"@route\\\",\\\"@model\\\"],[\\\"rental\\\",[30,1]]],[[\\\"default\\\"],[[[[1,\\\" About\\\"],[1,\\\"\\\\n              \\\"],[1,[30,1,[\\\"title\\\"]]],[1,\\\"\\\\n            \\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[13],[1,\\\"\\\\n        \\\"],[13],[1,\\\"\\\\n        \\\"],[10,0],[14,0,\\\"grid mb-4\\\"],[12],[1,\\\"\\\\n          \\\"],[10,0],[14,0,\\\"mb-8\\\"],[12],[1,\\\"\\\\n            \\\"],[10,1],[12],[1,\\\"Owner:\\\"],[13],[1,\\\" \\\"],[10,1],[14,0,\\\"font-thin\\\"],[12],[1,[30,1,[\\\"owner\\\"]]],[13],[1,\\\"\\\\n          \\\"],[13],[1,\\\"\\\\n          \\\"],[10,0],[14,0,\\\"mb-8 \\\"],[12],[1,\\\"\\\\n            \\\"],[10,1],[12],[1,\\\"Type:\\\"],[13],[1,\\\" \\\"],[10,1],[14,0,\\\"font-thin\\\"],[12],[1,[30,1,[\\\"type\\\"]]],[13],[1,\\\"\\\\n\\\\n          \\\"],[13],[1,\\\"\\\\n          \\\"],[10,0],[14,0,\\\"mb-8\\\"],[12],[1,\\\"\\\\n            \\\"],[10,1],[12],[1,\\\"Location:\\\"],[13],[1,\\\" \\\"],[10,1],[14,0,\\\"font-thin\\\"],[12],[1,[30,1,[\\\"city\\\"]]],[13],[1,\\\"\\\\n\\\\n          \\\"],[13],[1,\\\"\\\\n          \\\"],[10,0],[14,0,\\\"mb-8\\\"],[12],[1,\\\"\\\\n            \\\"],[10,1],[12],[1,\\\"Number of bedrooms:\\\"],[13],[1,\\\" \\\"],[10,1],[14,0,\\\"font-thin\\\"],[12],[1,[30,1,[\\\"bedrooms\\\"]]],[13],[1,\\\"\\\\n          \\\"],[13],[1,\\\"\\\\n        \\\"],[13],[1,\\\"\\\\n\\\\n      \\\"],[13],[1,\\\"\\\\n    \\\"],[13],[1,\\\"\\\\n  \\\"],[13],[1,\\\"\\\\n\\\\n\\\\n\\\"],[13],[1,\\\"\\\\n\\\"]],[]]]],[\\\"@rental\\\"],false,[\\\"header\\\",\\\"h2\\\",\\\"div\\\",\\\"p\\\",\\\"buttons/share\\\",\\\"if\\\",\\\"rental/images/detailed\\\",\\\"h3\\\",\\\"link-to\\\",\\\"span\\\"]]\",\n  \"moduleName\": \"my-app/components/rental/detailed/template.hbs\",\n  \"isStrictMode\": false\n}));\n\n//# sourceURL=webpack://my-app/./components/rental/detailed/template.hbs?");

/***/ }),

/***/ "./components/rental/images/detailed/template.hbs":
/*!********************************************************!*\
  !*** ./components/rental/images/detailed/template.hbs ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _ember_template_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/template-factory */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Ftemplate-factory&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_template_factory__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_template_factory__WEBPACK_IMPORTED_MODULE_0__);\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_ember_template_factory__WEBPACK_IMPORTED_MODULE_0__.createTemplateFactory)(\n/*\n  <div>\n  <button type=\"button\" class=\"hover:bg-blue-200 rounded-xl {{if @isSmall \" rounded-xl mb-2 object-cover h-38 w-50 ...\"\n    }}\" {{on \"click\" this.toggleSize}}>\n    <img class=\" rounded-xl \" ...attributes>\n    <small class=\"text-blue-500\">View {{if @isSmall \"larger\" \"smaller\"}}\n\n    </small>\n  </button>\n</div>\n*/\n{\n  \"id\": \"kD5VRi/5\",\n  \"block\": \"[[[10,0],[12],[1,\\\"\\\\n  \\\"],[11,\\\"button\\\"],[16,0,[29,[\\\"hover:bg-blue-200 rounded-xl \\\",[52,[30,1],\\\" rounded-xl mb-2 object-cover h-38 w-50 ...\\\"]]]],[24,4,\\\"button\\\"],[4,[38,3],[\\\"click\\\",[30,0,[\\\"toggleSize\\\"]]],null],[12],[1,\\\"\\\\n    \\\"],[11,\\\"img\\\"],[24,0,\\\" rounded-xl \\\"],[17,2],[12],[13],[1,\\\"\\\\n    \\\"],[10,\\\"small\\\"],[14,0,\\\"text-blue-500\\\"],[12],[1,\\\"View \\\"],[1,[52,[30,1],\\\"larger\\\",\\\"smaller\\\"]],[1,\\\"\\\\n\\\\n    \\\"],[13],[1,\\\"\\\\n  \\\"],[13],[1,\\\"\\\\n\\\"],[13]],[\\\"@isSmall\\\",\\\"&attrs\\\"],false,[\\\"div\\\",\\\"button\\\",\\\"if\\\",\\\"on\\\",\\\"img\\\",\\\"small\\\"]]\",\n  \"moduleName\": \"my-app/components/rental/images/detailed/template.hbs\",\n  \"isStrictMode\": false\n}));\n\n//# sourceURL=webpack://my-app/./components/rental/images/detailed/template.hbs?");

/***/ }),

/***/ "./components/rental/images/index/template.hbs":
/*!*****************************************************!*\
  !*** ./components/rental/images/index/template.hbs ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _ember_template_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/template-factory */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Ftemplate-factory&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_template_factory__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_template_factory__WEBPACK_IMPORTED_MODULE_0__);\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_ember_template_factory__WEBPACK_IMPORTED_MODULE_0__.createTemplateFactory)(\n/*\n  <div>\n  <button type=\"button\" class=\"hover:bg-blue-200 rounded-xl {{if @isSmall \" rounded-xl mb-2 object-cover h-38 w-48 ...\"\n    }}\" {{on \"click\" this.toggleSize}}>\n    <img class=\" rounded-xl \" ...attributes>\n    <small class=\"text-blue-500\">View {{if @isSmall \"larger\" \"smaller\"}}\n\n    </small>\n  </button>\n</div>\n*/\n{\n  \"id\": \"NZGr6V98\",\n  \"block\": \"[[[10,0],[12],[1,\\\"\\\\n  \\\"],[11,\\\"button\\\"],[16,0,[29,[\\\"hover:bg-blue-200 rounded-xl \\\",[52,[30,1],\\\" rounded-xl mb-2 object-cover h-38 w-48 ...\\\"]]]],[24,4,\\\"button\\\"],[4,[38,3],[\\\"click\\\",[30,0,[\\\"toggleSize\\\"]]],null],[12],[1,\\\"\\\\n    \\\"],[11,\\\"img\\\"],[24,0,\\\" rounded-xl \\\"],[17,2],[12],[13],[1,\\\"\\\\n    \\\"],[10,\\\"small\\\"],[14,0,\\\"text-blue-500\\\"],[12],[1,\\\"View \\\"],[1,[52,[30,1],\\\"larger\\\",\\\"smaller\\\"]],[1,\\\"\\\\n\\\\n    \\\"],[13],[1,\\\"\\\\n  \\\"],[13],[1,\\\"\\\\n\\\"],[13]],[\\\"@isSmall\\\",\\\"&attrs\\\"],false,[\\\"div\\\",\\\"button\\\",\\\"if\\\",\\\"on\\\",\\\"img\\\",\\\"small\\\"]]\",\n  \"moduleName\": \"my-app/components/rental/images/index/template.hbs\",\n  \"isStrictMode\": false\n}));\n\n//# sourceURL=webpack://my-app/./components/rental/images/index/template.hbs?");

/***/ }),

/***/ "./components/rental/index/template.hbs":
/*!**********************************************!*\
  !*** ./components/rental/index/template.hbs ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _ember_template_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/template-factory */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Ftemplate-factory&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_template_factory__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_template_factory__WEBPACK_IMPORTED_MODULE_0__);\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_ember_template_factory__WEBPACK_IMPORTED_MODULE_0__.createTemplateFactory)(\n/*\n  {{#if this.isSmall}}\n\n<div class=\"bg-welcome mb-16\">\n  <div class=\"p-16  \">\n    <div class=\"grid grid-cols-3\">\n      <div class=\"content-center\">\n        <Rental::Images::Index src={{@rental.image}} @toggleImage={{this.toggleImage}} @isSmall={{this.isSmall}}\n          alt=\"A picture of {{@rental.title}}\" />\n      </div>\n      <div class=\" -ml-56\">\n        <div>\n          <div class=\"mb-4\">\n            <h3 class=\"text-xl text-blue-600\">\n              <LinkTo @route=\"rental\" @model={{@rental}}> {{!----}}\n                {{@rental.title}}{{!----}}\n              </LinkTo>\n            </h3>\n          </div>\n          <div class=\"grid grid-cols-2 \">\n            <div class=\"mb-16\">\n              <span>Owner:</span> <span class=\"font-thin\">{{@rental.owner}}</span>\n            </div>\n            <div>\n              <span>Type:</span> <span class=\"font-thin\">{{@rental.type}}</span>\n\n            </div>\n          </div>\n          <div class=\"grid grid-cols-2 \">\n            <div>\n              <span>Location:</span> <span class=\"font-thin\">{{@rental.city}}</span>\n\n            </div>\n            <div>\n              <span>Number of bedrooms:</span> <span class=\"font-thin\">{{@rental.bedrooms}}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n{{else}}\n<div class=\"bg-welcome mb-16 flex justify-center ...\">\n  <div class=\"p-16  \">\n\n    <div class=\"mb-12\">\n      {{!Le pasoel alias de @toggleimage con la funcion \"toggleImage\" y le paso la variable\n      isSmall}}\n      <Rental::Images::Index src={{@rental.image}} @toggleImage={{this.toggleImage}} @isSmall={{this.isSmall}}\n        alt=\"A picture of {{@rental.title}}\" />\n    </div>\n    <div>\n\n      <div class=\"mb-4 \">\n        <h3 class=\"text-xl mb-4\">\n          <LinkTo @route=\"rental\" @model={{@rental}}> {{!----}}\n            {{@rental.title}}{{!----}}\n          </LinkTo>\n        </h3>\n\n        <div class=\"grid grid-cols-2 \">\n          <div class=\"mb-16\">\n            <span>Owner:</span> <span class=\"font-thin\">{{@rental.owner}}</span>\n          </div>\n          <div>\n            <span>Typeeee:</span> <span class=\"font-thin\">{{@rental.type}}</span>\n          </div>\n        </div>\n\n\n        <div class=\"grid grid-cols-2 \">\n          <div>\n            <span>Location:</span> <span class=\"font-thin\">{{@rental.city}}</span>\n          </div>\n          <div>\n\n\n            <span>Number of bedrooms:</span> <span class=\"font-thin\">{{@rental.bedrooms}}</span>\n          </div>\n        </div>\n\n      </div>\n    </div>\n  </div>\n</div>\n{{/if}}\n*/\n{\n  \"id\": \"1U/qS4zC\",\n  \"block\": \"[[[41,[30,0,[\\\"isSmall\\\"]],[[[1,\\\"\\\\n\\\"],[10,0],[14,0,\\\"bg-welcome mb-16\\\"],[12],[1,\\\"\\\\n  \\\"],[10,0],[14,0,\\\"p-16  \\\"],[12],[1,\\\"\\\\n    \\\"],[10,0],[14,0,\\\"grid grid-cols-3\\\"],[12],[1,\\\"\\\\n      \\\"],[10,0],[14,0,\\\"content-center\\\"],[12],[1,\\\"\\\\n        \\\"],[8,[39,2],[[16,\\\"src\\\",[30,1,[\\\"image\\\"]]],[16,\\\"alt\\\",[29,[\\\"A picture of \\\",[30,1,[\\\"title\\\"]]]]]],[[\\\"@toggleImage\\\",\\\"@isSmall\\\"],[[30,0,[\\\"toggleImage\\\"]],[30,0,[\\\"isSmall\\\"]]]],null],[1,\\\"\\\\n      \\\"],[13],[1,\\\"\\\\n      \\\"],[10,0],[14,0,\\\" -ml-56\\\"],[12],[1,\\\"\\\\n        \\\"],[10,0],[12],[1,\\\"\\\\n          \\\"],[10,0],[14,0,\\\"mb-4\\\"],[12],[1,\\\"\\\\n            \\\"],[10,\\\"h3\\\"],[14,0,\\\"text-xl text-blue-600\\\"],[12],[1,\\\"\\\\n              \\\"],[8,[39,4],null,[[\\\"@route\\\",\\\"@model\\\"],[\\\"rental\\\",[30,1]]],[[\\\"default\\\"],[[[[1,\\\" \\\"],[1,\\\"\\\\n                \\\"],[1,[30,1,[\\\"title\\\"]]],[1,\\\"\\\\n              \\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[13],[1,\\\"\\\\n          \\\"],[13],[1,\\\"\\\\n          \\\"],[10,0],[14,0,\\\"grid grid-cols-2 \\\"],[12],[1,\\\"\\\\n            \\\"],[10,0],[14,0,\\\"mb-16\\\"],[12],[1,\\\"\\\\n              \\\"],[10,1],[12],[1,\\\"Owner:\\\"],[13],[1,\\\" \\\"],[10,1],[14,0,\\\"font-thin\\\"],[12],[1,[30,1,[\\\"owner\\\"]]],[13],[1,\\\"\\\\n            \\\"],[13],[1,\\\"\\\\n            \\\"],[10,0],[12],[1,\\\"\\\\n              \\\"],[10,1],[12],[1,\\\"Type:\\\"],[13],[1,\\\" \\\"],[10,1],[14,0,\\\"font-thin\\\"],[12],[1,[30,1,[\\\"type\\\"]]],[13],[1,\\\"\\\\n\\\\n            \\\"],[13],[1,\\\"\\\\n          \\\"],[13],[1,\\\"\\\\n          \\\"],[10,0],[14,0,\\\"grid grid-cols-2 \\\"],[12],[1,\\\"\\\\n            \\\"],[10,0],[12],[1,\\\"\\\\n              \\\"],[10,1],[12],[1,\\\"Location:\\\"],[13],[1,\\\" \\\"],[10,1],[14,0,\\\"font-thin\\\"],[12],[1,[30,1,[\\\"city\\\"]]],[13],[1,\\\"\\\\n\\\\n            \\\"],[13],[1,\\\"\\\\n            \\\"],[10,0],[12],[1,\\\"\\\\n              \\\"],[10,1],[12],[1,\\\"Number of bedrooms:\\\"],[13],[1,\\\" \\\"],[10,1],[14,0,\\\"font-thin\\\"],[12],[1,[30,1,[\\\"bedrooms\\\"]]],[13],[1,\\\"\\\\n            \\\"],[13],[1,\\\"\\\\n          \\\"],[13],[1,\\\"\\\\n        \\\"],[13],[1,\\\"\\\\n      \\\"],[13],[1,\\\"\\\\n    \\\"],[13],[1,\\\"\\\\n  \\\"],[13],[1,\\\"\\\\n\\\"],[13],[1,\\\"\\\\n\\\"]],[]],[[[10,0],[14,0,\\\"bg-welcome mb-16 flex justify-center ...\\\"],[12],[1,\\\"\\\\n  \\\"],[10,0],[14,0,\\\"p-16  \\\"],[12],[1,\\\"\\\\n\\\\n    \\\"],[10,0],[14,0,\\\"mb-12\\\"],[12],[1,\\\"\\\\n\\\"],[1,\\\"      \\\"],[8,[39,2],[[16,\\\"src\\\",[30,1,[\\\"image\\\"]]],[16,\\\"alt\\\",[29,[\\\"A picture of \\\",[30,1,[\\\"title\\\"]]]]]],[[\\\"@toggleImage\\\",\\\"@isSmall\\\"],[[30,0,[\\\"toggleImage\\\"]],[30,0,[\\\"isSmall\\\"]]]],null],[1,\\\"\\\\n    \\\"],[13],[1,\\\"\\\\n    \\\"],[10,0],[12],[1,\\\"\\\\n\\\\n      \\\"],[10,0],[14,0,\\\"mb-4 \\\"],[12],[1,\\\"\\\\n        \\\"],[10,\\\"h3\\\"],[14,0,\\\"text-xl mb-4\\\"],[12],[1,\\\"\\\\n          \\\"],[8,[39,4],null,[[\\\"@route\\\",\\\"@model\\\"],[\\\"rental\\\",[30,1]]],[[\\\"default\\\"],[[[[1,\\\" \\\"],[1,\\\"\\\\n            \\\"],[1,[30,1,[\\\"title\\\"]]],[1,\\\"\\\\n          \\\"]],[]]]]],[1,\\\"\\\\n        \\\"],[13],[1,\\\"\\\\n\\\\n        \\\"],[10,0],[14,0,\\\"grid grid-cols-2 \\\"],[12],[1,\\\"\\\\n          \\\"],[10,0],[14,0,\\\"mb-16\\\"],[12],[1,\\\"\\\\n            \\\"],[10,1],[12],[1,\\\"Owner:\\\"],[13],[1,\\\" \\\"],[10,1],[14,0,\\\"font-thin\\\"],[12],[1,[30,1,[\\\"owner\\\"]]],[13],[1,\\\"\\\\n          \\\"],[13],[1,\\\"\\\\n          \\\"],[10,0],[12],[1,\\\"\\\\n            \\\"],[10,1],[12],[1,\\\"Typeeee:\\\"],[13],[1,\\\" \\\"],[10,1],[14,0,\\\"font-thin\\\"],[12],[1,[30,1,[\\\"type\\\"]]],[13],[1,\\\"\\\\n          \\\"],[13],[1,\\\"\\\\n        \\\"],[13],[1,\\\"\\\\n\\\\n\\\\n        \\\"],[10,0],[14,0,\\\"grid grid-cols-2 \\\"],[12],[1,\\\"\\\\n          \\\"],[10,0],[12],[1,\\\"\\\\n            \\\"],[10,1],[12],[1,\\\"Location:\\\"],[13],[1,\\\" \\\"],[10,1],[14,0,\\\"font-thin\\\"],[12],[1,[30,1,[\\\"city\\\"]]],[13],[1,\\\"\\\\n          \\\"],[13],[1,\\\"\\\\n          \\\"],[10,0],[12],[1,\\\"\\\\n\\\\n\\\\n            \\\"],[10,1],[12],[1,\\\"Number of bedrooms:\\\"],[13],[1,\\\" \\\"],[10,1],[14,0,\\\"font-thin\\\"],[12],[1,[30,1,[\\\"bedrooms\\\"]]],[13],[1,\\\"\\\\n          \\\"],[13],[1,\\\"\\\\n        \\\"],[13],[1,\\\"\\\\n\\\\n      \\\"],[13],[1,\\\"\\\\n    \\\"],[13],[1,\\\"\\\\n  \\\"],[13],[1,\\\"\\\\n\\\"],[13],[1,\\\"\\\\n\\\"]],[]]]],[\\\"@rental\\\"],false,[\\\"if\\\",\\\"div\\\",\\\"rental/images/index\\\",\\\"h3\\\",\\\"link-to\\\",\\\"span\\\"]]\",\n  \"moduleName\": \"my-app/components/rental/index/template.hbs\",\n  \"isStrictMode\": false\n}));\n\n//# sourceURL=webpack://my-app/./components/rental/index/template.hbs?");

/***/ }),

/***/ "./components/search/filter/template.hbs":
/*!***********************************************!*\
  !*** ./components/search/filter/template.hbs ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _ember_template_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/template-factory */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Ftemplate-factory&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_template_factory__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_template_factory__WEBPACK_IMPORTED_MODULE_0__);\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_ember_template_factory__WEBPACK_IMPORTED_MODULE_0__.createTemplateFactory)(\n/*\n  {{yield this.results}} \n*/\n{\n  \"id\": \"Pc2mqDOz\",\n  \"block\": \"[[[18,1,[[30,0,[\\\"results\\\"]]]],[1,\\\" \\\"]],[\\\"&default\\\"],false,[\\\"yield\\\"]]\",\n  \"moduleName\": \"my-app/components/search/filter/template.hbs\",\n  \"isStrictMode\": false\n}));\n\n//# sourceURL=webpack://my-app/./components/search/filter/template.hbs?");

/***/ }),

/***/ "./components/search/searcher/template.hbs":
/*!*************************************************!*\
  !*** ./components/search/searcher/template.hbs ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _ember_template_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/template-factory */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Ftemplate-factory&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_template_factory__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_template_factory__WEBPACK_IMPORTED_MODULE_0__);\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_ember_template_factory__WEBPACK_IMPORTED_MODULE_0__.createTemplateFactory)(\n/*\n  <div class=\"rentals\">\n\n  <div class=\"mt-4 mb-8 flex items-center justify-center\">\n    <span class=\"font-light text-4xl\">Where would you like to stay?</span>\n  </div>\n  <div class=\" mb-4 pr-64 pl-64 flex items-center justify-center\">\n    <Input class=\"block w-full p-4 text-gray-900 border border-gray-300 border-black-500\" @value={{this.query}} />\n  </div>\n\n  <ul>\n    <Search::filter @rentals={{@rentals}} @query={{this.query}} as |results|>\n\n      {{#each results as |rental|}}\n\n      <li>\n        <Rental::Index @rental={{rental}} />\n      </li>\n\n      {{/each}}\n\n    </Search::filter>\n  </ul>\n</div>\n*/\n{\n  \"id\": \"jcptou1h\",\n  \"block\": \"[[[10,0],[14,0,\\\"rentals\\\"],[12],[1,\\\"\\\\n\\\\n  \\\"],[10,0],[14,0,\\\"mt-4 mb-8 flex items-center justify-center\\\"],[12],[1,\\\"\\\\n    \\\"],[10,1],[14,0,\\\"font-light text-4xl\\\"],[12],[1,\\\"Where would you like to stay?\\\"],[13],[1,\\\"\\\\n  \\\"],[13],[1,\\\"\\\\n  \\\"],[10,0],[14,0,\\\" mb-4 pr-64 pl-64 flex items-center justify-center\\\"],[12],[1,\\\"\\\\n    \\\"],[8,[39,2],[[24,0,\\\"block w-full p-4 text-gray-900 border border-gray-300 border-black-500\\\"]],[[\\\"@value\\\"],[[30,0,[\\\"query\\\"]]]],null],[1,\\\"\\\\n  \\\"],[13],[1,\\\"\\\\n\\\\n  \\\"],[10,\\\"ul\\\"],[12],[1,\\\"\\\\n    \\\"],[8,[39,4],null,[[\\\"@rentals\\\",\\\"@query\\\"],[[30,1],[30,0,[\\\"query\\\"]]]],[[\\\"default\\\"],[[[[1,\\\"\\\\n\\\\n\\\"],[42,[28,[37,6],[[28,[37,6],[[30,2]],null]],null],null,[[[1,\\\"\\\\n      \\\"],[10,\\\"li\\\"],[12],[1,\\\"\\\\n        \\\"],[8,[39,8],null,[[\\\"@rental\\\"],[[30,3]]],null],[1,\\\"\\\\n      \\\"],[13],[1,\\\"\\\\n\\\\n\\\"]],[3]],null],[1,\\\"\\\\n    \\\"]],[2]]]]],[1,\\\"\\\\n  \\\"],[13],[1,\\\"\\\\n\\\"],[13]],[\\\"@rentals\\\",\\\"results\\\",\\\"rental\\\"],false,[\\\"div\\\",\\\"span\\\",\\\"input\\\",\\\"ul\\\",\\\"search/filter\\\",\\\"each\\\",\\\"-track-array\\\",\\\"li\\\",\\\"rental/index\\\"]]\",\n  \"moduleName\": \"my-app/components/search/searcher/template.hbs\",\n  \"isStrictMode\": false\n}));\n\n//# sourceURL=webpack://my-app/./components/search/searcher/template.hbs?");

/***/ }),

/***/ "./templates/about.hbs":
/*!*****************************!*\
  !*** ./templates/about.hbs ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _ember_template_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/template-factory */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Ftemplate-factory&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_template_factory__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_template_factory__WEBPACK_IMPORTED_MODULE_0__);\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_ember_template_factory__WEBPACK_IMPORTED_MODULE_0__.createTemplateFactory)(\n/*\n  <Header>\n  <h2 class=\"text-5xl\">About Super Rentals</h2>\n  <p>\n    The Super Rentals website is a delightful project created to explore Ember.\n    By building a property rental site, we can simultaneously imagine traveling\n    AND building Ember applications.\n  </p>\n  <div class=\"mt-9\">\n    <LinkTo class=\"bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 border border-blue-700 rounded\"\n      @route=\"contact\">Contact Us</LinkTo>\n  </div>\n</Header>\n*/\n{\n  \"id\": \"BdK9Qzkw\",\n  \"block\": \"[[[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n  \\\"],[10,\\\"h2\\\"],[14,0,\\\"text-5xl\\\"],[12],[1,\\\"About Super Rentals\\\"],[13],[1,\\\"\\\\n  \\\"],[10,2],[12],[1,\\\"\\\\n    The Super Rentals website is a delightful project created to explore Ember.\\\\n    By building a property rental site, we can simultaneously imagine traveling\\\\n    AND building Ember applications.\\\\n  \\\"],[13],[1,\\\"\\\\n  \\\"],[10,0],[14,0,\\\"mt-9\\\"],[12],[1,\\\"\\\\n    \\\"],[8,[39,4],[[24,0,\\\"bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 border border-blue-700 rounded\\\"]],[[\\\"@route\\\"],[\\\"contact\\\"]],[[\\\"default\\\"],[[[[1,\\\"Contact Us\\\"]],[]]]]],[1,\\\"\\\\n  \\\"],[13],[1,\\\"\\\\n\\\"]],[]]]]]],[],false,[\\\"header\\\",\\\"h2\\\",\\\"p\\\",\\\"div\\\",\\\"link-to\\\"]]\",\n  \"moduleName\": \"my-app/templates/about.hbs\",\n  \"isStrictMode\": false\n}));\n\n//# sourceURL=webpack://my-app/./templates/about.hbs?");

/***/ }),

/***/ "./templates/application.hbs":
/*!***********************************!*\
  !*** ./templates/application.hbs ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _ember_template_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/template-factory */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Ftemplate-factory&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_template_factory__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_template_factory__WEBPACK_IMPORTED_MODULE_0__);\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_ember_template_factory__WEBPACK_IMPORTED_MODULE_0__.createTemplateFactory)(\n/*\n  <div>\n  <Navbar />\n  <div>\n    {{outlet}}\n  </div>\n</div>\n*/\n{\n  \"id\": \"pGeL1GQo\",\n  \"block\": \"[[[10,0],[12],[1,\\\"\\\\n  \\\"],[8,[39,1],null,null,null],[1,\\\"\\\\n  \\\"],[10,0],[12],[1,\\\"\\\\n    \\\"],[46,[28,[37,3],null,null],null,null,null],[1,\\\"\\\\n  \\\"],[13],[1,\\\"\\\\n\\\"],[13]],[],false,[\\\"div\\\",\\\"navbar\\\",\\\"component\\\",\\\"-outlet\\\"]]\",\n  \"moduleName\": \"my-app/templates/application.hbs\",\n  \"isStrictMode\": false\n}));\n\n//# sourceURL=webpack://my-app/./templates/application.hbs?");

/***/ }),

/***/ "./templates/contact.hbs":
/*!*******************************!*\
  !*** ./templates/contact.hbs ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _ember_template_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/template-factory */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Ftemplate-factory&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_template_factory__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_template_factory__WEBPACK_IMPORTED_MODULE_0__);\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_ember_template_factory__WEBPACK_IMPORTED_MODULE_0__.createTemplateFactory)(\n/*\n  <Header>\n  <h2 class=\"text-5xl\">Contact Us</h2>\n  <p>\n    Super Rentals Representatives would love to help you<br>\n    choose a destination or answer any questions you may have.\n  </p>\n  <address>\n    <div class=\"mt-9\">\n      <p class=\"font-thin\"> Super Rentals HQ</p>\n      <p class=\"font-thin\">\n        1212 Test Address Avenue<br>\n        Testington, OR 97233\n      </p>\n      <div class=\"mt-9\">\n        <a class=\"text-blue-600\" href=\"tel:503.555.1212\">+1 (503) 555-1212</a><br>\n        <a class=\"text-blue-600\" href=\"mailto:superrentalsrep@emberjs.com\">superrentalsrep@emberjs.com</a>\n      </div>\n    </div>\n  </address>\n  <div class=\"mt-9\">\n    <LinkTo class=\"bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 border border-blue-700 rounded\"\n      @route=\"about\">About</LinkTo>\n  </div>\n</Header>\n*/\n{\n  \"id\": \"sMOh6xep\",\n  \"block\": \"[[[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n  \\\"],[10,\\\"h2\\\"],[14,0,\\\"text-5xl\\\"],[12],[1,\\\"Contact Us\\\"],[13],[1,\\\"\\\\n  \\\"],[10,2],[12],[1,\\\"\\\\n    Super Rentals Representatives would love to help you\\\"],[10,\\\"br\\\"],[12],[13],[1,\\\"\\\\n    choose a destination or answer any questions you may have.\\\\n  \\\"],[13],[1,\\\"\\\\n  \\\"],[10,\\\"address\\\"],[12],[1,\\\"\\\\n    \\\"],[10,0],[14,0,\\\"mt-9\\\"],[12],[1,\\\"\\\\n      \\\"],[10,2],[14,0,\\\"font-thin\\\"],[12],[1,\\\" Super Rentals HQ\\\"],[13],[1,\\\"\\\\n      \\\"],[10,2],[14,0,\\\"font-thin\\\"],[12],[1,\\\"\\\\n        1212 Test Address Avenue\\\"],[10,\\\"br\\\"],[12],[13],[1,\\\"\\\\n        Testington, OR 97233\\\\n      \\\"],[13],[1,\\\"\\\\n      \\\"],[10,0],[14,0,\\\"mt-9\\\"],[12],[1,\\\"\\\\n        \\\"],[10,3],[14,0,\\\"text-blue-600\\\"],[14,6,\\\"tel:503.555.1212\\\"],[12],[1,\\\"+1 (503) 555-1212\\\"],[13],[10,\\\"br\\\"],[12],[13],[1,\\\"\\\\n        \\\"],[10,3],[14,0,\\\"text-blue-600\\\"],[14,6,\\\"mailto:superrentalsrep@emberjs.com\\\"],[12],[1,\\\"superrentalsrep@emberjs.com\\\"],[13],[1,\\\"\\\\n      \\\"],[13],[1,\\\"\\\\n    \\\"],[13],[1,\\\"\\\\n  \\\"],[13],[1,\\\"\\\\n  \\\"],[10,0],[14,0,\\\"mt-9\\\"],[12],[1,\\\"\\\\n    \\\"],[8,[39,7],[[24,0,\\\"bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 border border-blue-700 rounded\\\"]],[[\\\"@route\\\"],[\\\"about\\\"]],[[\\\"default\\\"],[[[[1,\\\"About\\\"]],[]]]]],[1,\\\"\\\\n  \\\"],[13],[1,\\\"\\\\n\\\"]],[]]]]]],[],false,[\\\"header\\\",\\\"h2\\\",\\\"p\\\",\\\"br\\\",\\\"address\\\",\\\"div\\\",\\\"a\\\",\\\"link-to\\\"]]\",\n  \"moduleName\": \"my-app/templates/contact.hbs\",\n  \"isStrictMode\": false\n}));\n\n//# sourceURL=webpack://my-app/./templates/contact.hbs?");

/***/ }),

/***/ "./templates/dog.hbs":
/*!***************************!*\
  !*** ./templates/dog.hbs ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _ember_template_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/template-factory */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Ftemplate-factory&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_template_factory__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_template_factory__WEBPACK_IMPORTED_MODULE_0__);\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_ember_template_factory__WEBPACK_IMPORTED_MODULE_0__.createTemplateFactory)(\n/*\n  <Dog></Dog>\n*/\n{\n  \"id\": \"hQOMHcEe\",\n  \"block\": \"[[[8,[39,0],null,null,[[\\\"default\\\"],[[[],[]]]]]],[],false,[\\\"dog\\\"]]\",\n  \"moduleName\": \"my-app/templates/dog.hbs\",\n  \"isStrictMode\": false\n}));\n\n//# sourceURL=webpack://my-app/./templates/dog.hbs?");

/***/ }),

/***/ "./templates/exercises.hbs":
/*!*********************************!*\
  !*** ./templates/exercises.hbs ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _ember_template_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/template-factory */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Ftemplate-factory&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_template_factory__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_template_factory__WEBPACK_IMPORTED_MODULE_0__);\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_ember_template_factory__WEBPACK_IMPORTED_MODULE_0__.createTemplateFactory)(\n/*\n  <Excercises></Excercises>\n*/\n{\n  \"id\": \"EVds4Say\",\n  \"block\": \"[[[8,[39,0],null,null,[[\\\"default\\\"],[[[],[]]]]]],[],false,[\\\"excercises\\\"]]\",\n  \"moduleName\": \"my-app/templates/exercises.hbs\",\n  \"isStrictMode\": false\n}));\n\n//# sourceURL=webpack://my-app/./templates/exercises.hbs?");

/***/ }),

/***/ "./templates/index.hbs":
/*!*****************************!*\
  !*** ./templates/index.hbs ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _ember_template_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/template-factory */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Ftemplate-factory&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_template_factory__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_template_factory__WEBPACK_IMPORTED_MODULE_0__);\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_ember_template_factory__WEBPACK_IMPORTED_MODULE_0__.createTemplateFactory)(\n/*\n  <Header>\n  <h2 class=\"text-5xl\">Welcome to Super Rentals!</h2>\n  <p>We hope you find exactly what you're looking for in a place to stay.</p>\n  <div class=\"mt-9\">\n    <LinkTo class=\"bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 border border-blue-700 rounded button\"\n      @route=\"about\">About Us</LinkTo>\n\n  </div>\n</Header>\n\n\n<Search::Searcher @rentals={{@model}} />\n*/\n{\n  \"id\": \"jANIbFpH\",\n  \"block\": \"[[[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n  \\\"],[10,\\\"h2\\\"],[14,0,\\\"text-5xl\\\"],[12],[1,\\\"Welcome to Super Rentals!\\\"],[13],[1,\\\"\\\\n  \\\"],[10,2],[12],[1,\\\"We hope you find exactly what you're looking for in a place to stay.\\\"],[13],[1,\\\"\\\\n  \\\"],[10,0],[14,0,\\\"mt-9\\\"],[12],[1,\\\"\\\\n    \\\"],[8,[39,4],[[24,0,\\\"bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 border border-blue-700 rounded button\\\"]],[[\\\"@route\\\"],[\\\"about\\\"]],[[\\\"default\\\"],[[[[1,\\\"About Us\\\"]],[]]]]],[1,\\\"\\\\n\\\\n  \\\"],[13],[1,\\\"\\\\n\\\"]],[]]]]],[1,\\\"\\\\n\\\\n\\\\n\\\"],[8,[39,5],null,[[\\\"@rentals\\\"],[[30,1]]],null]],[\\\"@model\\\"],false,[\\\"header\\\",\\\"h2\\\",\\\"p\\\",\\\"div\\\",\\\"link-to\\\",\\\"search/searcher\\\"]]\",\n  \"moduleName\": \"my-app/templates/index.hbs\",\n  \"isStrictMode\": false\n}));\n\n//# sourceURL=webpack://my-app/./templates/index.hbs?");

/***/ }),

/***/ "./templates/magicform.hbs":
/*!*********************************!*\
  !*** ./templates/magicform.hbs ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _ember_template_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/template-factory */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Ftemplate-factory&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_template_factory__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_template_factory__WEBPACK_IMPORTED_MODULE_0__);\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_ember_template_factory__WEBPACK_IMPORTED_MODULE_0__.createTemplateFactory)(\n/*\n  <Magicform></Magicform>\n*/\n{\n  \"id\": \"JdYk6uuQ\",\n  \"block\": \"[[[8,[39,0],null,null,[[\\\"default\\\"],[[[],[]]]]]],[],false,[\\\"magicform\\\"]]\",\n  \"moduleName\": \"my-app/templates/magicform.hbs\",\n  \"isStrictMode\": false\n}));\n\n//# sourceURL=webpack://my-app/./templates/magicform.hbs?");

/***/ }),

/***/ "./templates/mock.hbs":
/*!****************************!*\
  !*** ./templates/mock.hbs ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _ember_template_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/template-factory */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Ftemplate-factory&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_template_factory__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_template_factory__WEBPACK_IMPORTED_MODULE_0__);\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_ember_template_factory__WEBPACK_IMPORTED_MODULE_0__.createTemplateFactory)(\n/*\n  <Endpoints></Endpoints>\n*/\n{\n  \"id\": \"xmkqaQbf\",\n  \"block\": \"[[[8,[39,0],null,null,[[\\\"default\\\"],[[[],[]]]]]],[],false,[\\\"endpoints\\\"]]\",\n  \"moduleName\": \"my-app/templates/mock.hbs\",\n  \"isStrictMode\": false\n}));\n\n//# sourceURL=webpack://my-app/./templates/mock.hbs?");

/***/ }),

/***/ "./templates/rental.hbs":
/*!******************************!*\
  !*** ./templates/rental.hbs ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _ember_template_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/template-factory */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Ftemplate-factory&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_template_factory__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_template_factory__WEBPACK_IMPORTED_MODULE_0__);\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_ember_template_factory__WEBPACK_IMPORTED_MODULE_0__.createTemplateFactory)(\n/*\n  <Rental::Detailed @rental={{@model}} />\n*/\n{\n  \"id\": \"Erwg8sZq\",\n  \"block\": \"[[[8,[39,0],null,[[\\\"@rental\\\"],[[30,1]]],null]],[\\\"@model\\\"],false,[\\\"rental/detailed\\\"]]\",\n  \"moduleName\": \"my-app/templates/rental.hbs\",\n  \"isStrictMode\": false\n}));\n\n//# sourceURL=webpack://my-app/./templates/rental.hbs?");

/***/ }),

/***/ "./adapters/application.js":
/*!*********************************!*\
  !*** ./adapters/application.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ApplicationAdapter)\n/* harmony export */ });\n/* harmony import */ var _Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../@babel/runtime/helpers/esm/defineProperty.js */ \"../../@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _ember_data_adapter_json_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember-data/adapter/json-api */ \"../rewritten-packages/@ember-data/adapter.85bda234/node_modules/@ember-data/adapter/json-api.js\");\n\n\nclass ApplicationAdapter extends _ember_data_adapter_json_api__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n  constructor(...args) {\n    super(...args);\n    (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"namespace\", 'api');\n  }\n  buildURL(...args) {\n    return `${super.buildURL(...args)}.json`;\n  }\n}\n\n//# sourceURL=webpack://my-app/./adapters/application.js?");

/***/ }),

/***/ "./app.js":
/*!****************!*\
  !*** ./app.js ***!
  \****************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ App)\n/* harmony export */ });\n/* harmony import */ var _Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../@babel/runtime/helpers/esm/defineProperty.js */ \"../../@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _ember_application__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember/application */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fapplication&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_application__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_ember_application__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var ember_resolver__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ember-resolver */ \"../rewritten-packages/ember-resolver.69e2404e/node_modules/ember-resolver/index.js\");\n/* harmony import */ var ember_load_initializers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ember-load-initializers */ \"../rewritten-packages/ember-load-initializers.f6066884/node_modules/ember-load-initializers/index.js\");\n/* harmony import */ var my_app_config_environment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! my-app/config/environment */ \"./config/environment.js\");\n/* harmony import */ var my_app_app_css__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! my-app/app.css */ \"./app.css\");\n\n\n\n\n\n\nclass App extends (_ember_application__WEBPACK_IMPORTED_MODULE_1___default()) {\n  constructor(...args) {\n    super(...args);\n    (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"modulePrefix\", my_app_config_environment__WEBPACK_IMPORTED_MODULE_4__[\"default\"].modulePrefix);\n    (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"podModulePrefix\", my_app_config_environment__WEBPACK_IMPORTED_MODULE_4__[\"default\"].podModulePrefix);\n    (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"Resolver\", ember_resolver__WEBPACK_IMPORTED_MODULE_2__[\"default\"]);\n  }\n}\n(0,ember_load_initializers__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(App, my_app_config_environment__WEBPACK_IMPORTED_MODULE_4__[\"default\"].modulePrefix);\n\n//# sourceURL=webpack://my-app/./app.js?");

/***/ }),

/***/ "./assets/my-app.js":
/*!**************************!*\
  !*** ./assets/my-app.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../@embroider/macros/src/addon/es-compat2 */ \"../../@embroider/macros/src/addon/es-compat2.js\");\n/* harmony import */ var _embroider_macros_src_addon_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../@embroider/macros/src/addon/runtime */ \"../../@embroider/macros/src/addon/runtime.js\");\n\n\nlet w = window;\nlet d = w.define;\n(0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! ./-embroider-implicit-modules.js */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial%2Fnode_modules%2F.embroider%2Frewritten-app%2F-embroider-implicit-modules.js&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\"));\nd(\"my-app/adapters/application\", function () {\n  return (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! my-app/adapters/application.js */ \"./adapters/application.js\"));\n});\nd(\"my-app/app\", function () {\n  return (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! my-app/app.js */ \"./app.js\"));\n});\nd(\"my-app/config/environment\", function () {\n  return (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! my-app/config/environment.js */ \"./config/environment.js\"));\n});\nd(\"my-app/models/rental\", function () {\n  return (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! my-app/models/rental.ts */ \"./models/rental.ts\"));\n});\nd(\"my-app/router\", function () {\n  return (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! my-app/router.ts */ \"./router.ts\"));\n});\nd(\"my-app/serializers/application\", function () {\n  return (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! my-app/serializers/application.js */ \"./serializers/application.js\"));\n});\nd(\"my-app/services/page-title\", function () {\n  return (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! my-app/services/page-title.js */ \"../../ember-page-title/dist/_app_/services/page-title.js\"));\n});\nd(\"my-app/component-managers/glimmer\", function () {\n  return (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! my-app/component-managers/glimmer.js */ \"../rewritten-packages/@glimmer/component.9a0d5824/node_modules/@glimmer/component/_app_/component-managers/glimmer.js\"));\n});\nd(\"my-app/initializers/app-version\", function () {\n  return (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! my-app/initializers/app-version.js */ \"../rewritten-packages/ember-cli-app-version.15f7f965/node_modules/ember-cli-app-version/_app_/initializers/app-version.js\"));\n});\nd(\"my-app/data-adapter\", function () {\n  return (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! my-app/data-adapter.js */ \"../rewritten-packages/@ember-data/debug.cbe3cfb1/node_modules/@ember-data/debug/_app_/data-adapter.js\"));\n});\nd(\"my-app/initializers/ember-data\", function () {\n  return (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! my-app/initializers/ember-data.js */ \"../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/_app_/initializers/ember-data.js\"));\n});\nd(\"my-app/services/store\", function () {\n  return (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! my-app/services/store.js */ \"../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/_app_/services/store.js\"));\n});\nd(\"my-app/transforms/boolean\", function () {\n  return (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! my-app/transforms/boolean.js */ \"../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/_app_/transforms/boolean.js\"));\n});\nd(\"my-app/transforms/date\", function () {\n  return (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! my-app/transforms/date.js */ \"../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/_app_/transforms/date.js\"));\n});\nd(\"my-app/transforms/number\", function () {\n  return (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! my-app/transforms/number.js */ \"../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/_app_/transforms/number.js\"));\n});\nd(\"my-app/transforms/string\", function () {\n  return (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! my-app/transforms/string.js */ \"../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/_app_/transforms/string.js\"));\n});\nd(\"my-app/container-debug-adapter\", function () {\n  return (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! my-app/container-debug-adapter.js */ \"../rewritten-packages/ember-resolver.69e2404e/node_modules/ember-resolver/_app_/container-debug-adapter.js\"));\n});\nd(\"my-app/components/buttons/share/component\", function () {\n  return (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! my-app/components/buttons/share/component.ts */ \"./components/buttons/share/component.ts\"));\n});\nd(\"my-app/components/buttons/share/template\", function () {\n  return (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! my-app/components/buttons/share/template.hbs */ \"./components/buttons/share/template.hbs\"));\n});\nd(\"my-app/components/dog/component\", function () {\n  return (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! my-app/components/dog/component.ts */ \"./components/dog/component.ts\"));\n});\nd(\"my-app/components/dog/template\", function () {\n  return (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! my-app/components/dog/template.hbs */ \"./components/dog/template.hbs\"));\n});\nd(\"my-app/components/endpoints/component\", function () {\n  return (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! my-app/components/endpoints/component.ts */ \"./components/endpoints/component.ts\"));\n});\nd(\"my-app/components/endpoints/handlers\", function () {\n  return (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! my-app/components/endpoints/handlers.ts */ \"./components/endpoints/handlers.ts\"));\n});\nd(\"my-app/components/endpoints/mockServiceWorker\", function () {\n  return (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! my-app/components/endpoints/mockServiceWorker.js */ \"./components/endpoints/mockServiceWorker.js\"));\n});\nd(\"my-app/components/endpoints/template\", function () {\n  return (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! my-app/components/endpoints/template.hbs */ \"./components/endpoints/template.hbs\"));\n});\nd(\"my-app/components/excercises/component\", function () {\n  return (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! my-app/components/excercises/component.ts */ \"./components/excercises/component.ts\"));\n});\nd(\"my-app/components/excercises/template\", function () {\n  return (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! my-app/components/excercises/template.hbs */ \"./components/excercises/template.hbs\"));\n});\nd(\"my-app/components/header/template\", function () {\n  return (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! my-app/components/header/template.hbs */ \"./components/header/template.hbs\"));\n});\nd(\"my-app/components/magicform/component\", function () {\n  return (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! my-app/components/magicform/component.ts */ \"./components/magicform/component.ts\"));\n});\nd(\"my-app/components/magicform/template\", function () {\n  return (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! my-app/components/magicform/template.hbs */ \"./components/magicform/template.hbs\"));\n});\nd(\"my-app/components/navbar/template\", function () {\n  return (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! my-app/components/navbar/template.hbs */ \"./components/navbar/template.hbs\"));\n});\nd(\"my-app/components/rental/detailed/component\", function () {\n  return (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! my-app/components/rental/detailed/component.ts */ \"./components/rental/detailed/component.ts\"));\n});\nd(\"my-app/components/rental/detailed/template\", function () {\n  return (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! my-app/components/rental/detailed/template.hbs */ \"./components/rental/detailed/template.hbs\"));\n});\nd(\"my-app/components/rental/images/detailed/component\", function () {\n  return (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! my-app/components/rental/images/detailed/component.ts */ \"./components/rental/images/detailed/component.ts\"));\n});\nd(\"my-app/components/rental/images/detailed/template\", function () {\n  return (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! my-app/components/rental/images/detailed/template.hbs */ \"./components/rental/images/detailed/template.hbs\"));\n});\nd(\"my-app/components/rental/images/index/component\", function () {\n  return (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! my-app/components/rental/images/index/component.ts */ \"./components/rental/images/index/component.ts\"));\n});\nd(\"my-app/components/rental/images/index/template\", function () {\n  return (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! my-app/components/rental/images/index/template.hbs */ \"./components/rental/images/index/template.hbs\"));\n});\nd(\"my-app/components/rental/index/component\", function () {\n  return (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! my-app/components/rental/index/component.ts */ \"./components/rental/index/component.ts\"));\n});\nd(\"my-app/components/rental/index/template\", function () {\n  return (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! my-app/components/rental/index/template.hbs */ \"./components/rental/index/template.hbs\"));\n});\nd(\"my-app/components/search/filter/component\", function () {\n  return (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! my-app/components/search/filter/component.ts */ \"./components/search/filter/component.ts\"));\n});\nd(\"my-app/components/search/filter/template\", function () {\n  return (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! my-app/components/search/filter/template.hbs */ \"./components/search/filter/template.hbs\"));\n});\nd(\"my-app/components/search/searcher/component\", function () {\n  return (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! my-app/components/search/searcher/component.ts */ \"./components/search/searcher/component.ts\"));\n});\nd(\"my-app/components/search/searcher/template\", function () {\n  return (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! my-app/components/search/searcher/template.hbs */ \"./components/search/searcher/template.hbs\"));\n});\nd(\"my-app/components/welcome-page\", function () {\n  return (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! my-app/components/welcome-page.js */ \"../../ember-welcome-page/dist/_app_/components/welcome-page.js\"));\n});\nd(\"my-app/helpers/page-title\", function () {\n  return (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! my-app/helpers/page-title.js */ \"../../ember-page-title/dist/_app_/helpers/page-title.js\"));\n});\nd(\"my-app/helpers/app-version\", function () {\n  return (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! my-app/helpers/app-version.js */ \"../rewritten-packages/ember-cli-app-version.15f7f965/node_modules/ember-cli-app-version/_app_/helpers/app-version.js\"));\n});\nd(\"my-app/helpers/pluralize\", function () {\n  return (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! my-app/helpers/pluralize.js */ \"../rewritten-packages/ember-inflector.73f9432a/node_modules/ember-inflector/_app_/helpers/pluralize.js\"));\n});\nd(\"my-app/helpers/singularize\", function () {\n  return (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! my-app/helpers/singularize.js */ \"../rewritten-packages/ember-inflector.73f9432a/node_modules/ember-inflector/_app_/helpers/singularize.js\"));\n});\nd(\"my-app/modifiers/did-insert\", function () {\n  return (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! my-app/modifiers/did-insert.js */ \"../rewritten-packages/@ember/render-modifiers.da4f7ec0/node_modules/@ember/render-modifiers/_app_/modifiers/did-insert.js\"));\n});\nd(\"my-app/modifiers/did-update\", function () {\n  return (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! my-app/modifiers/did-update.js */ \"../rewritten-packages/@ember/render-modifiers.da4f7ec0/node_modules/@ember/render-modifiers/_app_/modifiers/did-update.js\"));\n});\nd(\"my-app/modifiers/will-destroy\", function () {\n  return (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! my-app/modifiers/will-destroy.js */ \"../rewritten-packages/@ember/render-modifiers.da4f7ec0/node_modules/@ember/render-modifiers/_app_/modifiers/will-destroy.js\"));\n});\nd(\"my-app/templates/index\", function () {\n  return (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! my-app/templates/index.hbs */ \"./templates/index.hbs\"));\n});\nd(\"my-app/routes/index\", function () {\n  return (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! my-app/routes/index.ts */ \"./routes/index.ts\"));\n});\nd(\"my-app/templates/rental\", function () {\n  return (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! my-app/templates/rental.hbs */ \"./templates/rental.hbs\"));\n});\nd(\"my-app/routes/rental\", function () {\n  return (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! my-app/routes/rental.ts */ \"./routes/rental.ts\"));\n});\nd(\"my-app/templates/about\", function () {\n  return (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! my-app/templates/about.hbs */ \"./templates/about.hbs\"));\n});\nd(\"my-app/templates/application\", function () {\n  return (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! my-app/templates/application.hbs */ \"./templates/application.hbs\"));\n});\nd(\"my-app/templates/contact\", function () {\n  return (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! my-app/templates/contact.hbs */ \"./templates/contact.hbs\"));\n});\nd(\"my-app/templates/dog\", function () {\n  return (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! my-app/templates/dog.hbs */ \"./templates/dog.hbs\"));\n});\nd(\"my-app/templates/exercises\", function () {\n  return (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! my-app/templates/exercises.hbs */ \"./templates/exercises.hbs\"));\n});\nd(\"my-app/templates/magicform\", function () {\n  return (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! my-app/templates/magicform.hbs */ \"./templates/magicform.hbs\"));\n});\nd(\"my-app/templates/mock\", function () {\n  return (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! my-app/templates/mock.hbs */ \"./templates/mock.hbs\"));\n});\nif ((0,_embroider_macros_src_addon_runtime__WEBPACK_IMPORTED_MODULE_1__.macroCondition)((0,_embroider_macros_src_addon_runtime__WEBPACK_IMPORTED_MODULE_1__.getGlobalConfig)().fastboot?.isRunning)) {\n  d(\"my-app/instance-initializers/setup-fetch\", function () {\n    return (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! my-app/instance-initializers/setup-fetch.js */ \"../rewritten-packages/ember-fetch.da60d5ea/node_modules/ember-fetch/_fastboot_/instance-initializers/setup-fetch.js\"));\n  });\n}\nif (!runningTests) {\n  (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(__webpack_require__(/*! ../app */ \"./app.js\")).default.create({\n    \"name\": \"my-app\",\n    \"version\": \"0.0.0+20f83578\"\n  });\n}\n\n//# sourceURL=webpack://my-app/./assets/my-app.js?");

/***/ }),

/***/ "./components/buttons/share/component.ts":
/*!***********************************************!*\
  !*** ./components/buttons/share/component.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ShareComponent)\n/* harmony export */ });\n/* harmony import */ var _Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_initializerDefineProperty_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../@babel/runtime/helpers/esm/initializerDefineProperty.js */ \"../../@babel/runtime/helpers/esm/initializerDefineProperty.js\");\n/* harmony import */ var _Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../@babel/runtime/helpers/esm/defineProperty.js */ \"../../@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_applyDecoratedDescriptor_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../@babel/runtime/helpers/esm/applyDecoratedDescriptor.js */ \"../../@babel/runtime/helpers/esm/applyDecoratedDescriptor.js\");\n/* harmony import */ var _Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_initializerWarningHelper_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../@babel/runtime/helpers/esm/initializerWarningHelper.js */ \"../../@babel/runtime/helpers/esm/initializerWarningHelper.js\");\n/* harmony import */ var _ember_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ember/service */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fservice&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_service__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_ember_service__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _glimmer_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @glimmer/component */ \"../rewritten-packages/@glimmer/component.9a0d5824/node_modules/@glimmer/component/index.js\");\n\n\n\n\nvar _class, _descriptor;\n\n\nconst TWEET_INTENT = 'https://twitter.com/intent/tweet';\nlet ShareComponent = (_class = class ShareComponent extends _glimmer_component__WEBPACK_IMPORTED_MODULE_5__[\"default\"] {\n  constructor(...args) {\n    super(...args);\n    (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_initializerDefineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"router\", _descriptor, this);\n  }\n  get currentURL() {\n    //I cant ommit the warning\n    return new URL(this.router?.currentURL, window.location.origin);\n  }\n  get shareURL() {\n    let url = new URL(TWEET_INTENT);\n    url.searchParams.set('url', this.currentURL.toString());\n    if (this.args.text) {\n      url.searchParams.set('text', this.args.text);\n    }\n    if (this.args.hashtags) {\n      url.searchParams.set('hashtags', this.args.hashtags.toString());\n    }\n    if (this.args.via) {\n      url.searchParams.set('via', this.args.via);\n    }\n    return url;\n  }\n}, (_descriptor = (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_applyDecoratedDescriptor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_class.prototype, \"router\", [_ember_service__WEBPACK_IMPORTED_MODULE_4__.service], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class);\n\n\n//# sourceURL=webpack://my-app/./components/buttons/share/component.ts?");

/***/ }),

/***/ "./components/dog/component.ts":
/*!*************************************!*\
  !*** ./components/dog/component.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ DogComponent),\n/* harmony export */   modifier: () => (/* reexport safe */ _ember_render_modifiers_modifiers_did_insert__WEBPACK_IMPORTED_MODULE_6__.modifier)\n/* harmony export */ });\n/* harmony import */ var _Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_initializerDefineProperty_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../@babel/runtime/helpers/esm/initializerDefineProperty.js */ \"../../@babel/runtime/helpers/esm/initializerDefineProperty.js\");\n/* harmony import */ var _Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../@babel/runtime/helpers/esm/defineProperty.js */ \"../../@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_applyDecoratedDescriptor_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../@babel/runtime/helpers/esm/applyDecoratedDescriptor.js */ \"../../@babel/runtime/helpers/esm/applyDecoratedDescriptor.js\");\n/* harmony import */ var _Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_initializerWarningHelper_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../@babel/runtime/helpers/esm/initializerWarningHelper.js */ \"../../@babel/runtime/helpers/esm/initializerWarningHelper.js\");\n/* harmony import */ var _glimmer_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @glimmer/component */ \"../rewritten-packages/@glimmer/component.9a0d5824/node_modules/@glimmer/component/index.js\");\n/* harmony import */ var _ember_object__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ember/object */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fobject&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_object__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_ember_object__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _ember_render_modifiers_modifiers_did_insert__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ember/render-modifiers/modifiers/did-insert */ \"../rewritten-packages/@ember/render-modifiers.da4f7ec0/node_modules/@ember/render-modifiers/modifiers/did-insert.js\");\n/* harmony import */ var _glimmer_tracking__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @glimmer/tracking */ \"../rewritten-packages/@glimmer/tracking.481d7669/node_modules/@glimmer/tracking/index.js\");\n\n\n\n\nvar _class, _descriptor, _descriptor2;\n\n\n\n\nlet DogComponent = (_class = class DogComponent extends _glimmer_component__WEBPACK_IMPORTED_MODULE_4__[\"default\"] {\n  constructor(...args) {\n    super(...args);\n    //esta es la variable que tiene que ser tracked la cual se utiliza para guardar la url que va a imprimir la imagen dentro de img\n    (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_initializerDefineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"dogImage\", _descriptor, this);\n    //esta variable guarda el estado para ver cual de las dos imagenes renderizar\n    (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_initializerDefineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"dogImageStated\", _descriptor2, this);\n  }\n  // actualización de estado, SIEMPRE TIENE DOS PARAMETROS\n  //el primero parametro de la función es un element de tipo\n  // \"HTMLImageElement\" y el segundo es un String  que es el estado que dfinimos anteriormente\n  //segun tenga un estado y otro llamo a la funcion de getRandomDog o a la de getBoxerDog\n  async updateDog(element, dogImageStated) {\n    if (this.dogImageStated === 'dog') {\n      await this.getRandomDog();\n    } else if (this.dogImageStated === 'boxer') {\n      await this.getBoxerDog();\n    }\n  }\n\n  //esta funcion es muy simple solo hace que el estado de la variable dogState \n  //IMORTANTE se le pasan dos parametros 1: el valor que quiero cambiar y 2: event de tipo Event\n  changeDogState(dogType, event) {\n    //debugger\n    this.dogImageStated = dogType;\n  }\n\n  //esta función sirve para hacer un fetch en el endpoint guardar la respuesta en data y asignarle a \"dogImage\" lo que hay en el atributo \"message\" del json\n  async getRandomDog() {\n    try {\n      const response = await fetch(' https://dog.ceo/api/breeds/image/random');\n      const data = await response.json();\n      this.dogImage = data.message;\n    } catch (error) {\n      //si sale mal salta error\n      console.error('The image couldnt be found', error);\n    }\n  }\n  //lo mismo que arriba pero con otro endpoint\n  async getBoxerDog() {\n    try {\n      const response = await fetch('https://dog.ceo/api/breed/boxer/images/random');\n      const data = await response.json();\n      this.dogImage = data.message;\n    } catch (error) {\n      console.error('The image couldnt be found', error);\n    }\n  }\n}, (_descriptor = (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_applyDecoratedDescriptor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_class.prototype, \"dogImage\", [_glimmer_tracking__WEBPACK_IMPORTED_MODULE_7__.tracked], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return '';\n  }\n}), _descriptor2 = (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_applyDecoratedDescriptor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_class.prototype, \"dogImageStated\", [_glimmer_tracking__WEBPACK_IMPORTED_MODULE_7__.tracked], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return '';\n  }\n}), (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_applyDecoratedDescriptor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_class.prototype, \"updateDog\", [_ember_object__WEBPACK_IMPORTED_MODULE_5__.action], Object.getOwnPropertyDescriptor(_class.prototype, \"updateDog\"), _class.prototype), (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_applyDecoratedDescriptor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_class.prototype, \"changeDogState\", [_ember_object__WEBPACK_IMPORTED_MODULE_5__.action], Object.getOwnPropertyDescriptor(_class.prototype, \"changeDogState\"), _class.prototype), (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_applyDecoratedDescriptor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_class.prototype, \"getRandomDog\", [_ember_object__WEBPACK_IMPORTED_MODULE_5__.action], Object.getOwnPropertyDescriptor(_class.prototype, \"getRandomDog\"), _class.prototype), (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_applyDecoratedDescriptor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_class.prototype, \"getBoxerDog\", [_ember_object__WEBPACK_IMPORTED_MODULE_5__.action], Object.getOwnPropertyDescriptor(_class.prototype, \"getBoxerDog\"), _class.prototype)), _class);\n\n\n//# sourceURL=webpack://my-app/./components/dog/component.ts?");

/***/ }),

/***/ "./components/endpoints/component.ts":
/*!*******************************************!*\
  !*** ./components/endpoints/component.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ MockComponet),\n/* harmony export */   modifier: () => (/* reexport safe */ _ember_render_modifiers_modifiers_did_insert__WEBPACK_IMPORTED_MODULE_7__.modifier)\n/* harmony export */ });\n/* harmony import */ var _Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_initializerDefineProperty_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../@babel/runtime/helpers/esm/initializerDefineProperty.js */ \"../../@babel/runtime/helpers/esm/initializerDefineProperty.js\");\n/* harmony import */ var _Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../@babel/runtime/helpers/esm/defineProperty.js */ \"../../@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_applyDecoratedDescriptor_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../@babel/runtime/helpers/esm/applyDecoratedDescriptor.js */ \"../../@babel/runtime/helpers/esm/applyDecoratedDescriptor.js\");\n/* harmony import */ var _Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_initializerWarningHelper_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../@babel/runtime/helpers/esm/initializerWarningHelper.js */ \"../../@babel/runtime/helpers/esm/initializerWarningHelper.js\");\n/* harmony import */ var _glimmer_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @glimmer/component */ \"../rewritten-packages/@glimmer/component.9a0d5824/node_modules/@glimmer/component/index.js\");\n/* harmony import */ var _ember_object__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ember/object */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fobject&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_object__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_ember_object__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _glimmer_tracking__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @glimmer/tracking */ \"../rewritten-packages/@glimmer/tracking.481d7669/node_modules/@glimmer/tracking/index.js\");\n/* harmony import */ var _ember_render_modifiers_modifiers_did_insert__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @ember/render-modifiers/modifiers/did-insert */ \"../rewritten-packages/@ember/render-modifiers.da4f7ec0/node_modules/@ember/render-modifiers/modifiers/did-insert.js\");\n/* harmony import */ var msw__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! msw */ \"../../msw/lib/index.js\");\n/* harmony import */ var msw__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(msw__WEBPACK_IMPORTED_MODULE_8__);\n\n\n\n\nvar _class, _descriptor, _descriptor2, _descriptor3;\n\n\n\n\n// import { worker } from \"handlers\"\n\nlet MockComponet = (_class = class MockComponet extends _glimmer_component__WEBPACK_IMPORTED_MODULE_4__[\"default\"] {\n  constructor(...args) {\n    super(...args);\n    (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_initializerDefineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"buttonState\", _descriptor, this);\n    (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_initializerDefineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"dogName\", _descriptor2, this);\n    (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_initializerDefineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"dogBreed\", _descriptor3, this);\n  }\n  changeButtonState(buttonState, event) {\n    //debugger\n    this.buttonState = buttonState;\n  }\n  async writeData(buttonState) {\n    if (this.buttonState === true) {\n      this.searchDog();\n    } else if (this.buttonState === false) {\n      this.dogName = \"Tobi\";\n      this.dogBreed = \"german\";\n    }\n  }\n  async searchDog() {\n    //parte del msw\n    const handlers = [msw__WEBPACK_IMPORTED_MODULE_8__.rest.get('/api/dogName', (req, res, ctx) => {\n      // debugger\n      return res(ctx.json({\n        name: 'Pipo',\n        breed: 'Boxer'\n      }));\n    })];\n    const worker = (0,msw__WEBPACK_IMPORTED_MODULE_8__.setupWorker)(...handlers);\n    await worker.start({\n      serviceWorker: {\n        url: './mockServiceWorker'\n      }\n    });\n    try {\n      const response = await fetch('api/dogName');\n      const data = await response.json();\n      this.dogName = data.name;\n      this.dogBreed = data.breed;\n    } catch (error) {\n      //si sale mal salta error\n      console.error('The image couldnt be found', error);\n    }\n  }\n}, (_descriptor = (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_applyDecoratedDescriptor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_class.prototype, \"buttonState\", [_glimmer_tracking__WEBPACK_IMPORTED_MODULE_6__.tracked], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return false;\n  }\n}), _descriptor2 = (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_applyDecoratedDescriptor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_class.prototype, \"dogName\", [_glimmer_tracking__WEBPACK_IMPORTED_MODULE_6__.tracked], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return \"\";\n  }\n}), _descriptor3 = (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_applyDecoratedDescriptor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_class.prototype, \"dogBreed\", [_glimmer_tracking__WEBPACK_IMPORTED_MODULE_6__.tracked], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return \"\";\n  }\n}), (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_applyDecoratedDescriptor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_class.prototype, \"changeButtonState\", [_ember_object__WEBPACK_IMPORTED_MODULE_5__.action], Object.getOwnPropertyDescriptor(_class.prototype, \"changeButtonState\"), _class.prototype), (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_applyDecoratedDescriptor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_class.prototype, \"writeData\", [_ember_object__WEBPACK_IMPORTED_MODULE_5__.action], Object.getOwnPropertyDescriptor(_class.prototype, \"writeData\"), _class.prototype), (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_applyDecoratedDescriptor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_class.prototype, \"searchDog\", [_ember_object__WEBPACK_IMPORTED_MODULE_5__.action], Object.getOwnPropertyDescriptor(_class.prototype, \"searchDog\"), _class.prototype)), _class);\n\n\n//# sourceURL=webpack://my-app/./components/endpoints/component.ts?");

/***/ }),

/***/ "./components/endpoints/handlers.ts":
/*!******************************************!*\
  !*** ./components/endpoints/handlers.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   worker: () => (/* binding */ worker)\n/* harmony export */ });\n/* harmony import */ var msw__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! msw */ \"../../msw/lib/index.js\");\n/* harmony import */ var msw__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(msw__WEBPACK_IMPORTED_MODULE_0__);\n\nconst handlers = [msw__WEBPACK_IMPORTED_MODULE_0__.rest.get('/dogName', (req, res, ctx) => {\n  debugger;\n  return res(ctx.json({\n    name: 'Pipo',\n    breed: 'Boxer'\n  }));\n})];\nconst worker = (0,msw__WEBPACK_IMPORTED_MODULE_0__.setupWorker)(handlers);\n\n//# sourceURL=webpack://my-app/./components/endpoints/handlers.ts?");

/***/ }),

/***/ "./components/endpoints/mockServiceWorker.js":
/*!***************************************************!*\
  !*** ./components/endpoints/mockServiceWorker.js ***!
  \***************************************************/
/***/ (() => {

eval("/* eslint-disable */\n/* tslint:disable */\n\n/**\n * Mock Service Worker (1.3.2).\n * @see https://github.com/mswjs/msw\n * - Please do NOT modify this file.\n * - Please do NOT serve this file on production.\n */\n\nconst INTEGRITY_CHECKSUM = '3d6b9f06410d179a7f7404d4bf4c3c70';\nconst activeClientIds = new Set();\nself.addEventListener('install', function () {\n  self.skipWaiting();\n});\nself.addEventListener('activate', function (event) {\n  event.waitUntil(self.clients.claim());\n});\nself.addEventListener('message', async function (event) {\n  const clientId = event.source.id;\n  if (!clientId || !self.clients) {\n    return;\n  }\n  const client = await self.clients.get(clientId);\n  if (!client) {\n    return;\n  }\n  const allClients = await self.clients.matchAll({\n    type: 'window'\n  });\n  switch (event.data) {\n    case 'KEEPALIVE_REQUEST':\n      {\n        sendToClient(client, {\n          type: 'KEEPALIVE_RESPONSE'\n        });\n        break;\n      }\n    case 'INTEGRITY_CHECK_REQUEST':\n      {\n        sendToClient(client, {\n          type: 'INTEGRITY_CHECK_RESPONSE',\n          payload: INTEGRITY_CHECKSUM\n        });\n        break;\n      }\n    case 'MOCK_ACTIVATE':\n      {\n        activeClientIds.add(clientId);\n        sendToClient(client, {\n          type: 'MOCKING_ENABLED',\n          payload: true\n        });\n        break;\n      }\n    case 'MOCK_DEACTIVATE':\n      {\n        activeClientIds.delete(clientId);\n        break;\n      }\n    case 'CLIENT_CLOSED':\n      {\n        activeClientIds.delete(clientId);\n        const remainingClients = allClients.filter(client => {\n          return client.id !== clientId;\n        });\n\n        // Unregister itself when there are no more clients\n        if (remainingClients.length === 0) {\n          self.registration.unregister();\n        }\n        break;\n      }\n  }\n});\nself.addEventListener('fetch', function (event) {\n  const {\n    request\n  } = event;\n  const accept = request.headers.get('accept') || '';\n\n  // Bypass server-sent events.\n  if (accept.includes('text/event-stream')) {\n    return;\n  }\n\n  // Bypass navigation requests.\n  if (request.mode === 'navigate') {\n    return;\n  }\n\n  // Opening the DevTools triggers the \"only-if-cached\" request\n  // that cannot be handled by the worker. Bypass such requests.\n  if (request.cache === 'only-if-cached' && request.mode !== 'same-origin') {\n    return;\n  }\n\n  // Bypass all requests when there are no active clients.\n  // Prevents the self-unregistered worked from handling requests\n  // after it's been deleted (still remains active until the next reload).\n  if (activeClientIds.size === 0) {\n    return;\n  }\n\n  // Generate unique request ID.\n  const requestId = Math.random().toString(16).slice(2);\n  event.respondWith(handleRequest(event, requestId).catch(error => {\n    if (error.name === 'NetworkError') {\n      console.warn('[MSW] Successfully emulated a network error for the \"%s %s\" request.', request.method, request.url);\n      return;\n    }\n\n    // At this point, any exception indicates an issue with the original request/response.\n    console.error(`\\\n[MSW] Caught an exception from the \"%s %s\" request (%s). This is probably not a problem with Mock Service Worker. There is likely an additional logging output above.`, request.method, request.url, `${error.name}: ${error.message}`);\n  }));\n});\nasync function handleRequest(event, requestId) {\n  const client = await resolveMainClient(event);\n  const response = await getResponse(event, client, requestId);\n\n  // Send back the response clone for the \"response:*\" life-cycle events.\n  // Ensure MSW is active and ready to handle the message, otherwise\n  // this message will pend indefinitely.\n  if (client && activeClientIds.has(client.id)) {\n    (async function () {\n      const clonedResponse = response.clone();\n      sendToClient(client, {\n        type: 'RESPONSE',\n        payload: {\n          requestId,\n          type: clonedResponse.type,\n          ok: clonedResponse.ok,\n          status: clonedResponse.status,\n          statusText: clonedResponse.statusText,\n          body: clonedResponse.body === null ? null : await clonedResponse.text(),\n          headers: Object.fromEntries(clonedResponse.headers.entries()),\n          redirected: clonedResponse.redirected\n        }\n      });\n    })();\n  }\n  return response;\n}\n\n// Resolve the main client for the given event.\n// Client that issues a request doesn't necessarily equal the client\n// that registered the worker. It's with the latter the worker should\n// communicate with during the response resolving phase.\nasync function resolveMainClient(event) {\n  const client = await self.clients.get(event.clientId);\n  if (client?.frameType === 'top-level') {\n    return client;\n  }\n  const allClients = await self.clients.matchAll({\n    type: 'window'\n  });\n  return allClients.filter(client => {\n    // Get only those clients that are currently visible.\n    return client.visibilityState === 'visible';\n  }).find(client => {\n    // Find the client ID that's recorded in the\n    // set of clients that have registered the worker.\n    return activeClientIds.has(client.id);\n  });\n}\nasync function getResponse(event, client, requestId) {\n  const {\n    request\n  } = event;\n  const clonedRequest = request.clone();\n  function passthrough() {\n    // Clone the request because it might've been already used\n    // (i.e. its body has been read and sent to the client).\n    const headers = Object.fromEntries(clonedRequest.headers.entries());\n\n    // Remove MSW-specific request headers so the bypassed requests\n    // comply with the server's CORS preflight check.\n    // Operate with the headers as an object because request \"Headers\"\n    // are immutable.\n    delete headers['x-msw-bypass'];\n    return fetch(clonedRequest, {\n      headers\n    });\n  }\n\n  // Bypass mocking when the client is not active.\n  if (!client) {\n    return passthrough();\n  }\n\n  // Bypass initial page load requests (i.e. static assets).\n  // The absence of the immediate/parent client in the map of the active clients\n  // means that MSW hasn't dispatched the \"MOCK_ACTIVATE\" event yet\n  // and is not ready to handle requests.\n  if (!activeClientIds.has(client.id)) {\n    return passthrough();\n  }\n\n  // Bypass requests with the explicit bypass header.\n  // Such requests can be issued by \"ctx.fetch()\".\n  if (request.headers.get('x-msw-bypass') === 'true') {\n    return passthrough();\n  }\n\n  // Notify the client that a request has been intercepted.\n  const clientMessage = await sendToClient(client, {\n    type: 'REQUEST',\n    payload: {\n      id: requestId,\n      url: request.url,\n      method: request.method,\n      headers: Object.fromEntries(request.headers.entries()),\n      cache: request.cache,\n      mode: request.mode,\n      credentials: request.credentials,\n      destination: request.destination,\n      integrity: request.integrity,\n      redirect: request.redirect,\n      referrer: request.referrer,\n      referrerPolicy: request.referrerPolicy,\n      body: await request.text(),\n      bodyUsed: request.bodyUsed,\n      keepalive: request.keepalive\n    }\n  });\n  switch (clientMessage.type) {\n    case 'MOCK_RESPONSE':\n      {\n        return respondWithMock(clientMessage.data);\n      }\n    case 'MOCK_NOT_FOUND':\n      {\n        return passthrough();\n      }\n    case 'NETWORK_ERROR':\n      {\n        const {\n          name,\n          message\n        } = clientMessage.data;\n        const networkError = new Error(message);\n        networkError.name = name;\n\n        // Rejecting a \"respondWith\" promise emulates a network error.\n        throw networkError;\n      }\n  }\n  return passthrough();\n}\nfunction sendToClient(client, message) {\n  return new Promise((resolve, reject) => {\n    const channel = new MessageChannel();\n    channel.port1.onmessage = event => {\n      if (event.data && event.data.error) {\n        return reject(event.data.error);\n      }\n      resolve(event.data);\n    };\n    client.postMessage(message, [channel.port2]);\n  });\n}\nfunction sleep(timeMs) {\n  return new Promise(resolve => {\n    setTimeout(resolve, timeMs);\n  });\n}\nasync function respondWithMock(response) {\n  await sleep(response.delay);\n  return new Response(response.body, response);\n}\n\n//# sourceURL=webpack://my-app/./components/endpoints/mockServiceWorker.js?");

/***/ }),

/***/ "./components/excercises/component.ts":
/*!********************************************!*\
  !*** ./components/excercises/component.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ExercisesComponent)\n/* harmony export */ });\n/* harmony import */ var _glimmer_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @glimmer/component */ \"../rewritten-packages/@glimmer/component.9a0d5824/node_modules/@glimmer/component/index.js\");\n\nclass ExercisesComponent extends _glimmer_component__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {}\n\n//# sourceURL=webpack://my-app/./components/excercises/component.ts?");

/***/ }),

/***/ "./components/magicform/component.ts":
/*!*******************************************!*\
  !*** ./components/magicform/component.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ MyFormComponet),\n/* harmony export */   modifier: () => (/* reexport safe */ _ember_render_modifiers_modifiers_did_insert__WEBPACK_IMPORTED_MODULE_7__.modifier)\n/* harmony export */ });\n/* harmony import */ var _Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_initializerDefineProperty_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../@babel/runtime/helpers/esm/initializerDefineProperty.js */ \"../../@babel/runtime/helpers/esm/initializerDefineProperty.js\");\n/* harmony import */ var _Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../@babel/runtime/helpers/esm/defineProperty.js */ \"../../@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_applyDecoratedDescriptor_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../@babel/runtime/helpers/esm/applyDecoratedDescriptor.js */ \"../../@babel/runtime/helpers/esm/applyDecoratedDescriptor.js\");\n/* harmony import */ var _Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_initializerWarningHelper_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../@babel/runtime/helpers/esm/initializerWarningHelper.js */ \"../../@babel/runtime/helpers/esm/initializerWarningHelper.js\");\n/* harmony import */ var _glimmer_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @glimmer/component */ \"../rewritten-packages/@glimmer/component.9a0d5824/node_modules/@glimmer/component/index.js\");\n/* harmony import */ var _ember_object__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ember/object */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fobject&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_object__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_ember_object__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _glimmer_tracking__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @glimmer/tracking */ \"../rewritten-packages/@glimmer/tracking.481d7669/node_modules/@glimmer/tracking/index.js\");\n/* harmony import */ var _ember_render_modifiers_modifiers_did_insert__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @ember/render-modifiers/modifiers/did-insert */ \"../rewritten-packages/@ember/render-modifiers.da4f7ec0/node_modules/@ember/render-modifiers/modifiers/did-insert.js\");\n\n\n\n\nvar _class, _descriptor, _descriptor2, _descriptor3, _descriptor4;\n\n\n\n\nvar Colors = /*#__PURE__*/function (Colors) {\n  Colors[\"BLUE\"] = \"blue\";\n  Colors[\"GREEN\"] = \"green\";\n  Colors[\"YELLOW\"] = \"yellow\";\n  return Colors;\n}(Colors || {});\nlet MyFormComponet = (_class = class MyFormComponet extends _glimmer_component__WEBPACK_IMPORTED_MODULE_4__[\"default\"] {\n  constructor(...args) {\n    super(...args);\n    (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_initializerDefineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"email\", _descriptor, this);\n    (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_initializerDefineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"color\", _descriptor2, this);\n    (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_initializerDefineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"magicState\", _descriptor3, this);\n    (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_initializerDefineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"text\", _descriptor4, this);\n  }\n  get disableSubmit() {\n    // Los dos campos tienen que estar completos sino no envio el formulario\n    return !this.email.length || !this.color.length;\n  }\n  async onSubmit(event) {\n    event.preventDefault();\n    this.magicState = \"enviado\";\n  }\n  async writeData(magicState) {\n    //debugger\n    if (this.magicState === 'enviado') {\n      this.text = this.email.concat(this.color);\n    } else {\n      this.text = 'If you dont submit anything you cant see anything';\n    }\n  }\n}, (_descriptor = (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_applyDecoratedDescriptor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_class.prototype, \"email\", [_glimmer_tracking__WEBPACK_IMPORTED_MODULE_6__.tracked], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return '';\n  }\n}), _descriptor2 = (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_applyDecoratedDescriptor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_class.prototype, \"color\", [_glimmer_tracking__WEBPACK_IMPORTED_MODULE_6__.tracked], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return '';\n  }\n}), _descriptor3 = (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_applyDecoratedDescriptor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_class.prototype, \"magicState\", [_glimmer_tracking__WEBPACK_IMPORTED_MODULE_6__.tracked], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return '';\n  }\n}), _descriptor4 = (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_applyDecoratedDescriptor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_class.prototype, \"text\", [_glimmer_tracking__WEBPACK_IMPORTED_MODULE_6__.tracked], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return '';\n  }\n}), (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_applyDecoratedDescriptor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_class.prototype, \"onSubmit\", [_ember_object__WEBPACK_IMPORTED_MODULE_5__.action], Object.getOwnPropertyDescriptor(_class.prototype, \"onSubmit\"), _class.prototype), (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_applyDecoratedDescriptor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_class.prototype, \"writeData\", [_ember_object__WEBPACK_IMPORTED_MODULE_5__.action], Object.getOwnPropertyDescriptor(_class.prototype, \"writeData\"), _class.prototype)), _class);\n\n\n//# sourceURL=webpack://my-app/./components/magicform/component.ts?");

/***/ }),

/***/ "./components/rental/detailed/component.ts":
/*!*************************************************!*\
  !*** ./components/rental/detailed/component.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ DetailedComponent)\n/* harmony export */ });\n/* harmony import */ var _Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_initializerDefineProperty_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../@babel/runtime/helpers/esm/initializerDefineProperty.js */ \"../../@babel/runtime/helpers/esm/initializerDefineProperty.js\");\n/* harmony import */ var _Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../@babel/runtime/helpers/esm/defineProperty.js */ \"../../@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_applyDecoratedDescriptor_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../@babel/runtime/helpers/esm/applyDecoratedDescriptor.js */ \"../../@babel/runtime/helpers/esm/applyDecoratedDescriptor.js\");\n/* harmony import */ var _Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_initializerWarningHelper_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../@babel/runtime/helpers/esm/initializerWarningHelper.js */ \"../../@babel/runtime/helpers/esm/initializerWarningHelper.js\");\n/* harmony import */ var _glimmer_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @glimmer/component */ \"../rewritten-packages/@glimmer/component.9a0d5824/node_modules/@glimmer/component/index.js\");\n/* harmony import */ var _glimmer_tracking__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @glimmer/tracking */ \"../rewritten-packages/@glimmer/tracking.481d7669/node_modules/@glimmer/tracking/index.js\");\n/* harmony import */ var _ember_object__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ember/object */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fobject&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_object__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_ember_object__WEBPACK_IMPORTED_MODULE_6__);\n\n\n\n\nvar _class, _descriptor, _descriptor2;\n\n\n\nlet DetailedComponent = (_class = class DetailedComponent extends _glimmer_component__WEBPACK_IMPORTED_MODULE_4__[\"default\"] {\n  constructor(...args) {\n    super(...args);\n    (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_initializerDefineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"query\", _descriptor, this);\n    (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_initializerDefineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"isSmall\", _descriptor2, this);\n  }\n  toggleImage() {\n    this.isSmall = !this.isSmall;\n  }\n}, (_descriptor = (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_applyDecoratedDescriptor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_class.prototype, \"query\", [_glimmer_tracking__WEBPACK_IMPORTED_MODULE_5__.tracked], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return '';\n  }\n}), _descriptor2 = (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_applyDecoratedDescriptor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_class.prototype, \"isSmall\", [_glimmer_tracking__WEBPACK_IMPORTED_MODULE_5__.tracked], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return true;\n  }\n}), (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_applyDecoratedDescriptor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_class.prototype, \"toggleImage\", [_ember_object__WEBPACK_IMPORTED_MODULE_6__.action], Object.getOwnPropertyDescriptor(_class.prototype, \"toggleImage\"), _class.prototype)), _class);\n\n\n//# sourceURL=webpack://my-app/./components/rental/detailed/component.ts?");

/***/ }),

/***/ "./components/rental/images/detailed/component.ts":
/*!********************************************************!*\
  !*** ./components/rental/images/detailed/component.ts ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ DetailedComponent)\n/* harmony export */ });\n/* harmony import */ var _Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_applyDecoratedDescriptor_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../@babel/runtime/helpers/esm/applyDecoratedDescriptor.js */ \"../../@babel/runtime/helpers/esm/applyDecoratedDescriptor.js\");\n/* harmony import */ var _glimmer_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @glimmer/component */ \"../rewritten-packages/@glimmer/component.9a0d5824/node_modules/@glimmer/component/index.js\");\n/* harmony import */ var _ember_object__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ember/object */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fobject&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_object__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_ember_object__WEBPACK_IMPORTED_MODULE_2__);\n\nvar _class;\n\n//EXPORTANDO DECORDAORES\n\n\n//interface RentalImageComponentArgs {\n//toggleImage:(a:string ,b:number) => void;\n//variable: string;\n//toggleImage: () => void\n//}\nlet DetailedComponent = (_class = class DetailedComponent extends _glimmer_component__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n  toggleSize() {\n    this.args.toggleImage();\n  }\n}, ((0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_applyDecoratedDescriptor_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_class.prototype, \"toggleSize\", [_ember_object__WEBPACK_IMPORTED_MODULE_2__.action], Object.getOwnPropertyDescriptor(_class.prototype, \"toggleSize\"), _class.prototype)), _class);\n\n\n//# sourceURL=webpack://my-app/./components/rental/images/detailed/component.ts?");

/***/ }),

/***/ "./components/rental/images/index/component.ts":
/*!*****************************************************!*\
  !*** ./components/rental/images/index/component.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ IndexComponent)\n/* harmony export */ });\n/* harmony import */ var _Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_applyDecoratedDescriptor_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../@babel/runtime/helpers/esm/applyDecoratedDescriptor.js */ \"../../@babel/runtime/helpers/esm/applyDecoratedDescriptor.js\");\n/* harmony import */ var _glimmer_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @glimmer/component */ \"../rewritten-packages/@glimmer/component.9a0d5824/node_modules/@glimmer/component/index.js\");\n/* harmony import */ var _ember_object__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ember/object */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fobject&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_object__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_ember_object__WEBPACK_IMPORTED_MODULE_2__);\n\nvar _class;\n\n//EXPORTANDO DECORDAORES\n\nlet IndexComponent = (_class = class IndexComponent extends _glimmer_component__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n  toggleSize() {\n    this.args.toggleImage();\n  }\n}, ((0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_applyDecoratedDescriptor_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_class.prototype, \"toggleSize\", [_ember_object__WEBPACK_IMPORTED_MODULE_2__.action], Object.getOwnPropertyDescriptor(_class.prototype, \"toggleSize\"), _class.prototype)), _class);\n\n\n//# sourceURL=webpack://my-app/./components/rental/images/index/component.ts?");

/***/ }),

/***/ "./components/rental/index/component.ts":
/*!**********************************************!*\
  !*** ./components/rental/index/component.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ IndexComponent)\n/* harmony export */ });\n/* harmony import */ var _Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_initializerDefineProperty_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../@babel/runtime/helpers/esm/initializerDefineProperty.js */ \"../../@babel/runtime/helpers/esm/initializerDefineProperty.js\");\n/* harmony import */ var _Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../@babel/runtime/helpers/esm/defineProperty.js */ \"../../@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_applyDecoratedDescriptor_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../@babel/runtime/helpers/esm/applyDecoratedDescriptor.js */ \"../../@babel/runtime/helpers/esm/applyDecoratedDescriptor.js\");\n/* harmony import */ var _Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_initializerWarningHelper_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../@babel/runtime/helpers/esm/initializerWarningHelper.js */ \"../../@babel/runtime/helpers/esm/initializerWarningHelper.js\");\n/* harmony import */ var _glimmer_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @glimmer/component */ \"../rewritten-packages/@glimmer/component.9a0d5824/node_modules/@glimmer/component/index.js\");\n/* harmony import */ var _glimmer_tracking__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @glimmer/tracking */ \"../rewritten-packages/@glimmer/tracking.481d7669/node_modules/@glimmer/tracking/index.js\");\n/* harmony import */ var _ember_object__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ember/object */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fobject&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_object__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_ember_object__WEBPACK_IMPORTED_MODULE_6__);\n\n\n\n\nvar _class, _descriptor, _descriptor2;\n\n\n\nlet IndexComponent = (_class = class IndexComponent extends _glimmer_component__WEBPACK_IMPORTED_MODULE_4__[\"default\"] {\n  constructor(...args) {\n    super(...args);\n    (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_initializerDefineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"query\", _descriptor, this);\n    (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_initializerDefineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"isSmall\", _descriptor2, this);\n  }\n  toggleImage() {\n    this.isSmall = !this.isSmall;\n  }\n}, (_descriptor = (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_applyDecoratedDescriptor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_class.prototype, \"query\", [_glimmer_tracking__WEBPACK_IMPORTED_MODULE_5__.tracked], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return '';\n  }\n}), _descriptor2 = (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_applyDecoratedDescriptor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_class.prototype, \"isSmall\", [_glimmer_tracking__WEBPACK_IMPORTED_MODULE_5__.tracked], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return true;\n  }\n}), (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_applyDecoratedDescriptor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_class.prototype, \"toggleImage\", [_ember_object__WEBPACK_IMPORTED_MODULE_6__.action], Object.getOwnPropertyDescriptor(_class.prototype, \"toggleImage\"), _class.prototype)), _class);\n\n\n//# sourceURL=webpack://my-app/./components/rental/index/component.ts?");

/***/ }),

/***/ "./components/search/filter/component.ts":
/*!***********************************************!*\
  !*** ./components/search/filter/component.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ FilterComponent)\n/* harmony export */ });\n/* harmony import */ var _glimmer_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @glimmer/component */ \"../rewritten-packages/@glimmer/component.9a0d5824/node_modules/@glimmer/component/index.js\");\n\nclass FilterComponent extends _glimmer_component__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  get results() {\n    let {\n      query\n    } = this.args;\n    let rentals = this.args.rentals;\n    if (query) {\n      rentals = rentals.filter(rental => rental.title.toLowerCase().includes(query.toLowerCase()));\n    }\n    return rentals;\n  }\n}\n\n//# sourceURL=webpack://my-app/./components/search/filter/component.ts?");

/***/ }),

/***/ "./components/search/searcher/component.ts":
/*!*************************************************!*\
  !*** ./components/search/searcher/component.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ SearcherComponent)\n/* harmony export */ });\n/* harmony import */ var _Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_initializerDefineProperty_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../@babel/runtime/helpers/esm/initializerDefineProperty.js */ \"../../@babel/runtime/helpers/esm/initializerDefineProperty.js\");\n/* harmony import */ var _Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../@babel/runtime/helpers/esm/defineProperty.js */ \"../../@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_applyDecoratedDescriptor_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../@babel/runtime/helpers/esm/applyDecoratedDescriptor.js */ \"../../@babel/runtime/helpers/esm/applyDecoratedDescriptor.js\");\n/* harmony import */ var _Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_initializerWarningHelper_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../@babel/runtime/helpers/esm/initializerWarningHelper.js */ \"../../@babel/runtime/helpers/esm/initializerWarningHelper.js\");\n/* harmony import */ var _glimmer_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @glimmer/component */ \"../rewritten-packages/@glimmer/component.9a0d5824/node_modules/@glimmer/component/index.js\");\n/* harmony import */ var _glimmer_tracking__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @glimmer/tracking */ \"../rewritten-packages/@glimmer/tracking.481d7669/node_modules/@glimmer/tracking/index.js\");\n\n\n\n\nvar _class, _descriptor;\n\n\nlet SearcherComponent = (_class = class SearcherComponent extends _glimmer_component__WEBPACK_IMPORTED_MODULE_4__[\"default\"] {\n  constructor(...args) {\n    super(...args);\n    (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_initializerDefineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"query\", _descriptor, this);\n  }\n}, (_descriptor = (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_applyDecoratedDescriptor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_class.prototype, \"query\", [_glimmer_tracking__WEBPACK_IMPORTED_MODULE_5__.tracked], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return '';\n  }\n})), _class);\n\n\n//# sourceURL=webpack://my-app/./components/search/searcher/component.ts?");

/***/ }),

/***/ "./config/environment.js":
/*!*******************************!*\
  !*** ./config/environment.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((function () {\n  var prefix = 'my-app';\n  try {\n    var metaName = prefix + '/config/environment';\n    var rawConfig = document.querySelector('meta[name=\"' + metaName + '\"]').getAttribute('content');\n    var config = JSON.parse(decodeURIComponent(rawConfig));\n    var exports = {\n      'default': config\n    };\n    Object.defineProperty(exports, '__esModule', {\n      value: true\n    });\n    return exports;\n  } catch (err) {\n    throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n  }\n})().default);\n\n//# sourceURL=webpack://my-app/./config/environment.js?");

/***/ }),

/***/ "./models/rental.ts":
/*!**************************!*\
  !*** ./models/rental.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ RentalModel)\n/* harmony export */ });\n/* harmony import */ var _Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_initializerDefineProperty_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../@babel/runtime/helpers/esm/initializerDefineProperty.js */ \"../../@babel/runtime/helpers/esm/initializerDefineProperty.js\");\n/* harmony import */ var _Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../@babel/runtime/helpers/esm/defineProperty.js */ \"../../@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_applyDecoratedDescriptor_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../@babel/runtime/helpers/esm/applyDecoratedDescriptor.js */ \"../../@babel/runtime/helpers/esm/applyDecoratedDescriptor.js\");\n/* harmony import */ var _Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_initializerWarningHelper_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../@babel/runtime/helpers/esm/initializerWarningHelper.js */ \"../../@babel/runtime/helpers/esm/initializerWarningHelper.js\");\n/* harmony import */ var _ember_data_model__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ember-data/model */ \"../rewritten-packages/@ember-data/model.9cfa41c3/node_modules/@ember-data/model/index.js\");\n\n\n\n\nvar _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8;\n\nconst COMMUNITY_CATEGORIES = ['Condo', 'Townhouse', 'Apartment'];\nlet RentalModel = (_class = class RentalModel extends _ember_data_model__WEBPACK_IMPORTED_MODULE_4__[\"default\"] {\n  constructor(...args) {\n    super(...args);\n    (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_initializerDefineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"title\", _descriptor, this);\n    (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_initializerDefineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"owner\", _descriptor2, this);\n    (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_initializerDefineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"city\", _descriptor3, this);\n    (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_initializerDefineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"location\", _descriptor4, this);\n    (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_initializerDefineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"category\", _descriptor5, this);\n    (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_initializerDefineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"image\", _descriptor6, this);\n    (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_initializerDefineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"bedrooms\", _descriptor7, this);\n    (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_initializerDefineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"description\", _descriptor8, this);\n  }\n  get type() {\n    if (COMMUNITY_CATEGORIES.includes(this.category)) {\n      return 'Community';\n    } else {\n      return 'Standalone';\n    }\n  }\n}, (_descriptor = (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_applyDecoratedDescriptor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_class.prototype, \"title\", [_ember_data_model__WEBPACK_IMPORTED_MODULE_4__.attr], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor2 = (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_applyDecoratedDescriptor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_class.prototype, \"owner\", [_ember_data_model__WEBPACK_IMPORTED_MODULE_4__.attr], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor3 = (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_applyDecoratedDescriptor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_class.prototype, \"city\", [_ember_data_model__WEBPACK_IMPORTED_MODULE_4__.attr], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor4 = (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_applyDecoratedDescriptor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_class.prototype, \"location\", [_ember_data_model__WEBPACK_IMPORTED_MODULE_4__.attr], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor5 = (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_applyDecoratedDescriptor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_class.prototype, \"category\", [_ember_data_model__WEBPACK_IMPORTED_MODULE_4__.attr], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor6 = (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_applyDecoratedDescriptor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_class.prototype, \"image\", [_ember_data_model__WEBPACK_IMPORTED_MODULE_4__.attr], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor7 = (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_applyDecoratedDescriptor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_class.prototype, \"bedrooms\", [_ember_data_model__WEBPACK_IMPORTED_MODULE_4__.attr], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor8 = (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_applyDecoratedDescriptor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_class.prototype, \"description\", [_ember_data_model__WEBPACK_IMPORTED_MODULE_4__.attr], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class);\n\n\n//# sourceURL=webpack://my-app/./models/rental.ts?");

/***/ }),

/***/ "./router.ts":
/*!*******************!*\
  !*** ./router.ts ***!
  \*******************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Router)\n/* harmony export */ });\n/* harmony import */ var _Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../@babel/runtime/helpers/esm/defineProperty.js */ \"../../@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _ember_routing_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember/routing/router */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Frouting%2Frouter&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_routing_router__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_ember_routing_router__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var my_app_config_environment__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! my-app/config/environment */ \"./config/environment.js\");\n\n\n\nclass Router extends (_ember_routing_router__WEBPACK_IMPORTED_MODULE_1___default()) {\n  constructor(...args) {\n    super(...args);\n    (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"location\", my_app_config_environment__WEBPACK_IMPORTED_MODULE_2__[\"default\"].locationType);\n    (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"rootURL\", my_app_config_environment__WEBPACK_IMPORTED_MODULE_2__[\"default\"].rootURL);\n  }\n}\nRouter.map(function () {\n  this.route('about');\n  this.route('contact', {\n    path: '/getting-in-touch'\n  });\n  this.route('rental', {\n    path: '/rentals/:rental_id'\n  }); //para acceder a cada uno en particular(rental id para poder acceder a cada uno)\n  this.route('dog');\n  this.route('exercises');\n  this.route('magicform');\n  this.route('mock');\n});\n\n//# sourceURL=webpack://my-app/./router.ts?");

/***/ }),

/***/ "./routes/index.ts":
/*!*************************!*\
  !*** ./routes/index.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ IndexRoute)\n/* harmony export */ });\n/* harmony import */ var _Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_initializerDefineProperty_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../@babel/runtime/helpers/esm/initializerDefineProperty.js */ \"../../@babel/runtime/helpers/esm/initializerDefineProperty.js\");\n/* harmony import */ var _Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../@babel/runtime/helpers/esm/defineProperty.js */ \"../../@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_applyDecoratedDescriptor_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../@babel/runtime/helpers/esm/applyDecoratedDescriptor.js */ \"../../@babel/runtime/helpers/esm/applyDecoratedDescriptor.js\");\n/* harmony import */ var _Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_initializerWarningHelper_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../@babel/runtime/helpers/esm/initializerWarningHelper.js */ \"../../@babel/runtime/helpers/esm/initializerWarningHelper.js\");\n/* harmony import */ var _ember_routing_route__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ember/routing/route */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Frouting%2Froute&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_routing_route__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_ember_routing_route__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _ember_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ember/service */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fservice&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_service__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_ember_service__WEBPACK_IMPORTED_MODULE_5__);\n\n\n\n\nvar _class, _descriptor;\n\n\nlet IndexRoute = (_class = class IndexRoute extends (_ember_routing_route__WEBPACK_IMPORTED_MODULE_4___default()) {\n  constructor(...args) {\n    super(...args);\n    (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_initializerDefineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"store\", _descriptor, this);\n  }\n  async model() {\n    return this.store.findAll('rental');\n  }\n}, (_descriptor = (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_applyDecoratedDescriptor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_class.prototype, \"store\", [_ember_service__WEBPACK_IMPORTED_MODULE_5__.inject], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class);\n\n\n//# sourceURL=webpack://my-app/./routes/index.ts?");

/***/ }),

/***/ "./routes/rental.ts":
/*!**************************!*\
  !*** ./routes/rental.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ RentalRoute)\n/* harmony export */ });\n/* harmony import */ var _Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_initializerDefineProperty_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../@babel/runtime/helpers/esm/initializerDefineProperty.js */ \"../../@babel/runtime/helpers/esm/initializerDefineProperty.js\");\n/* harmony import */ var _Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../@babel/runtime/helpers/esm/defineProperty.js */ \"../../@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_applyDecoratedDescriptor_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../@babel/runtime/helpers/esm/applyDecoratedDescriptor.js */ \"../../@babel/runtime/helpers/esm/applyDecoratedDescriptor.js\");\n/* harmony import */ var _Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_initializerWarningHelper_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../@babel/runtime/helpers/esm/initializerWarningHelper.js */ \"../../@babel/runtime/helpers/esm/initializerWarningHelper.js\");\n/* harmony import */ var _ember_routing_route__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ember/routing/route */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Frouting%2Froute&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_routing_route__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_ember_routing_route__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _ember_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ember/service */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fservice&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_service__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_ember_service__WEBPACK_IMPORTED_MODULE_5__);\n\n\n\n\nvar _class, _descriptor;\n\n\nlet RentalRoute = (_class = class RentalRoute extends (_ember_routing_route__WEBPACK_IMPORTED_MODULE_4___default()) {\n  constructor(...args) {\n    super(...args);\n    (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_initializerDefineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"store\", _descriptor, this);\n  }\n  async model(params) {\n    return this.store.findRecord('rental', params.rental_id);\n  }\n}, (_descriptor = (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_applyDecoratedDescriptor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_class.prototype, \"store\", [_ember_service__WEBPACK_IMPORTED_MODULE_5__.inject], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class);\n\n\n//# sourceURL=webpack://my-app/./routes/rental.ts?");

/***/ }),

/***/ "./serializers/application.js":
/*!************************************!*\
  !*** ./serializers/application.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ApplicationSerializer)\n/* harmony export */ });\n/* harmony import */ var _ember_data_serializer_json_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember-data/serializer/json-api */ \"../rewritten-packages/@ember-data/serializer.677d83bc/node_modules/@ember-data/serializer/json-api.js\");\n\nclass ApplicationSerializer extends _ember_data_serializer_json_api__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {}\n\n//# sourceURL=webpack://my-app/./serializers/application.js?");

/***/ }),

/***/ "../rewritten-packages/@ember-data/adapter.85bda234/node_modules/@ember-data/adapter/-private.js":
/*!*******************************************************************************************************!*\
  !*** ../rewritten-packages/@ember-data/adapter.85bda234/node_modules/@ember-data/adapter/-private.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BuildURLMixin: () => (/* reexport safe */ _build_url_mixin_AgfAmsW___WEBPACK_IMPORTED_MODULE_1__.B),\n/* harmony export */   determineBodyPromise: () => (/* reexport safe */ _serialize_into_hash_2lQbHRKN__WEBPACK_IMPORTED_MODULE_0__.d),\n/* harmony export */   fetch: () => (/* reexport safe */ _serialize_into_hash_2lQbHRKN__WEBPACK_IMPORTED_MODULE_0__.g),\n/* harmony export */   parseResponseHeaders: () => (/* reexport safe */ _serialize_into_hash_2lQbHRKN__WEBPACK_IMPORTED_MODULE_0__.p),\n/* harmony export */   serializeIntoHash: () => (/* reexport safe */ _serialize_into_hash_2lQbHRKN__WEBPACK_IMPORTED_MODULE_0__.b),\n/* harmony export */   serializeQueryParams: () => (/* reexport safe */ _serialize_into_hash_2lQbHRKN__WEBPACK_IMPORTED_MODULE_0__.s),\n/* harmony export */   setupFastboot: () => (/* reexport safe */ _serialize_into_hash_2lQbHRKN__WEBPACK_IMPORTED_MODULE_0__.a)\n/* harmony export */ });\n/* harmony import */ var _serialize_into_hash_2lQbHRKN__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./serialize-into-hash-2lQbHRKN */ \"../rewritten-packages/@ember-data/adapter.85bda234/node_modules/@ember-data/adapter/serialize-into-hash-2lQbHRKN.js\");\n/* harmony import */ var _build_url_mixin_AgfAmsW___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./build-url-mixin-AgfAmsW- */ \"../rewritten-packages/@ember-data/adapter.85bda234/node_modules/@ember-data/adapter/build-url-mixin-AgfAmsW-.js\");\n\n\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@ember-data/adapter.85bda234/node_modules/@ember-data/adapter/-private.js?");

/***/ }),

/***/ "../rewritten-packages/@ember-data/adapter.85bda234/node_modules/@ember-data/adapter/build-url-mixin-AgfAmsW-.js":
/*!***********************************************************************************************************************!*\
  !*** ../rewritten-packages/@ember-data/adapter.85bda234/node_modules/@ember-data/adapter/build-url-mixin-AgfAmsW-.js ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   B: () => (/* binding */ BuildURLMixin)\n/* harmony export */ });\n/* harmony import */ var _ember_object_mixin__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/object/mixin */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fobject%2Fmixin&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_object_mixin__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_object_mixin__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _ember_string__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember/string */ \"../rewritten-packages/@ember/string.5601e258/node_modules/@ember/string/index.js\");\n/* harmony import */ var ember_inflector__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ember-inflector */ \"../rewritten-packages/ember-inflector.73f9432a/node_modules/ember-inflector/index.js\");\n\n\n\n\n/**\n  @module @ember-data/adapter\n*/\n\n/*\n The structure of this file is such because typing Mixins is hard. Here we've structured it in\n such a way as to maximize the type information that a consumer can utilize. There are simpler\n ways to type a mixin but we would not be able to provide the nice overload signature for buildURL\n*/\n// the interface must fully declare the function signatures that the individual functions\n// will also declare. If instead we try to keep them in sync by doing something like\n// `interface BuildURLMixin { buildURL: typeof buildURL }`\n// then an extending class overwriting one of the methods will break because typescript\n// thinks it is a switch from an instance prop (that is a method) to an instance method.\n\n// prevents the final constructed object from needing to add\n// host and namespace which are provided by the final consuming\n// class to the prototype which can result in overwrite errors\n\n/**\n  ## Using BuildURLMixin\n\n  To use URL building, include the mixin when extending an adapter, and call `buildURL` where needed.\n  The default behaviour is designed for RESTAdapter.\n\n  ### Example\n\n  ```javascript\n  import Adapter, { BuildURLMixin } from '@ember-data/adapter';\n\n  export default class ApplicationAdapter extends Adapter.extend(BuildURLMixin) {\n    findRecord(store, type, id, snapshot) {\n      var url = this.buildURL(type.modelName, id, snapshot, 'findRecord');\n      return this.ajax(url, 'GET');\n    }\n  }\n  ```\n\n  ### Attributes\n\n  The `host` and `namespace` attributes will be used if defined, and are optional.\n\n  @class BuildURLMixin\n  @public\n*/\n/**\n    Builds a URL for a given type and optional ID.\n\n    By default, it pluralizes the type's name (for example, 'post'\n    becomes 'posts' and 'person' becomes 'people'). To override the\n    pluralization see [pathForType](./pathForType?anchor=pathForType).\n\n    If an ID is specified, it adds the ID to the path generated\n    for the type, separated by a `/`.\n\n    When called by `RESTAdapter.findMany()` the `id` and `snapshot` parameters\n    will be arrays of ids and snapshots.\n\n    @method buildURL\n    @public\n    @param {String} modelName\n    @param {(String|Array|Object)} id single id or array of ids or query\n    @param {(Snapshot|SnapshotRecordArray)} snapshot single snapshot or array of snapshots\n    @param {String} requestType\n    @param {Object} query object of query parameters to send for query requests.\n    @return {String} url\n  */\n\nfunction buildURL(modelName, id, snapshot, requestType, query) {\n  /*\n      Switch statements in typescript don't currently narrow even when the function is implemented\n      with overloads.\n       We still extract this to stand alone so that we can provide nice overloads for calling signatures,\n      but we will still require all of this casting (or a ridiculous number of assertsthat narrow it down\n      for us).\n  */\n  switch (requestType) {\n    case 'findRecord':\n      return this.urlForFindRecord(id, modelName, snapshot);\n    case 'findAll':\n      return this.urlForFindAll(modelName, snapshot);\n    case 'query':\n      return this.urlForQuery(query || {}, modelName);\n    case 'queryRecord':\n      return this.urlForQueryRecord(query || {}, modelName);\n    case 'findMany':\n      return this.urlForFindMany(id, modelName, snapshot);\n    case 'findHasMany':\n      return this.urlForFindHasMany(id, modelName, snapshot);\n    case 'findBelongsTo':\n      return this.urlForFindBelongsTo(id, modelName, snapshot);\n    case 'createRecord':\n      return this.urlForCreateRecord(modelName, snapshot);\n    case 'updateRecord':\n      return this.urlForUpdateRecord(id, modelName, snapshot);\n    case 'deleteRecord':\n      return this.urlForDeleteRecord(id, modelName, snapshot);\n    default:\n      // this is the 'never' case but someone may call `buildURL` manually so\n      // we try to do something for them.\n      return this._buildURL(modelName, id);\n  }\n}\n\n/**\n    @method _buildURL\n    @private\n    @param {String} modelName\n    @param {String} id\n    @return {String} url\n  */\nfunction _buildURL(modelName, id) {\n  let path;\n  const url = [];\n  const {\n    host\n  } = this;\n  const prefix = this.urlPrefix();\n  if (modelName) {\n    path = this.pathForType(modelName);\n    if (path) {\n      url.push(path);\n    }\n  }\n  if (id) {\n    url.push(encodeURIComponent(id));\n  }\n  if (prefix) {\n    url.unshift(prefix);\n  }\n  let urlString = url.join('/');\n  if (!host && urlString && urlString.charAt(0) !== '/') {\n    urlString = '/' + urlString;\n  }\n  return urlString;\n}\n\n/**\n   Builds a URL for a `store.findRecord(type, id)` call.\n\n   Example:\n\n   ```app/adapters/user.js\n   import JSONAPIAdapter from '@ember-data/adapter/json-api';\n\n   export default class ApplicationAdapter extends JSONAPIAdapter {\n     urlForFindRecord(id, modelName, snapshot) {\n       let baseUrl = this.buildURL(modelName, id, snapshot);\n       return `${baseUrl}/users/${snapshot.adapterOptions.user_id}/playlists/${id}`;\n     }\n   }\n   ```\n\n   @method urlForFindRecord\n   @public\n   @param {String} id\n   @param {String} modelName\n   @param {Snapshot} snapshot\n   @return {String} url\n\n   */\nfunction urlForFindRecord(id, modelName, snapshot) {\n  return this._buildURL(modelName, id);\n}\n\n/**\n   Builds a URL for a `store.findAll(type)` call.\n\n   Example:\n\n   ```app/adapters/comment.js\n   import JSONAPIAdapter from '@ember-data/adapter/json-api';\n\n   export default class ApplicationAdapter extends JSONAPIAdapter {\n     urlForFindAll(modelName, snapshot) {\n       let baseUrl = this.buildURL(modelName);\n       return `${baseUrl}/data/comments.json`;\n     }\n   }\n   ```\n\n   @method urlForFindAll\n    @public\n   @param {String} modelName\n   @param {SnapshotRecordArray} snapshot\n   @return {String} url\n   */\nfunction urlForFindAll(modelName, snapshots) {\n  return this._buildURL(modelName);\n}\n\n/**\n   Builds a URL for a `store.query(type, query)` call.\n\n   Example:\n\n   ```app/adapters/application.js\n   import RESTAdapter from '@ember-data/adapter/rest';\n\n   export default class ApplicationAdapter extends RESTAdapter {\n     host = 'https://api.github.com';\n     urlForQuery (query, modelName) {\n       switch(modelName) {\n         case 'repo':\n           return `https://api.github.com/orgs/${query.orgId}/repos`;\n         default:\n           return super.urlForQuery(...arguments);\n       }\n     }\n   }\n   ```\n\n   @method urlForQuery\n    @public\n   @param {Object} query\n   @param {String} modelName\n   @return {String} url\n   */\nfunction urlForQuery(query, modelName) {\n  return this._buildURL(modelName);\n}\n\n/**\n   Builds a URL for a `store.queryRecord(type, query)` call.\n\n   Example:\n\n   ```app/adapters/application.js\n   import RESTAdapter from '@ember-data/adapter/rest';\n\n   export default class ApplicationAdapter extends RESTAdapter {\n     urlForQueryRecord({ slug }, modelName) {\n       let baseUrl = this.buildURL();\n       return `${baseUrl}/${encodeURIComponent(slug)}`;\n     }\n   }\n   ```\n\n   @method urlForQueryRecord\n    @public\n   @param {Object} query\n   @param {String} modelName\n   @return {String} url\n   */\nfunction urlForQueryRecord(query, modelName) {\n  return this._buildURL(modelName);\n}\n\n/**\n   Builds a URL for coalescing multiple `store.findRecord(type, id)`\n   records into 1 request when the adapter's `coalesceFindRequests`\n   property is `true`.\n\n   Example:\n\n   ```app/adapters/application.js\n   import RESTAdapter from '@ember-data/adapter/rest';\n\n   export default class ApplicationAdapter extends RESTAdapter {\n     urlForFindMany(ids, modelName) {\n       let baseUrl = this.buildURL();\n       return `${baseUrl}/coalesce`;\n     }\n   }\n   ```\n\n   @method urlForFindMany\n    @public\n   @param {Array} ids\n   @param {String} modelName\n   @param {Array} snapshots\n   @return {String} url\n   */\nfunction urlForFindMany(ids, modelName, snapshots) {\n  return this._buildURL(modelName);\n}\n\n/**\n   Builds a URL for fetching an async `hasMany` relationship when a URL\n   is not provided by the server.\n\n   Example:\n\n   ```app/adapters/application.js\n   import JSONAPIAdapter from '@ember-data/adapter/json-api';\n\n   export default class ApplicationAdapter extends JSONAPIAdapter {\n     urlForFindHasMany(id, modelName, snapshot) {\n       let baseUrl = this.buildURL(modelName, id);\n       return `${baseUrl}/relationships`;\n     }\n   }\n   ```\n\n   @method urlForFindHasMany\n    @public\n   @param {String} id\n   @param {String} modelName\n   @param {Snapshot} snapshot\n   @return {String} url\n   */\nfunction urlForFindHasMany(id, modelName, snapshot) {\n  return this._buildURL(modelName, id);\n}\n\n/**\n   Builds a URL for fetching an async `belongsTo` relationship when a url\n   is not provided by the server.\n\n   Example:\n\n   ```app/adapters/application.js\n   import JSONAPIAdapter from '@ember-data/adapter/json-api';\n\n   export default class ApplicationAdapter extends JSONAPIAdapter {\n     urlForFindBelongsTo(id, modelName, snapshot) {\n       let baseUrl = this.buildURL(modelName, id);\n       return `${baseUrl}/relationships`;\n     }\n   }\n   ```\n\n   @method urlForFindBelongsTo\n    @public\n   @param {String} id\n   @param {String} modelName\n   @param {Snapshot} snapshot\n   @return {String} url\n   */\nfunction urlForFindBelongsTo(id, modelName, snapshot) {\n  return this._buildURL(modelName, id);\n}\n\n/**\n   Builds a URL for a `record.save()` call when the record was created\n   locally using `store.createRecord()`.\n\n   Example:\n\n   ```app/adapters/application.js\n   import RESTAdapter from '@ember-data/adapter/rest';\n\n   export default class ApplicationAdapter extends RESTAdapter {\n     urlForCreateRecord(modelName, snapshot) {\n       return super.urlForCreateRecord(...arguments) + '/new';\n     }\n   }\n   ```\n\n   @method urlForCreateRecord\n    @public\n   @param {String} modelName\n   @param {Snapshot} snapshot\n   @return {String} url\n   */\nfunction urlForCreateRecord(modelName, snapshot) {\n  return this._buildURL(modelName);\n}\n\n/**\n   Builds a URL for a `record.save()` call when the record has been updated locally.\n\n   Example:\n\n   ```app/adapters/application.js\n   import RESTAdapter from '@ember-data/adapter/rest';\n\n   export default class ApplicationAdapter extends RESTAdapter {\n     urlForUpdateRecord(id, modelName, snapshot) {\n       return `/${id}/feed?access_token=${snapshot.adapterOptions.token}`;\n     }\n   }\n   ```\n\n   @method urlForUpdateRecord\n    @public\n   @param {String} id\n   @param {String} modelName\n   @param {Snapshot} snapshot\n   @return {String} url\n   */\nfunction urlForUpdateRecord(id, modelName, snapshot) {\n  return this._buildURL(modelName, id);\n}\n\n/**\n   Builds a URL for a `record.save()` call when the record has been deleted locally.\n\n   Example:\n\n   ```app/adapters/application.js\n   import RESTAdapter from '@ember-data/adapter/rest';\n\n   export default class ApplicationAdapter extends RESTAdapter {\n     urlForDeleteRecord(id, modelName, snapshot) {\n       return super.urlForDeleteRecord(...arguments) + '/destroy';\n     }\n   }\n   ```\n\n   @method urlForDeleteRecord\n    @public\n   @param {String} id\n   @param {String} modelName\n   @param {Snapshot} snapshot\n   @return {String} url\n   */\nfunction urlForDeleteRecord(id, modelName, snapshot) {\n  return this._buildURL(modelName, id);\n}\n\n/**\n    @method urlPrefix\n    @private\n    @param {String} path\n    @param {String} parentURL\n    @return {String} urlPrefix\n  */\nfunction urlPrefix(path, parentURL) {\n  const {\n    namespace\n  } = this;\n  let {\n    host\n  } = this;\n  if (!host || host === '/') {\n    host = '';\n  }\n  if (path) {\n    // Protocol relative url\n    if (/^\\/\\//.test(path) || /http(s)?:\\/\\//.test(path)) {\n      // Do nothing, the full host is already included.\n      return path;\n\n      // Absolute path\n    } else if (path.charAt(0) === '/') {\n      return `${host}${path}`;\n      // Relative path\n    } else {\n      return `${parentURL}/${path}`;\n    }\n  }\n\n  // No path provided\n  const url = [];\n  if (host) {\n    url.push(host);\n  }\n  if (namespace) {\n    url.push(namespace);\n  }\n  return url.join('/');\n}\n\n/**\n    Determines the pathname for a given type.\n\n    By default, it pluralizes the type's name (for example,\n    'post' becomes 'posts' and 'person' becomes 'people').\n\n    ### Pathname customization\n\n    For example, if you have an object `LineItem` with an\n    endpoint of `/line_items/`.\n\n    ```app/adapters/application.js\n    import RESTAdapter from '@ember-data/adapter/rest';\n    import { decamelize, pluralize } from '<app-name>/utils/string-utils';\n\n    export default class ApplicationAdapter extends RESTAdapter {\n      pathForType(modelName) {\n        var decamelized = decamelize(modelName);\n        return pluralize(decamelized);\n      }\n    }\n    ```\n\n    @method pathForType\n    @public\n    @param {String} modelName\n    @return {String} path\n  **/\nfunction pathForType(modelName) {\n  const camelized = (0,_ember_string__WEBPACK_IMPORTED_MODULE_1__.camelize)(modelName);\n  return (0,ember_inflector__WEBPACK_IMPORTED_MODULE_2__.pluralize)(camelized);\n}\n\n// we build it this way vs casting to BuildURLMixin so that any\n// changes to the interface surface as errors here.\nconst mixinProps = {\n  buildURL,\n  _buildURL,\n  urlForFindRecord,\n  urlForFindAll,\n  urlForQueryRecord,\n  urlForQuery,\n  urlForFindMany,\n  urlForFindHasMany,\n  urlForFindBelongsTo,\n  urlForCreateRecord,\n  urlForDeleteRecord,\n  urlForUpdateRecord,\n  urlPrefix,\n  pathForType\n};\nvar BuildURLMixin = _ember_object_mixin__WEBPACK_IMPORTED_MODULE_0___default().create(mixinProps);\n\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@ember-data/adapter.85bda234/node_modules/@ember-data/adapter/build-url-mixin-AgfAmsW-.js?");

/***/ }),

/***/ "../rewritten-packages/@ember-data/adapter.85bda234/node_modules/@ember-data/adapter/error.js":
/*!****************************************************************************************************!*\
  !*** ../rewritten-packages/@ember-data/adapter.85bda234/node_modules/@ember-data/adapter/error.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AbortError: () => (/* binding */ AbortError),\n/* harmony export */   ConflictError: () => (/* binding */ ConflictError),\n/* harmony export */   ForbiddenError: () => (/* binding */ ForbiddenError),\n/* harmony export */   InvalidError: () => (/* binding */ InvalidError),\n/* harmony export */   NotFoundError: () => (/* binding */ NotFoundError),\n/* harmony export */   ServerError: () => (/* binding */ ServerError),\n/* harmony export */   TimeoutError: () => (/* binding */ TimeoutError),\n/* harmony export */   UnauthorizedError: () => (/* binding */ UnauthorizedError),\n/* harmony export */   \"default\": () => (/* binding */ AdapterError)\n/* harmony export */ });\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/debug */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fdebug&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_debug__WEBPACK_IMPORTED_MODULE_0__);\n\n\n/**\n  @module @ember-data/adapter/error\n */\n\n/**\n  ## Overview\n\n  <blockquote style=\"margin: 1em; padding: .1em 1em .1em 1em; border-left: solid 1em #E34C32; background: #e0e0e0;\">\n  <p>\n    ⚠️ <strong>This is LEGACY documentation</strong> for a feature that is no longer encouraged to be used.\n    If starting a new app or thinking of implementing a new adapter, consider writing a\n    <a href=\"/ember-data/release/classes/%3CInterface%3E%20Handler\">Handler</a> instead to be used with the <a href=\"https://github.com/emberjs/data/tree/main/packages/request#readme\">RequestManager</a>\n  </p>\n  </blockquote>\n\n  An `AdapterError` is used by an adapter to signal that an error occurred\n  during a request to an external API. It indicates a generic error, and\n  subclasses are used to indicate specific error states.\n\n  To create a custom error to signal a specific error state in communicating\n  with an external API, extend the `AdapterError`. For example, if the\n  external API exclusively used HTTP `503 Service Unavailable` to indicate\n  it was closed for maintenance:\n\n  ```app/adapters/maintenance-error.js\n  import AdapterError from '@ember-data/adapter/error';\n\n  export default AdapterError.extend({ message: \"Down for maintenance.\" });\n  ```\n\n  This error would then be returned by an adapter's `handleResponse` method:\n\n  ```app/adapters/application.js\n  import JSONAPIAdapter from '@ember-data/adapter/json-api';\n  import MaintenanceError from './maintenance-error';\n\n  export default class ApplicationAdapter extends JSONAPIAdapter {\n    handleResponse(status) {\n      if (503 === status) {\n        return new MaintenanceError();\n      }\n\n      return super.handleResponse(...arguments);\n    }\n  }\n  ```\n\n  And can then be detected in an application and used to send the user to an\n  `under-maintenance` route:\n\n  ```app/routes/application.js\n  import Route from '@ember/routing/route';\n  import MaintenanceError from '../adapters/maintenance-error';\n\n  export default class ApplicationRoute extends Route {\n    actions: {\n      error(error, transition) {\n        if (error instanceof MaintenanceError) {\n          this.transitionTo('under-maintenance');\n          return;\n        }\n\n        // ...other error handling logic\n      }\n    }\n  }\n  ```\n\n  @main @ember-data/adapter/error\n  @class AdapterError\n  @public\n*/\nfunction AdapterError(errors, message = 'Adapter operation failed') {\n  this.isAdapterError = true;\n  const error = Error.call(this, message);\n  if (error) {\n    this.stack = error.stack;\n    this.description = error.description;\n    this.fileName = error.fileName;\n    this.lineNumber = error.lineNumber;\n    this.message = error.message;\n    this.name = error.name;\n    this.number = error.number;\n  }\n  this.errors = errors || [{\n    title: 'Adapter Error',\n    detail: message\n  }];\n}\nfunction extendFn(ErrorClass) {\n  return function ({\n    message: defaultMessage\n  } = {}) {\n    return extend(ErrorClass, defaultMessage);\n  };\n}\nfunction extend(ParentErrorClass, defaultMessage) {\n  const ErrorClass = function (errors, message) {\n    ( true && !(Array.isArray(errors || [])) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)('`AdapterError` expects json-api formatted errors array.', Array.isArray(errors || [])));\n    ParentErrorClass.call(this, errors, message || defaultMessage);\n  };\n  ErrorClass.prototype = Object.create(ParentErrorClass.prototype);\n  ErrorClass.extend = extendFn(ErrorClass);\n  return ErrorClass;\n}\nAdapterError.prototype = Object.create(Error.prototype);\nAdapterError.prototype.code = 'AdapterError';\nAdapterError.extend = extendFn(AdapterError);\n\n/**\n  A `InvalidError` is used by an adapter to signal the external API\n  was unable to process a request because the content was not\n  semantically correct or meaningful per the API. Usually, this means a\n  record failed some form of server-side validation. When a promise\n  from an adapter is rejected with a `InvalidError` the record will\n  transition to the `invalid` state and the errors will be set to the\n  `errors` property on the record.\n\n  For Ember Data to correctly map errors to their corresponding\n  properties on the model, Ember Data expects each error to be\n  a valid JSON-API error object with a `source/pointer` that matches\n  the property name. For example, if you had a Post model that\n  looked like this.\n\n  ```app/models/post.js\n  import Model, { attr } from '@ember-data/model';\n\n  export default class PostModel extends Model {\n    @attr('string') title;\n    @attr('string') content;\n  }\n  ```\n\n  To show an error from the server related to the `title` and\n  `content` properties your adapter could return a promise that\n  rejects with a `InvalidError` object that looks like this:\n\n  ```app/adapters/post.js\n  import RSVP from 'RSVP';\n  import RESTAdapter from '@ember-data/adapter/rest';\n  import { InvalidError } from '@ember-data/adapter/error';\n\n  export default class ApplicationAdapter extends RESTAdapter {\n    updateRecord() {\n      // Fictional adapter that always rejects\n      return RSVP.reject(new InvalidError([\n        {\n          detail: 'Must be unique',\n          source: { pointer: '/data/attributes/title' }\n        },\n        {\n          detail: 'Must not be blank',\n          source: { pointer: '/data/attributes/content'}\n        }\n      ]));\n    }\n  }\n  ```\n\n  Your backend may use different property names for your records the\n  store will attempt to extract and normalize the errors using the\n  serializer's `extractErrors` method before the errors get added to\n  the model. As a result, it is safe for the `InvalidError` to\n  wrap the error payload unaltered.\n\n  @class InvalidError\n  @public\n  @extends AdapterError\n*/\n// TODO @deprecate extractError documentation\nconst InvalidError = extend(AdapterError, 'The adapter rejected the commit because it was invalid');\nInvalidError.prototype.code = 'InvalidError';\n\n/**\n  A `TimeoutError` is used by an adapter to signal that a request\n  to the external API has timed out. I.e. no response was received from\n  the external API within an allowed time period.\n\n  An example use case would be to warn the user to check their internet\n  connection if an adapter operation has timed out:\n\n  ```app/routes/application.js\n  import Route from '@ember/routing/route';\n  import { TimeoutError } from '@ember-data/adapter/error';\n  import { action } from '@ember/object';\n\n  export default class ApplicationRoute extends Route {\n    @action\n    error(error, transition) {\n      if (error instanceof TimeoutError) {\n        // alert the user\n        alert('Are you still connected to the Internet?');\n        return;\n      }\n\n      // ...other error handling logic\n    }\n  }\n  ```\n\n  @class TimeoutError\n  @public\n  @extends AdapterError\n*/\nconst TimeoutError = extend(AdapterError, 'The adapter operation timed out');\nTimeoutError.prototype.code = 'TimeoutError';\n\n/**\n  A `AbortError` is used by an adapter to signal that a request to\n  the external API was aborted. For example, this can occur if the user\n  navigates away from the current page after a request to the external API\n  has been initiated but before a response has been received.\n\n  @class AbortError\n  @public\n  @extends AdapterError\n*/\nconst AbortError = extend(AdapterError, 'The adapter operation was aborted');\nAbortError.prototype.code = 'AbortError';\n\n/**\n  A `UnauthorizedError` equates to a HTTP `401 Unauthorized` response\n  status. It is used by an adapter to signal that a request to the external\n  API was rejected because authorization is required and has failed or has not\n  yet been provided.\n\n  An example use case would be to redirect the user to a login route if a\n  request is unauthorized:\n\n  ```app/routes/application.js\n  import Route from '@ember/routing/route';\n  import { UnauthorizedError } from '@ember-data/adapter/error';\n  import { action } from '@ember/object';\n\n  export default class ApplicationRoute extends Route {\n    @action\n    error(error, transition) {\n      if (error instanceof UnauthorizedError) {\n        // go to the login route\n        this.transitionTo('login');\n        return;\n      }\n\n      // ...other error handling logic\n    }\n  }\n  ```\n\n  @class UnauthorizedError\n  @public\n  @extends AdapterError\n*/\nconst UnauthorizedError = extend(AdapterError, 'The adapter operation is unauthorized');\nUnauthorizedError.prototype.code = 'UnauthorizedError';\n\n/**\n  A `ForbiddenError` equates to a HTTP `403 Forbidden` response status.\n  It is used by an adapter to signal that a request to the external API was\n  valid but the server is refusing to respond to it. If authorization was\n  provided and is valid, then the authenticated user does not have the\n  necessary permissions for the request.\n\n  @class ForbiddenError\n  @public\n  @extends AdapterError\n*/\nconst ForbiddenError = extend(AdapterError, 'The adapter operation is forbidden');\nForbiddenError.prototype.code = 'ForbiddenError';\n\n/**\n  A `NotFoundError` equates to a HTTP `404 Not Found` response status.\n  It is used by an adapter to signal that a request to the external API\n  was rejected because the resource could not be found on the API.\n\n  An example use case would be to detect if the user has entered a route\n  for a specific model that does not exist. For example:\n\n  ```app/routes/post.js\n  import Route from '@ember/routing/route';\n  import { NotFoundError } from '@ember-data/adapter/error';\n  import { inject as service } from '@ember/service';\n  import { action } from '@ember/object';\n\n  export default class PostRoute extends Route {\n    @service store;\n    model(params) {\n      return this.store.findRecord('post', params.post_id);\n    }\n    @action\n    error(error, transition) {\n      if (error instanceof NotFoundError) {\n        // redirect to a list of all posts instead\n        this.transitionTo('posts');\n      } else {\n        // otherwise let the error bubble\n        return true;\n      }\n    }\n  }\n  ```\n\n  @class NotFoundError\n  @public\n  @extends AdapterError\n*/\nconst NotFoundError = extend(AdapterError, 'The adapter could not find the resource');\nNotFoundError.prototype.code = 'NotFoundError';\n\n/**\n  A `ConflictError` equates to a HTTP `409 Conflict` response status.\n  It is used by an adapter to indicate that the request could not be processed\n  because of a conflict in the request. An example scenario would be when\n  creating a record with a client-generated ID but that ID is already known\n  to the external API.\n\n  @class ConflictError\n  @public\n  @extends AdapterError\n*/\nconst ConflictError = extend(AdapterError, 'The adapter operation failed due to a conflict');\nConflictError.prototype.code = 'ConflictError';\n\n/**\n  A `ServerError` equates to a HTTP `500 Internal Server Error` response\n  status. It is used by the adapter to indicate that a request has failed\n  because of an error in the external API.\n\n  @class ServerError\n  @public\n  @extends AdapterError\n*/\nconst ServerError = extend(AdapterError, 'The adapter operation failed due to a server error');\nServerError.prototype.code = 'ServerError';\n\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@ember-data/adapter.85bda234/node_modules/@ember-data/adapter/error.js?");

/***/ }),

/***/ "../rewritten-packages/@ember-data/adapter.85bda234/node_modules/@ember-data/adapter/index-4RESM7Oz.js":
/*!*************************************************************************************************************!*\
  !*** ../rewritten-packages/@ember-data/adapter.85bda234/node_modules/@ember-data/adapter/index-4RESM7Oz.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   A: () => (/* binding */ Adapter),\n/* harmony export */   _: () => (/* binding */ _applyDecoratedDescriptor)\n/* harmony export */ });\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/debug */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fdebug&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_debug__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _ember_object__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember/object */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fobject&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_object__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_ember_object__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _ember_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ember/service */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fservice&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_service__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_ember_service__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\nfunction _initializerDefineProperty(target, property, descriptor, context) {\n  if (!descriptor) return;\n  Object.defineProperty(target, property, {\n    enumerable: descriptor.enumerable,\n    configurable: descriptor.configurable,\n    writable: descriptor.writable,\n    value: descriptor.initializer ? descriptor.initializer.call(context) : void 0\n  });\n}\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object.keys(descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n  if (desc.initializer === void 0) {\n    Object.defineProperty(target, property, desc);\n    desc = null;\n  }\n  return desc;\n}\nvar _class, _descriptor;\n/**\n  An adapter is an object that receives requests from a store and\n  translates them into the appropriate action to take against your\n  persistence layer. The persistence layer is usually an HTTP API but\n  may be anything, such as the browser's local storage. Typically the\n  adapter is not invoked directly instead its functionality is accessed\n  through the `store`.\n\n  > ⚠️ CAUTION you likely want the docs for [<Interface> Adapter](/ember-data/release/classes/%3CInterface%3E%20Adapter)\n  > as extending this abstract class is unnecessary.\n\n  ### Creating an Adapter\n\n  Create a new subclass of `Adapter` in the `app/adapters` folder:\n\n  ```app/adapters/application.js\n  import Adapter from '@ember-data/adapter';\n\n  export default Adapter.extend({\n    // ...your code here\n  });\n  ```\n\n  Model-specific adapters can be created by putting your adapter\n  class in an `app/adapters/` + `model-name` + `.js` file of the application.\n\n  ```app/adapters/post.js\n  import Adapter from '@ember-data/adapter';\n\n  export default Adapter.extend({\n    // ...Post-specific adapter code goes here\n  });\n  ```\n\n  `Adapter` is an abstract base class that you should override in your\n  application to customize it for your backend. The minimum set of methods\n  that you should implement is:\n\n    * `findRecord()`\n    * `createRecord()`\n    * `updateRecord()`\n    * `deleteRecord()`\n    * `findAll()`\n    * `query()`\n\n  To improve the network performance of your application, you can optimize\n  your adapter by overriding these lower-level methods:\n\n    * `findMany()`\n\n\n  For an example of the implementation, see `RESTAdapter`, the\n  included REST adapter.\n\n  @class Adapter\n  @public\n  @extends Ember.EmberObject\n*/\nlet Adapter = (_class = class Adapter extends (_ember_object__WEBPACK_IMPORTED_MODULE_1___default()) {\n  constructor(...args) {\n    super(...args);\n    _initializerDefineProperty(this, \"store\", _descriptor, this);\n  }\n  /**\n    The `findRecord()` method is invoked when the store is asked for a record that\n    has not previously been loaded. In response to `findRecord()` being called, you\n    should query your persistence layer for a record with the given ID. The `findRecord`\n    method should return a promise that will resolve to a JavaScript object that will be\n    normalized by the serializer.\n     Here is an example of the `findRecord` implementation:\n     ```app/adapters/application.js\n    import Adapter from '@ember-data/adapter';\n    import RSVP from 'RSVP';\n    import $ from 'jquery';\n     export default class ApplicationAdapter extends Adapter {\n      findRecord(store, type, id, snapshot) {\n        return new RSVP.Promise(function(resolve, reject) {\n          $.getJSON(`/${type.modelName}/${id}`).then(function(data) {\n            resolve(data);\n          }, function(jqXHR) {\n            reject(jqXHR);\n          });\n        });\n      }\n    }\n    ```\n     @method findRecord\n    @param {Store} store\n    @param {Model} type\n    @param {String} id\n    @param {Snapshot} snapshot\n    @return {Promise} promise\n    @public\n  */\n  // @ts-expect-error\n  findRecord(store, type, id, snapshot) {\n    {\n      throw new Error('You subclassed the Adapter class but missing a findRecord override');\n    }\n  }\n\n  /**\n    The `findAll()` method is used to retrieve all records for a given type.\n     Example\n     ```app/adapters/application.js\n    import Adapter from '@ember-data/adapter';\n    import RSVP from 'RSVP';\n    import $ from 'jquery';\n     export default class ApplicationAdapter extends Adapter {\n      findAll(store, type) {\n        return new RSVP.Promise(function(resolve, reject) {\n          $.getJSON(`/${type.modelName}`).then(function(data) {\n            resolve(data);\n          }, function(jqXHR) {\n            reject(jqXHR);\n          });\n        });\n      }\n    }\n    ```\n     @method findAll\n    @param {Store} store\n    @param {Model} type\n    @param {null} neverSet a value is never provided to this argument\n    @param {SnapshotRecordArray} snapshotRecordArray\n    @return {Promise} promise\n    @public\n  */\n  findAll(store, type, neverSet, snapshotRecordArray) {\n    {\n      throw new Error('You subclassed the Adapter class but missing a findAll override');\n    }\n  }\n\n  /**\n    This method is called when you call `query` on the store.\n     Example\n     ```app/adapters/application.js\n    import Adapter from '@ember-data/adapter';\n    import RSVP from 'RSVP';\n    import $ from 'jquery';\n     export default class ApplicationAdapter extends Adapter {\n      query(store, type, query) {\n        return new RSVP.Promise(function(resolve, reject) {\n          $.getJSON(`/${type.modelName}`, query).then(function(data) {\n            resolve(data);\n          }, function(jqXHR) {\n            reject(jqXHR);\n          });\n        });\n      }\n    }\n    ```\n     @method query\n    @param {Store} store\n    @param {Model} type\n    @param {Object} query\n    @param {Collection} recordArray\n    @param {Object} adapterOptions\n    @return {Promise} promise\n    @public\n  */\n  // @ts-expect-error\n  query(store, type, query) {\n    {\n      throw new Error('You subclassed the Adapter class but missing a query override');\n    }\n  }\n\n  /**\n    The `queryRecord()` method is invoked when the store is asked for a single\n    record through a query object.\n     In response to `queryRecord()` being called, you should always fetch fresh\n    data. Once found, you can asynchronously call the store's `push()` method\n    to push the record into the store.\n     Here is an example `queryRecord` implementation:\n     Example\n     ```app/adapters/application.js\n    import Adapter, { BuildURLMixin } from '@ember-data/adapter';\n    import RSVP from 'RSVP';\n    import $ from 'jquery';\n     export default class ApplicationAdapter extends Adapter.extend(BuildURLMixin) {\n      queryRecord(store, type, query) {\n        return new RSVP.Promise(function(resolve, reject) {\n          $.getJSON(`/${type.modelName}`, query).then(function(data) {\n            resolve(data);\n          }, function(jqXHR) {\n            reject(jqXHR);\n          });\n        });\n      }\n    }\n    ```\n     @method queryRecord\n    @param {Store} store\n    @param {subclass of Model} type\n    @param {Object} query\n    @param {Object} adapterOptions\n    @return {Promise} promise\n    @public\n  */\n  // @ts-expect-error\n  queryRecord(store, type, query, adapterOptions) {\n    {\n      throw new Error('You subclassed the Adapter class but missing a queryRecord override');\n    }\n  }\n\n  /**\n    If the globally unique IDs for your records should be generated on the client,\n    implement the `generateIdForRecord()` method. This method will be invoked\n    each time you create a new record, and the value returned from it will be\n    assigned to the record's `primaryKey`.\n     Most traditional REST-like HTTP APIs will not use this method. Instead, the ID\n    of the record will be set by the server, and your adapter will update the store\n    with the new ID when it calls `didCreateRecord()`. Only implement this method if\n    you intend to generate record IDs on the client-side.\n     The `generateIdForRecord()` method will be invoked with the requesting store as\n    the first parameter and the newly created record as the second parameter:\n     ```javascript\n    import Adapter from '@ember-data/adapter';\n    import { v4 } from 'uuid';\n     export default class ApplicationAdapter extends Adapter {\n      generateIdForRecord(store, type, inputProperties) {\n        return v4();\n      }\n    }\n    ```\n     @method generateIdForRecord\n    @param {Store} store\n    @param {Model} type   the Model class of the record\n    @param {Object} inputProperties a hash of properties to set on the\n      newly created record.\n    @return {(String|Number)} id\n    @public\n  */\n\n  /**\n    Proxies to the serializer's `serialize` method.\n     Example\n     ```app/adapters/application.js\n    import Adapter from '@ember-data/adapter';\n     export default class ApplicationAdapter extends Adapter {\n      createRecord(store, type, snapshot) {\n        let data = this.serialize(snapshot, { includeId: true });\n        let url = `/${type.modelName}`;\n         // ...\n      }\n    }\n    ```\n     @method serialize\n    @param {Snapshot} snapshot\n    @param {Object}   options\n    @return {Object} serialized snapshot\n    @public\n  */\n  serialize(snapshot, options) {\n    const serialized = snapshot.serialize(options);\n    ( true && !(serialized && typeof serialized === 'object') && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Your adapter's serialize method must return an object, but it returned ${typeof serialized}`, serialized && typeof serialized === 'object'));\n    return serialized;\n  }\n\n  /**\n    Implement this method in a subclass to handle the creation of\n    new records.\n     Serializes the record and sends it to the server.\n     Example\n     ```app/adapters/application.js\n    import Adapter from '@ember-data/adapter';\n    import RSVP from 'RSVP';\n    import $ from 'jquery';\n     export default class ApplicationAdapter extends Adapter {\n      createRecord(store, type, snapshot) {\n        let data = this.serialize(snapshot, { includeId: true });\n         return new RSVP.Promise(function (resolve, reject) {\n          $.ajax({\n            type: 'POST',\n            url: `/${type.modelName}`,\n            dataType: 'json',\n            data: data\n          }).then(function (data) {\n            resolve(data);\n          }, function (jqXHR) {\n            jqXHR.then = null; // tame jQuery's ill mannered promises\n            reject(jqXHR);\n          });\n        });\n      }\n    }\n    ```\n     @method createRecord\n    @param {Store} store\n    @param {Model} type   the Model class of the record\n    @param {Snapshot} snapshot\n    @return {Promise} promise\n    @public\n  */\n  // @ts-expect-error\n  createRecord(store, type, snapshot) {\n    {\n      throw new Error('You subclassed the Adapter class but missing a createRecord override');\n    }\n  }\n\n  /**\n    Implement this method in a subclass to handle the updating of\n    a record.\n     Serializes the record update and sends it to the server.\n     The updateRecord method is expected to return a promise that will\n    resolve with the serialized record. This allows the backend to\n    inform the Ember Data store the current state of this record after\n    the update. If it is not possible to return a serialized record\n    the updateRecord promise can also resolve with `undefined` and the\n    Ember Data store will assume all of the updates were successfully\n    applied on the backend.\n     Example\n     ```app/adapters/application.js\n    import Adapter from '@ember-data/adapter';\n    import RSVP from 'RSVP';\n    import $ from 'jquery';\n     export default class ApplicationAdapter extends Adapter {\n      updateRecord(store, type, snapshot) {\n        let data = this.serialize(snapshot, { includeId: true });\n        let id = snapshot.id;\n         return new RSVP.Promise(function(resolve, reject) {\n          $.ajax({\n            type: 'PUT',\n            url: `/${type.modelName}/${id}`,\n            dataType: 'json',\n            data: data\n          }).then(function(data) {\n            resolve(data);\n          }, function(jqXHR) {\n            jqXHR.then = null; // tame jQuery's ill mannered promises\n            reject(jqXHR);\n          });\n        });\n      }\n    }\n    ```\n     @method updateRecord\n    @param {Store} store\n    @param {Model} type   the Model class of the record\n    @param {Snapshot} snapshot\n    @return {Promise} promise\n    @public\n  */\n  // @ts-expect-error\n  updateRecord(store, type, snapshot) {\n    {\n      throw new Error('You subclassed the Adapter class but missing a updateRecord override');\n    }\n  }\n\n  /**\n    Implement this method in a subclass to handle the deletion of\n    a record.\n     Sends a delete request for the record to the server.\n     Example\n     ```app/adapters/application.js\n    import Adapter from '@ember-data/adapter';\n    import RSVP from 'RSVP';\n    import $ from 'jquery';\n     export default class ApplicationAdapter extends Adapter {\n      deleteRecord(store, type, snapshot) {\n        let data = this.serialize(snapshot, { includeId: true });\n        let id = snapshot.id;\n         return new RSVP.Promise(function(resolve, reject) {\n          $.ajax({\n            type: 'DELETE',\n            url: `/${type.modelName}/${id}`,\n            dataType: 'json',\n            data: data\n          }).then(function(data) {\n            resolve(data)\n          }, function(jqXHR) {\n            jqXHR.then = null; // tame jQuery's ill mannered promises\n            reject(jqXHR);\n          });\n        });\n      }\n    }\n    ```\n     @method deleteRecord\n    @param {Store} store\n    @param {Model} type   the Model class of the record\n    @param {Snapshot} snapshot\n    @return {Promise} promise\n    @public\n  */\n  // @ts-expect-error\n  deleteRecord(store, type, snapshot) {\n    {\n      throw new Error('You subclassed the Adapter class but missing a deleteRecord override');\n    }\n  }\n\n  /**\n    By default the store will try to coalesce all `findRecord` calls within the same runloop\n    into as few requests as possible by calling groupRecordsForFindMany and passing it into a findMany call.\n    You can opt out of this behaviour by either not implementing the findMany hook or by setting\n    coalesceFindRequests to false.\n     @property coalesceFindRequests\n    @public\n    @type {boolean}\n  */\n  get coalesceFindRequests() {\n    const coalesceFindRequests = this._coalesceFindRequests;\n    if (typeof coalesceFindRequests === 'boolean') {\n      return coalesceFindRequests;\n    }\n    return this._coalesceFindRequests = true;\n  }\n  set coalesceFindRequests(value) {\n    this._coalesceFindRequests = value;\n  }\n\n  /**\n    The store will call `findMany` instead of multiple `findRecord`\n    requests to find multiple records at once if coalesceFindRequests\n    is true.\n     ```app/adapters/application.js\n    import Adapter from '@ember-data/adapter';\n    import RSVP from 'RSVP';\n    import $ from 'jquery';\n     export default class ApplicationAdapter extends Adapter {\n      findMany(store, type, ids, snapshots) {\n        return new RSVP.Promise(function(resolve, reject) {\n          $.ajax({\n            type: 'GET',\n            url: `/${type.modelName}/`,\n            dataType: 'json',\n            data: { filter: { id: ids.join(',') } }\n          }).then(function(data) {\n            resolve(data);\n          }, function(jqXHR) {\n            jqXHR.then = null; // tame jQuery's ill mannered promises\n            reject(jqXHR);\n          });\n        });\n      }\n    }\n    ```\n     @method findMany\n    @param {Store} store\n    @param {Model} type   the Model class of the records\n    @param {Array}    ids\n    @param {Array} snapshots\n    @return {Promise} promise\n    @public\n  */\n\n  /**\n    Organize records into groups, each of which is to be passed to separate\n    calls to `findMany`.\n     For example, if your API has nested URLs that depend on the parent, you will\n    want to group records by their parent.\n     The default implementation returns the records as a single group.\n     @method groupRecordsForFindMany\n    @public\n    @param {Store} store\n    @param {Array} snapshots\n    @return {Array}  an array of arrays of records, each of which is to be\n                      loaded separately by `findMany`.\n  */\n  groupRecordsForFindMany(store, snapshots) {\n    return [snapshots];\n  }\n\n  /**\n    This method is used by the store to determine if the store should\n    reload a record from the adapter when a record is requested by\n    `store.findRecord`.\n     If this method returns `true`, the store will re-fetch a record from\n    the adapter. If this method returns `false`, the store will resolve\n    immediately using the cached record.\n     For example, if you are building an events ticketing system, in which users\n    can only reserve tickets for 20 minutes at a time, and want to ensure that\n    in each route you have data that is no more than 20 minutes old you could\n    write:\n     ```javascript\n    shouldReloadRecord(store, ticketSnapshot) {\n      let lastAccessedAt = ticketSnapshot.attr('lastAccessedAt');\n      let timeDiff = moment().diff(lastAccessedAt, 'minutes');\n       if (timeDiff > 20) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    ```\n     This method would ensure that whenever you do `store.findRecord('ticket',\n    id)` you will always get a ticket that is no more than 20 minutes old. In\n    case the cached version is more than 20 minutes old, `findRecord` will not\n    resolve until you fetched the latest version.\n     By default this hook returns `false`, as most UIs should not block user\n    interactions while waiting on data update.\n     Note that, with default settings, `shouldBackgroundReloadRecord` will always\n    re-fetch the records in the background even if `shouldReloadRecord` returns\n    `false`. You can override `shouldBackgroundReloadRecord` if this does not\n    suit your use case.\n     @since 1.13.0\n    @method shouldReloadRecord\n    @param {Store} store\n    @param {Snapshot} snapshot\n    @return {Boolean}\n    @public\n  */\n  shouldReloadRecord(store, snapshot) {\n    return false;\n  }\n\n  /**\n    This method is used by the store to determine if the store should\n    reload all records from the adapter when records are requested by\n    `store.findAll`.\n     If this method returns `true`, the store will re-fetch all records from\n    the adapter. If this method returns `false`, the store will resolve\n    immediately using the cached records.\n     For example, if you are building an events ticketing system, in which users\n    can only reserve tickets for 20 minutes at a time, and want to ensure that\n    in each route you have data that is no more than 20 minutes old you could\n    write:\n     ```javascript\n    shouldReloadAll(store, snapshotArray) {\n      let snapshots = snapshotArray.snapshots();\n       return snapshots.any((ticketSnapshot) => {\n        let lastAccessedAt = ticketSnapshot.attr('lastAccessedAt');\n        let timeDiff = moment().diff(lastAccessedAt, 'minutes');\n         if (timeDiff > 20) {\n          return true;\n        } else {\n          return false;\n        }\n      });\n    }\n    ```\n     This method would ensure that whenever you do `store.findAll('ticket')` you\n    will always get a list of tickets that are no more than 20 minutes old. In\n    case a cached version is more than 20 minutes old, `findAll` will not\n    resolve until you fetched the latest versions.\n     By default, this method returns `true` if the passed `snapshotRecordArray`\n    is empty (meaning that there are no records locally available yet),\n    otherwise, it returns `false`.\n     Note that, with default settings, `shouldBackgroundReloadAll` will always\n    re-fetch all the records in the background even if `shouldReloadAll` returns\n    `false`. You can override `shouldBackgroundReloadAll` if this does not suit\n    your use case.\n     @since 1.13.0\n    @method shouldReloadAll\n    @param {Store} store\n    @param {SnapshotRecordArray} snapshotRecordArray\n    @return {Boolean}\n    @public\n  */\n  shouldReloadAll(store, snapshotRecordArray) {\n    return !snapshotRecordArray.length;\n  }\n\n  /**\n    This method is used by the store to determine if the store should\n    reload a record after the `store.findRecord` method resolves a\n    cached record.\n     This method is *only* checked by the store when the store is\n    returning a cached record.\n     If this method returns `true` the store will re-fetch a record from\n    the adapter.\n     For example, if you do not want to fetch complex data over a mobile\n    connection, or if the network is down, you can implement\n    `shouldBackgroundReloadRecord` as follows:\n     ```javascript\n    shouldBackgroundReloadRecord(store, snapshot) {\n      let { downlink, effectiveType } = navigator.connection;\n       return downlink > 0 && effectiveType === '4g';\n    }\n    ```\n     By default, this hook returns `true` so the data for the record is updated\n    in the background.\n     @since 1.13.0\n    @method shouldBackgroundReloadRecord\n    @param {Store} store\n    @param {Snapshot} snapshot\n    @return {Boolean}\n    @public\n  */\n  shouldBackgroundReloadRecord(store, snapshot) {\n    return true;\n  }\n\n  /**\n    This method is used by the store to determine if the store should\n    reload a record array after the `store.findAll` method resolves\n    with a cached record array.\n     This method is *only* checked by the store when the store is\n    returning a cached record array.\n     If this method returns `true` the store will re-fetch all records\n    from the adapter.\n     For example, if you do not want to fetch complex data over a mobile\n    connection, or if the network is down, you can implement\n    `shouldBackgroundReloadAll` as follows:\n     ```javascript\n    shouldBackgroundReloadAll(store, snapshotArray) {\n      let { downlink, effectiveType } = navigator.connection;\n       return downlink > 0 && effectiveType === '4g';\n    }\n    ```\n     By default this method returns `true`, indicating that a background reload\n    should always be triggered.\n     @since 1.13.0\n    @method shouldBackgroundReloadAll\n    @param {Store} store\n    @param {SnapshotRecordArray} snapshotRecordArray\n    @return {Boolean}\n    @public\n  */\n  shouldBackgroundReloadAll(store, snapshotRecordArray) {\n    return true;\n  }\n}, _descriptor = _applyDecoratedDescriptor(_class.prototype, \"store\", [_ember_service__WEBPACK_IMPORTED_MODULE_2__.inject], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _class);\n\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@ember-data/adapter.85bda234/node_modules/@ember-data/adapter/index-4RESM7Oz.js?");

/***/ }),

/***/ "../rewritten-packages/@ember-data/adapter.85bda234/node_modules/@ember-data/adapter/index.js":
/*!****************************************************************************************************!*\
  !*** ../rewritten-packages/@ember-data/adapter.85bda234/node_modules/@ember-data/adapter/index.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BuildURLMixin: () => (/* reexport safe */ _build_url_mixin_AgfAmsW___WEBPACK_IMPORTED_MODULE_1__.B),\n/* harmony export */   \"default\": () => (/* reexport safe */ _index_4RESM7Oz__WEBPACK_IMPORTED_MODULE_0__.A)\n/* harmony export */ });\n/* harmony import */ var _index_4RESM7Oz__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-4RESM7Oz */ \"../rewritten-packages/@ember-data/adapter.85bda234/node_modules/@ember-data/adapter/index-4RESM7Oz.js\");\n/* harmony import */ var _build_url_mixin_AgfAmsW___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./build-url-mixin-AgfAmsW- */ \"../rewritten-packages/@ember-data/adapter.85bda234/node_modules/@ember-data/adapter/build-url-mixin-AgfAmsW-.js\");\n\n\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@ember-data/adapter.85bda234/node_modules/@ember-data/adapter/index.js?");

/***/ }),

/***/ "../rewritten-packages/@ember-data/adapter.85bda234/node_modules/@ember-data/adapter/json-api.js":
/*!*******************************************************************************************************!*\
  !*** ../rewritten-packages/@ember-data/adapter.85bda234/node_modules/@ember-data/adapter/json-api.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ JSONAPIAdapter)\n/* harmony export */ });\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/debug */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fdebug&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_debug__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _ember_string__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember/string */ \"../rewritten-packages/@ember/string.5601e258/node_modules/@ember/string/index.js\");\n/* harmony import */ var ember_inflector__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ember-inflector */ \"../rewritten-packages/ember-inflector.73f9432a/node_modules/ember-inflector/index.js\");\n/* harmony import */ var _serialize_into_hash_2lQbHRKN__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./serialize-into-hash-2lQbHRKN */ \"../rewritten-packages/@ember-data/adapter.85bda234/node_modules/@ember-data/adapter/serialize-into-hash-2lQbHRKN.js\");\n/* harmony import */ var _rest__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./rest */ \"../rewritten-packages/@ember-data/adapter.85bda234/node_modules/@ember-data/adapter/rest.js\");\n\n\n\n\n\n\n/**\n  @module @ember-data/adapter/json-api\n */\n\n/**\n  ## Overview\n\n  <blockquote style=\"margin: 1em; padding: .1em 1em .1em 1em; border-left: solid 1em #E34C32; background: #e0e0e0;\">\n  <p>\n    ⚠️ <strong>This is LEGACY documentation</strong> for a feature that is no longer encouraged to be used.\n    If starting a new app or thinking of implementing a new adapter, consider writing a\n    <a href=\"/ember-data/release/classes/%3CInterface%3E%20Handler\">Handler</a> instead to be used with the <a href=\"https://github.com/emberjs/data/tree/main/packages/request#readme\">RequestManager</a>\n  </p>\n  </blockquote>\n\n  The `JSONAPIAdapter` is an adapter whichtransforms the store's\n  requests into HTTP requests that follow the [JSON API format](http://jsonapi.org/format/).\n\n  ## JSON API Conventions\n\n  The JSONAPIAdapter uses JSON API conventions for building the URL\n  for a record and selecting the HTTP verb to use with a request. The\n  actions you can take on a record map onto the following URLs in the\n  JSON API adapter:\n\n<table>\n  <tr>\n    <th>\n      Action\n    </th>\n    <th>\n      HTTP Verb\n    </th>\n    <th>\n      URL\n    </th>\n  </tr>\n  <tr>\n    <th>\n      `store.findRecord('post', 123)`\n    </th>\n    <td>\n      GET\n    </td>\n    <td>\n      /posts/123\n    </td>\n  </tr>\n  <tr>\n    <th>\n      `store.findAll('post')`\n    </th>\n    <td>\n      GET\n    </td>\n    <td>\n      /posts\n    </td>\n  </tr>\n  <tr>\n    <th>\n      Update `postRecord.save()`\n    </th>\n    <td>\n      PATCH\n    </td>\n    <td>\n      /posts/123\n    </td>\n  </tr>\n  <tr>\n    <th>\n      Create `store.createRecord('post').save()`\n    </th>\n    <td>\n      POST\n    </td>\n    <td>\n      /posts\n    </td>\n  </tr>\n  <tr>\n    <th>\n      Delete `postRecord.destroyRecord()`\n    </th>\n    <td>\n      DELETE\n    </td>\n    <td>\n      /posts/123\n    </td>\n  </tr>\n</table>\n\n  ## Success and failure\n\n  The JSONAPIAdapter will consider a success any response with a\n  status code of the 2xx family (\"Success\"), as well as 304 (\"Not\n  Modified\"). Any other status code will be considered a failure.\n\n  On success, the request promise will be resolved with the full\n  response payload.\n\n  Failed responses with status code 422 (\"Unprocessable Entity\") will\n  be considered \"invalid\". The response will be discarded, except for\n  the `errors` key. The request promise will be rejected with a\n  `InvalidError`. This error object will encapsulate the saved\n  `errors` value.\n\n  Any other status codes will be treated as an adapter error. The\n  request promise will be rejected, similarly to the invalid case,\n  but with an instance of `AdapterError` instead.\n\n  ### Endpoint path customization\n\n  Endpoint paths can be prefixed with a `namespace` by setting the\n  namespace property on the adapter:\n\n  ```app/adapters/application.js\n  import JSONAPIAdapter from '@ember-data/adapter/json-api';\n\n  export default class ApplicationAdapter extends JSONAPIAdapter {\n    namespace = 'api/1';\n  }\n  ```\n  Requests for the `person` model would now target `/api/1/people/1`.\n\n  ### Host customization\n\n  An adapter can target other hosts by setting the `host` property.\n\n  ```app/adapters/application.js\n  import JSONAPIAdapter from '@ember-data/adapter/json-api';\n\n  export default class ApplicationAdapter extends JSONAPIAdapter {\n    host = 'https://api.example.com';\n  }\n  ```\n\n  Requests for the `person` model would now target\n  `https://api.example.com/people/1`.\n\n  @since 1.13.0\n  @class JSONAPIAdapter\n  @main @ember-data/adapter/json-api\n  @public\n  @constructor\n  @extends RESTAdapter\n*/\nclass JSONAPIAdapter extends _rest__WEBPACK_IMPORTED_MODULE_4__[\"default\"] {\n  constructor(...args) {\n    super(...args);\n    this._defaultContentType = 'application/vnd.api+json';\n  }\n  /**\n    @method ajaxOptions\n    @private\n    @param {String} url\n    @param {String} type The request type GET, POST, PUT, DELETE etc.\n    @param {Object} options\n    @return {Object}\n  */\n  ajaxOptions(url, type, options = {}) {\n    const hash = super.ajaxOptions(url, type, options);\n    const headers = hash.headers = hash.headers || {};\n    headers['Accept'] = headers['Accept'] || 'application/vnd.api+json';\n    return hash;\n  }\n\n  /**\n    By default the JSONAPIAdapter will send each find request coming from a `store.find`\n    or from accessing a relationship separately to the server. If your server supports passing\n    ids as a query string, you can set coalesceFindRequests to true to coalesce all find requests\n    within a single runloop.\n     For example, if you have an initial payload of:\n     ```javascript\n    {\n      data: {\n        id: 1,\n        type: 'post',\n        relationship: {\n          comments: {\n            data: [\n              { id: 1, type: 'comment' },\n              { id: 2, type: 'comment' }\n            ]\n          }\n        }\n      }\n    }\n    ```\n     By default calling `post.comments` will trigger the following requests(assuming the\n    comments haven't been loaded before):\n     ```\n    GET /comments/1\n    GET /comments/2\n    ```\n     If you set coalesceFindRequests to `true` it will instead trigger the following request:\n     ```\n    GET /comments?filter[id]=1,2\n    ```\n     Setting coalesceFindRequests to `true` also works for `store.find` requests and `belongsTo`\n    relationships accessed within the same runloop. If you set `coalesceFindRequests: true`\n     ```javascript\n    store.findRecord('comment', 1);\n    store.findRecord('comment', 2);\n    ```\n     will also send a request to: `GET /comments?filter[id]=1,2`\n     Note: Requests coalescing rely on URL building strategy. So if you override `buildURL` in your app\n    `groupRecordsForFindMany` more likely should be overridden as well in order for coalescing to work.\n     @property coalesceFindRequests\n    @public\n    @type {boolean}\n  */\n  get coalesceFindRequests() {\n    const coalesceFindRequests = this._coalesceFindRequests;\n    if (typeof coalesceFindRequests === 'boolean') {\n      return coalesceFindRequests;\n    }\n    return this._coalesceFindRequests = false;\n  }\n  set coalesceFindRequests(value) {\n    this._coalesceFindRequests = value;\n  }\n  findMany(store, type, ids, snapshots) {\n    const url = this.buildURL(type.modelName, ids, snapshots, 'findMany');\n    return this.ajax(url, 'GET', {\n      data: {\n        filter: {\n          id: ids.join(',')\n        }\n      }\n    });\n  }\n  pathForType(modelName) {\n    const dasherized = (0,_ember_string__WEBPACK_IMPORTED_MODULE_1__.dasherize)(modelName);\n    return (0,ember_inflector__WEBPACK_IMPORTED_MODULE_2__.pluralize)(dasherized);\n  }\n  updateRecord(store, schema, snapshot) {\n    const data = (0,_serialize_into_hash_2lQbHRKN__WEBPACK_IMPORTED_MODULE_3__.b)(store, schema, snapshot);\n    const type = snapshot.modelName;\n    const id = snapshot.id;\n    ( true && !(typeof id === 'string' && id.length > 0) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Attempted to update the ${type} record, but the record has no id`, typeof id === 'string' && id.length > 0));\n    const url = this.buildURL(type, id, snapshot, 'updateRecord');\n    return this.ajax(url, 'PATCH', {\n      data: data\n    });\n  }\n}\n\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@ember-data/adapter.85bda234/node_modules/@ember-data/adapter/json-api.js?");

/***/ }),

/***/ "../rewritten-packages/@ember-data/adapter.85bda234/node_modules/@ember-data/adapter/rest.js":
/*!***************************************************************************************************!*\
  !*** ../rewritten-packages/@ember-data/adapter.85bda234/node_modules/@ember-data/adapter/rest.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ RESTAdapter),\n/* harmony export */   fetchOptions: () => (/* binding */ fetchOptions)\n/* harmony export */ });\n/* harmony import */ var _index_4RESM7Oz__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-4RESM7Oz */ \"../rewritten-packages/@ember-data/adapter.85bda234/node_modules/@ember-data/adapter/index-4RESM7Oz.js\");\n/* harmony import */ var _ember_application__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember/application */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fapplication&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_application__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_ember_application__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ember/debug */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fdebug&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_ember_debug__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _ember_object__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ember/object */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fobject&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_object__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_ember_object__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _serialize_into_hash_2lQbHRKN__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./serialize-into-hash-2lQbHRKN */ \"../rewritten-packages/@ember-data/adapter.85bda234/node_modules/@ember-data/adapter/serialize-into-hash-2lQbHRKN.js\");\n/* harmony import */ var _build_url_mixin_AgfAmsW___WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./build-url-mixin-AgfAmsW- */ \"../rewritten-packages/@ember-data/adapter.85bda234/node_modules/@ember-data/adapter/build-url-mixin-AgfAmsW-.js\");\n/* harmony import */ var _error__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./error */ \"../rewritten-packages/@ember-data/adapter.85bda234/node_modules/@ember-data/adapter/error.js\");\n\n\n\n\n\n\n\nvar _dec, _class;\n/**\n * <blockquote style=\"margin: 1em; padding: .1em 1em .1em 1em; border-left: solid 1em #E34C32; background: #e0e0e0;\">\n  <p>\n    ⚠️ <strong>This is LEGACY documentation</strong> for a feature that is no longer encouraged to be used.\n    If starting a new app or thinking of implementing a new adapter, consider writing a\n    <a href=\"/ember-data/release/classes/%3CInterface%3E%20Handler\">Handler</a> instead to be used with the <a href=\"https://github.com/emberjs/data/tree/main/packages/request#readme\">RequestManager</a>\n  </p>\n  </blockquote>\n\n  The REST adapter allows your store to communicate with an HTTP server by\n  transmitting JSON via XHR.\n\n  This adapter is designed around the idea that the JSON exchanged with\n  the server should be conventional. It builds URLs in a manner that follows\n  the structure of most common REST-style web services.\n\n  ## Success and failure\n\n  The REST adapter will consider a success any response with a status code\n  of the 2xx family (\"Success\"), as well as 304 (\"Not Modified\"). Any other\n  status code will be considered a failure.\n\n  On success, the request promise will be resolved with the full response\n  payload.\n\n  Failed responses with status code 422 (\"Unprocessable Entity\") will be\n  considered \"invalid\". The response will be discarded, except for the\n  `errors` key. The request promise will be rejected with a `InvalidError`.\n  This error object will encapsulate the saved `errors` value.\n\n  Any other status codes will be treated as an \"adapter error\". The request\n  promise will be rejected, similarly to the \"invalid\" case, but with\n  an instance of `AdapterError` instead.\n\n  ## JSON Structure\n\n  The REST adapter expects the JSON returned from your server to follow\n  these conventions.\n\n  ### Object Root\n\n  The JSON payload should be an object that contains the record inside a\n  root property. For example, in response to a `GET` request for\n  `/posts/1`, the JSON should look like this:\n\n  ```js\n  {\n    \"posts\": {\n      \"id\": 1,\n      \"title\": \"I'm Running to Reform the W3C\",\n      \"author\": \"Yehuda Katz\"\n    }\n  }\n  ```\n\n  Similarly, in response to a `GET` request for `/posts`, the JSON should\n  look like this:\n\n  ```js\n  {\n    \"posts\": [\n      {\n        \"id\": 1,\n        \"title\": \"I'm Running to Reform the W3C\",\n        \"author\": \"Yehuda Katz\"\n      },\n      {\n        \"id\": 2,\n        \"title\": \"Rails is omakase\",\n        \"author\": \"D2H\"\n      }\n    ]\n  }\n  ```\n\n  Note that the object root can be pluralized for both a single-object response\n  and an array response: the REST adapter is not strict on this. Further, if the\n  HTTP server responds to a `GET` request to `/posts/1` (e.g. the response to a\n  `findRecord` query) with more than one object in the array, Ember Data will\n  only display the object with the matching ID.\n\n  ### Conventional Names\n\n  Attribute names in your JSON payload should be the camelCased versions of\n  the attributes in your Ember.js models.\n\n  For example, if you have a `Person` model:\n\n  ```app/models/person.js\n  import Model, { attr } from '@ember-data/model';\n\n  export default Model.extend({\n    firstName: attr('string'),\n    lastName: attr('string'),\n    occupation: attr('string')\n  });\n  ```\n\n  The JSON returned should look like this:\n\n  ```js\n  {\n    \"people\": {\n      \"id\": 5,\n      \"firstName\": \"Zaphod\",\n      \"lastName\": \"Beeblebrox\",\n      \"occupation\": \"President\"\n    }\n  }\n  ```\n\n  #### Relationships\n\n  Relationships are usually represented by ids to the record in the\n  relationship. The related records can then be sideloaded in the\n  response under a key for the type.\n\n  ```js\n  {\n    \"posts\": {\n      \"id\": 5,\n      \"title\": \"I'm Running to Reform the W3C\",\n      \"author\": \"Yehuda Katz\",\n      \"comments\": [1, 2]\n    },\n    \"comments\": [{\n      \"id\": 1,\n      \"author\": \"User 1\",\n      \"message\": \"First!\",\n    }, {\n      \"id\": 2,\n      \"author\": \"User 2\",\n      \"message\": \"Good Luck!\",\n    }]\n  }\n  ```\n\n  If the records in the relationship are not known when the response\n  is serialized it's also possible to represent the relationship as a\n  URL using the `links` key in the response. Ember Data will fetch\n  this URL to resolve the relationship when it is accessed for the\n  first time.\n\n  ```js\n  {\n    \"posts\": {\n      \"id\": 5,\n      \"title\": \"I'm Running to Reform the W3C\",\n      \"author\": \"Yehuda Katz\",\n      \"links\": {\n        \"comments\": \"/posts/5/comments\"\n      }\n    }\n  }\n  ```\n\n  ### Errors\n\n  If a response is considered a failure, the JSON payload is expected to include\n  a top-level key `errors`, detailing any specific issues. For example:\n\n  ```js\n  {\n    \"errors\": {\n      \"msg\": \"Something went wrong\"\n    }\n  }\n  ```\n\n  This adapter does not make any assumptions as to the format of the `errors`\n  object. It will simply be passed along as is, wrapped in an instance\n  of `InvalidError` or `AdapterError`. The serializer can interpret it\n  afterwards.\n\n  ## Customization\n\n  ### Endpoint path customization\n\n  Endpoint paths can be prefixed with a `namespace` by setting the namespace\n  property on the adapter:\n\n  ```app/adapters/application.js\n  import RESTAdapter from '@ember-data/adapter/rest';\n\n  export default class ApplicationAdapter extends RESTAdapter {\n    namespace = 'api/1';\n  }\n  ```\n  Requests for the `Person` model would now target `/api/1/people/1`.\n\n  ### Host customization\n\n  An adapter can target other hosts by setting the `host` property.\n\n  ```app/adapters/application.js\n  import RESTAdapter from '@ember-data/adapter/rest';\n\n  export default class ApplicationAdapter extends RESTAdapter {\n    host = 'https://api.example.com';\n  }\n  ```\n\n  ### Headers customization\n\n  Some APIs require HTTP headers, e.g. to provide an API key. Arbitrary\n  headers can be set as key/value pairs on the `RESTAdapter`'s `headers`\n  object and Ember Data will send them along with each ajax request.\n\n\n  ```app/adapters/application.js\n  import RESTAdapter from '@ember-data/adapter/rest';\n  import { computed } from '@ember/object';\n\n  export default class ApplicationAdapter extends RESTAdapter {\n    headers: computed(function() {\n      return {\n        'API_KEY': 'secret key',\n        'ANOTHER_HEADER': 'Some header value'\n      };\n    }\n  }\n  ```\n\n  `headers` can also be used as a computed property to support dynamic\n  headers. In the example below, the `session` object has been\n  injected into an adapter by Ember's container.\n\n  ```app/adapters/application.js\n  import RESTAdapter from '@ember-data/adapter/rest';\n  import { computed } from '@ember/object';\n\n  export default class ApplicationAdapter extends RESTAdapter {\n    headers: computed('session.authToken', function() {\n      return {\n        'API_KEY': this.session.authToken,\n        'ANOTHER_HEADER': 'Some header value'\n      };\n    })\n  }\n  ```\n\n  In some cases, your dynamic headers may require data from some\n  object outside of Ember's observer system (for example\n  `document.cookie`). You can use the\n  [volatile](/api/classes/Ember.ComputedProperty.html?anchor=volatile)\n  function to set the property into a non-cached mode causing the headers to\n  be recomputed with every request.\n\n  ```app/adapters/application.js\n  import RESTAdapter from '@ember-data/adapter/rest';\n  import { computed } from '@ember/object';\n\n  export default class ApplicationAdapter extends RESTAdapter {\n    headers: computed(function() {\n      return {\n        'API_KEY': document.cookie.match(/apiKey\\=([^;]*)/)['1'],\n        'ANOTHER_HEADER': 'Some header value'\n      };\n    }).volatile()\n  }\n  ```\n\n  @class RESTAdapter\n  @main @ember-data/adapter/rest\n  @public\n  @constructor\n  @extends Adapter\n  @uses BuildURLMixin\n*/\nlet RESTAdapter = (_dec = (0,_ember_object__WEBPACK_IMPORTED_MODULE_3__.computed)(), (_class = class RESTAdapter extends _index_4RESM7Oz__WEBPACK_IMPORTED_MODULE_0__.A.extend(_build_url_mixin_AgfAmsW___WEBPACK_IMPORTED_MODULE_5__.B) {\n  constructor(...args) {\n    super(...args);\n    /**\n      This property allows ajax to still be used instead when `false`.\n       @property useFetch\n      @type {Boolean}\n      @default true\n      @public\n    */\n    this.useFetch = true;\n    this._defaultContentType = 'application/json; charset=utf-8';\n    // http://stackoverflow.com/questions/417142/what-is-the-maximum-length-of-a-url-in-different-browsers\n    this.maxURLLength = 2048;\n  }\n  get fastboot() {\n    // Avoid computed property override deprecation in fastboot as suggested by:\n    // https://deprecations.emberjs.com/v3.x/#toc_computed-property-override\n    const fastboot = this._fastboot;\n    if (fastboot) {\n      return fastboot;\n    }\n    return this._fastboot = (0,_ember_application__WEBPACK_IMPORTED_MODULE_1__.getOwner)(this).lookup('service:fastboot');\n  }\n  set fastboot(value) {\n    this._fastboot = value;\n  }\n\n  /**\n    By default, the RESTAdapter will send the query params sorted alphabetically to the\n    server.\n     For example:\n     ```js\n    store.query('posts', { sort: 'price', category: 'pets' });\n    ```\n     will generate a requests like this `/posts?category=pets&sort=price`, even if the\n    parameters were specified in a different order.\n     That way the generated URL will be deterministic and that simplifies caching mechanisms\n    in the backend.\n     Setting `sortQueryParams` to a falsey value will respect the original order.\n     In case you want to sort the query parameters with a different criteria, set\n    `sortQueryParams` to your custom sort function.\n     ```app/adapters/application.js\n    import RESTAdapter from '@ember-data/adapter/rest';\n     export default class ApplicationAdapter extends RESTAdapter {\n      sortQueryParams(params) {\n        let sortedKeys = Object.keys(params).sort().reverse();\n        let len = sortedKeys.length, newParams = {};\n         for (let i = 0; i < len; i++) {\n          newParams[sortedKeys[i]] = params[sortedKeys[i]];\n        }\n         return newParams;\n      }\n    }\n    ```\n     @method sortQueryParams\n    @param {Object} obj\n    @return {Object}\n    @public\n  */\n  sortQueryParams(obj) {\n    const keys = Object.keys(obj);\n    const len = keys.length;\n    if (len < 2) {\n      return obj;\n    }\n    const newQueryParams = {};\n    const sortedKeys = keys.sort();\n    for (let i = 0; i < len; i++) {\n      newQueryParams[sortedKeys[i]] = obj[sortedKeys[i]];\n    }\n    return newQueryParams;\n  }\n\n  /**\n    By default the RESTAdapter will send each find request coming from a `store.find`\n    or from accessing a relationship separately to the server. If your server supports passing\n    ids as a query string, you can set coalesceFindRequests to true to coalesce all find requests\n    within a single runloop.\n     For example, if you have an initial payload of:\n     ```javascript\n    {\n      post: {\n        id: 1,\n        comments: [1, 2]\n      }\n    }\n    ```\n     By default calling `post.comments` will trigger the following requests(assuming the\n    comments haven't been loaded before):\n     ```\n    GET /comments/1\n    GET /comments/2\n    ```\n     If you set coalesceFindRequests to `true` it will instead trigger the following request:\n     ```\n    GET /comments?ids[]=1&ids[]=2\n    ```\n     Setting coalesceFindRequests to `true` also works for `store.find` requests and `belongsTo`\n    relationships accessed within the same runloop. If you set `coalesceFindRequests: true`\n     ```javascript\n    store.findRecord('comment', 1);\n    store.findRecord('comment', 2);\n    ```\n     will also send a request to: `GET /comments?ids[]=1&ids[]=2`\n     Note: Requests coalescing rely on URL building strategy. So if you override `buildURL` in your app\n    `groupRecordsForFindMany` more likely should be overridden as well in order for coalescing to work.\n     @property coalesceFindRequests\n    @public\n    @type {boolean}\n  */\n  get coalesceFindRequests() {\n    const coalesceFindRequests = this._coalesceFindRequests;\n    if (typeof coalesceFindRequests === 'boolean') {\n      return coalesceFindRequests;\n    }\n    return this._coalesceFindRequests = false;\n  }\n  set coalesceFindRequests(value) {\n    this._coalesceFindRequests = value;\n  }\n\n  /**\n    Endpoint paths can be prefixed with a `namespace` by setting the namespace\n    property on the adapter:\n     ```app/adapters/application.js\n    import RESTAdapter from '@ember-data/adapter/rest';\n     export default class ApplicationAdapter extends RESTAdapter {\n      namespace = 'api/1';\n    }\n    ```\n     Requests for the `Post` model would now target `/api/1/post/`.\n     @property namespace\n    @public\n    @type {String}\n  */\n\n  /**\n    An adapter can target other hosts by setting the `host` property.\n     ```app/adapters/application.js\n    import RESTAdapter from '@ember-data/adapter/rest';\n     export default class ApplicationAdapter extends RESTAdapter {\n      host = 'https://api.example.com';\n    }\n    ```\n     Requests for the `Post` model would now target `https://api.example.com/post/`.\n     @property host\n    @public\n    @type {String}\n  */\n\n  /**\n    Some APIs require HTTP headers, e.g. to provide an API\n    key. Arbitrary headers can be set as key/value pairs on the\n    `RESTAdapter`'s `headers` object and Ember Data will send them\n    along with each ajax request. For dynamic headers see [headers\n    customization](/ember-data/release/classes/RESTAdapter).\n     ```app/adapters/application.js\n    import RESTAdapter from '@ember-data/adapter/rest';\n    import { computed } from '@ember/object';\n     export default class ApplicationAdapter extends RESTAdapter {\n      headers: computed(function() {\n        return {\n          'API_KEY': 'secret key',\n          'ANOTHER_HEADER': 'Some header value'\n        };\n      })\n    }\n    ```\n     @property headers\n    @public\n    @type {Object}\n   */\n\n  /**\n    Called by the store in order to fetch the JSON for a given\n    type and ID.\n     The `findRecord` method makes an Ajax request to a URL computed by\n    `buildURL`, and returns a promise for the resulting payload.\n     This method performs an HTTP `GET` request with the id provided as part of the query string.\n     @since 1.13.0\n    @method findRecord\n    @public\n    @param {Store} store\n    @param {Model} type\n    @param {String} id\n    @param {Snapshot} snapshot\n    @return {Promise} promise\n  */\n  findRecord(store, type, id, snapshot) {\n    const url = this.buildURL(type.modelName, id, snapshot, 'findRecord');\n    const query = this.buildQuery(snapshot);\n    return this.ajax(url, 'GET', {\n      data: query\n    });\n  }\n\n  /**\n    Called by the store in order to fetch a JSON array for all\n    of the records for a given type.\n     The `findAll` method makes an Ajax (HTTP GET) request to a URL computed by `buildURL`, and returns a\n    promise for the resulting payload.\n     @method findAll\n    @public\n    @param {Store} store\n    @param {Model} type\n    @param {undefined} neverSet a value is never provided to this argument\n    @param {SnapshotRecordArray} snapshotRecordArray\n    @return {Promise} promise\n  */\n  findAll(store, type, sinceToken, snapshotRecordArray) {\n    const query = this.buildQuery(snapshotRecordArray);\n    const url = this.buildURL(type.modelName, null, snapshotRecordArray, 'findAll');\n    if (sinceToken) {\n      query.since = sinceToken;\n    }\n    return this.ajax(url, 'GET', {\n      data: query\n    });\n  }\n\n  /**\n    Called by the store in order to fetch a JSON array for\n    the records that match a particular query.\n     The `query` method makes an Ajax (HTTP GET) request to a URL\n    computed by `buildURL`, and returns a promise for the resulting\n    payload.\n     The `query` argument is a simple JavaScript object that will be passed directly\n    to the server as parameters.\n     @method query\n    @public\n    @param {Store} store\n    @param {Model} type\n    @param {Object} query\n    @param {Collection} recordArray\n    @param {Object} adapterOptions\n    @return {Promise} promise\n  */\n  query(store, type, query) {\n    const url = this.buildURL(type.modelName, null, null, 'query', query);\n    if (this.sortQueryParams) {\n      query = this.sortQueryParams(query);\n    }\n    return this.ajax(url, 'GET', {\n      data: query\n    });\n  }\n\n  /**\n    Called by the store in order to fetch a JSON object for\n    the record that matches a particular query.\n     The `queryRecord` method makes an Ajax (HTTP GET) request to a URL\n    computed by `buildURL`, and returns a promise for the resulting\n    payload.\n     The `query` argument is a simple JavaScript object that will be passed directly\n    to the server as parameters.\n     @since 1.13.0\n    @method queryRecord\n    @public\n    @param {Store} store\n    @param {Model} type\n    @param {Object} query\n    @param {Object} adapterOptions\n    @return {Promise} promise\n  */\n  queryRecord(store, type, query, adapterOptions) {\n    const url = this.buildURL(type.modelName, null, null, 'queryRecord', query);\n    if (this.sortQueryParams) {\n      query = this.sortQueryParams(query);\n    }\n    return this.ajax(url, 'GET', {\n      data: query\n    });\n  }\n\n  /**\n    Called by the store in order to fetch several records together if `coalesceFindRequests` is true\n     For example, if the original payload looks like:\n     ```js\n    {\n      \"id\": 1,\n      \"title\": \"Rails is omakase\",\n      \"comments\": [ 1, 2, 3 ]\n    }\n    ```\n     The IDs will be passed as a URL-encoded Array of IDs, in this form:\n     ```\n    ids[]=1&ids[]=2&ids[]=3\n    ```\n     Many servers, such as Rails and PHP, will automatically convert this URL-encoded array\n    into an Array for you on the server-side. If you want to encode the\n    IDs, differently, just override this (one-line) method.\n     The `findMany` method makes an Ajax (HTTP GET) request to a URL computed by `buildURL`, and returns a\n    promise for the resulting payload.\n     @method findMany\n    @public\n    @param {Store} store\n    @param {Model} type\n    @param {Array} ids\n    @param {Array} snapshots\n    @return {Promise} promise\n  */\n  findMany(store, type, ids, snapshots) {\n    const url = this.buildURL(type.modelName, ids, snapshots, 'findMany');\n    return this.ajax(url, 'GET', {\n      data: {\n        ids: ids\n      }\n    });\n  }\n\n  /**\n    Called by the store in order to fetch a JSON array for\n    the unloaded records in a has-many relationship that were originally\n    specified as a URL (inside of `links`).\n     For example, if your original payload looks like this:\n     ```js\n    {\n      \"post\": {\n        \"id\": 1,\n        \"title\": \"Rails is omakase\",\n        \"links\": { \"comments\": \"/posts/1/comments\" }\n      }\n    }\n    ```\n     This method will be called with the parent record and `/posts/1/comments`.\n     The `findHasMany` method will make an Ajax (HTTP GET) request to the originally specified URL.\n     The format of your `links` value will influence the final request URL via the `urlPrefix` method:\n     * Links beginning with `//`, `http://`, `https://`, will be used as is, with no further manipulation.\n     * Links beginning with a single `/` will have the current adapter's `host` value prepended to it.\n     * Links with no beginning `/` will have a parentURL prepended to it, via the current adapter's `buildURL`.\n     @method findHasMany\n    @public\n    @param {Store} store\n    @param {Snapshot} snapshot\n    @param {String} url\n    @param {Object} relationship meta object describing the relationship\n    @return {Promise} promise\n  */\n  findHasMany(store, snapshot, url, relationship) {\n    const id = snapshot.id;\n    const type = snapshot.modelName;\n    ( true && !(typeof id === 'string' && id.length > 0) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_2__.assert)(`Attempted to fetch the hasMany relationship for ${type}, but the record has no id`, typeof id === 'string' && id.length > 0));\n    url = this.urlPrefix(url, this.buildURL(type, id, snapshot, 'findHasMany'));\n    return this.ajax(url, 'GET');\n  }\n\n  /**\n    Called by the store in order to fetch the JSON for the unloaded record in a\n    belongs-to relationship that was originally specified as a URL (inside of\n    `links`).\n     For example, if your original payload looks like this:\n     ```js\n    {\n      \"person\": {\n        \"id\": 1,\n        \"name\": \"Tom Dale\",\n        \"links\": { \"group\": \"/people/1/group\" }\n      }\n    }\n    ```\n     This method will be called with the parent record and `/people/1/group`.\n     The `findBelongsTo` method will make an Ajax (HTTP GET) request to the originally specified URL.\n     The format of your `links` value will influence the final request URL via the `urlPrefix` method:\n     * Links beginning with `//`, `http://`, `https://`, will be used as is, with no further manipulation.\n     * Links beginning with a single `/` will have the current adapter's `host` value prepended to it.\n     * Links with no beginning `/` will have a parentURL prepended to it, via the current adapter's `buildURL`.\n     @method findBelongsTo\n    @public\n    @param {Store} store\n    @param {Snapshot} snapshot\n    @param {String} url\n    @param {Object} relationship meta object describing the relationship\n    @return {Promise} promise\n  */\n  findBelongsTo(store, snapshot, url, relationship) {\n    const id = snapshot.id;\n    const type = snapshot.modelName;\n    ( true && !(typeof id === 'string' && id.length > 0) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_2__.assert)(`Attempted to fetch the belongsTo relationship for ${type}, but the record has no id`, typeof id === 'string' && id.length > 0));\n    url = this.urlPrefix(url, this.buildURL(type, id, snapshot, 'findBelongsTo'));\n    return this.ajax(url, 'GET');\n  }\n\n  /**\n    Called by the store when a newly created record is\n    saved via the `save` method on a model record instance.\n     The `createRecord` method serializes the record and makes an Ajax (HTTP POST) request\n    to a URL computed by `buildURL`.\n     See `serialize` for information on how to customize the serialized form\n    of a record.\n     @method createRecord\n    @public\n    @param {Store} store\n    @param {Model} type\n    @param {Snapshot} snapshot\n    @return {Promise} promise\n  */\n  createRecord(store, type, snapshot) {\n    const url = this.buildURL(type.modelName, null, snapshot, 'createRecord');\n    const data = (0,_serialize_into_hash_2lQbHRKN__WEBPACK_IMPORTED_MODULE_4__.b)(store, type, snapshot);\n    return this.ajax(url, 'POST', {\n      data\n    });\n  }\n\n  /**\n    Called by the store when an existing record is saved\n    via the `save` method on a model record instance.\n     The `updateRecord` method serializes the record and makes an Ajax (HTTP PUT) request\n    to a URL computed by `buildURL`.\n     See `serialize` for information on how to customize the serialized form\n    of a record.\n     @method updateRecord\n    @public\n    @param {Store} store\n    @param {Model} schema\n    @param {Snapshot} snapshot\n    @return {Promise} promise\n  */\n  updateRecord(store, schema, snapshot) {\n    const data = (0,_serialize_into_hash_2lQbHRKN__WEBPACK_IMPORTED_MODULE_4__.b)(store, schema, snapshot, {});\n    const type = snapshot.modelName;\n    const id = snapshot.id;\n    ( true && !(typeof id === 'string' && id.length > 0) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_2__.assert)(`Attempted to update the ${type} record, but the record has no id`, typeof id === 'string' && id.length > 0));\n    const url = this.buildURL(type, id, snapshot, 'updateRecord');\n    return this.ajax(url, 'PUT', {\n      data\n    });\n  }\n\n  /**\n    Called by the store when a record is deleted.\n     The `deleteRecord` method  makes an Ajax (HTTP DELETE) request to a URL computed by `buildURL`.\n     @method deleteRecord\n    @public\n    @param {Store} store\n    @param {Model} type\n    @param {Snapshot} snapshot\n    @return {Promise} promise\n  */\n  deleteRecord(store, schema, snapshot) {\n    const type = snapshot.modelName;\n    const id = snapshot.id;\n    ( true && !(typeof id === 'string' && id.length > 0) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_2__.assert)(`Attempted to delete the ${type} record, but the record has no id`, typeof id === 'string' && id.length > 0));\n    return this.ajax(this.buildURL(type, id, snapshot, 'deleteRecord'), 'DELETE');\n  }\n  _stripIDFromURL(store, snapshot) {\n    const type = snapshot.modelName;\n    const id = snapshot.id;\n    ( true && !(typeof id === 'string' && id.length > 0) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_2__.assert)(`Attempted to strip the url from the ${type} record for coalescing, but the record has no id`, typeof id === 'string' && id.length > 0));\n    const url = this.buildURL(type, id, snapshot);\n    const expandedURL = url.split('/');\n    // Case when the url is of the format ...something/:id\n    // We are decodeURIComponent-ing the lastSegment because if it represents\n    // the id, it has been encodeURIComponent-ified within `buildURL`. If we\n    // don't do this, then records with id having special characters are not\n    // coalesced correctly (see GH #4190 for the reported bug)\n    const lastSegment = expandedURL[expandedURL.length - 1];\n    if (decodeURIComponent(lastSegment) === id) {\n      expandedURL[expandedURL.length - 1] = '';\n    } else if (id && endsWith(lastSegment, '?id=' + id)) {\n      //Case when the url is of the format ...something?id=:id\n      expandedURL[expandedURL.length - 1] = lastSegment.substring(0, lastSegment.length - id.length - 1);\n    }\n    return expandedURL.join('/');\n  }\n  /**\n    Organize records into groups, each of which is to be passed to separate\n    calls to `findMany`.\n     This implementation groups together records that have the same base URL but\n    differing ids. For example `/comments/1` and `/comments/2` will be grouped together\n    because we know findMany can coalesce them together as `/comments?ids[]=1&ids[]=2`\n     It also supports urls where ids are passed as a query param, such as `/comments?id=1`\n    but not those where there is more than 1 query param such as `/comments?id=2&name=David`\n    Currently only the query param of `id` is supported. If you need to support others, please\n    override this or the `_stripIDFromURL` method.\n     It does not group records that have differing base urls, such as for example: `/posts/1/comments/2`\n    and `/posts/2/comments/3`\n     @method groupRecordsForFindMany\n    @public\n    @param {Store} store\n    @param {Array} snapshots\n    @return {Array}  an array of arrays of records, each of which is to be\n                      loaded separately by `findMany`.\n  */\n  groupRecordsForFindMany(store, snapshots) {\n    const groups = new Map();\n    const maxURLLength = this.maxURLLength;\n    snapshots.forEach(snapshot => {\n      const baseUrl = this._stripIDFromURL(store, snapshot);\n      if (!groups.has(baseUrl)) {\n        groups.set(baseUrl, []);\n      }\n      groups.get(baseUrl).push(snapshot);\n    });\n    const groupsArray = [];\n    groups.forEach((group, key) => {\n      const paramNameLength = '&ids%5B%5D='.length;\n      const splitGroups = splitGroupToFitInUrl(store, this, group, maxURLLength, paramNameLength);\n      splitGroups.forEach(splitGroup => groupsArray.push(splitGroup));\n    });\n    return groupsArray;\n  }\n\n  /**\n    Takes an ajax response, and returns the json payload or an error.\n     By default this hook just returns the json payload passed to it.\n    You might want to override it in two cases:\n     1. Your API might return useful results in the response headers.\n    Response headers are passed in as the second argument.\n     2. Your API might return errors as successful responses with status code\n    200 and an Errors text or object. You can return a `InvalidError` or a\n    `AdapterError` (or a sub class) from this hook and it will automatically\n    reject the promise and put your record into the invalid or error state.\n     Returning a `InvalidError` from this method will cause the\n    record to transition into the `invalid` state and make the\n    `errors` object available on the record. When returning an\n    `InvalidError` the store will attempt to normalize the error data\n    returned from the server using the serializer's `extractErrors`\n    method.\n     @since 1.13.0\n    @method handleResponse\n    @public\n    @param  {Number} status\n    @param  {Object} headers\n    @param  {Object} payload\n    @param  {Object} requestData - the original request information\n    @return {Object | AdapterError} response\n  */\n  handleResponse(status, headers, payload, requestData) {\n    if (this.isSuccess(status, headers, payload)) {\n      return payload;\n    } else if (this.isInvalid(status, headers, payload)) {\n      return new _error__WEBPACK_IMPORTED_MODULE_6__.InvalidError(typeof payload === 'object' && 'errors' in payload ? payload.errors : undefined);\n    }\n    const errors = this.normalizeErrorResponse(status, headers, payload);\n    const detailedMessage = this.generatedDetailedMessage(status, headers, payload, requestData);\n    switch (status) {\n      case 401:\n        return new _error__WEBPACK_IMPORTED_MODULE_6__.UnauthorizedError(errors, detailedMessage);\n      case 403:\n        return new _error__WEBPACK_IMPORTED_MODULE_6__.ForbiddenError(errors, detailedMessage);\n      case 404:\n        return new _error__WEBPACK_IMPORTED_MODULE_6__.NotFoundError(errors, detailedMessage);\n      case 409:\n        return new _error__WEBPACK_IMPORTED_MODULE_6__.ConflictError(errors, detailedMessage);\n      default:\n        if (status >= 500) {\n          return new _error__WEBPACK_IMPORTED_MODULE_6__.ServerError(errors, detailedMessage);\n        }\n    }\n    return new _error__WEBPACK_IMPORTED_MODULE_6__[\"default\"](errors, detailedMessage);\n  }\n\n  /**\n    Default `handleResponse` implementation uses this hook to decide if the\n    response is a success.\n     @since 1.13.0\n    @method isSuccess\n    @public\n    @param  {Number} status\n    @param  {Object} headers\n    @param  {Object} payload\n    @return {Boolean}\n  */\n  isSuccess(status, _headers, _payload) {\n    return status >= 200 && status < 300 || status === 304;\n  }\n\n  /**\n    Default `handleResponse` implementation uses this hook to decide if the\n    response is an invalid error.\n     @since 1.13.0\n    @method isInvalid\n    @public\n    @param  {Number} status\n    @param  {Object} headers\n    @param  {Object} payload\n    @return {Boolean}\n  */\n  isInvalid(status, _headers, _payload) {\n    return status === 422;\n  }\n\n  /**\n    Takes a URL, an HTTP method and a hash of data, and makes an\n    HTTP request.\n     When the server responds with a payload, Ember Data will call into `extractSingle`\n    or `extractArray` (depending on whether the original query was for one record or\n    many records).\n     By default, `ajax` method has the following behavior:\n     * It sets the response `dataType` to `\"json\"`\n    * If the HTTP method is not `\"GET\"`, it sets the `Content-Type` to be\n      `application/json; charset=utf-8`\n    * If the HTTP method is not `\"GET\"`, it stringifies the data passed in. The\n      data is the serialized record in the case of a save.\n    * Registers success and failure handlers.\n     @method ajax\n    @private\n    @param {String} url\n    @param {String} type The request type GET, POST, PUT, DELETE etc.\n    @param {Object} options\n    @return {Promise} promise\n  */\n  async ajax(url, type, options = {}) {\n    const requestData = {\n      url: url,\n      method: type\n    };\n    if (this.useFetch) {\n      // @ts-expect-error poorly typed\n      const hash = this.ajaxOptions(url, type, options);\n      const response = await this._fetchRequest(hash);\n      const payload = await (0,_serialize_into_hash_2lQbHRKN__WEBPACK_IMPORTED_MODULE_4__.d)(response, requestData);\n      if (response.ok && !(payload instanceof Error)) {\n        return fetchSuccessHandler(this, payload, response, requestData);\n      } else {\n        // eslint-disable-next-line @typescript-eslint/no-throw-literal\n        throw fetchErrorHandler(this, payload, response, null, requestData);\n      }\n    } else {\n      return execjQAjax(this, requestData, options);\n    }\n  }\n\n  /**\n    @method _ajaxRequest\n    @private\n    @param {Object} options jQuery ajax options to be used for the ajax request\n  */\n  _ajaxRequest(options) {\n    ( true && !(typeof jQuery !== 'undefined') && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_2__.assert)('You must install jQuery globally when `useFetch` is false', typeof jQuery !== 'undefined'));\n    void jQuery.ajax(options);\n  }\n  _fetchRequest(options) {\n    const fetchFunction = (0,_serialize_into_hash_2lQbHRKN__WEBPACK_IMPORTED_MODULE_4__.g)();\n    return fetchFunction(options.url, options);\n  }\n  _ajax(options) {\n    if (this.useFetch) {\n      void this._fetchRequest(options);\n    } else {\n      this._ajaxRequest(options);\n    }\n  }\n\n  /**\n    @method ajaxOptions\n    @private\n    @param {String} url\n    @param {String} type The request type GET, POST, PUT, DELETE etc.\n    @param {Object} options\n    @return {Object}\n  */\n  ajaxOptions(url, method, options) {\n    let reqOptions = Object.assign({\n      url,\n      method,\n      type: method\n    }, options);\n    if (this.headers !== undefined) {\n      // @ts-expect-error poorly typed\n      reqOptions.headers = {\n        ...this.headers,\n        ...reqOptions.headers\n      };\n    } else if (!options.headers) {\n      reqOptions.headers = {};\n    }\n\n    // @ts-expect-error poorly typed\n    const contentType = reqOptions.contentType || this._defaultContentType;\n    if (this.useFetch) {\n      // @ts-expect-error poorly typed\n      if (reqOptions.data && reqOptions.type !== 'GET' && reqOptions.headers) {\n        if (!reqOptions.headers['Content-Type'] && !reqOptions.headers['content-type']) {\n          reqOptions.headers['content-type'] = contentType;\n        }\n      }\n      // @ts-expect-error poorly typed\n      reqOptions = fetchOptions(reqOptions);\n    } else {\n      // GET requests without a body should not have a content-type header\n      // and may be unexpected by a server\n      // @ts-expect-error poorly typed\n      if (reqOptions.data && reqOptions.type !== 'GET') {\n        // @ts-expect-error poorly typed\n        reqOptions = {\n          ...reqOptions,\n          contentType\n        };\n      }\n      // @ts-expect-error poorly typed\n      reqOptions = ajaxOptions(reqOptions, this);\n    }\n    reqOptions.url = this._ajaxURL(reqOptions.url);\n    return reqOptions;\n  }\n  _ajaxURL(url) {\n    if (this.fastboot?.isFastBoot) {\n      const httpRegex = /^https?:\\/\\//;\n      const protocolRelativeRegex = /^\\/\\//;\n      const protocol = this.fastboot.request.protocol;\n      const host = this.fastboot.request.host;\n      if (protocolRelativeRegex.test(url)) {\n        return `${protocol}${url}`;\n      } else if (!httpRegex.test(url)) {\n        try {\n          return `${protocol}//${host}${url}`;\n        } catch (fbError) {\n          throw new Error('You are using Ember Data with no host defined in your adapter. This will attempt to use the host of the FastBoot request, which is not configured for the current host of this request. Please set the hostWhitelist property for in your environment.js. FastBoot Error: ' + fbError.message);\n        }\n      }\n    }\n    return url;\n  }\n\n  /**\n    @method parseErrorResponse\n    @private\n    @param {String} responseText\n    @return {Object}\n  */\n  parseErrorResponse(responseText) {\n    let json = responseText;\n    try {\n      json = JSON.parse(responseText);\n    } catch (e) {\n      // ignored\n    }\n    return json;\n  }\n\n  /**\n    @method normalizeErrorResponse\n    @private\n    @param  {Number} status\n    @param  {Object} headers\n    @param  {Object} payload\n    @return {Array} errors payload\n  */\n  normalizeErrorResponse(status, _headers, payload) {\n    if (payload && typeof payload === 'object' && 'errors' in payload && Array.isArray(payload.errors)) {\n      return payload.errors;\n    } else {\n      return [{\n        status: `${status}`,\n        // Set to a string per the JSON API spec: https://jsonapi.org/format/#errors\n        title: 'The backend responded with an error',\n        // Detail is intended to be a string, but backends be non-compliant.\n        // stringifying gives the user a more friendly error in this situation, whereas\n        // they'd instead receive [object Object].\n        // JSON.stringify will convert *anything* to a string without erroring.\n        detail: typeof payload === 'string' ? payload : JSON.stringify(payload)\n      }];\n    }\n  }\n\n  /**\n    Generates a detailed (\"friendly\") error message, with plenty\n    of information for debugging (good luck!)\n     @method generatedDetailedMessage\n    @private\n    @param  {Number} status\n    @param  {Object} headers\n    @param  {Object} payload\n    @param  {Object} requestData\n    @return {String} detailed error message\n  */\n  generatedDetailedMessage(status, headers, payload, requestData) {\n    let shortenedPayload;\n    const payloadContentType = headers['content-type'] || 'Empty Content-Type';\n    if (payloadContentType === 'text/html' && typeof payload === 'string' && payload.length > 250) {\n      shortenedPayload = '[Omitted Lengthy HTML]';\n    } else if (typeof payload === 'object' && payload !== null) {\n      shortenedPayload = JSON.stringify(payload, null, 2);\n    } else {\n      shortenedPayload = payload;\n    }\n    const requestDescription = requestData.method + ' ' + requestData.url;\n    const payloadDescription = 'Payload (' + payloadContentType + ')';\n    return ['Ember Data Request ' + requestDescription + ' returned a ' + status, payloadDescription, shortenedPayload].join('\\n');\n  }\n\n  /**\n    Used by `findAll` and `findRecord` to build the query's `data` hash\n    supplied to the ajax method.\n     @method buildQuery\n    @since 2.5.0\n    @public\n    @param  {Snapshot} snapshot\n    @return {Object}\n  */\n  buildQuery(snapshot) {\n    const query = {};\n    if (snapshot) {\n      const {\n        include\n      } = snapshot;\n      if (include) {\n        query.include = include;\n      }\n    }\n    return query;\n  }\n}, (0,_index_4RESM7Oz__WEBPACK_IMPORTED_MODULE_0__._)(_class.prototype, \"fastboot\", [_dec], Object.getOwnPropertyDescriptor(_class.prototype, \"fastboot\"), _class.prototype), _class));\nfunction ajaxSuccess(adapter, payload, requestData, responseData) {\n  let response;\n  try {\n    response = adapter.handleResponse(responseData.status, responseData.headers, payload, requestData);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n  if (response && response.isAdapterError) {\n    return Promise.reject(response);\n  } else {\n    return response;\n  }\n}\nfunction ajaxError(adapter, payload, requestData, responseData) {\n  let error;\n  if (responseData.errorThrown instanceof Error && payload !== '') {\n    error = responseData.errorThrown;\n  } else if (responseData.textStatus === 'timeout') {\n    error = new _error__WEBPACK_IMPORTED_MODULE_6__.TimeoutError();\n  } else if (responseData.textStatus === 'abort' || responseData.status === 0) {\n    error = handleAbort(requestData, responseData);\n  } else {\n    try {\n      error = adapter.handleResponse(responseData.status, responseData.headers, payload || responseData.errorThrown, requestData);\n    } catch (e) {\n      error = e;\n    }\n  }\n  return error;\n}\n\n// Adapter abort error to include any relevent info, e.g. request/response:\nfunction handleAbort(requestData, responseData) {\n  const {\n    method,\n    url,\n    errorThrown\n  } = requestData;\n  const {\n    status\n  } = responseData;\n  const msg = `Request failed: ${method} ${url} ${String(errorThrown ?? '')}`;\n  const errors = [{\n    title: 'Adapter Error',\n    detail: msg.trim(),\n    status\n  }];\n  return new _error__WEBPACK_IMPORTED_MODULE_6__.AbortError(errors);\n}\n\n//From http://stackoverflow.com/questions/280634/endswith-in-javascript\nfunction endsWith(string, suffix) {\n  if (typeof String.prototype.endsWith !== 'function') {\n    return string.includes(suffix, string.length - suffix.length);\n  } else {\n    return string.endsWith(suffix);\n  }\n}\nfunction fetchSuccessHandler(adapter, payload, response, requestData) {\n  const responseData = fetchResponseData(response);\n  return ajaxSuccess(adapter, payload, requestData, responseData);\n}\nfunction fetchErrorHandler(adapter, payload, response, errorThrown, requestData) {\n  const responseData = fetchResponseData(response);\n  if (responseData.status === 200 && payload instanceof Error) {\n    responseData.errorThrown = payload;\n    // @ts-expect-error poorly typed\n    payload = responseData.errorThrown.payload;\n  } else {\n    responseData.errorThrown = errorThrown;\n    if (typeof payload === 'string') {\n      payload = adapter.parseErrorResponse(payload);\n    }\n  }\n  return ajaxError(adapter, payload, requestData, responseData);\n}\nfunction ajaxSuccessHandler(adapter, payload, jqXHR, requestData) {\n  const responseData = ajaxResponseData(jqXHR);\n  return ajaxSuccess(adapter, payload, requestData, responseData);\n}\nfunction ajaxErrorHandler(adapter, jqXHR, errorThrown, requestData) {\n  const responseData = ajaxResponseData(jqXHR);\n  responseData.errorThrown = errorThrown;\n  const payload = adapter.parseErrorResponse(jqXHR.responseText);\n  {\n    const message = `The server returned an empty string for ${requestData.method} ${requestData.url}, which cannot be parsed into a valid JSON. Return either null or {}.`;\n    const validJSONString = !(responseData.textStatus === 'parsererror' && payload === '');\n    ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_2__.warn)(message, validJSONString, {\n      id: 'ds.adapter.returned-empty-string-as-JSON'\n    }));\n  }\n  return ajaxError(adapter, payload, requestData, responseData);\n}\nfunction fetchResponseData(response) {\n  return {\n    status: response.status,\n    textStatus: response.statusText,\n    headers: headersToObject(response.headers)\n  };\n}\nfunction ajaxResponseData(jqXHR) {\n  return {\n    status: jqXHR.status,\n    textStatus: jqXHR.statusText,\n    headers: (0,_serialize_into_hash_2lQbHRKN__WEBPACK_IMPORTED_MODULE_4__.p)(jqXHR.getAllResponseHeaders())\n  };\n}\nfunction headersToObject(headers) {\n  const headersObject = {};\n  if (headers) {\n    headers.forEach((value, key) => headersObject[key] = value);\n  }\n  return headersObject;\n}\n\n/**\n * Helper function that translates the options passed to `jQuery.ajax` into a format that `fetch` expects.\n *\n * @method fetchOptions\n * @for @ember-data/adapter/rest\n * @param {Object} _options\n * @param {Adapter} adapter\n * @private\n * @return {Object}\n */\nfunction fetchOptions(options, adapter) {\n  options.credentials = options.credentials || 'same-origin';\n  if (options.data) {\n    // GET and HEAD requests can't have a `body`\n    if (options.method === 'GET' || options.method === 'HEAD') {\n      // If no options are passed, Ember Data sets `data` to an empty object, which we test for.\n      if (Object.keys(options.data).length && options.url) {\n        // Test if there are already query params in the url (mimics jQuey.ajax).\n        const queryParamDelimiter = options.url.includes('?') ? '&' : '?';\n        options.url += `${queryParamDelimiter}${(0,_serialize_into_hash_2lQbHRKN__WEBPACK_IMPORTED_MODULE_4__.s)(options.data)}`;\n      }\n    } else {\n      // NOTE: a request's body cannot be an object, so we stringify it if it is.\n      // JSON.stringify removes keys with values of `undefined` (mimics jQuery.ajax).\n      // If the data is not a POJO (it's a String, FormData, etc), we just set it.\n      // If the data is a string, we assume it's a stringified object.\n\n      /* We check for Objects this way because we want the logic inside the consequent to run\n       * if `options.data` is a POJO, not if it is a data structure whose `typeof` returns \"object\"\n       * when it's not (Array, FormData, etc). The reason we don't use `options.data.constructor`\n       * to check is in case `data` is an object with no prototype (e.g. created with null).\n       */\n      if (Object.prototype.toString.call(options.data) === '[object Object]') {\n        options.body = JSON.stringify(options.data);\n      } else {\n        // @ts-expect-error poorly typed\n        options.body = options.data;\n      }\n    }\n  }\n  return options;\n}\nfunction ajaxOptions(options, adapter) {\n  options.dataType = 'json';\n  options.context = adapter;\n  if (options.data && options.type !== 'GET') {\n    options.data = JSON.stringify(options.data);\n  }\n  options.beforeSend = function (xhr) {\n    if (options.headers) {\n      Object.keys(options.headers).forEach(key => {\n        const headerValue = options.headers && options.headers[key];\n        const isString = value => typeof value === 'string';\n        if (isString(headerValue)) {\n          xhr.setRequestHeader(key, headerValue);\n        }\n      });\n    }\n  };\n  return options;\n}\nfunction execjQAjax(adapter, requestData, options) {\n  const hash = adapter.ajaxOptions(requestData.url, requestData.method, options);\n  return new Promise((resolve, reject) => {\n    hash.success = function (payload, textStatus, jqXHR) {\n      const response = ajaxSuccessHandler(adapter, payload, jqXHR, requestData);\n      resolve(response);\n    };\n    hash.error = function (jqXHR, textStatus, errorThrown) {\n      const error = ajaxErrorHandler(adapter, jqXHR, errorThrown, requestData);\n      reject(error);\n    };\n    adapter._ajax(hash);\n  });\n}\nfunction splitGroupToFitInUrl(store, adapter, group, maxURLLength, paramNameLength) {\n  let idsSize = 0;\n  const baseUrl = adapter._stripIDFromURL(store, group[0]);\n  const splitGroups = [[]];\n  group.forEach(snapshot => {\n    const additionalLength = encodeURIComponent(snapshot.id).length + paramNameLength;\n    if (baseUrl.length + idsSize + additionalLength >= maxURLLength) {\n      idsSize = 0;\n      splitGroups.push([]);\n    }\n    idsSize += additionalLength;\n    const lastGroupIndex = splitGroups.length - 1;\n    splitGroups[lastGroupIndex].push(snapshot);\n  });\n  return splitGroups;\n}\n\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@ember-data/adapter.85bda234/node_modules/@ember-data/adapter/rest.js?");

/***/ }),

/***/ "../rewritten-packages/@ember-data/adapter.85bda234/node_modules/@ember-data/adapter/serialize-into-hash-2lQbHRKN.js":
/*!***************************************************************************************************************************!*\
  !*** ../rewritten-packages/@ember-data/adapter.85bda234/node_modules/@ember-data/adapter/serialize-into-hash-2lQbHRKN.js ***!
  \***************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   a: () => (/* binding */ setupFastboot),\n/* harmony export */   b: () => (/* binding */ serializeIntoHash),\n/* harmony export */   d: () => (/* binding */ determineBodyPromise),\n/* harmony export */   g: () => (/* binding */ getFetchFunction),\n/* harmony export */   p: () => (/* binding */ parseResponseHeaders),\n/* harmony export */   s: () => (/* binding */ serializeQueryParams)\n/* harmony export */ });\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/debug */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fdebug&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_debug__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _ember_data_legacy_compat_private__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember-data/legacy-compat/-private */ \"../rewritten-packages/@ember-data/legacy-compat.e84b6420/node_modules/@ember-data/legacy-compat/-private.js\");\n\n\nconst newline = /\\r?\\n/;\nfunction parseResponseHeaders(headersString) {\n  const headers = Object.create(null);\n  if (!headersString) {\n    return headers;\n  }\n  const headerPairs = headersString.split(newline);\n  for (let i = 0; i < headerPairs.length; i++) {\n    const header = headerPairs[i];\n    let j = 0;\n    let foundSep = false;\n    for (; j < header.length; j++) {\n      if (header.charCodeAt(j) === 58 /* ':' */) {\n        foundSep = true;\n        break;\n      }\n    }\n    if (foundSep === false) {\n      continue;\n    }\n    const field = header.substring(0, j).trim();\n    const value = header.substring(j + 1, header.length).trim();\n    if (value) {\n      const lowerCasedField = field.toLowerCase();\n      headers[lowerCasedField] = value;\n      headers[field] = value;\n    }\n  }\n  return headers;\n}\n\n/**\n * A utility function that returns a promise that resolves\n * even when the source promise rejects.\n *\n * @internal\n */\nfunction continueOnReject(promise) {\n  return Promise.resolve(promise).catch(e => e);\n}\n\n/*\n * Function that always attempts to parse the response as json, and if an error is thrown,\n * returns `undefined` if the response is successful and has a status code of 204 (No Content),\n * or 205 (Reset Content) or if the request method was 'HEAD', and the plain payload otherwise.\n */\nfunction _determineContent(response, requestData, payload) {\n  let ret = payload;\n  let error = null;\n  if (!response.ok) {\n    return payload;\n  }\n  const status = response.status;\n  const payloadIsEmpty = payload === '' || payload === null;\n  const statusIndicatesEmptyResponse = status === 204 || status === 205 || requestData.method === 'HEAD';\n  {\n    if (payloadIsEmpty && !statusIndicatesEmptyResponse) {\n      const message = `The server returned an empty string for ${requestData.method} ${requestData.url}, which cannot be parsed into a valid JSON. Return either null or {}.`;\n      if (payload === '') {\n        ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.warn)(message, {\n          id: 'ds.adapter.returned-empty-string-as-JSON'\n        }));\n      }\n    }\n  }\n  if (response.ok && (statusIndicatesEmptyResponse || payloadIsEmpty)) {\n    return;\n  }\n  try {\n    ret = JSON.parse(payload);\n  } catch (e) {\n    if (!(e instanceof SyntaxError)) {\n      return e;\n    }\n    e.payload = payload;\n    error = e;\n  }\n  if (error) {\n    {\n      // eslint-disable-next-line no-console\n      console.warn('This response was unable to be parsed as json.', payload);\n    }\n    return error;\n  }\n  return ret;\n}\nfunction determineBodyPromise(response, requestData) {\n  // response.text() may resolve or reject\n  // it is a native promise, may not have finally\n  return continueOnReject(response.text()).then(payload => _determineContent(response, requestData, payload));\n}\nconst RBRACKET = /\\[\\]$/;\nfunction isPlainObject(obj) {\n  return Object.prototype.toString.call(obj) === '[object Object]';\n}\nfunction isPrimitiveArray(obj) {\n  return Array.isArray(obj);\n}\nfunction isParamsArray(obj) {\n  return Array.isArray(obj);\n}\nfunction buildParams(prefix, obj, s) {\n  let i, len, key;\n  if (prefix) {\n    if (isPrimitiveArray(obj)) {\n      for (i = 0, len = obj.length; i < len; i++) {\n        if (RBRACKET.test(prefix)) {\n          add(s, prefix, obj[i]);\n        } else {\n          buildParams(prefix + '[' + (typeof obj[i] === 'object' && obj[i] !== null ? i : '') + ']', obj[i], s);\n        }\n      }\n    } else if (isPlainObject(obj)) {\n      for (key in obj) {\n        buildParams(prefix + '[' + key + ']', obj[key], s);\n      }\n    } else {\n      ( true && !(obj === null || typeof obj !== 'object') && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`query params cannot be a { name, value } pair if prefix is present`, obj === null || typeof obj !== 'object'));\n      add(s, prefix, obj);\n    }\n  } else if (isParamsArray(obj)) {\n    for (i = 0, len = obj.length; i < len; i++) {\n      add(s, obj[i].name, obj[i].value);\n    }\n  } else {\n    ( true && !(typeof obj !== 'string') && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`query params cannot be a string if no prefix is present`, typeof obj !== 'string'));\n    ( true && !(!Array.isArray(obj)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`query params should not be an array if no prefix is present`, !Array.isArray(obj)));\n    ( true && !(isPlainObject(obj)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`query params should not be a { name, value } pair if no prefix is present`, isPlainObject(obj)));\n    for (key in obj) {\n      buildParams(key, obj[key], s);\n    }\n  }\n  return s;\n}\n\n/*\n * Helper function that turns the data/body of a request into a query param string.\n * This is directly copied from jQuery.param.\n */\nfunction serializeQueryParams(queryParamsObject) {\n  return buildParams('', queryParamsObject, []).join('&');\n}\n\n/*\n * Part of the `serializeQueryParams` helper function.\n */\nfunction add(s, k, v) {\n  // Strip out keys with undefined value and replace null values with\n  // empty strings (mimics jQuery.ajax)\n  if (v === undefined) {\n    return;\n  } else if (v === null) {\n    v = '';\n  }\n  v = typeof v === 'function' ? v() : v;\n  s[s.length] = `${encodeURIComponent(k)}=${encodeURIComponent(v)}`;\n}\nlet _fetch = null;\nlet REQUEST = null;\nfunction getFetchFunction() {\n  // return cached fetch function\n  if (_fetch !== null) {\n    return _fetch();\n  }\n\n  // grab browser native fetch if available, or global fetch if otherwise configured\n  if (typeof fetch === 'function') {\n    // fallback to using global fetch\n    _fetch = () => fetch;\n\n    /* global FastBoot */\n    // grab fetch from node-fetch\n  } else if (typeof FastBoot !== 'undefined') {\n    try {\n      const nodeFetch = FastBoot.require('node-fetch');\n      const httpRegex = /^https?:\\/\\//;\n      const protocolRelativeRegex = /^\\/\\//;\n\n      // eslint-disable-next-line no-inner-declarations\n      function parseRequest(request) {\n        if (request === null) {\n          throw new Error(\"Trying to fetch with relative url but the application hasn't finished loading FastBootInfo, see details at https://github.com/ember-cli/ember-fetch#relative-url\");\n        }\n        // Old Prember version is not sending protocol\n        const protocol = request.protocol === 'undefined:' ? 'http:' : request.protocol;\n        return [request.get('host'), protocol];\n      }\n\n      // eslint-disable-next-line no-inner-declarations\n      function buildAbsoluteUrl(url) {\n        if (protocolRelativeRegex.test(url)) {\n          const [host] = parseRequest(REQUEST);\n          url = host + url;\n        } else if (!httpRegex.test(url)) {\n          const [host, protocol] = parseRequest(REQUEST);\n          url = protocol + '//' + host + url;\n        }\n        return url;\n      }\n\n      // eslint-disable-next-line no-inner-declarations\n      function patchedFetch(input, options) {\n        if (input && typeof input === 'object' && 'href' in input) {\n          const url = buildAbsoluteUrl(input.href);\n          const info = Object.assign({}, input, {\n            url\n          });\n          return nodeFetch(info, options);\n        } else if (typeof input === 'string') {\n          const url = buildAbsoluteUrl(input);\n          return nodeFetch(url, options);\n        }\n        return nodeFetch(input, options);\n      }\n      _fetch = () => patchedFetch;\n    } catch (e) {\n      throw new Error(`Unable to create a compatible 'fetch' for FastBoot with node-fetch`);\n    }\n  }\n  ( true && !(_fetch) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Cannot find a 'fetch' global and did not detect FastBoot.`, _fetch));\n  return _fetch();\n}\nfunction setupFastboot(fastBootRequest) {\n  REQUEST = fastBootRequest;\n}\nfunction serializeIntoHash(store, modelClass, snapshot, options = {\n  includeId: true\n}) {\n  (0,_ember_data_legacy_compat_private__WEBPACK_IMPORTED_MODULE_1__.upgradeStore)(store);\n  const serializer = store.serializerFor(modelClass.modelName);\n  ( true && !(serializer) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Cannot serialize record, no serializer defined`, serializer));\n  if (typeof serializer.serializeIntoHash === 'function') {\n    const data = {};\n    serializer.serializeIntoHash(data, modelClass, snapshot, options);\n    return data;\n  }\n  return serializer.serialize(snapshot, options);\n}\n\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@ember-data/adapter.85bda234/node_modules/@ember-data/adapter/serialize-into-hash-2lQbHRKN.js?");

/***/ }),

/***/ "../rewritten-packages/@ember-data/debug.cbe3cfb1/node_modules/@ember-data/debug/_app_/data-adapter.js":
/*!*************************************************************************************************************!*\
  !*** ../rewritten-packages/@ember-data/debug.cbe3cfb1/node_modules/@ember-data/debug/_app_/data-adapter.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* reexport safe */ _ember_data_debug__WEBPACK_IMPORTED_MODULE_0__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _ember_data_debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember-data/debug */ \"../rewritten-packages/@ember-data/debug.cbe3cfb1/node_modules/@ember-data/debug/index.js\");\n\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@ember-data/debug.cbe3cfb1/node_modules/@ember-data/debug/_app_/data-adapter.js?");

/***/ }),

/***/ "../rewritten-packages/@ember-data/debug.cbe3cfb1/node_modules/@ember-data/debug/index.js":
/*!************************************************************************************************!*\
  !*** ../rewritten-packages/@ember-data/debug.cbe3cfb1/node_modules/@ember-data/debug/index.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ _class)\n/* harmony export */ });\n/* harmony import */ var _ember_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/array */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Farray&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_array__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_array__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember/debug */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fdebug&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_ember_debug__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _ember_debug_data_adapter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ember/debug/data-adapter */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fdebug%2Fdata-adapter&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_debug_data_adapter__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_ember_debug_data_adapter__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _ember_object_observers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ember/object/observers */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fobject%2Fobservers&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_object_observers__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_ember_object_observers__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _ember_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ember/service */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fservice&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_service__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_ember_service__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _ember_string__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ember/string */ \"../rewritten-packages/@ember/string.5601e258/node_modules/@ember/string/index.js\");\nvar _dec, _class2, _descriptor;\nfunction _initializerDefineProperty(target, property, descriptor, context) {\n  if (!descriptor) return;\n  Object.defineProperty(target, property, {\n    enumerable: descriptor.enumerable,\n    configurable: descriptor.configurable,\n    writable: descriptor.writable,\n    value: descriptor.initializer ? descriptor.initializer.call(context) : void 0\n  });\n}\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object.keys(descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n  if (desc.initializer === void 0) {\n    Object.defineProperty(target, property, desc);\n    desc = null;\n  }\n  return desc;\n}\nfunction _initializerWarningHelper(descriptor, context) {\n  throw new Error('Decorating class property failed. Please ensure that ' + 'transform-class-properties is enabled and runs after the decorators transform.');\n}\n/**\n  # Overview\n\n  This package provides the `DataAdapter` which the [Ember Inspector](https://github.com/emberjs/ember-inspector)\n  uses to subscribe and retrieve information for the `data` tab in the inspector.\n\n  This package adds roughly .6 KB when minified and compressed to your application in production; however,\n  you can opt out of shipping this addon in production via options in `ember-cli-build.js`\n\n  ```js\n  let app = new EmberApp(defaults, {\n    emberData: {\n      includeDataAdapterInProduction: false\n    }\n  });\n  ```\n\n  When using `ember-data` as a dependency of your app, the default is to ship the inspector support to production.\n\n  When not using `ember-data` as a dependency but instead using EmberData via declaring specific `@ember-data/<package>`\n  dependencies the default is to not ship to production.\n\n  @module @ember-data/debug\n  @main @ember-data/debug\n*/\n\n\n\n\n\n\nconst StoreTypesMap = new WeakMap();\nfunction typesMapFor(store) {\n  let typesMap = StoreTypesMap.get(store);\n  if (typesMap === undefined) {\n    typesMap = new Map();\n    StoreTypesMap.set(store, typesMap);\n  }\n  return typesMap;\n}\n\n/**\n  Implements `@ember/debug/data-adapter` with for EmberData\n  integration with the ember-inspector.\n\n  @class InspectorDataAdapter\n  @extends DataAdapter\n  @private\n*/\nlet _class = (_dec = (0,_ember_service__WEBPACK_IMPORTED_MODULE_4__.inject)('store'), (_class2 = class _class2 extends (_ember_debug_data_adapter__WEBPACK_IMPORTED_MODULE_2___default()) {\n  constructor(...args) {\n    super(...args);\n    _initializerDefineProperty(this, \"store\", _descriptor, this);\n  }\n  /**\n    Specifies how records can be filtered based on the state of the record\n    Records returned will need to have a `filterValues`\n    property with a key for every name in the returned array\n     @method getFilters\n    @private\n    @return {Array} List of objects defining filters\n     The object should have a `name` and `desc` property\n  */\n  getFilters() {\n    return [{\n      name: 'isNew',\n      desc: 'New'\n    }, {\n      name: 'isModified',\n      desc: 'Modified'\n    }, {\n      name: 'isClean',\n      desc: 'Clean'\n    }];\n  }\n  _nameToClass(type) {\n    return this.store.modelFor(type);\n  }\n\n  /**\n    Fetch the model types and observe them for changes.\n    Maintains the list of model types without needing the Model package for detection.\n     @method watchModelTypes\n    @private\n    @param {Function} typesAdded Callback to call to add types.\n    Takes an array of objects containing wrapped types (returned from `wrapModelType`).\n    @param {Function} typesUpdated Callback to call when a type has changed.\n    Takes an array of objects containing wrapped types.\n    @return {Function} Method to call to remove all observers\n  */\n  watchModelTypes(typesAdded, typesUpdated) {\n    const {\n      store\n    } = this;\n    const unsub = store.notifications.subscribe('resource', (identifier, notificationType) => {\n      if (notificationType === 'added') {\n        this.watchTypeIfUnseen(store, discoveredTypes, identifier.type, typesAdded, typesUpdated, _releaseMethods);\n      }\n    });\n    const __getResourceCache = store._instanceCache.getResourceCache;\n    const _releaseMethods = [() => {\n      store.notifications.unsubscribe(unsub);\n    }];\n    const discoveredTypes = typesMapFor(store);\n    Object.keys(store.identifierCache._cache.resourcesByType).forEach(type => {\n      discoveredTypes.set(type, false);\n    });\n\n    // Add any models that were added during initialization of the app, before the inspector was opened\n    discoveredTypes.forEach((_, type) => {\n      this.watchTypeIfUnseen(store, discoveredTypes, type, typesAdded, typesUpdated, _releaseMethods);\n    });\n    let release = () => {\n      _releaseMethods.forEach(fn => fn());\n      store._instanceCache.getResourceCache = __getResourceCache;\n      // reset the list so the models can be added if the inspector is re-opened\n      // the entries are set to false instead of removed, since the models still exist in the app\n      // we just need the inspector to become aware of them\n      discoveredTypes.forEach((value, key) => {\n        discoveredTypes.set(key, false);\n      });\n      this.releaseMethods.removeObject(release);\n    };\n    this.releaseMethods.pushObject(release);\n    return release;\n  }\n\n  /**\n   * Loop over the discovered types and use the callbacks from watchModelTypes to notify\n   * the consumer of this adapter about the mdoels.\n   *\n   * @method watchTypeIfUnseen\n   * @param {store} store\n   * @param {Map} discoveredTypes\n   * @param {String} type\n   * @param {Function} typesAdded\n   * @param {Function} typesUpdated\n   * @param {Array} releaseMethods\n   * @private\n   */\n  watchTypeIfUnseen(store, discoveredTypes, type, typesAdded, typesUpdated, releaseMethods) {\n    if (discoveredTypes.get(type) !== true) {\n      let klass = store.modelFor(type);\n      let wrapped = this.wrapModelType(klass, type);\n      releaseMethods.push(this.observeModelType(type, typesUpdated));\n      typesAdded([wrapped]);\n      discoveredTypes.set(type, true);\n    }\n  }\n\n  /**\n    Creates a human readable string used for column headers\n     @method columnNameToDesc\n    @private\n    @param {String} name The attribute name\n    @return {String} Human readable string based on the attribute name\n  */\n  columnNameToDesc(name) {\n    return (0,_ember_string__WEBPACK_IMPORTED_MODULE_5__.capitalize)((0,_ember_string__WEBPACK_IMPORTED_MODULE_5__.underscore)(name).replace(/_/g, ' ').trim());\n  }\n\n  /**\n    Get the columns for a given model type\n     @method columnsForType\n    @private\n    @param {Model} typeClass\n    @return {Array} An array of columns of the following format:\n     name: {String} The name of the column\n     desc: {String} Humanized description (what would show in a table column name)\n  */\n  columnsForType(typeClass) {\n    let columns = [{\n      name: 'id',\n      desc: 'Id'\n    }];\n    let count = 0;\n    let self = this;\n    typeClass.attributes.forEach((meta, name) => {\n      if (count++ > self.attributeLimit) {\n        return false;\n      }\n      let desc = this.columnNameToDesc(name);\n      columns.push({\n        name: name,\n        desc: desc\n      });\n    });\n    return columns;\n  }\n\n  /**\n    Fetches all loaded records for a given type\n     @method getRecords\n    @private\n    @param {Model} modelClass of the record\n    @param {String} modelName of the record\n    @return {Array} An array of Model records\n     This array will be observed for changes,\n     so it should update when new records are added/removed\n  */\n  getRecords(modelClass, modelName) {\n    if (arguments.length < 2) {\n      // Legacy Ember.js < 1.13 support\n      let containerKey = modelClass._debugContainerKey;\n      if (containerKey) {\n        let match = containerKey.match(/model:(.*)/);\n        if (match !== null) {\n          modelName = match[1];\n        }\n      }\n    }\n    ( true && !(!!modelName) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)('Cannot find model name. Please upgrade to Ember.js >= 1.13 for Ember Inspector support', !!modelName));\n    return this.store.peekAll(modelName);\n  }\n\n  /**\n    Gets the values for each column\n    This is the attribute values for a given record\n     @method getRecordColumnValues\n    @private\n    @param {Model} record to get values from\n    @return {Object} Keys should match column names defined by the model type\n  */\n  getRecordColumnValues(record) {\n    let count = 0;\n    let columnValues = {\n      id: record.id\n    };\n    record.eachAttribute(key => {\n      if (count++ > this.attributeLimit) {\n        return false;\n      }\n      columnValues[key] = record[key];\n    });\n    return columnValues;\n  }\n\n  /**\n    Returns keywords to match when searching records\n     @method getRecordKeywords\n    @private\n    @param {Model} record\n    @return {Array} Relevant keywords for search based on the record's attribute values\n  */\n  getRecordKeywords(record) {\n    let keywords = [];\n    let keys = (0,_ember_array__WEBPACK_IMPORTED_MODULE_0__.A)(['id']);\n    record.eachAttribute(key => keys.push(key));\n    keys.forEach(key => keywords.push(record[key]));\n    return keywords;\n  }\n\n  /**\n    Returns the values of filters defined by `getFilters`\n    These reflect the state of the record\n     @method getRecordFilterValues\n    @private\n    @param {Model} record\n    @return {Object} The record state filter values\n  */\n  getRecordFilterValues(record) {\n    return {\n      isNew: record.isNew,\n      isModified: record.hasDirtyAttributes && !record.isNew,\n      isClean: !record.hasDirtyAttributes\n    };\n  }\n\n  /**\n    Returns a color that represents the record's state\n    Possible colors: black, blue, green\n     @method getRecordColor\n    @private\n    @param {Model} record\n    @return {String} The record color\n  */\n  getRecordColor(record) {\n    let color = 'black';\n    if (record.isNew) {\n      color = 'green';\n    } else if (record.hasDirtyAttributes) {\n      color = 'blue';\n    }\n    return color;\n  }\n\n  /**\n    Observes all relevant properties and re-sends the wrapped record\n    when a change occurs\n     @method observeRecord\n    @private\n    @param {Model} record\n    @param {Function} recordUpdated Callback used to notify changes\n    @return {Function} The function to call to remove all observers\n  */\n  observeRecord(record, recordUpdated) {\n    let releaseMethods = (0,_ember_array__WEBPACK_IMPORTED_MODULE_0__.A)();\n    let keysToObserve = (0,_ember_array__WEBPACK_IMPORTED_MODULE_0__.A)(['id', 'isNew', 'hasDirtyAttributes']);\n    record.eachAttribute(key => keysToObserve.push(key));\n    let adapter = this;\n    keysToObserve.forEach(function (key) {\n      let handler = function () {\n        recordUpdated(adapter.wrapRecord(record));\n      };\n      (0,_ember_object_observers__WEBPACK_IMPORTED_MODULE_3__.addObserver)(record, key, handler);\n      releaseMethods.push(function () {\n        (0,_ember_object_observers__WEBPACK_IMPORTED_MODULE_3__.removeObserver)(record, key, handler);\n      });\n    });\n    let release = function () {\n      releaseMethods.forEach(fn => fn());\n    };\n    return release;\n  }\n}, _descriptor = _applyDecoratedDescriptor(_class2.prototype, \"store\", [_dec], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _class2));\n\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@ember-data/debug.cbe3cfb1/node_modules/@ember-data/debug/index.js?");

/***/ }),

/***/ "../rewritten-packages/@ember-data/graph.4c9e27df/node_modules/@ember-data/graph/-private.js":
/*!***************************************************************************************************!*\
  !*** ../rewritten-packages/@ember-data/graph.4c9e27df/node_modules/@ember-data/graph/-private.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   graphFor: () => (/* binding */ graphFor),\n/* harmony export */   isBelongsTo: () => (/* binding */ isBelongsTo),\n/* harmony export */   peekGraph: () => (/* binding */ peekGraph)\n/* harmony export */ });\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/debug */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fdebug&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_debug__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _ember_data_store_private__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember-data/store/-private */ \"../rewritten-packages/@ember-data/store.a4360448/node_modules/@ember-data/store/-private.js\");\n\n\nfunction coerceId(id) {\n  {\n    let normalized;\n    if (id === null || id === undefined || id === '') {\n      normalized = null;\n    } else {\n      normalized = String(id);\n    }\n    ( true && !(normalized === id) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.deprecate)(`The resource id '<${typeof id}> ${String(id)} ' is not normalized. Update your application code to use '${JSON.stringify(normalized)}' instead.`, normalized === id, {\n      id: 'ember-data:deprecate-non-strict-id',\n      until: '6.0',\n      for: 'ember-data',\n      since: {\n        available: '5.3',\n        enabled: '5.3'\n      }\n    }));\n    return normalized;\n  }\n  ( true && !(id === null || typeof id === 'string' && id.length > 0) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Resource IDs must be a non-empty string or null. Received '${String(id)}'.`, id === null || typeof id === 'string' && id.length > 0));\n  return id;\n}\nfunction getStore(wrapper) {\n  ( true && !('_store' in wrapper) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`expected a private _store property`, '_store' in wrapper));\n  return wrapper._store;\n}\nfunction expandingGet(cache, key1, key2) {\n  const mainCache = cache[key1] = cache[key1] || Object.create(null);\n  return mainCache[key2];\n}\nfunction expandingSet(cache, key1, key2, value) {\n  const mainCache = cache[key1] = cache[key1] || Object.create(null);\n  mainCache[key2] = value;\n}\nfunction assertValidRelationshipPayload(graph, op) {\n  const relationship = graph.get(op.record, op.field);\n  ( true && !(isHasMany(relationship) || isBelongsTo(relationship)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Cannot update an implicit relationship`, isHasMany(relationship) || isBelongsTo(relationship)));\n  const payload = op.value;\n  const {\n    definition,\n    identifier,\n    state\n  } = relationship;\n  const {\n    type\n  } = identifier;\n  const {\n    field\n  } = op;\n  const {\n    isAsync,\n    kind\n  } = definition;\n  if (payload.links) {\n    ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.warn)(`You pushed a record of type '${type}' with a relationship '${field}' configured as 'async: false'. You've included a link but no primary data, this may be an error in your payload. EmberData will treat this relationship as known-to-be-empty.`, isAsync || !!payload.data || state.hasReceivedData, {\n      id: 'ds.store.push-link-for-sync-relationship'\n    }));\n  } else if (payload.data) {\n    if (kind === 'belongsTo') {\n      ( true && !(!Array.isArray(payload.data)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`A ${type} record was pushed into the store with the value of ${field} being ${(0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.inspect)(payload.data)}, but ${field} is a belongsTo relationship so the value must not be an array. You should probably check your data payload or serializer.`, !Array.isArray(payload.data)));\n      assertRelationshipData(getStore(graph.store), identifier, payload.data, definition);\n    } else if (kind === 'hasMany') {\n      ( true && !(Array.isArray(payload.data)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`A ${type} record was pushed into the store with the value of ${field} being '${(0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.inspect)(payload.data)}', but ${field} is a hasMany relationship so the value must be an array. You should probably check your data payload or serializer.`, Array.isArray(payload.data)));\n      if (Array.isArray(payload.data)) {\n        for (let i = 0; i < payload.data.length; i++) {\n          assertRelationshipData(getStore(graph.store), identifier, payload.data[i], definition);\n        }\n      }\n    }\n  }\n}\nfunction isNew(identifier) {\n  if (!identifier.id) {\n    return true;\n  }\n  const cache = (0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_1__.peekCache)(identifier);\n  return Boolean(cache?.isNew(identifier));\n}\nfunction isBelongsTo(relationship) {\n  return relationship.definition.kind === 'belongsTo';\n}\nfunction isImplicit(relationship) {\n  return relationship.definition.isImplicit;\n}\nfunction isHasMany(relationship) {\n  return relationship.definition.kind === 'hasMany';\n}\nfunction forAllRelatedIdentifiers(rel, cb) {\n  if (isBelongsTo(rel)) {\n    if (rel.remoteState) {\n      cb(rel.remoteState);\n    }\n    if (rel.localState && rel.localState !== rel.remoteState) {\n      cb(rel.localState);\n    }\n  } else if (isHasMany(rel)) {\n    // TODO\n    // rel.remoteMembers.forEach(cb);\n    // might be simpler if performance is not a concern\n    for (let i = 0; i < rel.remoteState.length; i++) {\n      const inverseIdentifier = rel.remoteState[i];\n      cb(inverseIdentifier);\n    }\n    rel.additions?.forEach(cb);\n  } else {\n    rel.localMembers.forEach(cb);\n    rel.remoteMembers.forEach(inverseIdentifier => {\n      if (!rel.localMembers.has(inverseIdentifier)) {\n        cb(inverseIdentifier);\n      }\n    });\n  }\n}\n\n/*\n  Removes the given identifier from BOTH remote AND local state.\n\n  This method is useful when either a deletion or a rollback on a new record\n  needs to entirely purge itself from an inverse relationship.\n  */\nfunction removeIdentifierCompletelyFromRelationship(graph, relationship, value, silenceNotifications) {\n  if (isBelongsTo(relationship)) {\n    if (relationship.remoteState === value) {\n      relationship.remoteState = null;\n    }\n    if (relationship.localState === value) {\n      relationship.localState = null;\n      // This allows dematerialized inverses to be rematerialized\n      // we shouldn't be notifying here though, figure out where\n      // a notification was missed elsewhere.\n      if (!silenceNotifications) {\n        notifyChange(graph, relationship.identifier, relationship.definition.key);\n      }\n    }\n  } else if (isHasMany(relationship)) {\n    relationship.remoteMembers.delete(value);\n    relationship.additions?.delete(value);\n    const wasInRemovals = relationship.removals?.delete(value);\n    const canonicalIndex = relationship.remoteState.indexOf(value);\n    if (canonicalIndex !== -1) {\n      relationship.remoteState.splice(canonicalIndex, 1);\n    }\n    if (!wasInRemovals) {\n      const currentIndex = relationship.localState?.indexOf(value);\n      if (currentIndex !== -1 && currentIndex !== undefined) {\n        relationship.localState.splice(currentIndex, 1);\n        // This allows dematerialized inverses to be rematerialized\n        // we shouldn't be notifying here though, figure out where\n        // a notification was missed elsewhere.\n        if (!silenceNotifications) {\n          notifyChange(graph, relationship.identifier, relationship.definition.key);\n        }\n      }\n    }\n  } else {\n    relationship.remoteMembers.delete(value);\n    relationship.localMembers.delete(value);\n  }\n}\n\n// TODO add silencing at the graph level\nfunction notifyChange(graph, identifier, key) {\n  if (identifier === graph._removing) {\n    return;\n  }\n  graph.store.notifyChange(identifier, 'relationships', key);\n}\nfunction assertRelationshipData(store, identifier, data, meta) {\n  ( true && !(!Array.isArray(data)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`A ${identifier.type} record was pushed into the store with the value of ${meta.key} being '${JSON.stringify(data)}', but ${meta.key} is a belongsTo relationship so the value must not be an array. You should probably check your data payload or serializer.`, !Array.isArray(data)));\n  ( true && !(data === null || 'type' in data && typeof data.type === 'string' && data.type.length) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Encountered a relationship identifier without a type for the ${meta.kind} relationship '${meta.key}' on <${identifier.type}:${String(identifier.id)}>, expected an identifier with type '${meta.type}' but found\\n\\n'${JSON.stringify(data, null, 2)}'\\n\\nPlease check your serializer and make sure it is serializing the relationship payload into a JSON API format.`, data === null || 'type' in data && typeof data.type === 'string' && data.type.length));\n  ( true && !(data === null || !!coerceId(data.id)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Encountered a relationship identifier without an id for the ${meta.kind} relationship '${meta.key}' on <${identifier.type}:${String(identifier.id)}>, expected an identifier but found\\n\\n'${JSON.stringify(data, null, 2)}'\\n\\nPlease check your serializer and make sure it is serializing the relationship payload into a JSON API format.`, data === null || !!coerceId(data.id)));\n  if (data?.type === meta.type) {\n    ( true && !(store.getSchemaDefinitionService().doesTypeExist(data.type)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Missing Schema: Encountered a relationship identifier { type: '${data.type}', id: '${String(data.id)}' } for the '${identifier.type}.${meta.key}' ${meta.kind} relationship on <${identifier.type}:${String(identifier.id)}>, but no schema exists for that type.`, store.getSchemaDefinitionService().doesTypeExist(data.type)));\n  } else {\n    ( true && !(data === null || !data.type || store.getSchemaDefinitionService().doesTypeExist(data.type)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Missing Schema: Encountered a relationship identifier with type '${data.type}' for the ${meta.kind} relationship '${meta.key}' on <${identifier.type}:${String(identifier.id)}>, Expected an identifier with type '${meta.type}'. No schema was found for '${data.type}'.`, data === null || !data.type || store.getSchemaDefinitionService().doesTypeExist(data.type)));\n  }\n}\n\n/*\n  Assert that `addedRecord` has a valid type so it can be added to the\n  relationship of the `record`.\n\n  The assert basically checks if the `addedRecord` can be added to the\n  relationship (specified via `relationshipMeta`) of the `record`.\n\n  This utility should only be used internally, as both record parameters must\n  be stable record identifiers and the `relationshipMeta` needs to be the meta\n  information about the relationship, retrieved via\n  `record.relationshipFor(key)`.\n*/\nlet assertPolymorphicType;\nlet assertInheritedSchema;\n{\n  function validateSchema(definition, meta) {\n    const errors = new Map();\n    if (definition.inverseKey !== meta.name) {\n      errors.set('name', ` <---- should be '${definition.inverseKey}'`);\n    }\n    if (definition.inverseType !== meta.type) {\n      errors.set('type', ` <---- should be '${definition.inverseType}'`);\n    }\n    if (definition.inverseKind !== meta.kind) {\n      errors.set('type', ` <---- should be '${definition.inverseKind}'`);\n    }\n    if (definition.inverseIsAsync !== meta.options.async) {\n      errors.set('async', ` <---- should be ${definition.inverseIsAsync}`);\n    }\n    if (definition.inverseIsPolymorphic && definition.inverseIsPolymorphic !== meta.options.polymorphic) {\n      errors.set('polymorphic', ` <---- should be ${definition.inverseIsPolymorphic}`);\n    }\n    if (definition.key !== meta.options.inverse) {\n      errors.set('inverse', ` <---- should be '${definition.key}'`);\n    }\n    if (definition.type !== meta.options.as) {\n      errors.set('as', ` <---- should be '${definition.type}'`);\n    }\n    return errors;\n  }\n  function expectedSchema(definition) {\n    return printSchema({\n      name: definition.inverseKey,\n      type: definition.inverseType,\n      kind: definition.inverseKind,\n      options: {\n        as: definition.type,\n        async: definition.inverseIsAsync,\n        polymorphic: definition.inverseIsPolymorphic || false,\n        inverse: definition.key\n      }\n    });\n  }\n  function printSchema(config, errors) {\n    return `\n\n\\`\\`\\`\n{\n  ${config.name}: {\n    name: '${config.name}',${errors?.get('name') || ''}\n    type: '${config.type}',${errors?.get('type') || ''}\n    kind: '${config.kind}',${errors?.get('kind') || ''}\n    options: {\n      as: '${config.options.as}',${errors?.get('as') || ''}\n      async: ${config.options.async},${errors?.get('async') || ''}\n      polymorphic: ${config.options.polymorphic},${errors?.get('polymorphic') || ''}\n      inverse: '${config.options.inverse}'${errors?.get('inverse') || ''}\n    }\n  }\n}\n\\`\\`\\`\n\n`;\n  }\n  function metaFrom(definition) {\n    return {\n      name: definition.key,\n      type: definition.type,\n      kind: definition.kind,\n      options: {\n        async: definition.isAsync,\n        polymorphic: definition.isPolymorphic,\n        inverse: definition.inverseKey\n      }\n    };\n  }\n  function inverseMetaFrom(definition) {\n    return {\n      name: definition.inverseKey,\n      type: definition.inverseType,\n      kind: definition.inverseKind,\n      options: {\n        as: definition.isPolymorphic ? definition.type : undefined,\n        async: definition.inverseIsAsync,\n        polymorphic: definition.inverseIsPolymorphic,\n        inverse: definition.key\n      }\n    };\n  }\n  function inverseDefinition(definition) {\n    return {\n      key: definition.inverseKey,\n      type: definition.inverseType,\n      kind: definition.inverseKind,\n      isAsync: definition.inverseIsAsync,\n      isPolymorphic: true,\n      isCollection: definition.inverseIsCollection,\n      isImplicit: definition.inverseIsImplicit,\n      inverseKey: definition.key,\n      inverseType: definition.type,\n      inverseKind: definition.kind,\n      inverseIsAsync: definition.isAsync,\n      inverseIsPolymorphic: definition.isPolymorphic,\n      inverseIsImplicit: definition.isImplicit,\n      inverseIsCollection: definition.isCollection,\n      resetOnRemoteUpdate: definition.resetOnRemoteUpdate\n    };\n  }\n  function definitionWithPolymorphic(definition) {\n    return Object.assign({}, definition, {\n      inverseIsPolymorphic: true\n    });\n  }\n  assertInheritedSchema = function assertInheritedSchema(definition, type) {\n    let meta1 = metaFrom(definition);\n    let meta2 = inverseMetaFrom(definition);\n    let errors1 = validateSchema(inverseDefinition(definition), meta1);\n    let errors2 = validateSchema(definitionWithPolymorphic(definition), meta2);\n    if (errors2.size === 0 && errors1.size > 0) {\n      throw new Error(`The schema for the relationship '${type}.${definition.key}' is not configured to satisfy '${definition.inverseType}' and thus cannot utilize the '${definition.inverseType}.${definition.key}' relationship to connect with '${definition.type}.${definition.inverseKey}'\\n\\nIf using this relationship in a polymorphic manner is desired, the relationships schema definition for '${type}' should include:${printSchema(meta1, errors1)}`);\n    } else if (errors1.size > 0) {\n      throw new Error(`The schema for the relationship '${type}.${definition.key}' is not configured to satisfy '${definition.inverseType}' and thus cannot utilize the '${definition.inverseType}.${definition.key}' relationship to connect with '${definition.type}.${definition.inverseKey}'\\n\\nIf using this relationship in a polymorphic manner is desired, the relationships schema definition for '${type}' should include:${printSchema(meta1, errors1)} and the relationships schema definition for '${definition.type}' should include:${printSchema(meta2, errors2)}`);\n    } else if (errors2.size > 0) {\n      throw new Error(`The schema for the relationship '${type}.${definition.key}' satisfies '${definition.inverseType}' but cannot utilize the '${definition.inverseType}.${definition.key}' relationship to connect with '${definition.type}.${definition.inverseKey}' because that relationship is not polymorphic.\\n\\nIf using this relationship in a polymorphic manner is desired, the relationships schema definition for '${definition.type}' should include:${printSchema(meta2, errors2)}`);\n    }\n  };\n  assertPolymorphicType = function assertPolymorphicType(parentIdentifier, parentDefinition, addedIdentifier, store) {\n    if (parentDefinition.inverseIsImplicit) {\n      return;\n    }\n    if (parentDefinition.isPolymorphic) {\n      let meta = store.getSchemaDefinitionService().relationshipsDefinitionFor(addedIdentifier)[parentDefinition.inverseKey];\n      ( true && !(meta) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`No '${parentDefinition.inverseKey}' field exists on '${addedIdentifier.type}'. To use this type in the polymorphic relationship '${parentDefinition.inverseType}.${parentDefinition.key}' the relationships schema definition for ${addedIdentifier.type} should include:${expectedSchema(parentDefinition)}`, meta));\n      ( true && !(!(meta.options.inverse === null && meta?.options.as?.length)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`You should not specify both options.as and options.inverse as null on ${addedIdentifier.type}.${parentDefinition.inverseKey}, as if there is no inverse field there is no abstract type to conform to. You may have intended for this relationship to be polymorphic, or you may have mistakenly set inverse to null.`, !(meta.options.inverse === null && meta?.options.as?.length)));\n      let errors = validateSchema(parentDefinition, meta);\n      ( true && !(errors.size === 0) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`The schema for the relationship '${parentDefinition.inverseKey}' on '${addedIdentifier.type}' type does not correctly implement '${parentDefinition.type}' and thus cannot be assigned to the '${parentDefinition.key}' relationship in '${parentIdentifier.type}'. If using this record in this polymorphic relationship is desired, correct the errors in the schema shown below:${printSchema(meta, errors)}`, errors.size === 0));\n    } else if (addedIdentifier.type !== parentDefinition.type) {\n      // if we are not polymorphic\n      // then the addedIdentifier.type must be the same as the parentDefinition.type\n      let meta = store.getSchemaDefinitionService().relationshipsDefinitionFor(addedIdentifier)[parentDefinition.inverseKey];\n      if (meta?.options.as === parentDefinition.type) {\n        // inverse is likely polymorphic but missing the polymorphic flag\n        let meta = store.getSchemaDefinitionService().relationshipsDefinitionFor({\n          type: parentDefinition.inverseType\n        })[parentDefinition.key];\n        let errors = validateSchema(definitionWithPolymorphic(inverseDefinition(parentDefinition)), meta);\n        ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`The '<${addedIdentifier.type}>.${parentDefinition.inverseKey}' relationship cannot be used polymorphically because '<${parentDefinition.inverseType}>.${parentDefinition.key} is not a polymorphic relationship. To use this relationship in a polymorphic manner, fix the following schema issues on the relationships schema for '${parentDefinition.inverseType}':${printSchema(meta, errors)}`));\n      } else {\n        ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`The '${addedIdentifier.type}' type does not implement '${parentDefinition.type}' and thus cannot be assigned to the '${parentDefinition.key}' relationship in '${parentIdentifier.type}'. If this relationship should be polymorphic, mark ${parentDefinition.inverseType}.${parentDefinition.key} as \\`polymorphic: true\\` and ${addedIdentifier.type}.${parentDefinition.inverseKey} as implementing it via \\`as: '${parentDefinition.type}'\\`.`));\n      }\n    }\n  };\n}\n\n/*\n    case many:1\n    ========\n    In a bi-directional graph with Many:1 edges, adding a value\n    results in up-to 3 discrete value transitions, while removing\n    a value is only 2 transitions.\n\n    For adding C to A\n    If: A <<-> B, C <->> D is the initial state,\n    and: B <->> A <<-> C, D is the final state\n\n    then we would undergo the following transitions.\n\n    add C to A\n    remove C from D\n    add A to C\n\n    For removing B from A\n    If: A <<-> B, C <->> D is the initial state,\n    and: A, B, C <->> D is the final state\n\n    then we would undergo the following transitions.\n\n    remove B from A\n    remove A from B\n\n    case many:many\n    ===========\n    In a bi-directional graph with Many:Many edges, adding or\n    removing a value requires only 2 value transitions.\n\n    For Adding\n    If: A<<->>B, C<<->>D is the initial state (double arrows representing the many side)\n    And: D<<->>C<<->>A<<->>B is the final state\n\n    Then we would undergo two transitions.\n\n    add C to A.\n    add A to C\n\n    For Removing\n    If: A<<->>B, C<<->>D is the initial state (double arrows representing the many side)\n    And: A, B, C<<->>D is the final state\n\n    Then we would undergo two transitions.\n\n    remove B from A\n    remove A from B\n\n    case many:?\n    ========\n    In a uni-directional graph with Many:? edges (modeled in EmberData with `inverse:null`) with\n    artificial (implicit) inverses, replacing a value results in 2 discrete value transitions.\n    This is because a Many:? relationship is effectively Many:Many.\n  */\nfunction replaceRelatedRecords(graph, op, isRemote) {\n  if (isRemote) {\n    replaceRelatedRecordsRemote(graph, op, isRemote);\n  } else {\n    replaceRelatedRecordsLocal(graph, op, isRemote);\n  }\n}\nfunction replaceRelatedRecordsLocal(graph, op, isRemote) {\n  const identifiers = op.value;\n  const relationship = graph.get(op.record, op.field);\n  ( true && !(isHasMany(relationship)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`expected hasMany relationship`, isHasMany(relationship)));\n  relationship.state.hasReceivedData = true;\n  const {\n    additions,\n    removals\n  } = relationship;\n  const {\n    inverseKey,\n    type\n  } = relationship.definition;\n  const {\n    record\n  } = op;\n  const wasDirty = relationship.isDirty;\n  relationship.isDirty = false;\n  const onAdd = identifier => {\n    // Since we are diffing against the remote state, we check\n    // if our previous local state did not contain this identifier\n    const removalsHas = removals?.has(identifier);\n    if (removalsHas || !additions?.has(identifier)) {\n      if (type !== identifier.type) {\n        {\n          assertPolymorphicType(relationship.identifier, relationship.definition, identifier, graph.store);\n        }\n        graph.registerPolymorphicType(type, identifier.type);\n      }\n      relationship.isDirty = true;\n      addToInverse(graph, identifier, inverseKey, op.record, isRemote);\n      if (removalsHas) {\n        removals.delete(identifier);\n      }\n    }\n  };\n  const onRemove = identifier => {\n    // Since we are diffing against the remote state, we check\n    // if our previous local state had contained this identifier\n    const additionsHas = additions?.has(identifier);\n    if (additionsHas || !removals?.has(identifier)) {\n      relationship.isDirty = true;\n      removeFromInverse(graph, identifier, inverseKey, record, isRemote);\n      if (additionsHas) {\n        additions.delete(identifier);\n      }\n    }\n  };\n  const diff = diffCollection(identifiers, relationship, onAdd, onRemove);\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  relationship.isDirty || diff.changed;\n\n  // any additions no longer in the local state\n  // need to be removed from the inverse\n  if (additions && additions.size > 0) {\n    additions.forEach(identifier => {\n      if (!diff.add.has(identifier)) {\n        onRemove(identifier);\n      }\n    });\n  }\n\n  // any removals no longer in the local state\n  // need to be added back to the inverse\n  if (removals && removals.size > 0) {\n    removals.forEach(identifier => {\n      if (!diff.del.has(identifier)) {\n        onAdd(identifier);\n      }\n    });\n  }\n  relationship.additions = diff.add;\n  relationship.removals = diff.del;\n  relationship.localState = diff.finalState;\n  relationship.isDirty = wasDirty;\n  if (!wasDirty /*&& becameDirty // TODO to guard like this we need to detect reorder when diffing local */) {\n    notifyChange(graph, op.record, op.field);\n  }\n}\nfunction replaceRelatedRecordsRemote(graph, op, isRemote) {\n  const identifiers = op.value;\n  const relationship = graph.get(op.record, op.field);\n  ( true && !(isHasMany(relationship)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`You can only '${op.op}' on a hasMany relationship. ${op.record.type}.${op.field} is a ${relationship.definition.kind}`, isHasMany(relationship)));\n  if (isRemote) {\n    graph._addToTransaction(relationship);\n  }\n  relationship.state.hasReceivedData = true;\n\n  // cache existing state\n  const {\n    definition\n  } = relationship;\n  const {\n    type\n  } = relationship.definition;\n  const diff = diffCollection(identifiers, relationship, identifier => {\n    if (type !== identifier.type) {\n      {\n        assertPolymorphicType(relationship.identifier, relationship.definition, identifier, graph.store);\n      }\n      graph.registerPolymorphicType(type, identifier.type);\n    }\n    // commit additions\n    // TODO build this into the diff?\n    // because we are not dirty if this was a committed local addition\n    if (relationship.additions?.has(identifier)) {\n      relationship.additions.delete(identifier);\n    } else {\n      relationship.isDirty = true;\n    }\n    addToInverse(graph, identifier, definition.inverseKey, op.record, isRemote);\n  }, identifier => {\n    // commit removals\n    // TODO build this into the diff?\n    // because we are not dirty if this was a committed local addition\n    if (relationship.removals?.has(identifier)) {\n      relationship.removals.delete(identifier);\n    } else {\n      relationship.isDirty = true;\n    }\n    removeFromInverse(graph, identifier, definition.inverseKey, op.record, isRemote);\n  });\n\n  // replace existing state\n  relationship.remoteMembers = diff.finalSet;\n  relationship.remoteState = diff.finalState;\n\n  // changed also indicates a change in order\n  if (diff.changed) {\n    relationship.isDirty = true;\n  }\n\n  // TODO unsure if we need this but it\n  // may allow us to more efficiently patch\n  // the associated ManyArray\n  relationship._diff = diff;\n  {\n    // only do this for legacy hasMany, not collection\n    // and provide a way to incrementally migrate\n    if (relationship.definition.kind === 'hasMany' && relationship.definition.resetOnRemoteUpdate !== false) {\n      const deprecationInfo = {\n        removals: [],\n        additions: [],\n        triggered: false\n      };\n      if (relationship.removals) {\n        relationship.isDirty = true;\n        relationship.removals.forEach(identifier => {\n          deprecationInfo.triggered = true;\n          deprecationInfo.removals.push(identifier);\n          // reverse the removal\n          // if we are still in removals at this point then\n          // we were not \"committed\" which means we are present\n          // in the remoteMembers. So we \"add back\" on the inverse.\n          addToInverse(graph, identifier, definition.inverseKey, op.record, isRemote);\n        });\n        relationship.removals = null;\n      }\n      if (relationship.additions) {\n        relationship.additions.forEach(identifier => {\n          // reverse the addition\n          // if we are still in additions at this point then\n          // we were not \"committed\" which means we are not present\n          // in the remoteMembers. So we \"remove\" from the inverse.\n          // however we only do this if we are not a \"new\" record.\n          if (!isNew(identifier)) {\n            deprecationInfo.triggered = true;\n            deprecationInfo.additions.push(identifier);\n            relationship.isDirty = true;\n            relationship.additions.delete(identifier);\n            removeFromInverse(graph, identifier, definition.inverseKey, op.record, isRemote);\n          }\n        });\n        if (relationship.additions.size === 0) {\n          relationship.additions = null;\n        }\n      }\n      if (deprecationInfo.triggered) {\n        ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.deprecate)(`EmberData is changing the default semantics of updates to the remote state of relationships.\\n\\nThe following local state was cleared from the <${relationship.identifier.type}>.${relationship.definition.key} hasMany relationship but will not be once this deprecation is resolved by opting into the new behavior:\\n\\n\\tAdded: [${deprecationInfo.additions.map(i => i.lid).join(', ')}]\\n\\tRemoved: [${deprecationInfo.removals.map(i => i.lid).join(', ')}]`, false, {\n          id: 'ember-data:deprecate-relationship-remote-update-clearing-local-state',\n          for: 'ember-data',\n          since: {\n            enabled: '5.3',\n            available: '5.3'\n          },\n          until: '6.0',\n          url: 'https://deprecations.emberjs.com/v5.x#ember-data-deprecate-relationship-remote-update-clearing-local-state'\n        }));\n      }\n    }\n  }\n  if (relationship.isDirty) {\n    flushCanonical(graph, relationship);\n  }\n}\nfunction addToInverse(graph, identifier, key, value, isRemote) {\n  const relationship = graph.get(identifier, key);\n  const {\n    type\n  } = relationship.definition;\n  if (type !== value.type) {\n    {\n      assertPolymorphicType(relationship.identifier, relationship.definition, value, graph.store);\n    }\n    graph.registerPolymorphicType(type, value.type);\n  }\n  if (isBelongsTo(relationship)) {\n    relationship.state.hasReceivedData = true;\n    relationship.state.isEmpty = false;\n    if (isRemote) {\n      graph._addToTransaction(relationship);\n      if (relationship.remoteState !== null) {\n        removeFromInverse(graph, relationship.remoteState, relationship.definition.inverseKey, identifier, isRemote);\n      }\n      relationship.remoteState = value;\n    }\n    if (relationship.localState !== value) {\n      if (!isRemote && relationship.localState) {\n        removeFromInverse(graph, relationship.localState, relationship.definition.inverseKey, identifier, isRemote);\n      }\n      relationship.localState = value;\n      notifyChange(graph, identifier, key);\n    }\n  } else if (isHasMany(relationship)) {\n    if (isRemote) {\n      // TODO this needs to alert stuffs\n      // And patch state better\n      // This is almost definitely wrong\n      // WARNING WARNING WARNING\n\n      if (!relationship.remoteMembers.has(value)) {\n        graph._addToTransaction(relationship);\n        relationship.remoteState.push(value);\n        relationship.remoteMembers.add(value);\n        if (relationship.additions?.has(value)) {\n          relationship.additions.delete(value);\n        } else {\n          relationship.isDirty = true;\n          relationship.state.hasReceivedData = true;\n          flushCanonical(graph, relationship);\n        }\n      }\n    } else {\n      if (_addLocal(graph, identifier, relationship, value, null)) {\n        notifyChange(graph, identifier, key);\n      }\n    }\n  } else {\n    if (isRemote) {\n      if (!relationship.remoteMembers.has(value)) {\n        relationship.remoteMembers.add(value);\n        relationship.localMembers.add(value);\n      }\n    } else {\n      if (!relationship.localMembers.has(value)) {\n        relationship.localMembers.add(value);\n      }\n    }\n  }\n}\nfunction notifyInverseOfPotentialMaterialization(graph, identifier, key, value, isRemote) {\n  const relationship = graph.get(identifier, key);\n  if (isHasMany(relationship) && isRemote && relationship.remoteMembers.has(value)) {\n    notifyChange(graph, identifier, key);\n  }\n}\nfunction removeFromInverse(graph, identifier, key, value, isRemote) {\n  const relationship = graph.get(identifier, key);\n  if (isBelongsTo(relationship)) {\n    relationship.state.isEmpty = true;\n    if (isRemote) {\n      graph._addToTransaction(relationship);\n      relationship.remoteState = null;\n    }\n    if (relationship.localState === value) {\n      relationship.localState = null;\n      notifyChange(graph, identifier, key);\n    }\n  } else if (isHasMany(relationship)) {\n    if (isRemote) {\n      graph._addToTransaction(relationship);\n      if (_removeRemote(relationship, value)) {\n        notifyChange(graph, identifier, key);\n      }\n    } else {\n      if (_removeLocal(relationship, value)) {\n        notifyChange(graph, identifier, key);\n      }\n    }\n  } else {\n    if (isRemote) {\n      relationship.remoteMembers.delete(value);\n      relationship.localMembers.delete(value);\n    } else {\n      if (value && relationship.localMembers.has(value)) {\n        relationship.localMembers.delete(value);\n      }\n    }\n  }\n}\nfunction flushCanonical(graph, rel) {\n  graph._scheduleLocalSync(rel);\n}\nfunction replaceRelatedRecord(graph, op, isRemote = false) {\n  const relationship = graph.get(op.record, op.field);\n  ( true && !(isBelongsTo(relationship)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`You can only '${op.op}' on a belongsTo relationship. ${op.record.type}.${op.field} is a ${relationship.definition.kind}`, isBelongsTo(relationship)));\n  if (isRemote) {\n    graph._addToTransaction(relationship);\n  }\n  const {\n    definition,\n    state\n  } = relationship;\n  const prop = isRemote ? 'remoteState' : 'localState';\n  const existingState = relationship[prop];\n\n  /*\n    case 1:1\n    ========\n    In a bi-directional graph with 1:1 edges, replacing a value\n    results in up-to 4 discrete value transitions.\n     If: A <-> B, C <-> D is the initial state,\n    and: A <-> C, B, D is the final state\n     then we would undergo the following 4 transitions.\n     remove A from B\n    add C to A\n    remove C from D\n    add A to C\n     case 1:many\n    ===========\n    In a bi-directional graph with 1:Many edges, replacing a value\n    results in up-to 3 discrete value transitions.\n     If: A<->>B<<->D, C<<->D is the initial state (double arrows representing the many side)\n    And: A<->>C<<->D, B<<->D is the final state\n     Then we would undergo three transitions.\n     remove A from B\n    add C to A.\n    add A to C\n     case 1:?\n    ========\n    In a uni-directional graph with 1:? edges (modeled in EmberData with `inverse:null`) with\n    artificial (implicit) inverses, replacing a value results in up-to 3 discrete value transitions.\n    This is because a 1:? relationship is effectively 1:many.\n     If: A->B, C->B is the initial state\n    And: A->C, C->B is the final state\n     Then we would undergo three transitions.\n     Remove A from B\n    Add C to A\n    Add A to C\n  */\n\n  // nothing for us to do\n  if (op.value === existingState) {\n    // if we were empty before but now know we are empty this needs to be true\n    state.hasReceivedData = true;\n    // if this is a remote update we still sync\n    if (isRemote) {\n      const {\n        localState\n      } = relationship;\n      // don't sync if localState is a new record and our remoteState is null\n      if (localState && isNew(localState) && !existingState) {\n        return;\n      }\n      if (existingState && localState === existingState) {\n        notifyInverseOfPotentialMaterialization(graph, existingState, definition.inverseKey, op.record, isRemote);\n      } else {\n        // if localState does not match existingState then we know\n        // we have a local mutation that has not been persisted yet\n        if (localState !== op.value && relationship.definition.resetOnRemoteUpdate !== false) {\n          relationship.localState = existingState;\n          ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.deprecate)(`EmberData is changing the default semantics of updates to the remote state of relationships.\\n\\nThe following local state was cleared from the <${relationship.identifier.type}>.${relationship.definition.key} belongsTo relationship but will not be once this deprecation is resolved:\\n\\n\\t${localState ? 'Added: ' + localState.lid + '\\n\\t' : ''}${existingState ? 'Removed: ' + existingState.lid : ''}`, false, {\n            id: 'ember-data:deprecate-relationship-remote-update-clearing-local-state',\n            for: 'ember-data',\n            since: {\n              enabled: '5.3',\n              available: '5.3'\n            },\n            until: '6.0',\n            url: 'https://deprecations.emberjs.com/v5.x#ember-data-deprecate-relationship-remote-update-clearing-local-state'\n          }));\n          notifyChange(graph, relationship.identifier, relationship.definition.key);\n        }\n      }\n    }\n    return;\n  }\n\n  // remove this value from the inverse if required\n  if (existingState) {\n    removeFromInverse(graph, existingState, definition.inverseKey, op.record, isRemote);\n  }\n\n  // update value to the new value\n  relationship[prop] = op.value;\n  state.hasReceivedData = true;\n  state.isEmpty = op.value === null;\n  state.isStale = false;\n  state.hasFailedLoadAttempt = false;\n  if (op.value) {\n    if (definition.type !== op.value.type) {\n      // assert(\n      //   `The '<${definition.inverseType}>.${op.field}' relationship expects only '${definition.type}' records since it is not polymorphic. Received a Record of type '${op.value.type}'`,\n      //   definition.isPolymorphic\n      // );\n\n      // TODO this should now handle the deprecation warning if isPolymorphic is not set\n      // but the record does turn out to be polymorphic\n      // this should still assert if the user is relying on legacy inheritance/mixins to\n      // provide polymorphic behavior and has not yet added the polymorphic flags\n      {\n        assertPolymorphicType(relationship.identifier, definition, op.value, graph.store);\n      }\n      graph.registerPolymorphicType(definition.type, op.value.type);\n    }\n    addToInverse(graph, op.value, definition.inverseKey, op.record, isRemote);\n  }\n  if (isRemote) {\n    const {\n      localState,\n      remoteState\n    } = relationship;\n    if (localState && isNew(localState) && !remoteState) {\n      return;\n    }\n    // when localState does not match the new remoteState and\n    // localState === existingState then we had no local mutation\n    // and we can safely sync the new remoteState to local\n    if (localState !== remoteState && localState === existingState) {\n      relationship.localState = remoteState;\n      notifyChange(graph, relationship.identifier, relationship.definition.key);\n      // But when localState does not match the new remoteState and\n      // and localState !== existingState then we know we have a local mutation\n      // that has not been persisted yet.\n    } else {\n      if (localState !== remoteState && localState !== existingState && relationship.definition.resetOnRemoteUpdate !== false) {\n        relationship.localState = existingState;\n        ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.deprecate)(`EmberData is changing the default semantics of updates to the remote state of relationships.\\n\\nThe following local state was cleared from the <${relationship.identifier.type}>.${relationship.definition.key} belongsTo relationship but will not be once this deprecation is resolved:\\n\\n\\t${localState ? 'Added: ' + localState.lid + '\\n\\t' : ''}${existingState ? 'Removed: ' + existingState.lid : ''}`, false, {\n          id: 'ember-data:deprecate-relationship-remote-update-clearing-local-state',\n          for: 'ember-data',\n          since: {\n            enabled: '5.3',\n            available: '5.3'\n          },\n          until: '6.0',\n          url: 'https://deprecations.emberjs.com/v5.x#ember-data-deprecate-relationship-remote-update-clearing-local-state'\n        }));\n        notifyChange(graph, relationship.identifier, relationship.definition.key);\n      }\n    }\n  } else {\n    notifyChange(graph, relationship.identifier, relationship.definition.key);\n  }\n}\nfunction _deprecatedCompare(newState, newMembers, prevState, prevSet, onAdd, onDel) {\n  const newLength = newState.length;\n  const prevLength = prevState.length;\n  const iterationLength = Math.max(newLength, prevLength);\n  let changed = newMembers.size !== prevSet.size;\n  const added = new Set();\n  const removed = new Set();\n  const duplicates = new Map();\n  const finalSet = new Set();\n  const finalState = [];\n  for (let i = 0, j = 0; i < iterationLength; i++) {\n    let adv = false;\n    let member;\n\n    // accumulate anything added\n    if (i < newLength) {\n      member = newState[i];\n      if (!finalSet.has(member)) {\n        finalState[j] = member;\n        finalSet.add(member);\n        adv = true;\n        if (!prevSet.has(member)) {\n          changed = true;\n          added.add(member);\n          onAdd(member);\n        }\n      } else {\n        let list = duplicates.get(member);\n        if (list === undefined) {\n          list = [];\n          duplicates.set(member, list);\n        }\n        list.push(i);\n      }\n    }\n\n    // accumulate anything removed\n    if (i < prevLength) {\n      const prevMember = prevState[i];\n\n      // detect reordering, adjusting index for duplicates\n      // j is always less than i and so if i < prevLength, j < prevLength\n      if (member !== prevState[j]) {\n        changed = true;\n      }\n      if (!newMembers.has(prevMember)) {\n        changed = true;\n        removed.add(prevMember);\n        onDel(prevMember);\n      }\n    } else if (adv && j < prevLength && member !== prevState[j]) {\n      changed = true;\n    }\n    if (adv) {\n      j++;\n    }\n  }\n  const diff = {\n    add: added,\n    del: removed,\n    finalState,\n    finalSet,\n    changed\n  };\n  return {\n    diff,\n    duplicates\n  };\n}\nfunction _compare(finalState, finalSet, prevState, prevSet, onAdd, onDel) {\n  const finalLength = finalState.length;\n  const prevLength = prevState.length;\n  const iterationLength = Math.max(finalLength, prevLength);\n  const equalLength = finalLength === prevLength;\n  let changed = finalSet.size !== prevSet.size;\n  const added = new Set();\n  const removed = new Set();\n  for (let i = 0; i < iterationLength; i++) {\n    let member;\n\n    // accumulate anything added\n    if (i < finalLength) {\n      member = finalState[i];\n      if (!prevSet.has(member)) {\n        changed = true;\n        added.add(member);\n        onAdd(member);\n      }\n    }\n\n    // accumulate anything removed\n    if (i < prevLength) {\n      const prevMember = prevState[i];\n\n      // detect reordering\n      if (equalLength && member !== prevMember) {\n        changed = true;\n      }\n      if (!finalSet.has(prevMember)) {\n        changed = true;\n        removed.add(prevMember);\n        onDel(prevMember);\n      }\n    }\n  }\n  return {\n    add: added,\n    del: removed,\n    finalState,\n    finalSet,\n    changed\n  };\n}\nfunction diffCollection(finalState, relationship, onAdd, onDel) {\n  const finalSet = new Set(finalState);\n  const {\n    remoteState,\n    remoteMembers\n  } = relationship;\n  {\n    if (finalState.length !== finalSet.size) {\n      const {\n        diff,\n        duplicates\n      } = _deprecatedCompare(finalState, finalSet, remoteState, remoteMembers, onAdd, onDel);\n      {\n        ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.deprecate)(`Expected all entries in the relationship ${relationship.definition.type}:${relationship.definition.key} to be unique, see log for a list of duplicate entry indeces`, false, {\n          id: 'ember-data:deprecate-non-unique-relationship-entries',\n          for: 'ember-data',\n          until: '6.0',\n          since: {\n            available: '5.3',\n            enabled: '5.3'\n          }\n        })); // eslint-disable-next-line no-console\n        console.log(duplicates);\n      }\n      return diff;\n    }\n  }\n  return _compare(finalState, finalSet, remoteState, remoteMembers, onAdd, onDel);\n}\nfunction computeLocalState(storage) {\n  if (!storage.isDirty) {\n    ( true && !(Array.isArray(storage.localState)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Expected localState to be present`, Array.isArray(storage.localState)));\n    return storage.localState;\n  }\n  const state = storage.remoteState.slice();\n  storage.removals?.forEach(v => {\n    const index = state.indexOf(v);\n    state.splice(index, 1);\n  });\n  storage.additions?.forEach(v => {\n    state.push(v);\n  });\n  storage.localState = state;\n  storage.isDirty = false;\n  return state;\n}\nfunction _addLocal(graph, record, relationship, value, index) {\n  const {\n    remoteMembers,\n    removals\n  } = relationship;\n  let additions = relationship.additions;\n  const hasPresence = remoteMembers.has(value) || additions?.has(value);\n  if (hasPresence && !removals?.has(value)) {\n    ( true && !(hasPresence && !removals?.has(value)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Attempted to add the resource '${value.lid}' to the collection <${relationship.identifier.type}>.${relationship.definition.key} it was already in`, hasPresence && !removals?.has(value)));\n    return false;\n  }\n  if (removals?.has(value)) {\n    removals.delete(value);\n  } else {\n    if (!additions) {\n      additions = relationship.additions = new Set();\n    }\n    relationship.state.hasReceivedData = true;\n    additions.add(value);\n    const {\n      type\n    } = relationship.definition;\n    if (type !== value.type) {\n      {\n        assertPolymorphicType(record, relationship.definition, value, graph.store);\n      }\n      graph.registerPolymorphicType(value.type, type);\n    }\n  }\n\n  // if we have existing localState\n  // and we have an index\n  // apply the change, as this is more efficient\n  // than recomputing localState and\n  // it allows us to preserve local ordering\n  // to a small extend. Local ordering should not\n  // be relied upon as any remote change will blow it away\n  if (relationship.localState) {\n    if (index !== null) {\n      relationship.localState.splice(index, 0, value);\n    } else {\n      relationship.localState.push(value);\n    }\n  }\n  ( true && !(relationship.localState || relationship.isDirty) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Expected relationship to be dirty when adding a local mutation`, relationship.localState || relationship.isDirty));\n  return true;\n}\nfunction _removeLocal(relationship, value) {\n  ( true && !(value) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`expected an identifier to remove from the collection relationship`, value));\n  const {\n    remoteMembers,\n    additions\n  } = relationship;\n  let removals = relationship.removals;\n  const hasPresence = remoteMembers.has(value) || additions?.has(value);\n  if (!hasPresence || removals?.has(value)) {\n    ( true && !(!hasPresence || removals?.has(value)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Attempted to remove the resource '${value.lid}' from the collection <${relationship.identifier.type}>.${relationship.definition.key} but it was not present`, !hasPresence || removals?.has(value)));\n    return false;\n  }\n  if (additions?.has(value)) {\n    additions.delete(value);\n  } else {\n    if (!removals) {\n      removals = relationship.removals = new Set();\n    }\n    removals.add(value);\n  }\n\n  // if we have existing localState\n  // apply the change, as this is more efficient\n  // than recomputing localState and\n  // it allows us to preserve local ordering\n  // to a small extend. Local ordering should not\n  // be relied upon as any remote change will blow it away\n  if (relationship.localState) {\n    const index = relationship.localState.indexOf(value);\n    ( true && !(index !== -1) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Cannot remove a resource that is not present`, index !== -1));\n    relationship.localState.splice(index, 1);\n  }\n  ( true && !(relationship.localState || relationship.isDirty) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Expected relationship to be dirty when performing a local mutation`, relationship.localState || relationship.isDirty));\n  return true;\n}\nfunction _removeRemote(relationship, value) {\n  ( true && !(value) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`expected an identifier to remove from the collection relationship`, value));\n  const {\n    remoteMembers,\n    additions,\n    removals,\n    remoteState\n  } = relationship;\n  ( true && !(remoteMembers.has(value)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Cannot remove a resource that is not present`, remoteMembers.has(value)));\n  if (!remoteMembers.has(value)) {\n    return false;\n  }\n\n  // remove from remote state\n  remoteMembers.delete(value);\n  let index = remoteState.indexOf(value);\n  ( true && !(index !== -1) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Cannot remove a resource that is not present`, index !== -1));\n  remoteState.splice(index, 1);\n\n  // remove from removals if present\n  if (removals?.has(value)) {\n    removals.delete(value);\n\n    // nothing more to do this was our state already\n    return false;\n  }\n  ( true && !(!additions?.has(value)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Remote state indicated removal of a resource that was present only as a local mutation`, !additions?.has(value))); // if we have existing localState\n  // and we have an index\n  // apply the change, as this is more efficient\n  // than recomputing localState and\n  // it allows us to preserve local ordering\n  // to a small extend. Local ordering should not\n  // be relied upon as any remote change will blow it away\n  if (relationship.localState) {\n    index = relationship.localState.indexOf(value);\n    ( true && !(index !== -1) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Cannot remove a resource that is not present`, index !== -1));\n    relationship.localState.splice(index, 1);\n  }\n  ( true && !(relationship.localState || relationship.isDirty) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Expected relationship to be dirty when performing a local mutation`, relationship.localState || relationship.isDirty));\n  return true;\n}\nfunction rollbackRelationship(graph, identifier, field, relationship) {\n  if (isBelongsTo(relationship)) {\n    replaceRelatedRecord(graph, {\n      op: 'replaceRelatedRecord',\n      record: identifier,\n      field,\n      value: relationship.remoteState\n    }, false);\n  } else {\n    replaceRelatedRecords(graph, {\n      op: 'replaceRelatedRecords',\n      record: identifier,\n      field,\n      value: relationship.remoteState.slice()\n    }, false);\n  }\n}\n\n/**\n *\n * Given RHS (Right Hand Side)\n *\n * ```ts\n * class User extends Model {\n *   @hasMany('animal', { async: false, inverse: 'owner' }) pets;\n * }\n * ```\n *\n * Given LHS (Left Hand Side)\n *\n * ```ts\n * class Animal extends Model {\n *  @belongsTo('user', { async: false, inverse: 'pets' }) owner;\n * }\n * ```\n *\n * The UpgradedMeta for the RHS would be:\n *\n * ```ts\n * {\n *   kind: 'hasMany',\n *   key: 'pets',\n *   type: 'animal',\n *   isAsync: false,\n *   isImplicit: false,\n *   isCollection: true,\n *   isPolymorphic: false,\n *   inverseKind: 'belongsTo',\n *   inverseKey: 'owner',\n *   inverseType: 'user',\n *   inverseIsAsync: false,\n *   inverseIsImplicit: false,\n *   inverseIsCollection: false,\n *   inverseIsPolymorphic: false,\n * }\n * ```\n *\n * The UpgradeMeta for the LHS would be:\n *\n * ```ts\n * {\n *   kind: 'belongsTo',\n *   key: 'owner',\n *   type: 'user',\n *   isAsync: false,\n *   isImplicit: false,\n *   isCollection: false,\n *   isPolymorphic: false,\n *   inverseKind: 'hasMany',\n *   inverseKey: 'pets',\n *   inverseType: 'animal',\n *   inverseIsAsync: false,\n *   inverseIsImplicit: false,\n *   inverseIsCollection: true,\n *   inverseIsPolymorphic: false,\n * }\n * ```\n *\n *\n * @class UpgradedMeta\n * @internal\n */\nconst BOOL_LATER = null;\nconst STR_LATER = '';\nconst IMPLICIT_KEY_RAND = Date.now();\nfunction implicitKeyFor(type, key) {\n  return `implicit-${type}:${key}${IMPLICIT_KEY_RAND}`;\n}\nfunction syncMeta(definition, inverseDefinition) {\n  definition.inverseKind = inverseDefinition.kind;\n  definition.inverseKey = inverseDefinition.key;\n  definition.inverseType = inverseDefinition.type;\n  definition.inverseIsAsync = inverseDefinition.isAsync;\n  definition.inverseIsCollection = inverseDefinition.isCollection;\n  definition.inverseIsPolymorphic = inverseDefinition.isPolymorphic;\n  definition.inverseIsImplicit = inverseDefinition.isImplicit;\n  const resetOnRemoteUpdate = definition.resetOnRemoteUpdate === false || inverseDefinition.resetOnRemoteUpdate === false ? false : true;\n  definition.resetOnRemoteUpdate = resetOnRemoteUpdate;\n  inverseDefinition.resetOnRemoteUpdate = resetOnRemoteUpdate;\n}\nfunction upgradeMeta(meta) {\n  const niceMeta = {};\n  const options = meta.options;\n  niceMeta.kind = meta.kind;\n  niceMeta.key = meta.name;\n  niceMeta.type = meta.type;\n  ( true && !(typeof options?.async === 'boolean') && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Expected relationship definition to specify async`, typeof options?.async === 'boolean'));\n  niceMeta.isAsync = options.async;\n  niceMeta.isImplicit = false;\n  niceMeta.isCollection = meta.kind === 'hasMany';\n  niceMeta.isPolymorphic = options && !!options.polymorphic;\n  niceMeta.inverseKey = options && options.inverse || STR_LATER;\n  niceMeta.inverseType = STR_LATER;\n  niceMeta.inverseIsAsync = BOOL_LATER;\n  niceMeta.inverseIsImplicit = options && options.inverse === null || BOOL_LATER;\n  niceMeta.inverseIsCollection = BOOL_LATER;\n  niceMeta.resetOnRemoteUpdate = options && options.resetOnRemoteUpdate === false ? false : true;\n  return niceMeta;\n}\nfunction assertConfiguration(info, type, key) {\n  {\n    const isSelfReferential = info.isSelfReferential;\n    if (isSelfReferential) {\n      return true;\n    }\n    const _isRHS = key === info.rhs_relationshipName && (type === info.rhs_baseModelName ||\n    // base or non-polymorphic\n    // if the other side is polymorphic then we need to scan our modelNames\n    info.lhs_isPolymorphic && info.rhs_modelNames.includes(type)); // polymorphic\n    const _isLHS = key === info.lhs_relationshipName && (type === info.lhs_baseModelName ||\n    // base or non-polymorphic\n    // if the other side is polymorphic then we need to scan our modelNames\n    info.rhs_isPolymorphic && info.lhs_modelNames.includes(type)); // polymorphic;\n\n    if (!_isRHS && !_isLHS) {\n      /*\n        this occurs when we are likely polymorphic but not configured to be polymorphic\n        most often due to extending a class that has a relationship definition on it.\n         e.g.\n         ```ts\n        class Pet extends Model {\n          @belongsTo('human', { async: false, inverse: 'pet' }) owner;\n        }\n        class Human extends Model {\n          @belongsTo('pet', { async: false, inverse: 'owner' }) pet;\n        }\n        class Farmer extends Human {}\n        ```\n         In the above case, the following would trigger this error:\n         ```ts\n        let pet = store.createRecord('pet');\n        let farmer = store.createRecord('farmer');\n        farmer.pet = pet; // error\n        ```\n         The correct way to fix this is to specify the polymorphic option on Pet\n        and to specify the abstract type 'human' on the Human base class.\n         ```ts\n        class Pet extends Model {\n          @belongsTo('human', { async: false, inverse: 'pet', polymorphic: true }) owner;\n        }\n        class Human extends Model {\n          @belongsTo('pet', { async: false, inverse: 'owner', as: 'human' }) pet;\n        }\n        class Farmer extends Human {}\n        ```\n         Alternatively both Human and Farmer could declare the relationship, because relationship\n        definitions are \"structural\".\n         ```ts\n        class Pet extends Model {\n          @belongsTo('human', { async: false, inverse: 'pet', polymorphic: true }) owner;\n        }\n        class Human extends Model {\n          @belongsTo('pet', { async: false, inverse: 'owner', as: 'human' }) pet;\n        }\n        class Farmer extends Model {\n          @belongsTo('pet', { async: false, inverse: 'owner', as: 'human' }) pet;\n        }\n        ```\n        */\n      if (key === info.lhs_relationshipName && info.lhs_modelNames.includes(type)) {\n        // parentIdentifier, parentDefinition, addedIdentifier, store\n        assertInheritedSchema(info.lhs_definition, type);\n      } else if (key === info.rhs_relationshipName && info.rhs_modelNames.includes(type)) {\n        assertInheritedSchema(info.lhs_definition, type);\n      }\n      // OPEN AN ISSUE :: we would like to improve our errors but need to understand what corner case got us here\n      throw new Error(`PLEASE OPEN AN ISSUE :: Found a relationship that is neither the LHS nor RHS of the same edge. This is not supported. Please report this to the EmberData team.`);\n    }\n    if (_isRHS && _isLHS) {\n      // not sure how we get here but it's probably the result of some form of inheritance\n      // without having specified polymorphism correctly leading to it not being self-referential\n      // OPEN AN ISSUE :: we would like to improve our errors but need to understand what corner case got us here\n      throw new Error(`PLEASE OPEN AN ISSUE :: Found a relationship that is both the LHS and RHS of the same edge but is not self-referential. This is not supported. Please report this to the EmberData team.`);\n    }\n  }\n}\nfunction isLHS(info, type, key) {\n  const isSelfReferential = info.isSelfReferential;\n  const isRelationship = key === info.lhs_relationshipName;\n  {\n    assertConfiguration(info, type, key);\n  }\n  if (isRelationship === true) {\n    return isSelfReferential === true ||\n    // itself\n    type === info.lhs_baseModelName ||\n    // base or non-polymorphic\n    // if the other side is polymorphic then we need to scan our modelNames\n    info.rhs_isPolymorphic && info.lhs_modelNames.includes(type) // polymorphic\n    ;\n  }\n  return false;\n}\nfunction upgradeDefinition(graph, identifier, propertyName, isImplicit = false) {\n  const cache = graph._definitionCache;\n  const storeWrapper = graph.store;\n  const polymorphicLookup = graph._potentialPolymorphicTypes;\n  const {\n    type\n  } = identifier;\n  let cached = /*#__NOINLINE__*/expandingGet(cache, type, propertyName);\n\n  // CASE: We have a cached resolution (null if no relationship exists)\n  if (cached !== undefined) {\n    return cached;\n  }\n  ( true && !(!isImplicit) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Expected to find relationship definition in the cache for the implicit relationship ${propertyName}`, !isImplicit));\n  const relationships = storeWrapper.getSchemaDefinitionService().relationshipsDefinitionFor(identifier);\n  ( true && !(relationships) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Expected to have a relationship definition for ${type} but none was found.`, relationships));\n  const meta = relationships[propertyName];\n  if (!meta) {\n    // TODO potentially we should just be permissive here since this is an implicit relationship\n    // and not require the lookup table to be populated\n    if (polymorphicLookup[type]) {\n      const altTypes = Object.keys(polymorphicLookup[type]);\n      for (let i = 0; i < altTypes.length; i++) {\n        const _cached = expandingGet(cache, altTypes[i], propertyName);\n        if (_cached) {\n          /*#__NOINLINE__*/expandingSet(cache, type, propertyName, _cached);\n          _cached.rhs_modelNames.push(type);\n          return _cached;\n        }\n      }\n    }\n\n    // CASE: We don't have a relationship at all\n    // we should only hit this in prod\n    ( true && !(meta) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Expected a relationship schema for '${type}.${propertyName}', but no relationship schema was found.`, meta));\n    cache[type][propertyName] = null;\n    return null;\n  }\n  const definition = /*#__NOINLINE__*/upgradeMeta(meta);\n  let inverseDefinition;\n  let inverseKey;\n  const inverseType = definition.type;\n\n  // CASE: Inverse is explicitly null\n  if (definition.inverseKey === null) {\n    // TODO probably dont need this assertion if polymorphic\n    ( true && !(getStore(storeWrapper).modelFor(inverseType)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Expected the inverse model to exist`, getStore(storeWrapper).modelFor(inverseType)));\n    inverseDefinition = null;\n  } else {\n    inverseKey = /*#__NOINLINE__*/inverseForRelationship(getStore(storeWrapper), identifier, propertyName);\n\n    // CASE: If we are polymorphic, and we declared an inverse that is non-null\n    // we must assume that the lack of inverseKey means that there is no\n    // concrete type as the baseType, so we must construct and artificial\n    // placeholder\n    if (!inverseKey && definition.isPolymorphic && definition.inverseKey) {\n      inverseDefinition = {\n        kind: 'belongsTo',\n        // this must be updated when we find the first belongsTo or hasMany definition that matches\n        key: definition.inverseKey,\n        type: type,\n        isAsync: false,\n        // this must be updated when we find the first belongsTo or hasMany definition that matches\n        isImplicit: false,\n        isCollection: false,\n        // this must be updated when we find the first belongsTo or hasMany definition that matches\n        isPolymorphic: false\n      }; // the rest of the fields are populated by syncMeta\n\n      // CASE: Inverse resolves to null\n    } else if (!inverseKey) {\n      inverseDefinition = null;\n    } else {\n      // CASE: We have an explicit inverse or were able to resolve one\n      const inverseDefinitions = storeWrapper.getSchemaDefinitionService().relationshipsDefinitionFor({\n        type: inverseType\n      });\n      ( true && !(inverseDefinitions) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Expected to have a relationship definition for ${inverseType} but none was found.`, inverseDefinitions));\n      const metaFromInverse = inverseDefinitions[inverseKey];\n      ( true && !(metaFromInverse) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Expected a relationship schema for '${inverseType}.${inverseKey}' to match the inverse of '${type}.${propertyName}', but no relationship schema was found.`, metaFromInverse));\n      inverseDefinition = upgradeMeta(metaFromInverse);\n    }\n  }\n\n  // CASE: We have no inverse\n  if (!inverseDefinition) {\n    // polish off meta\n    inverseKey = /*#__NOINLINE__*/implicitKeyFor(type, propertyName);\n    inverseDefinition = {\n      kind: 'implicit',\n      key: inverseKey,\n      type: type,\n      isAsync: false,\n      isImplicit: true,\n      isCollection: true,\n      // with implicits any number of records could point at us\n      isPolymorphic: false\n    }; // the rest of the fields are populated by syncMeta\n\n    syncMeta(definition, inverseDefinition);\n    syncMeta(inverseDefinition, definition);\n    const info = {\n      lhs_key: `${type}:${propertyName}`,\n      lhs_modelNames: [type],\n      lhs_baseModelName: type,\n      lhs_relationshipName: propertyName,\n      lhs_definition: definition,\n      lhs_isPolymorphic: definition.isPolymorphic,\n      rhs_key: inverseDefinition.key,\n      rhs_modelNames: [inverseType],\n      rhs_baseModelName: inverseType,\n      rhs_relationshipName: inverseDefinition.key,\n      rhs_definition: inverseDefinition,\n      rhs_isPolymorphic: false,\n      hasInverse: false,\n      isSelfReferential: type === inverseType,\n      // this could be wrong if we are self-referential but also polymorphic\n      isReflexive: false // we can't be reflexive if we don't define an inverse\n    };\n    expandingSet(cache, inverseType, inverseKey, info);\n    expandingSet(cache, type, propertyName, info);\n    return info;\n  }\n\n  // CASE: We do have an inverse\n  const baseType = inverseDefinition.type;\n\n  // TODO we want to assert this but this breaks all of our shoddily written tests\n  /*\n    if (DEBUG) {\n      let inverseDoubleCheck = inverseFor(inverseRelationshipName, store);\n       assert(`The ${inverseBaseModelName}:${inverseRelationshipName} relationship declares 'inverse: null', but it was resolved as the inverse for ${baseModelName}:${relationshipName}.`, inverseDoubleCheck);\n    }\n  */\n  // CASE: We may have already discovered the inverse for the baseModelName\n  // CASE: We have already discovered the inverse\n  ( true && !(typeof inverseKey === 'string' && inverseKey.length > 0) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`We should have determined an inverseKey by now, open an issue if this is hit`, typeof inverseKey === 'string' && inverseKey.length > 0));\n  cached = expandingGet(cache, baseType, propertyName) || expandingGet(cache, inverseType, inverseKey);\n  if (cached) {\n    // TODO this assert can be removed if the above assert is enabled\n    ( true && !(cached.hasInverse !== false) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`The ${inverseType}:${inverseKey} relationship declares 'inverse: null', but it was resolved as the inverse for ${type}:${propertyName}.`, cached.hasInverse !== false));\n    const _isLHS = cached.lhs_baseModelName === baseType;\n    const modelNames = _isLHS ? cached.lhs_modelNames : cached.rhs_modelNames;\n    // make this lookup easier in the future by caching the key\n    modelNames.push(type);\n    expandingSet(cache, type, propertyName, cached);\n    return cached;\n  }\n\n  // this is our first time so polish off the metas\n  syncMeta(definition, inverseDefinition);\n  syncMeta(inverseDefinition, definition);\n  const lhs_modelNames = [type];\n  if (type !== baseType) {\n    lhs_modelNames.push(baseType);\n  }\n  const isSelfReferential = baseType === inverseType;\n  const info = {\n    lhs_key: `${baseType}:${propertyName}`,\n    lhs_modelNames,\n    lhs_baseModelName: baseType,\n    lhs_relationshipName: propertyName,\n    lhs_definition: definition,\n    lhs_isPolymorphic: definition.isPolymorphic,\n    rhs_key: `${inverseType}:${inverseKey}`,\n    rhs_modelNames: [inverseType],\n    rhs_baseModelName: inverseType,\n    rhs_relationshipName: inverseKey,\n    rhs_definition: inverseDefinition,\n    rhs_isPolymorphic: inverseDefinition.isPolymorphic,\n    hasInverse: true,\n    isSelfReferential,\n    isReflexive: isSelfReferential && propertyName === inverseKey\n  };\n\n  // Create entries for the baseModelName as well as modelName to speed up\n  //  inverse lookups\n  expandingSet(cache, baseType, propertyName, info);\n  expandingSet(cache, type, propertyName, info);\n\n  // Greedily populate the inverse\n  expandingSet(cache, inverseType, inverseKey, info);\n  return info;\n}\nfunction inverseForRelationship(store, identifier, key) {\n  const definition = store.getSchemaDefinitionService().relationshipsDefinitionFor(identifier)[key];\n  if (!definition) {\n    return null;\n  }\n  ( true && !(definition.options?.inverse === null || typeof definition.options?.inverse === 'string' && definition.options.inverse.length > 0) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Expected the relationship defintion to specify the inverse type or null.`, definition.options?.inverse === null || typeof definition.options?.inverse === 'string' && definition.options.inverse.length > 0));\n  return definition.options.inverse;\n}\nfunction createState() {\n  return {\n    hasReceivedData: false,\n    isEmpty: true,\n    isStale: false,\n    hasFailedLoadAttempt: false,\n    shouldForceReload: false,\n    hasDematerializedInverse: false\n  };\n}\nfunction createCollectionEdge(definition, identifier) {\n  return {\n    definition,\n    identifier,\n    state: createState(),\n    remoteMembers: new Set(),\n    remoteState: [],\n    additions: null,\n    removals: null,\n    meta: null,\n    links: null,\n    localState: null,\n    isDirty: true,\n    transactionRef: 0,\n    _diff: undefined\n  };\n}\nfunction legacyGetCollectionRelationshipData(source) {\n  const payload = {};\n  if (source.state.hasReceivedData) {\n    payload.data = computeLocalState(source);\n  }\n  if (source.links) {\n    payload.links = source.links;\n  }\n  if (source.meta) {\n    payload.meta = source.meta;\n  }\n  return payload;\n}\nfunction createImplicitEdge(definition, identifier) {\n  return {\n    definition,\n    identifier,\n    localMembers: new Set(),\n    remoteMembers: new Set()\n  };\n}\n\n/*\n * @module @ember-data/graph\n *\n * Stores the data for one side of a \"single\" resource relationship.\n *\n * @class ResourceEdge\n * @internal\n */\n\nfunction createResourceEdge(definition, identifier) {\n  return {\n    definition,\n    identifier,\n    state: createState(),\n    transactionRef: 0,\n    localState: null,\n    remoteState: null,\n    meta: null,\n    links: null\n  };\n}\nfunction legacyGetResourceRelationshipData(source) {\n  let data;\n  const payload = {};\n  if (source.localState) {\n    data = source.localState;\n  }\n  if (source.localState === null && source.state.hasReceivedData) {\n    data = null;\n  }\n  if (source.links) {\n    payload.links = source.links;\n  }\n  if (data !== undefined) {\n    payload.data = data;\n  }\n  if (source.meta) {\n    payload.meta = source.meta;\n  }\n  return payload;\n}\nfunction addToRelatedRecords(graph, op, isRemote) {\n  ( true && !(!isRemote) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Graph does not yet support updating the remote state of a relationship via the ${op.op} operation`, !isRemote));\n  const {\n    record,\n    value,\n    index\n  } = op;\n  const relationship = graph.get(record, op.field);\n  ( true && !(isHasMany(relationship)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`You can only '${op.op}' on a hasMany relationship. ${record.type}.${op.field} is a ${relationship.definition.kind}`, isHasMany(relationship)));\n  if (Array.isArray(value)) {\n    for (let i = 0; i < value.length; i++) {\n      addRelatedRecord(graph, relationship, record, value[i], index !== undefined ? index + i : index, isRemote);\n    }\n  } else {\n    addRelatedRecord(graph, relationship, record, value, index, isRemote);\n  }\n  notifyChange(graph, relationship.identifier, relationship.definition.key);\n}\nfunction addRelatedRecord(graph, relationship, record, value, index, isRemote) {\n  ( true && !(value) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`expected an identifier to add to the collection relationship`, value));\n  if (_addLocal(graph, record, relationship, value, index ?? null)) {\n    addToInverse(graph, value, relationship.definition.inverseKey, record, isRemote);\n  }\n}\nfunction mergeIdentifier(graph, op, relationships) {\n  Object.keys(relationships).forEach(key => {\n    const rel = relationships[key];\n    if (!rel) {\n      return;\n    }\n    mergeIdentifierForRelationship(graph, op, rel);\n  });\n}\nfunction mergeIdentifierForRelationship(graph, op, rel) {\n  rel.identifier = op.value;\n  forAllRelatedIdentifiers(rel, identifier => {\n    const inverse = graph.get(identifier, rel.definition.inverseKey);\n    mergeInRelationship(graph, inverse, op);\n  });\n}\nfunction mergeInRelationship(graph, rel, op) {\n  if (isBelongsTo(rel)) {\n    mergeBelongsTo(graph, rel, op);\n  } else if (isHasMany(rel)) {\n    mergeHasMany(graph, rel, op);\n  } else {\n    mergeImplicit(graph, rel, op);\n  }\n}\nfunction mergeBelongsTo(graph, rel, op) {\n  if (rel.remoteState === op.record) {\n    rel.remoteState = op.value;\n  }\n  if (rel.localState === op.record) {\n    rel.localState = op.record;\n    notifyChange(graph, rel.identifier, rel.definition.key);\n  }\n}\nfunction mergeHasMany(graph, rel, op) {\n  if (rel.remoteMembers.has(op.record)) {\n    rel.remoteMembers.delete(op.record);\n    rel.remoteMembers.add(op.value);\n    const index = rel.remoteState.indexOf(op.record);\n    rel.remoteState.splice(index, 1, op.value);\n    rel.isDirty = true;\n  }\n  if (rel.additions?.has(op.record)) {\n    rel.additions.delete(op.record);\n    rel.additions.add(op.value);\n    rel.isDirty = true;\n  }\n  if (rel.removals?.has(op.record)) {\n    rel.removals.delete(op.record);\n    rel.removals.add(op.value);\n    rel.isDirty = true;\n  }\n  if (rel.isDirty) {\n    notifyChange(graph, rel.identifier, rel.definition.key);\n  }\n}\nfunction mergeImplicit(graph, rel, op) {\n  if (rel.remoteMembers.has(op.record)) {\n    rel.remoteMembers.delete(op.record);\n    rel.remoteMembers.add(op.value);\n  }\n  if (rel.localMembers.has(op.record)) {\n    rel.localMembers.delete(op.record);\n    rel.localMembers.add(op.value);\n  }\n}\nfunction removeFromRelatedRecords(graph, op, isRemote) {\n  ( true && !(!isRemote) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Graph does not yet support updating the remote state of a relationship via the ${op.op} operation`, !isRemote));\n  const {\n    record,\n    value\n  } = op;\n  const relationship = graph.get(record, op.field);\n  ( true && !(isHasMany(relationship)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`You can only '${op.op}' on a hasMany relationship. ${record.type}.${op.field} is a ${relationship.definition.kind}`, isHasMany(relationship))); // TODO we should potentially thread the index information through here\n  // when available as it may make it faster to remove from the local state\n  // when trying to patch more efficiently without blowing away the entire\n  // local state array\n  if (Array.isArray(value)) {\n    for (let i = 0; i < value.length; i++) {\n      removeRelatedRecord(graph, relationship, record, value[i], isRemote);\n    }\n  } else {\n    removeRelatedRecord(graph, relationship, record, value, isRemote);\n  }\n  notifyChange(graph, relationship.identifier, relationship.definition.key);\n}\nfunction removeRelatedRecord(graph, relationship, record, value, isRemote) {\n  ( true && !(value) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`expected an identifier to remove from the collection relationship`, value));\n  if (_removeLocal(relationship, value)) {\n    removeFromInverse(graph, value, relationship.definition.inverseKey, record, isRemote);\n  }\n}\n\n/*\n  This method normalizes a link to an \"links object\". If the passed link is\n  already an object it's returned without any modifications.\n\n  See http://jsonapi.org/format/#document-links for more information.\n*/\nfunction _normalizeLink(link) {\n  switch (typeof link) {\n    case 'object':\n      return link;\n    case 'string':\n      return {\n        href: link\n      };\n  }\n}\n\n/*\n    Updates the \"canonical\" or \"remote\" state of a relationship, replacing any existing\n    state and blowing away any local changes (excepting new records).\n*/\nfunction updateRelationshipOperation(graph, op) {\n  const relationship = graph.get(op.record, op.field);\n  ( true && !(isHasMany(relationship) || isBelongsTo(relationship)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Cannot update an implicit relationship`, isHasMany(relationship) || isBelongsTo(relationship)));\n  const {\n    definition,\n    state,\n    identifier\n  } = relationship;\n  const {\n    isCollection\n  } = definition;\n  const payload = op.value;\n  let hasRelationshipDataProperty = false;\n  let hasUpdatedLink = false;\n  if (payload.meta) {\n    relationship.meta = payload.meta;\n  }\n  if (payload.data !== undefined) {\n    hasRelationshipDataProperty = true;\n    if (isCollection) {\n      // TODO deprecate this case. We\n      // have tests saying we support it.\n      if (payload.data === null) {\n        payload.data = [];\n      }\n      ( true && !(Array.isArray(payload.data)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Expected an array`, Array.isArray(payload.data)));\n      const cache = graph.store.identifierCache;\n      graph.update({\n        op: 'replaceRelatedRecords',\n        record: identifier,\n        field: op.field,\n        value: upgradeIdentifiers(payload.data, cache)\n      }, true);\n    } else {\n      graph.update({\n        op: 'replaceRelatedRecord',\n        record: identifier,\n        field: op.field,\n        value: payload.data ? graph.store.identifierCache.upgradeIdentifier(payload.data) : null\n      }, true);\n    }\n  } else if (definition.isAsync === false && !state.hasReceivedData) {\n    hasRelationshipDataProperty = true;\n    if (isCollection) {\n      graph.update({\n        op: 'replaceRelatedRecords',\n        record: identifier,\n        field: op.field,\n        value: []\n      }, true);\n    } else {\n      graph.update({\n        op: 'replaceRelatedRecord',\n        record: identifier,\n        field: op.field,\n        value: null\n      }, true);\n    }\n  }\n  if (payload.links) {\n    const originalLinks = relationship.links;\n    relationship.links = payload.links;\n    if (payload.links.related) {\n      const relatedLink = _normalizeLink(payload.links.related);\n      const currentLink = originalLinks && originalLinks.related ? _normalizeLink(originalLinks.related) : null;\n      const currentLinkHref = currentLink ? currentLink.href : null;\n      if (relatedLink && relatedLink.href && relatedLink.href !== currentLinkHref) {\n        ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.warn)(`You pushed a record of type '${identifier.type}' with a relationship '${definition.key}' configured as 'async: false'. You've included a link but no primary data, this may be an error in your payload. EmberData will treat this relationship as known-to-be-empty.`, definition.isAsync || state.hasReceivedData, {\n          id: 'ds.store.push-link-for-sync-relationship'\n        }));\n        ( true && !(typeof relatedLink.href === 'string' || relatedLink.href === null) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`You have pushed a record of type '${identifier.type}' with '${definition.key}' as a link, but the value of that link is not a string.`, typeof relatedLink.href === 'string' || relatedLink.href === null));\n        hasUpdatedLink = true;\n      }\n    }\n  }\n\n  /*\n       Data being pushed into the relationship might contain only data or links,\n       or a combination of both.\n        IF contains only data\n       IF contains both links and data\n        state.isEmpty -> true if is empty array (has-many) or is null (belongs-to)\n        state.hasReceivedData -> true\n        hasDematerializedInverse -> false\n        state.isStale -> false\n        allInverseRecordsAreLoaded -> run-check-to-determine\n        IF contains only links\n        state.isStale -> true\n       */\n  relationship.state.hasFailedLoadAttempt = false;\n  if (hasRelationshipDataProperty) {\n    const relationshipIsEmpty = payload.data === null || Array.isArray(payload.data) && payload.data.length === 0;\n\n    // we don't need to notify here as the update op we pushed in above will notify once\n    // membership is in the correct state.\n    relationship.state.hasReceivedData = true;\n    relationship.state.isStale = false;\n    relationship.state.hasDematerializedInverse = false;\n    relationship.state.isEmpty = relationshipIsEmpty;\n  } else if (hasUpdatedLink) {\n    // only notify stale if we have not previously received membership data.\n    // within this same transaction\n    // this prevents refetching when only one side of the relationship in the\n    // payload contains the info while the other side contains just a link\n    // this only works when the side with just a link is a belongsTo, as we\n    // don't know if a hasMany has full information or not.\n    // see #7049 for context.\n    if (isCollection || !relationship.state.hasReceivedData || isStaleTransaction(relationship.transactionRef, graph._transaction)) {\n      relationship.state.isStale = true;\n      notifyChange(graph, relationship.identifier, relationship.definition.key);\n    } else {\n      relationship.state.isStale = false;\n    }\n  }\n}\nfunction isStaleTransaction(relationshipTransactionId, graphTransactionId) {\n  return relationshipTransactionId === 0 ||\n  // relationship has never notified\n  graphTransactionId === null ||\n  // we are not in a transaction\n  relationshipTransactionId < graphTransactionId // we are not part of the current transaction\n  ;\n}\nfunction upgradeIdentifiers(arr, cache) {\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = cache.upgradeIdentifier(arr[i]);\n  }\n  return arr;\n}\nconst Graphs = new Map();\nlet transactionRef = 0;\n/*\n * Graph acts as the cache for relationship data. It allows for\n * us to ask about and update relationships for a given Identifier\n * without requiring other objects for that Identifier to be\n * instantiated (such as `RecordData` or a `Record`)\n *\n * This also allows for us to make more substantive changes to relationships\n * with increasingly minor alterations to other portions of the internals\n * over time.\n *\n * The graph is made up of nodes and edges. Each unique identifier gets\n * its own node, which is a dictionary with a list of that node's edges\n * (or connections) to other nodes. In `Model` terms, a node represents a\n * record instance, with each key (an edge) in the dictionary correlating\n * to either a `hasMany` or `belongsTo` field on that record instance.\n *\n * The value for each key, or `edge` is the identifier(s) the node relates\n * to in the graph from that key.\n */\nclass Graph {\n  constructor(store) {\n    this._definitionCache = Object.create(null);\n    this._metaCache = Object.create(null);\n    this._potentialPolymorphicTypes = Object.create(null);\n    this.identifiers = new Map();\n    this.store = store;\n    this.isDestroyed = false;\n    this._willSyncRemote = false;\n    this._willSyncLocal = false;\n    this._pushedUpdates = {\n      belongsTo: undefined,\n      hasMany: undefined,\n      deletions: []\n    };\n    this._updatedRelationships = new Set();\n    this._transaction = null;\n    this._removing = null;\n    this.silenceNotifications = false;\n  }\n  has(identifier, propertyName) {\n    const relationships = this.identifiers.get(identifier);\n    if (!relationships) {\n      return false;\n    }\n    return relationships[propertyName] !== undefined;\n  }\n  getDefinition(identifier, propertyName) {\n    let defs = this._metaCache[identifier.type];\n    let meta = defs?.[propertyName];\n    if (!meta) {\n      const info = /*#__NOINLINE__*/upgradeDefinition(this, identifier, propertyName);\n      ( true && !(info !== null) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Could not determine relationship information for ${identifier.type}.${propertyName}`, info !== null)); // if (info.rhs_definition?.kind === 'implicit') {\n      // we should possibly also do this\n      // but it would result in being extremely permissive for other relationships by accident\n      // this.registerPolymorphicType(info.rhs_baseModelName, identifier.type);\n      // }\n      meta = /*#__NOINLINE__*/isLHS(info, identifier.type, propertyName) ? info.lhs_definition : info.rhs_definition;\n      defs = this._metaCache[identifier.type] = defs || {};\n      defs[propertyName] = meta;\n    }\n    return meta;\n  }\n  get(identifier, propertyName) {\n    ( true && !(propertyName) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`expected propertyName`, propertyName));\n    let relationships = this.identifiers.get(identifier);\n    if (!relationships) {\n      relationships = Object.create(null);\n      this.identifiers.set(identifier, relationships);\n    }\n    let relationship = relationships[propertyName];\n    if (!relationship) {\n      const meta = this.getDefinition(identifier, propertyName);\n      if (meta.kind === 'belongsTo') {\n        relationship = relationships[propertyName] = createResourceEdge(meta, identifier);\n      } else if (meta.kind === 'hasMany') {\n        relationship = relationships[propertyName] = createCollectionEdge(meta, identifier);\n      } else {\n        ( true && !(meta.kind === 'implicit' && meta.isImplicit === true) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Expected kind to be implicit`, meta.kind === 'implicit' && meta.isImplicit === true));\n        relationship = relationships[propertyName] = createImplicitEdge(meta, identifier);\n      }\n    }\n    return relationship;\n  }\n  getData(identifier, propertyName) {\n    const relationship = this.get(identifier, propertyName);\n    ( true && !(!isImplicit(relationship)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Cannot getData() on an implicit relationship`, !isImplicit(relationship)));\n    if (isBelongsTo(relationship)) {\n      return legacyGetResourceRelationshipData(relationship);\n    }\n    return legacyGetCollectionRelationshipData(relationship);\n  }\n\n  /*\n   * Allows for the graph to dynamically discover polymorphic connections\n   * without needing to walk prototype chains.\n   *\n   * Used by edges when an added `type` does not match the expected `type`\n   * for that edge.\n   *\n   * Currently we assert before calling this. For a public API we will want\n   * to call out to the schema manager to ask if we should consider these\n   * types as equivalent for a given relationship.\n   */\n  registerPolymorphicType(type1, type2) {\n    const typeCache = this._potentialPolymorphicTypes;\n    let t1 = typeCache[type1];\n    if (!t1) {\n      t1 = typeCache[type1] = Object.create(null);\n    }\n    t1[type2] = true;\n    let t2 = typeCache[type2];\n    if (!t2) {\n      t2 = typeCache[type2] = Object.create(null);\n    }\n    t2[type1] = true;\n  }\n\n  /*\n   TODO move this comment somewhere else\n   implicit relationships are relationships which have not been declared but the inverse side exists on\n   another record somewhere\n    For example if there was:\n    ```app/models/comment.js\n   import Model, { attr } from '@ember-data/model';\n    export default class Comment extends Model {\n     @attr text;\n   }\n   ```\n    and there is also:\n    ```app/models/post.js\n   import Model, { attr, hasMany } from '@ember-data/model';\n    export default class Post extends Model {\n     @attr title;\n     @hasMany('comment', { async: true, inverse: null }) comments;\n   }\n   ```\n    Then we would have a implicit 'post' relationship for the comment record in order\n   to be do things like remove the comment from the post if the comment were to be deleted.\n  */\n\n  isReleasable(identifier) {\n    const relationships = this.identifiers.get(identifier);\n    if (!relationships) {\n      return true;\n    }\n    const keys = Object.keys(relationships);\n    for (let i = 0; i < keys.length; i++) {\n      const relationship = relationships[keys[i]];\n      // account for previously unloaded relationships\n      // typically from a prior deletion of a record that pointed to this one implicitly\n      if (relationship === undefined) {\n        continue;\n      }\n      ( true && !(relationship) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Expected a relationship`, relationship));\n      if (relationship.definition.inverseIsAsync && !isNew(identifier)) {\n        return false;\n      }\n    }\n    return true;\n  }\n  unload(identifier, silenceNotifications) {\n    const relationships = this.identifiers.get(identifier);\n    if (relationships) {\n      // cleans up the graph but retains some nodes\n      // to allow for rematerialization\n      Object.keys(relationships).forEach(key => {\n        const rel = relationships[key];\n        if (!rel) {\n          return;\n        }\n        /*#__NOINLINE__*/\n        destroyRelationship(this, rel, silenceNotifications);\n        if ( /*#__NOINLINE__*/isImplicit(rel)) {\n          // @ts-expect-error\n          relationships[key] = undefined;\n        }\n      });\n    }\n  }\n  _isDirty(identifier, field) {\n    const relationships = this.identifiers.get(identifier);\n    if (!relationships) {\n      return false;\n    }\n    const relationship = relationships[field];\n    if (!relationship) {\n      return false;\n    }\n    if (isBelongsTo(relationship)) {\n      return relationship.localState !== relationship.remoteState;\n    } else if (isHasMany(relationship)) {\n      const hasAdditions = relationship.additions !== null && relationship.additions.size > 0;\n      const hasRemovals = relationship.removals !== null && relationship.removals.size > 0;\n      return hasAdditions || hasRemovals || isReordered(relationship);\n    }\n    return false;\n  }\n  getChanged(identifier) {\n    const relationships = this.identifiers.get(identifier);\n    const changed = new Map();\n    if (!relationships) {\n      return changed;\n    }\n    const keys = Object.keys(relationships);\n    for (let i = 0; i < keys.length; i++) {\n      const field = keys[i];\n      const relationship = relationships[field];\n      if (!relationship) {\n        continue;\n      }\n      if (isBelongsTo(relationship)) {\n        if (relationship.localState !== relationship.remoteState) {\n          changed.set(field, {\n            kind: 'resource',\n            remoteState: relationship.remoteState,\n            localState: relationship.localState\n          });\n        }\n      } else if (isHasMany(relationship)) {\n        const hasAdditions = relationship.additions !== null && relationship.additions.size > 0;\n        const hasRemovals = relationship.removals !== null && relationship.removals.size > 0;\n        const reordered = isReordered(relationship);\n        if (hasAdditions || hasRemovals || reordered) {\n          changed.set(field, {\n            kind: 'collection',\n            additions: new Set(relationship.additions) || new Set(),\n            removals: new Set(relationship.removals) || new Set(),\n            remoteState: relationship.remoteState,\n            localState: legacyGetCollectionRelationshipData(relationship).data || [],\n            reordered\n          });\n        }\n      }\n    }\n    return changed;\n  }\n  hasChanged(identifier) {\n    const relationships = this.identifiers.get(identifier);\n    if (!relationships) {\n      return false;\n    }\n    const keys = Object.keys(relationships);\n    for (let i = 0; i < keys.length; i++) {\n      if (this._isDirty(identifier, keys[i])) {\n        return true;\n      }\n    }\n    return false;\n  }\n  rollback(identifier) {\n    const relationships = this.identifiers.get(identifier);\n    const changed = [];\n    if (!relationships) {\n      return changed;\n    }\n    const keys = Object.keys(relationships);\n    for (let i = 0; i < keys.length; i++) {\n      const field = keys[i];\n      const relationship = relationships[field];\n      if (!relationship) {\n        continue;\n      }\n      if (this._isDirty(identifier, field)) {\n        rollbackRelationship(this, identifier, field, relationship);\n        changed.push(field);\n      }\n    }\n    return changed;\n  }\n  remove(identifier) {\n    ( true && !(!this._removing) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Cannot remove ${String(identifier)} while still removing ${String(this._removing)}`, !this._removing));\n    this._removing = identifier;\n    this.unload(identifier);\n    this.identifiers.delete(identifier);\n    this._removing = null;\n  }\n\n  /*\n   * Remote state changes\n   */\n  push(op) {\n    if (op.op === 'deleteRecord') {\n      this._pushedUpdates.deletions.push(op);\n    } else {\n      const definition = this.getDefinition(op.record, op.field);\n      ( true && !(definition.kind !== 'implicit') && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Cannot push a remote update for an implicit relationship`, definition.kind !== 'implicit'));\n      addPending(this._pushedUpdates, definition, op);\n    }\n    if (!this._willSyncRemote) {\n      this._willSyncRemote = true;\n      getStore(this.store)._schedule('coalesce', () => this._flushRemoteQueue());\n    }\n  }\n\n  /*\n   * Local state changes\n   */\n\n  update(op, isRemote = false) {\n    ( true && !(op.op === 'deleteRecord' || op.op === 'mergeIdentifiers' || !isImplicit(this.get(op.record, op.field))) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Cannot update an implicit relationship`, op.op === 'deleteRecord' || op.op === 'mergeIdentifiers' || !isImplicit(this.get(op.record, op.field))));\n    switch (op.op) {\n      case 'mergeIdentifiers':\n        {\n          const relationships = this.identifiers.get(op.record);\n          if (relationships) {\n            /*#__NOINLINE__*/mergeIdentifier(this, op, relationships);\n          }\n          break;\n        }\n      case 'updateRelationship':\n        ( true && !(isRemote) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Can only perform the operation updateRelationship on remote state`, isRemote));\n        {\n          // in debug, assert payload validity eagerly\n          // TODO add deprecations/assertion here for duplicates\n          assertValidRelationshipPayload(this, op);\n        }\n        /*#__NOINLINE__*/\n        updateRelationshipOperation(this, op);\n        break;\n      case 'deleteRecord':\n        {\n          ( true && !(isRemote) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Can only perform the operation deleteRelationship on remote state`, isRemote));\n          const identifier = op.record;\n          const relationships = this.identifiers.get(identifier);\n          if (relationships) {\n            Object.keys(relationships).forEach(key => {\n              const rel = relationships[key];\n              if (!rel) {\n                return;\n              }\n              // works together with the has check\n              // @ts-expect-error\n              relationships[key] = undefined;\n              /*#__NOINLINE__*/\n              removeCompletelyFromInverse(this, rel);\n            });\n            this.identifiers.delete(identifier);\n          }\n          break;\n        }\n      case 'replaceRelatedRecord':\n        /*#__NOINLINE__*/replaceRelatedRecord(this, op, isRemote);\n        break;\n      case 'addToRelatedRecords':\n        // we will lift this restriction once the cache is allowed to make remote updates directly\n        ( true && !(!isRemote) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Can only perform the operation addToRelatedRecords on local state`, !isRemote));\n        /*#__NOINLINE__*/\n        addToRelatedRecords(this, op, isRemote);\n        break;\n      case 'removeFromRelatedRecords':\n        // we will lift this restriction once the cache is allowed to make remote updates directly\n        ( true && !(!isRemote) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Can only perform the operation removeFromRelatedRecords on local state`, !isRemote));\n        /*#__NOINLINE__*/\n        removeFromRelatedRecords(this, op, isRemote);\n        break;\n      case 'replaceRelatedRecords':\n        /*#__NOINLINE__*/replaceRelatedRecords(this, op, isRemote);\n        break;\n      default:\n        ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`No local relationship update operation exists for '${op.op}'`));\n    }\n  }\n  _scheduleLocalSync(relationship) {\n    this._updatedRelationships.add(relationship);\n    if (!this._willSyncLocal) {\n      this._willSyncLocal = true;\n      getStore(this.store)._schedule('sync', () => this._flushLocalQueue());\n    }\n  }\n  _flushRemoteQueue() {\n    if (!this._willSyncRemote) {\n      return;\n    }\n    this._transaction = ++transactionRef;\n    this._willSyncRemote = false;\n    const updates = this._pushedUpdates;\n    const {\n      deletions,\n      hasMany,\n      belongsTo\n    } = updates;\n    updates.deletions = [];\n    updates.hasMany = undefined;\n    updates.belongsTo = undefined;\n    for (let i = 0; i < deletions.length; i++) {\n      this.update(deletions[i], true);\n    }\n    if (hasMany) {\n      flushPending(this, hasMany);\n    }\n    if (belongsTo) {\n      flushPending(this, belongsTo);\n    }\n    this._transaction = null;\n  }\n  _addToTransaction(relationship) {\n    ( true && !(this._transaction !== null) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`expected a transaction`, this._transaction !== null));\n    relationship.transactionRef = this._transaction;\n  }\n  _flushLocalQueue() {\n    if (!this._willSyncLocal) {\n      return;\n    }\n    if (this.silenceNotifications) {\n      this.silenceNotifications = false;\n      this._updatedRelationships = new Set();\n      return;\n    }\n    this._willSyncLocal = false;\n    const updated = this._updatedRelationships;\n    this._updatedRelationships = new Set();\n    updated.forEach(rel => notifyChange(this, rel.identifier, rel.definition.key));\n  }\n  destroy() {\n    Graphs.delete(this.store);\n    {\n      Graphs.delete(getStore(this.store));\n      if (Graphs.size) {\n        Graphs.forEach((_, key) => {\n          ( true && !(\n          // @ts-expect-error\n          !key.isDestroyed && !key.isDestroying) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Memory Leak Detected, likely the test or app instance previous to this was not torn down properly`, !key.isDestroyed && !key.isDestroying));\n        });\n      }\n    }\n    this.identifiers.clear();\n    this.store = null;\n    this.isDestroyed = true;\n  }\n}\nfunction flushPending(graph, ops) {\n  ops.forEach(type => {\n    type.forEach(opList => {\n      flushPendingList(graph, opList);\n    });\n  });\n}\nfunction flushPendingList(graph, opList) {\n  for (let i = 0; i < opList.length; i++) {\n    graph.update(opList[i], true);\n  }\n}\n\n// Handle dematerialization for relationship `rel`.  In all cases, notify the\n// relationship of the dematerialization: this is done so the relationship can\n// notify its inverse which needs to update state\n//\n// If the inverse is sync, unloading this record is treated as a client-side\n// delete, so we remove the inverse records from this relationship to\n// disconnect the graph.  Because it's not async, we don't need to keep around\n// the identifier as an id-wrapper for references\nfunction destroyRelationship(graph, rel, silenceNotifications) {\n  if (isImplicit(rel)) {\n    if (graph.isReleasable(rel.identifier)) {\n      /*#__NOINLINE__*/removeCompletelyFromInverse(graph, rel);\n    }\n    return;\n  }\n  const {\n    identifier\n  } = rel;\n  const {\n    inverseKey\n  } = rel.definition;\n  if (!rel.definition.inverseIsImplicit) {\n    /*#__NOINLINE__*/forAllRelatedIdentifiers(rel, inverseIdentifer => /*#__NOINLINE__*/notifyInverseOfDematerialization(graph, inverseIdentifer, inverseKey, identifier, silenceNotifications));\n  }\n  if (!rel.definition.inverseIsImplicit && !rel.definition.inverseIsAsync) {\n    rel.state.isStale = true;\n    /*#__NOINLINE__*/\n    clearRelationship(rel);\n\n    // necessary to clear relationships in the ui from dematerialized records\n    // hasMany is managed by Model which calls `retreiveLatest` after\n    // dematerializing the resource-cache instance.\n    // but sync belongsTo requires this since they don't have a proxy to update.\n    // so we have to notify so it will \"update\" to null.\n    // we should discuss whether we still care about this, probably fine to just\n    // leave the ui relationship populated since the record is destroyed and\n    // internally we've fully cleaned up.\n    if (!rel.definition.isAsync && !silenceNotifications) {\n      /*#__NOINLINE__*/notifyChange(graph, rel.identifier, rel.definition.key);\n    }\n  }\n}\nfunction notifyInverseOfDematerialization(graph, inverseIdentifier, inverseKey, identifier, silenceNotifications) {\n  if (!graph.has(inverseIdentifier, inverseKey)) {\n    return;\n  }\n  const relationship = graph.get(inverseIdentifier, inverseKey);\n  ( true && !(!isImplicit(relationship)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`expected no implicit`, !isImplicit(relationship))); // For remote members, it is possible that inverseRecordData has already been associated to\n  // to another record. For such cases, do not dematerialize the inverseRecordData\n  if (!isBelongsTo(relationship) || !relationship.localState || identifier === relationship.localState) {\n    /*#__NOINLINE__*/removeDematerializedInverse(graph, relationship, identifier, silenceNotifications);\n  }\n}\nfunction clearRelationship(relationship) {\n  if (isBelongsTo(relationship)) {\n    relationship.localState = null;\n    relationship.remoteState = null;\n    relationship.state.hasReceivedData = false;\n    relationship.state.isEmpty = true;\n  } else {\n    relationship.remoteMembers.clear();\n    relationship.remoteState = [];\n    relationship.additions = null;\n    relationship.removals = null;\n    relationship.localState = null;\n  }\n}\nfunction removeDematerializedInverse(graph, relationship, inverseIdentifier, silenceNotifications) {\n  if (isBelongsTo(relationship)) {\n    const localInverse = relationship.localState;\n    if (!relationship.definition.isAsync || localInverse && isNew(localInverse)) {\n      // unloading inverse of a sync relationship is treated as a client-side\n      // delete, so actually remove the models don't merely invalidate the cp\n      // cache.\n      // if the record being unloaded only exists on the client, we similarly\n      // treat it as a client side delete\n      if (relationship.localState === localInverse && localInverse !== null) {\n        relationship.localState = null;\n      }\n      if (relationship.remoteState === localInverse && localInverse !== null) {\n        relationship.remoteState = null;\n        relationship.state.hasReceivedData = true;\n        relationship.state.isEmpty = true;\n        if (relationship.localState && !isNew(relationship.localState)) {\n          relationship.localState = null;\n        }\n      }\n    } else {\n      relationship.state.hasDematerializedInverse = true;\n    }\n    if (!silenceNotifications) {\n      notifyChange(graph, relationship.identifier, relationship.definition.key);\n    }\n  } else {\n    if (!relationship.definition.isAsync || inverseIdentifier && isNew(inverseIdentifier)) {\n      // unloading inverse of a sync relationship is treated as a client-side\n      // delete, so actually remove the models don't merely invalidate the cp\n      // cache.\n      // if the record being unloaded only exists on the client, we similarly\n      // treat it as a client side delete\n      /*#__NOINLINE__*/\n      removeIdentifierCompletelyFromRelationship(graph, relationship, inverseIdentifier);\n    } else {\n      relationship.state.hasDematerializedInverse = true;\n    }\n    if (!silenceNotifications) {\n      notifyChange(graph, relationship.identifier, relationship.definition.key);\n    }\n  }\n}\nfunction removeCompletelyFromInverse(graph, relationship) {\n  const {\n    identifier\n  } = relationship;\n  const {\n    inverseKey\n  } = relationship.definition;\n  forAllRelatedIdentifiers(relationship, inverseIdentifier => {\n    if (graph.has(inverseIdentifier, inverseKey)) {\n      removeIdentifierCompletelyFromRelationship(graph, graph.get(inverseIdentifier, inverseKey), identifier);\n    }\n  });\n  if (isBelongsTo(relationship)) {\n    if (!relationship.definition.isAsync) {\n      clearRelationship(relationship);\n    }\n    relationship.localState = null;\n  } else if (isHasMany(relationship)) {\n    if (!relationship.definition.isAsync) {\n      clearRelationship(relationship);\n      notifyChange(graph, relationship.identifier, relationship.definition.key);\n    }\n  } else {\n    relationship.remoteMembers.clear();\n    relationship.localMembers.clear();\n  }\n}\nfunction addPending(cache, definition, op) {\n  const lc = cache[definition.kind] = cache[definition.kind] || new Map();\n  let lc2 = lc.get(definition.inverseType);\n  if (!lc2) {\n    lc2 = new Map();\n    lc.set(definition.inverseType, lc2);\n  }\n  let arr = lc2.get(op.field);\n  if (!arr) {\n    arr = [];\n    lc2.set(op.field, arr);\n  }\n  arr.push(op);\n}\nfunction isReordered(relationship) {\n  // if we are dirty we are never re-ordered because accessing\n  // the state would flush away any reordering.\n  if (relationship.isDirty) {\n    return false;\n  }\n  const {\n    remoteState,\n    localState,\n    additions,\n    removals\n  } = relationship;\n  ( true && !(localState) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Expected localSate`, localState));\n  for (let i = 0, j = 0; i < remoteState.length; i++) {\n    const member = remoteState[i];\n    const localMember = localState[j];\n    if (member !== localMember) {\n      if (removals && removals.has(member)) {\n        // dont increment j because we want to skip this\n        continue;\n      }\n      if (additions && additions.has(localMember)) {\n        // increment j to skip this localMember\n        // decrement i to repeat this remoteMember\n        j++;\n        i--;\n        continue;\n      }\n      return true;\n    }\n\n    // if we made it here, increment j\n    j++;\n  }\n  return false;\n}\nfunction isStore(maybeStore) {\n  return maybeStore._instanceCache !== undefined;\n}\nfunction getWrapper(store) {\n  return isStore(store) ? store._instanceCache._storeWrapper : store;\n}\nfunction peekGraph(store) {\n  return Graphs.get(getWrapper(store));\n}\nfunction graphFor(store) {\n  const wrapper = getWrapper(store);\n  let graph = Graphs.get(wrapper);\n  if (!graph) {\n    graph = new Graph(wrapper);\n    Graphs.set(wrapper, graph);\n    getStore(wrapper)._graph = graph;\n    {\n      if (getStore(wrapper).isDestroying) {\n        throw new Error(`Memory Leak Detected During Teardown`);\n      }\n    }\n  }\n  return graph;\n}\n\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@ember-data/graph.4c9e27df/node_modules/@ember-data/graph/-private.js?");

/***/ }),

/***/ "../rewritten-packages/@ember-data/json-api.d7f0a39f/node_modules/@ember-data/json-api/index.js":
/*!******************************************************************************************************!*\
  !*** ../rewritten-packages/@ember-data/json-api.d7f0a39f/node_modules/@ember-data/json-api/index.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ JSONAPICache)\n/* harmony export */ });\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/debug */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fdebug&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_debug__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _ember_data_graph_private__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember-data/graph/-private */ \"../rewritten-packages/@ember-data/graph.4c9e27df/node_modules/@ember-data/graph/-private.js\");\n\n\n/**\n * @module @ember-data/json-api\n */\nfunction isImplicit(relationship) {\n  return relationship.definition.isImplicit;\n}\nfunction upgradeCapabilities(obj) {}\nconst EMPTY_ITERATOR = {\n  iterator() {\n    return {\n      next() {\n        return {\n          done: true,\n          value: undefined\n        };\n      }\n    };\n  }\n};\nfunction makeCache() {\n  return {\n    id: null,\n    remoteAttrs: null,\n    localAttrs: null,\n    inflightAttrs: null,\n    changes: null,\n    errors: null,\n    isNew: false,\n    isDeleted: false,\n    isDeletionCommitted: false\n  };\n}\n\n/**\n  A JSON:API Cache implementation.\n\n  What cache the store uses is configurable. Using a different\n  implementation can be achieved by implementing the store's\n  createCache hook.\n\n  This is the cache implementation used by `ember-data`.\n\n  ```js\n  import Cache from '@ember-data/json-api';\n  import Store from '@ember-data/store';\n\n  export default class extends Store {\n    createCache(wrapper) {\n      return new Cache(wrapper);\n    }\n  }\n  ```\n\n  @class Cache\n  @public\n */\n\nclass JSONAPICache {\n  /**\n   * The Cache Version that this implementation implements.\n   *\n   * @type {'2'}\n   * @public\n   * @property version\n   */\n\n  constructor(storeWrapper) {\n    this.version = '2';\n    this._capabilities = storeWrapper;\n    this.__cache = new Map();\n    this.__graph = (0,_ember_data_graph_private__WEBPACK_IMPORTED_MODULE_1__.graphFor)(storeWrapper);\n    this.__destroyedCache = new Map();\n    this.__documents = new Map();\n  }\n\n  // Cache Management\n  // ================\n\n  /**\n   * Cache the response to a request\n   *\n   * Implements `Cache.put`.\n   *\n   * Expects a StructuredDocument whose `content` member is a JsonApiDocument.\n   *\n   * ```js\n   * cache.put({\n   *   request: { url: 'https://api.example.com/v1/user/1' },\n   *   content: {\n   *     data: {\n   *       type: 'user',\n   *       id: '1',\n   *       attributes: {\n   *         name: 'Chris'\n   *       }\n   *     }\n   *   }\n   * })\n   * ```\n   *\n   * > **Note**\n   * > The nested `content` and `data` members are not a mistake. This is because\n   * > there are two separate concepts involved here, the `StructuredDocument` which contains\n   * > the context of a given Request that has been issued with the returned contents as its\n   * > `content` property, and a `JSON:API Document` which is the json contents returned by\n   * > this endpoint and which uses its `data` property to signify which resources are the\n   * > primary resources associated with the request.\n   *\n   * StructuredDocument's with urls will be cached as full documents with\n   * associated resource membership order and contents preserved but linked\n   * into the cache.\n   *\n   * @method put\n   * @param {StructuredDocument} doc\n   * @return {ResourceDocument}\n   * @public\n   */\n\n  put(doc) {\n    ( true && !(doc instanceof Error || typeof doc.content === 'object' && doc.content !== null) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Expected a JSON:API Document as the content provided to the cache, received ${typeof doc.content}`, doc instanceof Error || typeof doc.content === 'object' && doc.content !== null));\n    if (isErrorDocument(doc)) {\n      return this._putDocument(doc, undefined, undefined);\n    } else if (isMetaDocument(doc)) {\n      return this._putDocument(doc, undefined, undefined);\n    }\n    const jsonApiDoc = doc.content;\n    const included = jsonApiDoc.included;\n    let i, length;\n    const {\n      identifierCache\n    } = this._capabilities;\n    if (included) {\n      for (i = 0, length = included.length; i < length; i++) {\n        included[i] = putOne(this, identifierCache, included[i]);\n      }\n    }\n    if (Array.isArray(jsonApiDoc.data)) {\n      length = jsonApiDoc.data.length;\n      const identifiers = [];\n      for (i = 0; i < length; i++) {\n        identifiers.push(putOne(this, identifierCache, jsonApiDoc.data[i]));\n      }\n      return this._putDocument(doc, identifiers, included);\n    }\n    if (jsonApiDoc.data === null) {\n      return this._putDocument(doc, null, included);\n    }\n    ( true && !(typeof jsonApiDoc.data === 'object') && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Expected a resource object in the 'data' property in the document provided to the cache, but was ${typeof jsonApiDoc.data}`, typeof jsonApiDoc.data === 'object'));\n    const identifier = putOne(this, identifierCache, jsonApiDoc.data);\n    return this._putDocument(doc, identifier, included);\n  }\n  _putDocument(doc, data, included) {\n    // @ts-expect-error narrowing within is just horrible  in TS :/\n    const resourceDocument = isErrorDocument(doc) ? fromStructuredError(doc) : fromBaseDocument(doc);\n    if (data !== undefined) {\n      resourceDocument.data = data;\n    }\n    if (included !== undefined) {\n      ( true && !(!isErrorDocument(doc)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`There should not be included data on an Error document`, !isErrorDocument(doc)));\n      ( true && !(!isMetaDocument(doc)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`There should not be included data on a Meta document`, !isMetaDocument(doc)));\n      resourceDocument.included = included;\n    }\n    const request = doc.request;\n    const identifier = request ? this._capabilities.identifierCache.getOrCreateDocumentIdentifier(request) : null;\n    if (identifier) {\n      resourceDocument.lid = identifier.lid;\n\n      // @ts-expect-error\n      doc.content = resourceDocument;\n      const hasExisting = this.__documents.has(identifier.lid);\n      this.__documents.set(identifier.lid, doc);\n      this._capabilities.notifyChange(identifier, hasExisting ? 'updated' : 'added');\n    }\n    return resourceDocument;\n  }\n\n  /**\n   * Update the \"remote\" or \"canonical\" (persisted) state of the Cache\n   * by merging new information into the existing state.\n   *\n   * Note: currently the only valid resource operation is a MergeOperation\n   * which occurs when a collision of identifiers is detected.\n   *\n   * @method patch\n   * @public\n   * @param {Operation} op the operation to perform\n   * @return {void}\n   */\n  patch(op) {\n    if (op.op === 'mergeIdentifiers') {\n      const cache = this.__cache.get(op.record);\n      if (cache) {\n        this.__cache.set(op.value, cache);\n        this.__cache.delete(op.record);\n      }\n      this.__graph.update(op, true);\n    }\n  }\n\n  /**\n   * Update the \"local\" or \"current\" (unpersisted) state of the Cache\n   *\n   * @method mutate\n   * @param {Mutation} mutation\n   * @return {void}\n   * @public\n   */\n  mutate(mutation) {\n    this.__graph.update(mutation, false);\n  }\n\n  /**\n   * Peek resource data from the Cache.\n   *\n   * In development, if the return value\n   * is JSON the return value\n   * will be deep-cloned and deep-frozen\n   * to prevent mutation thereby enforcing cache\n   * Immutability.\n   *\n   * This form of peek is useful for implementations\n   * that want to feed raw-data from cache to the UI\n   * or which want to interact with a blob of data\n   * directly from the presentation cache.\n   *\n   * An implementation might want to do this because\n   * de-referencing records which read from their own\n   * blob is generally safer because the record does\n   * not require retainining connections to the Store\n   * and Cache to present data on a per-field basis.\n   *\n   * This generally takes the place of `getAttr` as\n   * an API and may even take the place of `getRelationship`\n   * depending on implementation specifics, though this\n   * latter usage is less recommended due to the advantages\n   * of the Graph handling necessary entanglements and\n   * notifications for relational data.\n   *\n   * @method peek\n   * @public\n   * @param {StableRecordIdentifier | StableDocumentIdentifier} identifier\n   * @return {ResourceDocument | ResourceBlob | null} the known resource data\n   */\n\n  peek(identifier) {\n    if ('type' in identifier) {\n      const peeked = this.__safePeek(identifier, false);\n      if (!peeked) {\n        return null;\n      }\n      const {\n        type,\n        id,\n        lid\n      } = identifier;\n      const attributes = Object.assign({}, peeked.remoteAttrs, peeked.inflightAttrs, peeked.localAttrs);\n      const relationships = {};\n      const rels = this.__graph.identifiers.get(identifier);\n      if (rels) {\n        Object.keys(rels).forEach(key => {\n          const rel = rels[key];\n          if (rel.definition.isImplicit) {\n            return;\n          } else {\n            relationships[key] = this.__graph.getData(identifier, key);\n          }\n        });\n      }\n      upgradeCapabilities(this._capabilities);\n      const store = this._capabilities._store;\n      const attrs = this._capabilities.schema.fields(identifier);\n      attrs.forEach((attr, key) => {\n        if (key in attributes && attributes[key] !== undefined) {\n          return;\n        }\n        const defaultValue = getDefaultValue(attr, identifier, store);\n        if (defaultValue !== undefined) {\n          attributes[key] = defaultValue;\n        }\n      });\n      return {\n        type,\n        id,\n        lid,\n        attributes,\n        relationships\n      };\n    }\n    const document = this.peekRequest(identifier);\n    if (document) {\n      if ('content' in document) return document.content;\n    }\n    return null;\n  }\n\n  /**\n   * Peek the Cache for the existing request data associated with\n   * a cacheable request.\n   *\n   * This is effectively the reverse of `put` for a request in\n   * that it will return the the request, response, and content\n   * whereas `peek` will return just the `content`.\n   *\n   * @method peekRequest\n   * @param {StableDocumentIdentifier}\n   * @return {StructuredDocument<ResourceDocument> | null}\n   * @public\n   */\n  peekRequest(identifier) {\n    return this.__documents.get(identifier.lid) || null;\n  }\n\n  /**\n   * Push resource data from a remote source into the cache for this identifier\n   *\n   * @method upsert\n   * @public\n   * @param identifier\n   * @param data\n   * @param hasRecord\n   * @return {void | string[]} if `hasRecord` is true then calculated key changes should be returned\n   */\n  upsert(identifier, data, calculateChanges) {\n    let changedKeys;\n    const peeked = this.__safePeek(identifier, false);\n    const existed = !!peeked;\n    const cached = peeked || this._createCache(identifier);\n    const isLoading = /*#__NOINLINE__*/_isLoading(peeked, this._capabilities, identifier) || !recordIsLoaded(peeked);\n    const isUpdate = /*#__NOINLINE__*/!_isEmpty(peeked) && !isLoading;\n    if (cached.isNew) {\n      cached.isNew = false;\n      this._capabilities.notifyChange(identifier, 'identity');\n      this._capabilities.notifyChange(identifier, 'state');\n    }\n    if (calculateChanges) {\n      changedKeys = existed ? calculateChangedKeys(cached, data.attributes) : Object.keys(data.attributes || {});\n    }\n    cached.remoteAttrs = Object.assign(cached.remoteAttrs || Object.create(null), data.attributes);\n    if (cached.localAttrs) {\n      if (patchLocalAttributes(cached)) {\n        this._capabilities.notifyChange(identifier, 'state');\n      }\n    }\n    if (!isUpdate) {\n      this._capabilities.notifyChange(identifier, 'added');\n    }\n    if (data.id) {\n      cached.id = data.id;\n    }\n    if (data.relationships) {\n      setupRelationships(this.__graph, this._capabilities, identifier, data);\n    }\n    if (changedKeys && changedKeys.length) {\n      notifyAttributes(this._capabilities, identifier, changedKeys);\n    }\n    return changedKeys;\n  }\n\n  // Cache Forking Support\n  // =====================\n\n  /**\n   * Create a fork of the cache from the current state.\n   *\n   * Applications should typically not call this method themselves,\n   * preferring instead to fork at the Store level, which will\n   * utilize this method to fork the cache.\n   *\n   * @method fork\n   * @internal\n   * @return Promise<Cache>\n   */\n  fork() {\n    throw new Error(`Not Implemented`);\n  }\n\n  /**\n   * Merge a fork back into a parent Cache.\n   *\n   * Applications should typically not call this method themselves,\n   * preferring instead to merge at the Store level, which will\n   * utilize this method to merge the caches.\n   *\n   * @method merge\n   * @param {Cache} cache\n   * @public\n   * @return Promise<void>\n   */\n  merge(cache) {\n    throw new Error(`Not Implemented`);\n  }\n\n  /**\n   * Generate the list of changes applied to all\n   * record in the store.\n   *\n   * Each individual resource or document that has\n   * been mutated should be described as an individual\n   * `Change` entry in the returned array.\n   *\n   * A `Change` is described by an object containing up to\n   * three properties: (1) the `identifier` of the entity that\n   * changed; (2) the `op` code of that change being one of\n   * `upsert` or `remove`, and if the op is `upsert` a `patch`\n   * containing the data to merge into the cache for the given\n   * entity.\n   *\n   * This `patch` is opaque to the Store but should be understood\n   * by the Cache and may expect to be utilized by an Adapter\n   * when generating data during a `save` operation.\n   *\n   * It is generally recommended that the `patch` contain only\n   * the updated state, ignoring fields that are unchanged\n   *\n   * ```ts\n   * interface Change {\n   *  identifier: StableRecordIdentifier | StableDocumentIdentifier;\n   *  op: 'upsert' | 'remove';\n   *  patch?: unknown;\n   * }\n   * ```\n   *\n   * @method diff\n   * @public\n   */\n  diff() {\n    throw new Error(`Not Implemented`);\n  }\n\n  // SSR Support\n  // ===========\n\n  /**\n   * Serialize the entire contents of the Cache into a Stream\n   * which may be fed back into a new instance of the same Cache\n   * via `cache.hydrate`.\n   *\n   * @method dump\n   * @return {Promise<ReadableStream>}\n   * @public\n   */\n  dump() {\n    throw new Error(`Not Implemented`);\n  }\n\n  /**\n   * hydrate a Cache from a Stream with content previously serialized\n   * from another instance of the same Cache, resolving when hydration\n   * is complete.\n   *\n   * This method should expect to be called both in the context of restoring\n   * the Cache during application rehydration after SSR **AND** at unknown\n   * times during the lifetime of an already booted application when it is\n   * desired to bulk-load additional information into the cache. This latter\n   * behavior supports optimizing pre/fetching of data for route transitions\n   * via data-only SSR modes.\n   *\n   * @method hydrate\n   * @param {ReadableStream} stream\n   * @return {Promise<void>}\n   * @public\n   */\n  hydrate(stream) {\n    throw new Error('Not Implemented');\n  }\n\n  // Resource Support\n  // ================\n\n  /**\n   * [LIFECYCLE] Signal to the cache that a new record has been instantiated on the client\n   *\n   * It returns properties from options that should be set on the record during the create\n   * process. This return value behavior is deprecated.\n   *\n   * @method clientDidCreate\n   * @public\n   * @param identifier\n   * @param createArgs\n   */\n  clientDidCreate(identifier, options) {\n    const cached = this._createCache(identifier);\n    cached.isNew = true;\n    const createOptions = {};\n    if (options !== undefined) {\n      const storeWrapper = this._capabilities;\n      const fields = storeWrapper.schema.fields(identifier);\n      const graph = this.__graph;\n      const propertyNames = Object.keys(options);\n      for (let i = 0; i < propertyNames.length; i++) {\n        const name = propertyNames[i];\n        const propertyValue = options[name];\n        if (name === 'id') {\n          continue;\n        }\n        const fieldType = fields.get(name);\n        const kind = fieldType !== undefined ? 'kind' in fieldType ? fieldType.kind : 'attribute' : null;\n        let relationship;\n        switch (kind) {\n          case 'attribute':\n            this.setAttr(identifier, name, propertyValue);\n            createOptions[name] = propertyValue;\n            break;\n          case 'belongsTo':\n            this.mutate({\n              op: 'replaceRelatedRecord',\n              field: name,\n              record: identifier,\n              value: propertyValue\n            });\n            relationship = graph.get(identifier, name);\n            relationship.state.hasReceivedData = true;\n            relationship.state.isEmpty = false;\n            break;\n          case 'hasMany':\n            this.mutate({\n              op: 'replaceRelatedRecords',\n              field: name,\n              record: identifier,\n              value: propertyValue\n            });\n            relationship = graph.get(identifier, name);\n            relationship.state.hasReceivedData = true;\n            relationship.state.isEmpty = false;\n            break;\n          default:\n            // reflect back (pass-thru) unknown properties\n            createOptions[name] = propertyValue;\n        }\n      }\n    }\n    this._capabilities.notifyChange(identifier, 'added');\n    return createOptions;\n  }\n\n  /**\n   * [LIFECYCLE] Signals to the cache that a resource\n   * will be part of a save transaction.\n   *\n   * @method willCommit\n   * @public\n   * @param identifier\n   */\n  willCommit(identifier) {\n    const cached = this.__peek(identifier, false);\n\n    /*\n      if we have multiple saves in flight at once then\n      we have information loss no matter what. This\n      attempts to lose the least information.\n       If we were to clear inflightAttrs, previous requests\n      would not be able to use it during their didCommit.\n       If we upsert inflightattrs, previous requests incorrectly\n      see more recent inflight changes as part of their own and\n      will incorrectly mark the new state as the correct remote state.\n       We choose this latter behavior to avoid accidentally removing\n      earlier changes.\n       If apps do not want this behavior they can either\n      - chain save requests serially vs allowing concurrent saves\n      - move to using a request handler that caches the inflight state\n        on a per-request basis\n      - change their save requests to only send a \"PATCH\" instead of a \"PUT\"\n        so that only latest changes are involved in each request, and then also\n        ensure that the API or their handler reflects only those changes back\n        for upsert into the cache.\n    */\n    if (cached.inflightAttrs) {\n      if (cached.localAttrs) {\n        Object.assign(cached.inflightAttrs, cached.localAttrs);\n      }\n    } else {\n      cached.inflightAttrs = cached.localAttrs;\n    }\n    cached.localAttrs = null;\n    {}\n  }\n\n  /**\n   * [LIFECYCLE] Signals to the cache that a resource\n   * was successfully updated as part of a save transaction.\n   *\n   * @method didCommit\n   * @public\n   * @param identifier\n   * @param data\n   */\n  didCommit(committedIdentifier, result) {\n    const payload = result.content;\n    const operation = result.request.op;\n    const data = payload && payload.data;\n    if (!data) {\n      ( true && !(committedIdentifier.id) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Your ${committedIdentifier.type} record was saved to the server, but the response does not have an id and no id has been set client side. Records must have ids. Please update the server response to provide an id in the response or generate the id on the client side either before saving the record or while normalizing the response.`, committedIdentifier.id));\n    }\n    const {\n      identifierCache\n    } = this._capabilities;\n    const existingId = committedIdentifier.id;\n    const identifier = operation !== 'deleteRecord' && data ? identifierCache.updateRecordIdentifier(committedIdentifier, data) : committedIdentifier;\n    const cached = this.__peek(identifier, false);\n    if (cached.isDeleted) {\n      this.__graph.push({\n        op: 'deleteRecord',\n        record: identifier,\n        isNew: false\n      });\n      cached.isDeletionCommitted = true;\n      this._capabilities.notifyChange(identifier, 'removed');\n      // TODO @runspired should we early exit here?\n    }\n    {\n      if (cached.isNew && !identifier.id && (typeof data?.id !== 'string' || data.id.length > 0)) {\n        const error = new Error(`Expected an id ${String(identifier)} in response ${JSON.stringify(data)}`);\n        //@ts-expect-error\n        error.isAdapterError = true;\n        //@ts-expect-error\n        error.code = 'InvalidError';\n        throw error;\n      }\n    }\n    cached.isNew = false;\n    let newCanonicalAttributes;\n    if (data) {\n      if (data.id && !cached.id) {\n        cached.id = data.id;\n      }\n      if (identifier === committedIdentifier && identifier.id !== existingId) {\n        this._capabilities.notifyChange(identifier, 'identity');\n      }\n      ( true && !(identifier.id === cached.id) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Expected the ID received for the primary '${identifier.type}' resource being saved to match the current id '${cached.id}' but received '${identifier.id}'.`, identifier.id === cached.id));\n      if (data.relationships) {\n        {}\n        setupRelationships(this.__graph, this._capabilities, identifier, data);\n      }\n      newCanonicalAttributes = data.attributes;\n    }\n    const changedKeys = calculateChangedKeys(cached, newCanonicalAttributes);\n    cached.remoteAttrs = Object.assign(cached.remoteAttrs || Object.create(null), cached.inflightAttrs, newCanonicalAttributes);\n    cached.inflightAttrs = null;\n    patchLocalAttributes(cached);\n    if (cached.errors) {\n      cached.errors = null;\n      this._capabilities.notifyChange(identifier, 'errors');\n    }\n    notifyAttributes(this._capabilities, identifier, changedKeys);\n    this._capabilities.notifyChange(identifier, 'state');\n    const included = payload && payload.included;\n    if (included) {\n      for (let i = 0, length = included.length; i < length; i++) {\n        putOne(this, identifierCache, included[i]);\n      }\n    }\n    return {\n      data: identifier\n    };\n  }\n\n  /**\n   * [LIFECYCLE] Signals to the cache that a resource\n   * was update via a save transaction failed.\n   *\n   * @method commitWasRejected\n   * @public\n   * @param identifier\n   * @param errors\n   */\n  commitWasRejected(identifier, errors) {\n    const cached = this.__peek(identifier, false);\n    if (cached.inflightAttrs) {\n      const keys = Object.keys(cached.inflightAttrs);\n      if (keys.length > 0) {\n        const attrs = cached.localAttrs = cached.localAttrs || Object.create(null);\n        for (let i = 0; i < keys.length; i++) {\n          if (attrs[keys[i]] === undefined) {\n            attrs[keys[i]] = cached.inflightAttrs[keys[i]];\n          }\n        }\n      }\n      cached.inflightAttrs = null;\n    }\n    if (errors) {\n      cached.errors = errors;\n    }\n    this._capabilities.notifyChange(identifier, 'errors');\n  }\n\n  /**\n   * [LIFECYCLE] Signals to the cache that all data for a resource\n   * should be cleared.\n   *\n   * This method is a candidate to become a mutation\n   *\n   * @method unloadRecord\n   * @public\n   * @param identifier\n   */\n  unloadRecord(identifier) {\n    const storeWrapper = this._capabilities;\n    // TODO this is necessary because\n    // we maintain memebership inside InstanceCache\n    // for peekAll, so even though we haven't created\n    // any data we think this exists.\n    // TODO can we eliminate that membership now?\n    if (!this.__cache.has(identifier)) {\n      // the graph may still need to unload identity\n      (0,_ember_data_graph_private__WEBPACK_IMPORTED_MODULE_1__.peekGraph)(storeWrapper)?.unload(identifier);\n      return;\n    }\n    const removeFromRecordArray = !this.isDeletionCommitted(identifier);\n    let removed = false;\n    const cached = this.__peek(identifier, false);\n    if (cached.isNew) {\n      (0,_ember_data_graph_private__WEBPACK_IMPORTED_MODULE_1__.peekGraph)(storeWrapper)?.push({\n        op: 'deleteRecord',\n        record: identifier,\n        isNew: true\n      });\n    } else {\n      (0,_ember_data_graph_private__WEBPACK_IMPORTED_MODULE_1__.peekGraph)(storeWrapper)?.unload(identifier);\n    }\n\n    // effectively clearing these is ensuring that\n    // we report as `isEmpty` during teardown.\n    cached.localAttrs = null;\n    cached.remoteAttrs = null;\n    cached.inflightAttrs = null;\n    const relatedIdentifiers = _allRelatedIdentifiers(storeWrapper, identifier);\n    if (areAllModelsUnloaded(storeWrapper, relatedIdentifiers)) {\n      for (let i = 0; i < relatedIdentifiers.length; ++i) {\n        const relatedIdentifier = relatedIdentifiers[i];\n        storeWrapper.notifyChange(relatedIdentifier, 'removed');\n        removed = true;\n        storeWrapper.disconnectRecord(relatedIdentifier);\n      }\n    }\n    this.__cache.delete(identifier);\n    this.__destroyedCache.set(identifier, cached);\n\n    /*\n     * The destroy cache is a hack to prevent applications\n     * from blowing up during teardown. Accessing state\n     * on a destroyed record is not safe, but historically\n     * was possible due to a combination of teardown timing\n     * and retention of cached state directly on the\n     * record itself.\n     *\n     * Once we have deprecated accessing state on a destroyed\n     * instance we may remove this. The timing isn't a huge deal\n     * as momentarily retaining the objects outside the bounds\n     * of a test won't cause issues.\n     */\n    if (this.__destroyedCache.size === 1) {\n      // TODO do we still need this?\n      setTimeout(() => {\n        this.__destroyedCache.clear();\n      }, 100);\n    }\n    if (!removed && removeFromRecordArray) {\n      storeWrapper.notifyChange(identifier, 'removed');\n    }\n  }\n\n  // Granular Resource Data APIs\n  // ===========================\n\n  /**\n   * Retrieve the data for an attribute from the cache\n   *\n   * @method getAttr\n   * @public\n   * @param identifier\n   * @param field\n   * @return {unknown}\n   */\n  getAttr(identifier, attr) {\n    const cached = this.__peek(identifier, true);\n    if (cached.localAttrs && attr in cached.localAttrs) {\n      return cached.localAttrs[attr];\n    } else if (cached.inflightAttrs && attr in cached.inflightAttrs) {\n      return cached.inflightAttrs[attr];\n    } else if (cached.remoteAttrs && attr in cached.remoteAttrs) {\n      return cached.remoteAttrs[attr];\n    } else {\n      const attrSchema = this._capabilities.schema.fields(identifier).get(attr);\n      upgradeCapabilities(this._capabilities);\n      return getDefaultValue(attrSchema, identifier, this._capabilities._store);\n    }\n  }\n\n  /**\n   * Mutate the data for an attribute in the cache\n   *\n   * This method is a candidate to become a mutation\n   *\n   * @method setAttr\n   * @public\n   * @param identifier\n   * @param field\n   * @param value\n   */\n  setAttr(identifier, attr, value) {\n    const cached = this.__peek(identifier, false);\n    const existing = cached.inflightAttrs && attr in cached.inflightAttrs ? cached.inflightAttrs[attr] : cached.remoteAttrs && attr in cached.remoteAttrs ? cached.remoteAttrs[attr] : undefined;\n    if (existing !== value) {\n      cached.localAttrs = cached.localAttrs || Object.create(null);\n      cached.localAttrs[attr] = value;\n      cached.changes = cached.changes || Object.create(null);\n      cached.changes[attr] = [existing, value];\n    } else if (cached.localAttrs) {\n      delete cached.localAttrs[attr];\n      delete cached.changes[attr];\n    }\n    this._capabilities.notifyChange(identifier, 'attributes', attr);\n  }\n\n  /**\n   * Query the cache for the changed attributes of a resource.\n   *\n   * @method changedAttrs\n   * @public\n   * @param identifier\n   * @return {ChangedAttributesHash} { <field>: [<old>, <new>] }\n   */\n  changedAttrs(identifier) {\n    // TODO freeze in dev\n    return this.__peek(identifier, false).changes || Object.create(null);\n  }\n\n  /**\n   * Query the cache for whether any mutated attributes exist\n   *\n   * @method hasChangedAttrs\n   * @public\n   * @param identifier\n   * @return {boolean}\n   */\n  hasChangedAttrs(identifier) {\n    const cached = this.__peek(identifier, true);\n    return cached.inflightAttrs !== null && Object.keys(cached.inflightAttrs).length > 0 || cached.localAttrs !== null && Object.keys(cached.localAttrs).length > 0;\n  }\n\n  /**\n   * Tell the cache to discard any uncommitted mutations to attributes\n   *\n   * This method is a candidate to become a mutation\n   *\n   * @method rollbackAttrs\n   * @public\n   * @param identifier\n   * @return {string[]} the names of fields that were restored\n   */\n  rollbackAttrs(identifier) {\n    const cached = this.__peek(identifier, false);\n    let dirtyKeys;\n    cached.isDeleted = false;\n    if (cached.localAttrs !== null) {\n      dirtyKeys = Object.keys(cached.localAttrs);\n      cached.localAttrs = null;\n      cached.changes = null;\n    }\n    if (cached.isNew) {\n      // > Note: Graph removal handled by unloadRecord\n      cached.isDeletionCommitted = true;\n      cached.isDeleted = true;\n      cached.isNew = false;\n    }\n    cached.inflightAttrs = null;\n    if (cached.errors) {\n      cached.errors = null;\n      this._capabilities.notifyChange(identifier, 'errors');\n    }\n    this._capabilities.notifyChange(identifier, 'state');\n    if (dirtyKeys && dirtyKeys.length) {\n      notifyAttributes(this._capabilities, identifier, dirtyKeys);\n    }\n    return dirtyKeys || [];\n  }\n\n  /**\n     * Query the cache for the changes to relationships of a resource.\n     *\n     * Returns a map of relationship names to RelationshipDiff objects.\n     *\n     * ```ts\n     * type RelationshipDiff =\n    | {\n        kind: 'collection';\n        remoteState: StableRecordIdentifier[];\n        additions: Set<StableRecordIdentifier>;\n        removals: Set<StableRecordIdentifier>;\n        localState: StableRecordIdentifier[];\n        reordered: boolean;\n      }\n    | {\n        kind: 'resource';\n        remoteState: StableRecordIdentifier | null;\n        localState: StableRecordIdentifier | null;\n      };\n      ```\n     *\n     * @method changedRelationships\n     * @public\n     * @param {StableRecordIdentifier} identifier\n     * @return {Map<string, RelationshipDiff>}\n     */\n  changedRelationships(identifier) {\n    return this.__graph.getChanged(identifier);\n  }\n\n  /**\n   * Query the cache for whether any mutated relationships exist\n   *\n   * @method hasChangedRelationships\n   * @public\n   * @param {StableRecordIdentifier} identifier\n   * @return {boolean}\n   */\n  hasChangedRelationships(identifier) {\n    return this.__graph.hasChanged(identifier);\n  }\n\n  /**\n   * Tell the cache to discard any uncommitted mutations to relationships.\n   *\n   * This will also discard the change on any appropriate inverses.\n   *\n   * This method is a candidate to become a mutation\n   *\n   * @method rollbackRelationships\n   * @public\n   * @param {StableRecordIdentifier} identifier\n   * @return {string[]} the names of relationships that were restored\n   */\n  rollbackRelationships(identifier) {\n    upgradeCapabilities(this._capabilities);\n    let result;\n    this._capabilities._store._join(() => {\n      result = this.__graph.rollback(identifier);\n    });\n    return result;\n  }\n\n  /**\n   * Query the cache for the current state of a relationship property\n   *\n   * @method getRelationship\n   * @public\n   * @param identifier\n   * @param field\n   * @return resource relationship object\n   */\n  getRelationship(identifier, field) {\n    return this.__graph.getData(identifier, field);\n  }\n\n  // Resource State\n  // ===============\n\n  /**\n   * Update the cache state for the given resource to be marked\n   * as locally deleted, or remove such a mark.\n   *\n   * This method is a candidate to become a mutation\n   *\n   * @method setIsDeleted\n   * @public\n   * @param identifier\n   * @param isDeleted {boolean}\n   */\n  setIsDeleted(identifier, isDeleted) {\n    const cached = this.__peek(identifier, false);\n    cached.isDeleted = isDeleted;\n    // > Note: Graph removal for isNew handled by unloadRecord\n    this._capabilities.notifyChange(identifier, 'state');\n  }\n\n  /**\n   * Query the cache for any validation errors applicable to the given resource.\n   *\n   * @method getErrors\n   * @public\n   * @param identifier\n   * @return {JsonApiError[]}\n   */\n  getErrors(identifier) {\n    return this.__peek(identifier, true).errors || [];\n  }\n\n  /**\n   * Query the cache for whether a given resource has any available data\n   *\n   * @method isEmpty\n   * @public\n   * @param identifier\n   * @return {boolean}\n   */\n  isEmpty(identifier) {\n    const cached = this.__safePeek(identifier, true);\n    return cached ? cached.remoteAttrs === null && cached.inflightAttrs === null && cached.localAttrs === null : true;\n  }\n\n  /**\n   * Query the cache for whether a given resource was created locally and not\n   * yet persisted.\n   *\n   * @method isNew\n   * @public\n   * @param identifier\n   * @return {boolean}\n   */\n  isNew(identifier) {\n    // TODO can we assert here?\n    return this.__safePeek(identifier, true)?.isNew || false;\n  }\n\n  /**\n   * Query the cache for whether a given resource is marked as deleted (but not\n   * necessarily persisted yet).\n   *\n   * @method isDeleted\n   * @public\n   * @param identifier\n   * @return {boolean}\n   */\n  isDeleted(identifier) {\n    // TODO can we assert here?\n    return this.__safePeek(identifier, true)?.isDeleted || false;\n  }\n\n  /**\n   * Query the cache for whether a given resource has been deleted and that deletion\n   * has also been persisted.\n   *\n   * @method isDeletionCommitted\n   * @public\n   * @param identifier\n   * @return {boolean}\n   */\n  isDeletionCommitted(identifier) {\n    // TODO can we assert here?\n    return this.__safePeek(identifier, true)?.isDeletionCommitted || false;\n  }\n\n  /**\n   * Private method used to populate an entry for the identifier\n   *\n   * @method _createCache\n   * @internal\n   * @param {StableRecordIdentifier} identifier\n   * @return {CachedResource}\n   */\n  _createCache(identifier) {\n    ( true && !(!this.__cache.has(identifier)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Expected no resource data to yet exist in the cache`, !this.__cache.has(identifier)));\n    const cache = makeCache();\n    this.__cache.set(identifier, cache);\n    return cache;\n  }\n\n  /**\n   * Peek whether we have cached resource data matching the identifier\n   * without asserting if the resource data is missing.\n   *\n   * @method __safePeek\n   * @param {StableRecordIdentifier} identifier\n   * @param {Boolean} allowDestroyed\n   * @internal\n   * @return {CachedResource | undefined}\n   */\n  __safePeek(identifier, allowDestroyed) {\n    let resource = this.__cache.get(identifier);\n    if (!resource && allowDestroyed) {\n      resource = this.__destroyedCache.get(identifier);\n    }\n    return resource;\n  }\n\n  /**\n   * Peek whether we have cached resource data matching the identifier\n   * Asserts if the resource data is missing.\n   *\n   * @method __Peek\n   * @param {StableRecordIdentifier} identifier\n   * @param {Boolean} allowDestroyed\n   * @internal\n   * @return {CachedResource}\n   */\n  __peek(identifier, allowDestroyed) {\n    const resource = this.__safePeek(identifier, allowDestroyed);\n    ( true && !(resource) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Expected Cache to have a resource entry for the identifier ${String(identifier)} but none was found`, resource));\n    return resource;\n  }\n}\nfunction areAllModelsUnloaded(wrapper, identifiers) {\n  for (let i = 0; i < identifiers.length; ++i) {\n    const identifier = identifiers[i];\n    if (wrapper.hasRecord(identifier)) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction getLocalState(rel) {\n  if ((0,_ember_data_graph_private__WEBPACK_IMPORTED_MODULE_1__.isBelongsTo)(rel)) {\n    return rel.localState ? [rel.localState] : [];\n  }\n  return rel.additions ? [...rel.additions] : [];\n}\nfunction getRemoteState(rel) {\n  if ((0,_ember_data_graph_private__WEBPACK_IMPORTED_MODULE_1__.isBelongsTo)(rel)) {\n    return rel.remoteState ? [rel.remoteState] : [];\n  }\n  return rel.remoteState;\n}\nfunction getDefaultValue(schema, identifier, store) {\n  const options = schema?.options;\n  if (!schema || !options && !schema.type) {\n    return;\n  }\n  if (schema.kind !== 'attribute' && schema.kind !== 'field') {\n    return;\n  }\n\n  // legacy support for defaultValues that are functions\n  if (typeof options?.defaultValue === 'function') {\n    // If anyone opens an issue for args not working right, we'll restore + deprecate it via a Proxy\n    // that lazily instantiates the record. We don't want to provide any args here\n    // because in a non @ember-data/model world they don't make sense.\n    return options.defaultValue();\n    // legacy support for defaultValues that are primitives\n  } else if (options && 'defaultValue' in options) {\n    const defaultValue = options.defaultValue;\n    ( true && !(typeof defaultValue !== 'object' || defaultValue === null) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Non primitive defaultValues are not supported because they are shared between all instances. If you would like to use a complex object as a default value please provide a function that returns the complex object.`, typeof defaultValue !== 'object' || defaultValue === null));\n    return defaultValue;\n\n    // new style transforms\n  } else if (schema.kind !== 'attribute' && schema.type) {\n    const transform = store.schema.transforms?.get(schema.type);\n    if (transform?.defaultValue) {\n      return transform.defaultValue(options || null, identifier);\n    }\n  }\n}\nfunction notifyAttributes(storeWrapper, identifier, keys) {\n  if (!keys) {\n    storeWrapper.notifyChange(identifier, 'attributes');\n    return;\n  }\n  for (let i = 0; i < keys.length; i++) {\n    storeWrapper.notifyChange(identifier, 'attributes', keys[i]);\n  }\n}\n\n/*\n      TODO @deprecate IGOR DAVID\n      There seems to be a potential bug here, where we will return keys that are not\n      in the schema\n  */\nfunction calculateChangedKeys(cached, updates) {\n  const changedKeys = [];\n  if (updates) {\n    const keys = Object.keys(updates);\n    const length = keys.length;\n    const localAttrs = cached.localAttrs;\n    const original = Object.assign(Object.create(null), cached.remoteAttrs, cached.inflightAttrs);\n    for (let i = 0; i < length; i++) {\n      const key = keys[i];\n      const value = updates[key];\n\n      // A value in localAttrs means the user has a local change to\n      // this attribute. We never override this value when merging\n      // updates from the backend so we should not sent a change\n      // notification if the server value differs from the original.\n      if (localAttrs && localAttrs[key] !== undefined) {\n        continue;\n      }\n      if (original[key] !== value) {\n        changedKeys.push(key);\n      }\n    }\n  }\n  return changedKeys;\n}\nfunction cacheIsEmpty(cached) {\n  return !cached || cached.remoteAttrs === null && cached.inflightAttrs === null && cached.localAttrs === null;\n}\nfunction _isEmpty(peeked) {\n  if (!peeked) {\n    return true;\n  }\n  const isNew = peeked.isNew;\n  const isDeleted = peeked.isDeleted;\n  const isEmpty = cacheIsEmpty(peeked);\n  return (!isNew || isDeleted) && isEmpty;\n}\nfunction recordIsLoaded(cached, filterDeleted = false) {\n  if (!cached) {\n    return false;\n  }\n  const isNew = cached.isNew;\n  const isEmpty = cacheIsEmpty(cached);\n\n  // if we are new we must consider ourselves loaded\n  if (isNew) {\n    return !cached.isDeleted;\n  }\n  // even if we have a past request, if we are now empty we are not loaded\n  // typically this is true after an unloadRecord call\n\n  // if we are not empty, not new && we have a fulfilled request then we are loaded\n  // we should consider allowing for something to be loaded that is simply \"not empty\".\n  // which is how RecordState currently handles this case; however, RecordState is buggy\n  // in that it does not account for unloading.\n  return filterDeleted && cached.isDeletionCommitted ? false : !isEmpty;\n}\nfunction _isLoading(peeked, capabilities, identifier) {\n  // TODO refactor things such that the cache is not required to know\n  // about isLoading\n  const req = capabilities._store.getRequestStateService();\n  // const fulfilled = req.getLastRequestForRecord(identifier);\n  const isLoaded = recordIsLoaded(peeked);\n  return !isLoaded &&\n  // fulfilled === null &&\n  req.getPendingRequestsForRecord(identifier).some(r => r.type === 'query');\n}\nfunction setupRelationships(graph, storeWrapper, identifier, data) {\n  // TODO @runspired iterating by definitions instead of by payload keys\n  // allows relationship payloads to be ignored silently if no relationship\n  // definition exists. Ensure there's a test for this and then consider\n  // moving this to an assertion. This check should possibly live in the graph.\n  const relationships = storeWrapper.getSchemaDefinitionService().relationshipsDefinitionFor(identifier);\n  const keys = Object.keys(relationships);\n  for (let i = 0; i < keys.length; i++) {\n    const relationshipName = keys[i];\n    const relationshipData = data.relationships[relationshipName];\n    if (!relationshipData) {\n      continue;\n    }\n    graph.push({\n      op: 'updateRelationship',\n      record: identifier,\n      field: relationshipName,\n      value: relationshipData\n    });\n  }\n}\nfunction patchLocalAttributes(cached) {\n  const {\n    localAttrs,\n    remoteAttrs,\n    inflightAttrs,\n    changes\n  } = cached;\n  if (!localAttrs) {\n    cached.changes = null;\n    return false;\n  }\n  let hasAppliedPatch = false;\n  const mutatedKeys = Object.keys(localAttrs);\n  for (let i = 0, length = mutatedKeys.length; i < length; i++) {\n    const attr = mutatedKeys[i];\n    const existing = inflightAttrs && attr in inflightAttrs ? inflightAttrs[attr] : remoteAttrs && attr in remoteAttrs ? remoteAttrs[attr] : undefined;\n    if (existing === localAttrs[attr]) {\n      hasAppliedPatch = true;\n      delete localAttrs[attr];\n      delete changes[attr];\n    }\n  }\n  return hasAppliedPatch;\n}\nfunction putOne(cache, identifiers, resource) {\n  ( true && !(resource.id !== null && resource.id !== undefined && resource.id !== '') && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`You must include an 'id' for the resource data ${resource.type}`, resource.id !== null && resource.id !== undefined && resource.id !== ''));\n  ( true && !(cache._capabilities.getSchemaDefinitionService().doesTypeExist(resource.type)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Missing Resource Type: received resource data with a type '${resource.type}' but no schema could be found with that name.`, cache._capabilities.getSchemaDefinitionService().doesTypeExist(resource.type)));\n  let identifier = identifiers.peekRecordIdentifier(resource);\n  if (identifier) {\n    identifier = identifiers.updateRecordIdentifier(identifier, resource);\n  } else {\n    identifier = identifiers.getOrCreateRecordIdentifier(resource);\n  }\n  cache.upsert(identifier, resource, cache._capabilities.hasRecord(identifier));\n  // even if the identifier was not \"existing\" before, it is now\n  return identifier;\n}\n\n/*\n    Iterates over the set of internal models reachable from `this` across exactly one\n    relationship.\n  */\nfunction _directlyRelatedIdentifiersIterable(storeWrapper, originating) {\n  const graph = (0,_ember_data_graph_private__WEBPACK_IMPORTED_MODULE_1__.peekGraph)(storeWrapper);\n  const initializedRelationships = graph?.identifiers.get(originating);\n  if (!initializedRelationships) {\n    return EMPTY_ITERATOR;\n  }\n  const initializedRelationshipsArr = [];\n  Object.keys(initializedRelationships).forEach(key => {\n    const rel = initializedRelationships[key];\n    if (rel && !isImplicit(rel)) {\n      initializedRelationshipsArr.push(rel);\n    }\n  });\n  let i = 0;\n  let j = 0;\n  let k = 0;\n  const findNext = () => {\n    while (i < initializedRelationshipsArr.length) {\n      while (j < 2) {\n        const relatedIdentifiers = j === 0 ? getLocalState(initializedRelationshipsArr[i]) : getRemoteState(initializedRelationshipsArr[i]);\n        while (k < relatedIdentifiers.length) {\n          const relatedIdentifier = relatedIdentifiers[k++];\n          if (relatedIdentifier !== null) {\n            return relatedIdentifier;\n          }\n        }\n        k = 0;\n        j++;\n      }\n      j = 0;\n      i++;\n    }\n    return undefined;\n  };\n  return {\n    iterator() {\n      return {\n        next: () => {\n          const value = findNext();\n          return {\n            value,\n            done: value === undefined\n          };\n        }\n      };\n    }\n  };\n}\n\n/*\n      Computes the set of Identifiers reachable from this Identifier.\n\n      Reachability is determined over the relationship graph (ie a graph where\n      nodes are identifiers and edges are belongs to or has many\n      relationships).\n\n      Returns an array including `this` and all identifiers reachable\n      from `this.identifier`.\n    */\nfunction _allRelatedIdentifiers(storeWrapper, originating) {\n  const array = [];\n  const queue = [];\n  const seen = new Set();\n  queue.push(originating);\n  while (queue.length > 0) {\n    const identifier = queue.shift();\n    array.push(identifier);\n    seen.add(identifier);\n    const iterator = _directlyRelatedIdentifiersIterable(storeWrapper, originating).iterator();\n    for (let obj = iterator.next(); !obj.done; obj = iterator.next()) {\n      const relatedIdentifier = obj.value;\n      if (relatedIdentifier && !seen.has(relatedIdentifier)) {\n        seen.add(relatedIdentifier);\n        queue.push(relatedIdentifier);\n      }\n    }\n  }\n  return array;\n}\nfunction isMetaDocument(doc) {\n  return !(doc instanceof Error) && doc.content && !('data' in doc.content) && !('included' in doc.content) && 'meta' in doc.content;\n}\nfunction isErrorDocument(doc) {\n  return doc instanceof Error;\n}\nfunction fromBaseDocument(doc) {\n  const resourceDocument = {};\n  const jsonApiDoc = doc.content;\n  if (jsonApiDoc) {\n    copyLinksAndMeta(resourceDocument, jsonApiDoc);\n  }\n  return resourceDocument;\n}\nfunction fromStructuredError(doc) {\n  const errorDoc = {};\n  if (doc.content) {\n    copyLinksAndMeta(errorDoc, doc.content);\n    if ('errors' in doc.content) {\n      errorDoc.errors = doc.content.errors;\n    } else if (typeof doc.error === 'object' && 'errors' in doc.error) {\n      errorDoc.errors = doc.error.errors;\n    } else {\n      errorDoc.errors = [{\n        title: doc.message\n      }];\n    }\n  }\n  return errorDoc;\n}\nfunction copyLinksAndMeta(target, source) {\n  if ('links' in source) {\n    target.links = source.links;\n  }\n  if ('meta' in source) {\n    target.meta = source.meta;\n  }\n}\n\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@ember-data/json-api.d7f0a39f/node_modules/@ember-data/json-api/index.js?");

/***/ }),

/***/ "../rewritten-packages/@ember-data/json-api.d7f0a39f/node_modules/@ember-data/json-api/request.js":
/*!********************************************************************************************************!*\
  !*** ../rewritten-packages/@ember-data/json-api.d7f0a39f/node_modules/@ember-data/json-api/request.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createRecord: () => (/* binding */ createRecord),\n/* harmony export */   deleteRecord: () => (/* binding */ deleteRecord),\n/* harmony export */   findRecord: () => (/* binding */ findRecord),\n/* harmony export */   postQuery: () => (/* binding */ postQuery),\n/* harmony export */   query: () => (/* binding */ query),\n/* harmony export */   serializePatch: () => (/* binding */ serializePatch),\n/* harmony export */   serializeResources: () => (/* binding */ serializeResources),\n/* harmony export */   setBuildURLConfig: () => (/* binding */ setBuildURLConfig),\n/* harmony export */   updateRecord: () => (/* binding */ updateRecord)\n/* harmony export */ });\n/* harmony import */ var ember_inflector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ember-inflector */ \"../rewritten-packages/ember-inflector.73f9432a/node_modules/ember-inflector/index.js\");\n/* harmony import */ var _ember_data_request_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember-data/request-utils */ \"../rewritten-packages/@ember-data/request-utils.d2e97183/node_modules/@ember-data/request-utils/index.js\");\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ember/debug */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fdebug&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_ember_debug__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _ember_data_store__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ember-data/store */ \"../rewritten-packages/@ember-data/store.a4360448/node_modules/@ember-data/store/index.js\");\n\n\n\n\n\n/**\n * @module @ember-data/json-api/request\n */\n\nconst JsonApiAccept = 'application/vnd.api+json';\nconst DEFAULT_CONFIG = {\n  host: '',\n  namespace: ''\n};\nlet ACCEPT_HEADER_VALUE = 'application/vnd.api+json';\n\n/**\n * Allows setting extensions and profiles to be used in the `Accept` header.\n *\n * Extensions and profiles are keyed by their namespace with the value being\n * their URI.\n *\n * Example:\n *\n * ```ts\n * setBuildURLConfig({\n *   extensions: {\n *     atomic: 'https://jsonapi.org/ext/atomic'\n *   },\n *   profiles: {\n *     pagination: 'https://jsonapi.org/profiles/ethanresnick/cursor-pagination'\n *   }\n * });\n * ```\n *\n * This also sets the global configuration for `buildBaseURL`\n * for host and namespace values for the application\n * in the `@ember-data/request-utils` package.\n *\n * These values may still be overridden by passing\n * them to buildBaseURL directly.\n *\n * This method may be called as many times as needed\n *\n * ```ts\n * type BuildURLConfig = {\n *   host: string;\n *   namespace: string'\n * }\n * ```\n *\n * @method setBuildURLConfig\n * @static\n * @public\n * @for @ember-data/json-api/request\n * @param {BuildURLConfig} config\n * @return void\n */\nfunction setBuildURLConfig(config) {\n  Object.assign({}, DEFAULT_CONFIG, config);\n  if (config.profiles || config.extensions) {\n    let accept = JsonApiAccept;\n    if (config.profiles) {\n      const profiles = Object.values(config.profiles);\n      if (profiles.length) {\n        accept += ';profile=\"' + profiles.join(' ') + '\"';\n      }\n    }\n    if (config.extensions) {\n      const extensions = Object.values(config.extensions);\n      if (extensions.length) {\n        accept += ';ext=' + extensions.join(' ');\n      }\n    }\n    ACCEPT_HEADER_VALUE = accept;\n  }\n  (0,_ember_data_request_utils__WEBPACK_IMPORTED_MODULE_1__.setBuildURLConfig)(config);\n}\nfunction copyForwardUrlOptions(urlOptions, options) {\n  if ('host' in options) {\n    urlOptions.host = options.host;\n  }\n  if ('namespace' in options) {\n    urlOptions.namespace = options.namespace;\n  }\n  if ('resourcePath' in options) {\n    urlOptions.resourcePath = options.resourcePath;\n  }\n}\nfunction extractCacheOptions(options) {\n  const cacheOptions = {};\n  if ('reload' in options) {\n    cacheOptions.reload = options.reload;\n  }\n  if ('backgroundReload' in options) {\n    cacheOptions.backgroundReload = options.backgroundReload;\n  }\n  return cacheOptions;\n}\n\n/**\n * @module @ember-data/json-api/request\n */\n\n/**\n * Builds request options to fetch a single resource by a known id or identifier\n * configured for the url and header expectations of most JSON:API APIs.\n *\n * **Basic Usage**\n *\n * ```ts\n * import { findRecord } from '@ember-data/json-api/request';\n *\n * const data = await store.request(findRecord('person', '1'));\n * ```\n *\n * **With Options**\n *\n * ```ts\n * import { findRecord } from '@ember-data/json-api/request';\n *\n * const options = findRecord('person', '1', { include: ['pets', 'friends'] });\n * const data = await store.request(options);\n * ```\n *\n * **With an Identifier**\n *\n * ```ts\n * import { findRecord } from '@ember-data/json-api/request';\n *\n * const options = findRecord({ type: 'person', id: '1' }, { include: ['pets', 'friends'] });\n * const data = await store.request(options);\n * ```\n *\n * **Supplying Options to Modify the Request Behavior**\n *\n * The following options are supported:\n *\n * - `host` - The host to use for the request, defaults to the `host` configured with `setBuildURLConfig`.\n * - `namespace` - The namespace to use for the request, defaults to the `namespace` configured with `setBuildURLConfig`.\n * - `resourcePath` - The resource path to use for the request, defaults to pluralizing the supplied type\n * - `reload` - Whether to forcibly reload the request if it is already in the store, not supplying this\n *      option will delegate to the store's lifetimes service, defaulting to `false` if none is configured.\n * - `backgroundReload` - Whether to reload the request if it is already in the store, but to also resolve the\n *      promise with the cached value, not supplying this option will delegate to the store's lifetimes service,\n *      defaulting to `false` if none is configured.\n * - `urlParamsSetting` - an object containing options for how to serialize the query params (see `buildQueryParams`)\n *\n * ```ts\n * import { findRecord } from '@ember-data/json-api/request';\n *\n * const options = findRecord('person', '1', { include: ['pets', 'friends'] }, { namespace: 'api/v2' });\n * const data = await store.request(options);\n * ```\n *\n * @method findRecord\n * @public\n * @static\n * @for @ember-data/json-api/request\n * @param identifier\n * @param options\n */\n\nfunction findRecord(arg1, arg2, arg3) {\n  const identifier = typeof arg1 === 'string' ? {\n    type: arg1,\n    id: arg2\n  } : arg1;\n  const options = (typeof arg1 === 'string' ? arg3 : arg2) || {};\n  const cacheOptions = extractCacheOptions(options);\n  const urlOptions = {\n    identifier,\n    op: 'findRecord',\n    resourcePath: (0,ember_inflector__WEBPACK_IMPORTED_MODULE_0__.pluralize)(identifier.type)\n  };\n  copyForwardUrlOptions(urlOptions, options);\n  const url = (0,_ember_data_request_utils__WEBPACK_IMPORTED_MODULE_1__.buildBaseURL)(urlOptions);\n  const headers = new Headers();\n  headers.append('Accept', ACCEPT_HEADER_VALUE);\n  return {\n    url: options.include?.length ? `${url}?${(0,_ember_data_request_utils__WEBPACK_IMPORTED_MODULE_1__.buildQueryParams)({\n      include: options.include\n    }, options.urlParamsSettings)}` : url,\n    method: 'GET',\n    headers,\n    cacheOptions,\n    op: 'findRecord',\n    records: [identifier]\n  };\n}\n\n/**\n * @module @ember-data/json-api/request\n */\n\n/**\n * Builds request options to query for resources, usually by a primary\n * type, configured for the url and header expectations of most JSON:API APIs.\n *\n * The key difference between this and `postQuery` is that this method will send the query\n * as query params in the url of a \"GET\" request instead of as the JSON body of a \"POST\"\n * request.\n *\n * **Basic Usage**\n *\n * ```ts\n * import { query } from '@ember-data/json-api/request';\n *\n * const data = await store.request(query('person'));\n * ```\n *\n * **With Query Params**\n *\n * ```ts\n * import { query } from '@ember-data/json-api/request';\n *\n * const options = query('person', { include: ['pets', 'friends'] });\n * const data = await store.request(options);\n * ```\n *\n * **Supplying Options to Modify the Request Behavior**\n *\n * The following options are supported:\n *\n * - `host` - The host to use for the request, defaults to the `host` configured with `setBuildURLConfig`.\n * - `namespace` - The namespace to use for the request, defaults to the `namespace` configured with `setBuildURLConfig`.\n * - `resourcePath` - The resource path to use for the request, defaults to pluralizing the supplied type\n * - `reload` - Whether to forcibly reload the request if it is already in the store, not supplying this\n *      option will delegate to the store's lifetimes service, defaulting to `false` if none is configured.\n * - `backgroundReload` - Whether to reload the request if it is already in the store, but to also resolve the\n *      promise with the cached value, not supplying this option will delegate to the store's lifetimes service,\n *      defaulting to `false` if none is configured.\n * - `urlParamsSetting` - an object containing options for how to serialize the query params (see `buildQueryParams`)\n *\n * ```ts\n * import { query } from '@ember-data/json-api/request';\n *\n * const options = query('person', { include: ['pets', 'friends'] }, { reload: true });\n * const data = await store.request(options);\n * ```\n *\n * @method query\n * @public\n * @static\n * @for @ember-data/json-api/request\n * @param identifier\n * @param query\n * @param options\n */\nfunction query(type,\n// eslint-disable-next-line @typescript-eslint/no-shadow\nquery = {}, options = {}) {\n  const cacheOptions = extractCacheOptions(options);\n  const urlOptions = {\n    identifier: {\n      type\n    },\n    op: 'query',\n    resourcePath: (0,ember_inflector__WEBPACK_IMPORTED_MODULE_0__.pluralize)(type)\n  };\n  copyForwardUrlOptions(urlOptions, options);\n  const url = (0,_ember_data_request_utils__WEBPACK_IMPORTED_MODULE_1__.buildBaseURL)(urlOptions);\n  const headers = new Headers();\n  headers.append('Accept', ACCEPT_HEADER_VALUE);\n  const queryString = (0,_ember_data_request_utils__WEBPACK_IMPORTED_MODULE_1__.buildQueryParams)(query, options.urlParamsSettings);\n  return {\n    url: queryString ? `${url}?${queryString}` : url,\n    method: 'GET',\n    headers,\n    cacheOptions,\n    op: 'query'\n  };\n}\n\n/**\n * Builds request options to query for resources, usually by a primary\n * type, configured for the url and header expectations of most JSON:API APIs.\n *\n * The key difference between this and `query` is that this method will send the query\n * as the JSON body of a \"POST\" request instead of as query params in the url of a \"GET\"\n * request.\n *\n * A CacheKey is generated from the url and query params, and used to cache the response\n * in the store.\n *\n * ```ts\n * import { postQuery } from '@ember-data/json-api/request';\n *\n * const options = postQuery('person', { include: ['pets', 'friends'] });\n * const data = await store.request(options);\n * ```\n *\n * **Supplying Options to Modify the Request Behavior**\n *\n * The following options are supported:\n *\n * - `host` - The host to use for the request, defaults to the `host` configured with `setBuildURLConfig`.\n * - `namespace` - The namespace to use for the request, defaults to the `namespace` configured with `setBuildURLConfig`.\n * - `resourcePath` - The resource path to use for the request, defaults to pluralizing the supplied type\n * - `reload` - Whether to forcibly reload the request if it is already in the store, not supplying this\n *      option will delegate to the store's lifetimes service, defaulting to `false` if none is configured.\n * - `backgroundReload` - Whether to reload the request if it is already in the store, but to also resolve the\n *      promise with the cached value, not supplying this option will delegate to the store's lifetimes service,\n *      defaulting to `false` if none is configured.\n * - `urlParamsSetting` - an object containing options for how to serialize the query params (see `buildQueryParams`)\n *\n * ```ts\n * import { postQuery } from '@ember-data/json-api/request';\n *\n * const options = postQuery('person', { include: ['pets', 'friends'] }, { reload: true });\n * const data = await store.request(options);\n * ```\n *\n * @method postQuery\n * @public\n * @static\n * @for @ember-data/json-api/request\n * @param identifier\n * @param query\n * @param options\n */\nfunction postQuery(type,\n// eslint-disable-next-line @typescript-eslint/no-shadow\nquery = {}, options = {}) {\n  const cacheOptions = extractCacheOptions(options);\n  const urlOptions = {\n    identifier: {\n      type\n    },\n    op: 'query',\n    resourcePath: options.resourcePath ?? (0,ember_inflector__WEBPACK_IMPORTED_MODULE_0__.pluralize)(type)\n  };\n  copyForwardUrlOptions(urlOptions, options);\n  const url = (0,_ember_data_request_utils__WEBPACK_IMPORTED_MODULE_1__.buildBaseURL)(urlOptions);\n  const headers = new Headers();\n  headers.append('Accept', ACCEPT_HEADER_VALUE);\n  const queryData = structuredClone(query);\n  cacheOptions.key = cacheOptions.key ?? `${url}?${(0,_ember_data_request_utils__WEBPACK_IMPORTED_MODULE_1__.buildQueryParams)(queryData, options.urlParamsSettings)}`;\n  return {\n    url,\n    method: 'POST',\n    body: JSON.stringify(query),\n    headers,\n    cacheOptions: cacheOptions,\n    op: 'query'\n  };\n}\nfunction isExisting(identifier) {\n  return 'id' in identifier && identifier.id !== null && 'type' in identifier && identifier.type !== null;\n}\n\n/**\n * Builds request options to delete record for resources,\n * configured for the url, method and header expectations of most JSON:API APIs.\n *\n * **Basic Usage**\n *\n * ```ts\n * import { deleteRecord } from '@ember-data/json-api/request';\n *\n * const person = this.store.peekRecord('person', '1');\n *\n * // mark record as deleted\n * store.deleteRecord(person);\n *\n * // persist deletion\n * const data = await store.request(deleteRecord(person));\n * ```\n *\n * **Supplying Options to Modify the Request Behavior**\n *\n * The following options are supported:\n *\n * - `host` - The host to use for the request, defaults to the `host` configured with `setBuildURLConfig`.\n * - `namespace` - The namespace to use for the request, defaults to the `namespace` configured with `setBuildURLConfig`.\n * - `resourcePath` - The resource path to use for the request, defaults to pluralizing the supplied type\n * - `reload` - Whether to forcibly reload the request if it is already in the store, not supplying this\n *      option will delegate to the store's lifetimes service, defaulting to `false` if none is configured.\n * - `backgroundReload` - Whether to reload the request if it is already in the store, but to also resolve the\n *      promise with the cached value, not supplying this option will delegate to the store's lifetimes service,\n *      defaulting to `false` if none is configured.\n * - `urlParamsSetting` - an object containing options for how to serialize the query params (see `buildQueryParams`)\n *\n * ```ts\n * import { deleteRecord } from '@ember-data/json-api/request';\n *\n * const person = this.store.peekRecord('person', '1');\n *\n * // mark record as deleted\n * store.deleteRecord(person);\n *\n * // persist deletion\n * const options = deleteRecord(person, { namespace: 'api/v1' });\n * const data = await store.request(options);\n * ```\n *\n * @method deleteRecord\n * @public\n * @static\n * @for @ember-data/json-api/request\n * @param record\n * @param options\n */\nfunction deleteRecord(record, options = {}) {\n  const identifier = (0,_ember_data_store__WEBPACK_IMPORTED_MODULE_3__.recordIdentifierFor)(record);\n  ( true && !(identifier) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_2__.assert)(`Expected to be given a record instance`, identifier));\n  ( true && !(isExisting(identifier)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_2__.assert)(`Cannot delete a record that does not have an associated type and id.`, isExisting(identifier)));\n  const urlOptions = {\n    identifier: identifier,\n    op: 'deleteRecord',\n    resourcePath: (0,ember_inflector__WEBPACK_IMPORTED_MODULE_0__.pluralize)(identifier.type)\n  };\n  copyForwardUrlOptions(urlOptions, options);\n  const url = (0,_ember_data_request_utils__WEBPACK_IMPORTED_MODULE_1__.buildBaseURL)(urlOptions);\n  const headers = new Headers();\n  headers.append('Accept', ACCEPT_HEADER_VALUE);\n  return {\n    url,\n    method: 'DELETE',\n    headers,\n    op: 'deleteRecord',\n    data: {\n      record: identifier\n    },\n    records: [identifier]\n  };\n}\n\n/**\n * Builds request options to create new record for resources,\n * configured for the url, method and header expectations of most JSON:API APIs.\n *\n * **Basic Usage**\n *\n * ```ts\n * import { createRecord } from '@ember-data/json-api/request';\n *\n * const person = this.store.createRecord('person', { name: 'Ted' });\n * const data = await store.request(createRecord(person));\n * ```\n *\n * **Supplying Options to Modify the Request Behavior**\n *\n * The following options are supported:\n *\n * - `host` - The host to use for the request, defaults to the `host` configured with `setBuildURLConfig`.\n * - `namespace` - The namespace to use for the request, defaults to the `namespace` configured with `setBuildURLConfig`.\n * - `resourcePath` - The resource path to use for the request, defaults to pluralizing the supplied type\n * - `reload` - Whether to forcibly reload the request if it is already in the store, not supplying this\n *      option will delegate to the store's lifetimes service, defaulting to `false` if none is configured.\n * - `backgroundReload` - Whether to reload the request if it is already in the store, but to also resolve the\n *      promise with the cached value, not supplying this option will delegate to the store's lifetimes service,\n *      defaulting to `false` if none is configured.\n * - `urlParamsSetting` - an object containing options for how to serialize the query params (see `buildQueryParams`)\n *\n * ```ts\n * import { createRecord } from '@ember-data/json-api/request';\n *\n * const person = this.store.createRecord('person', { name: 'Ted' });\n * const options = createRecord(person, { namespace: 'api/v1' });\n * const data = await store.request(options);\n * ```\n *\n * @method createRecord\n * @public\n * @static\n * @for @ember-data/json-api/request\n * @param record\n * @param options\n */\nfunction createRecord(record, options = {}) {\n  const identifier = (0,_ember_data_store__WEBPACK_IMPORTED_MODULE_3__.recordIdentifierFor)(record);\n  ( true && !(identifier) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_2__.assert)(`Expected to be given a record instance`, identifier));\n  const urlOptions = {\n    identifier: identifier,\n    op: 'createRecord',\n    resourcePath: (0,ember_inflector__WEBPACK_IMPORTED_MODULE_0__.pluralize)(identifier.type)\n  };\n  copyForwardUrlOptions(urlOptions, options);\n  const url = (0,_ember_data_request_utils__WEBPACK_IMPORTED_MODULE_1__.buildBaseURL)(urlOptions);\n  const headers = new Headers();\n  headers.append('Accept', ACCEPT_HEADER_VALUE);\n  return {\n    url,\n    method: 'POST',\n    headers,\n    op: 'createRecord',\n    data: {\n      record: identifier\n    },\n    records: [identifier]\n  };\n}\n\n/**\n * Builds request options to update existing record for resources,\n * configured for the url, method and header expectations of most JSON:API APIs.\n *\n * **Basic Usage**\n *\n * ```ts\n * import { updateRecord } from '@ember-data/json-api/request';\n *\n * const person = this.store.peekRecord('person', '1');\n * person.name = 'Chris';\n * const data = await store.request(updateRecord(person));\n * ```\n *\n * **Supplying Options to Modify the Request Behavior**\n *\n * The following options are supported:\n *\n * - `patch` - Allows caller to specify whether to use a PATCH request instead of a PUT request, defaults to `false`.\n * - `host` - The host to use for the request, defaults to the `host` configured with `setBuildURLConfig`.\n * - `namespace` - The namespace to use for the request, defaults to the `namespace` configured with `setBuildURLConfig`.\n * - `resourcePath` - The resource path to use for the request, defaults to pluralizing the supplied type\n * - `reload` - Whether to forcibly reload the request if it is already in the store, not supplying this\n *      option will delegate to the store's lifetimes service, defaulting to `false` if none is configured.\n * - `backgroundReload` - Whether to reload the request if it is already in the store, but to also resolve the\n *      promise with the cached value, not supplying this option will delegate to the store's lifetimes service,\n *      defaulting to `false` if none is configured.\n * - `urlParamsSetting` - an object containing options for how to serialize the query params (see `buildQueryParams`)\n *\n * ```ts\n * import { updateRecord } from '@ember-data/json-api/request';\n *\n * const person = this.store.peekRecord('person', '1');\n * person.name = 'Chris';\n * const options = updateRecord(person, { patch: true });\n * const data = await store.request(options);\n * ```\n *\n * @method updateRecord\n * @public\n * @static\n * @for @ember-data/json-api/request\n * @param record\n * @param options\n */\nfunction updateRecord(record, options = {}) {\n  const identifier = (0,_ember_data_store__WEBPACK_IMPORTED_MODULE_3__.recordIdentifierFor)(record);\n  ( true && !(identifier) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_2__.assert)(`Expected to be given a record instance`, identifier));\n  ( true && !(isExisting(identifier)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_2__.assert)(`Cannot update a record that does not have an associated type and id.`, isExisting(identifier)));\n  const urlOptions = {\n    identifier: identifier,\n    op: 'updateRecord',\n    resourcePath: (0,ember_inflector__WEBPACK_IMPORTED_MODULE_0__.pluralize)(identifier.type)\n  };\n  copyForwardUrlOptions(urlOptions, options);\n  const url = (0,_ember_data_request_utils__WEBPACK_IMPORTED_MODULE_1__.buildBaseURL)(urlOptions);\n  const headers = new Headers();\n  headers.append('Accept', ACCEPT_HEADER_VALUE);\n  return {\n    url,\n    method: options.patch ? 'PATCH' : 'PUT',\n    headers,\n    op: 'updateRecord',\n    data: {\n      record: identifier\n    },\n    records: [identifier]\n  };\n}\n\n/**\n * @module @ember-data/json-api/request\n */\n\n/**\n * Serializes the current state of a resource or array of resources for use with POST or PUT requests.\n *\n * @method serializeResources\n * @static\n * @public\n * @for @ember-data/json-api/request\n * @param {Cache} cache}\n * @param {StableRecordIdentifier} identifier\n * @return {object} An object with a `data` property containing the serialized resource patch\n */\n\nfunction serializeResources(cache, identifiers) {\n  return {\n    data: Array.isArray(identifiers) ? identifiers.map(identifier => _serializeResource(cache, identifier)) : _serializeResource(cache, identifiers)\n  };\n}\nfunction _serializeResource(cache, identifier) {\n  const {\n    id,\n    lid,\n    type\n  } = identifier;\n  // yup! this method actually does nothing. It's just here for the dev assertion\n  // and to assist in providing a little sugar to the consuming app via the `serializeResources` utility\n  const record = cache.peek(identifier);\n  ( true && !(record) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_2__.assert)(`A record with id ${String(id)} and type ${type} for lid ${lid} was not found not in the supplied Cache.`, record));\n  return record;\n}\n\n/**\n * Serializes changes to a resource for use with PATCH requests.\n *\n * Only attributes which are changed are serialized.\n * Only relationships which are changed are serialized.\n *\n * Collection relationships serialize the collection as a whole.\n *\n * If you would like to serialize updates to a collection more granularly\n * (for instance, as operations) request the diff from the store and\n * serialize as desired:\n *\n * ```ts\n * const relationshipDiffMap = cache.changedRelationships(identifier);\n * ```\n *\n * @method serializePatch\n * @static\n * @public\n * @for @ember-data/json-api/request\n * @param {Cache} cache}\n * @param {StableRecordIdentifier} identifier\n * @return {object} An object with a `data` property containing the serialized resource patch\n */\nfunction serializePatch(cache, identifier) {\n  const {\n    id,\n    lid,\n    type\n  } = identifier;\n  const record = cache.peek(identifier);\n  ( true && !(record) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_2__.assert)(`A record with id ${String(id)} and type ${type} for lid ${lid} was not found not in the supplied Cache.`, record));\n  const data = {\n    type,\n    lid,\n    id\n  };\n  if (cache.hasChangedAttrs(identifier)) {\n    const attrsChanges = cache.changedAttrs(identifier);\n    const attributes = {};\n    Object.keys(attrsChanges).forEach(key => {\n      const change = attrsChanges[key];\n      const newVal = change[1];\n      attributes[key] = newVal === undefined ? null : newVal;\n    });\n    data.attributes = attributes;\n  }\n  const changedRelationships = cache.changedRelationships(identifier);\n  if (changedRelationships.size) {\n    const relationships = {};\n    changedRelationships.forEach((diff, key) => {\n      relationships[key] = {\n        data: diff.localState\n      };\n    });\n    data.relationships = relationships;\n  }\n  return {\n    data\n  };\n}\n\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@ember-data/json-api.d7f0a39f/node_modules/@ember-data/json-api/request.js?");

/***/ }),

/***/ "../rewritten-packages/@ember-data/legacy-compat.e84b6420/node_modules/@ember-data/legacy-compat/-private-1aicprWG.js":
/*!****************************************************************************************************************************!*\
  !*** ../rewritten-packages/@ember-data/legacy-compat.e84b6420/node_modules/@ember-data/legacy-compat/-private-1aicprWG.js ***!
  \****************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   F: () => (/* binding */ FetchManager),\n/* harmony export */   S: () => (/* binding */ SaveOp),\n/* harmony export */   a: () => (/* binding */ assertIdentifierHasId),\n/* harmony export */   b: () => (/* binding */ SnapshotRecordArray),\n/* harmony export */   c: () => (/* binding */ Snapshot),\n/* harmony export */   i: () => (/* binding */ iterateData),\n/* harmony export */   n: () => (/* binding */ normalizeResponseHelper),\n/* harmony export */   p: () => (/* binding */ payloadIsNotBlank),\n/* harmony export */   u: () => (/* binding */ upgradeStore)\n/* harmony export */ });\n/* harmony import */ var _ember_data_store_private__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember-data/store/-private */ \"../rewritten-packages/@ember-data/store.a4360448/node_modules/@ember-data/store/-private.js\");\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember/debug */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fdebug&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_ember_debug__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _ember_data_request__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ember-data/request */ \"../rewritten-packages/@ember-data/request.7c2e6d52/node_modules/@ember-data/request/index.js\");\n/* harmony import */ var _embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../../../@embroider/macros/src/addon/es-compat2 */ \"../../@embroider/macros/src/addon/es-compat2.js\");\n\n\n\n\n/**\n  @module @ember-data/legacy-compat\n*/\n\n/**\n  SnapshotRecordArray is not directly instantiable.\n  Instances are provided to consuming application's\n  adapters for certain requests.\n\n  @class SnapshotRecordArray\n  @public\n*/\n\nclass SnapshotRecordArray {\n  /**\n    SnapshotRecordArray is not directly instantiable.\n    Instances are provided to consuming application's\n    adapters and serializers for certain requests.\n     @method constructor\n    @private\n    @constructor\n    @param {Store} store\n    @param {string} type\n    @param options\n   */\n  constructor(store, type, options = {}) {\n    this.__store = store;\n    /**\n      An array of snapshots\n      @private\n      @property _snapshots\n      @type {Array}\n    */\n    this._snapshots = null;\n\n    /**\n    The modelName of the underlying records for the snapshots in the array, as a Model\n    @property modelName\n    @public\n    @type {Model}\n    */\n    this.modelName = type;\n\n    /**\n      A hash of adapter options passed into the store method for this request.\n       Example\n       ```app/adapters/post.js\n      import MyCustomAdapter from './custom-adapter';\n       export default class PostAdapter extends MyCustomAdapter {\n        findAll(store, type, sinceToken, snapshotRecordArray) {\n          if (snapshotRecordArray.adapterOptions.subscribe) {\n            // ...\n          }\n          // ...\n        }\n      }\n      ```\n       @property adapterOptions\n      @public\n      @type {Object}\n    */\n    this.adapterOptions = options.adapterOptions;\n\n    /**\n      The relationships to include for this request.\n       Example\n       ```app/adapters/application.js\n      import Adapter from '@ember-data/adapter';\n       export default class ApplicationAdapter extends Adapter {\n        findAll(store, type, snapshotRecordArray) {\n          let url = `/${type.modelName}?include=${encodeURIComponent(snapshotRecordArray.include)}`;\n           return fetch(url).then((response) => response.json())\n        }\n      }\n      ```\n       @property include\n      @public\n      @type {String|Array}\n    */\n    this.include = options.include;\n  }\n\n  /**\n    An array of records\n     @property _recordArray\n    @private\n    @type {Array}\n  */\n  get _recordArray() {\n    return this.__store.peekAll(this.modelName);\n  }\n\n  /**\n      Number of records in the array\n       Example\n       ```app/adapters/post.js\n      import JSONAPIAdapter from '@ember-data/adapter/json-api';\n       export default class PostAdapter extends JSONAPIAdapter {\n        shouldReloadAll(store, snapshotRecordArray) {\n          return !snapshotRecordArray.length;\n        }\n      });\n      ```\n       @property length\n      @public\n      @type {Number}\n    */\n  get length() {\n    return this._recordArray.length;\n  }\n\n  /**\n    Get snapshots of the underlying record array\n     Example\n     ```app/adapters/post.js\n    import JSONAPIAdapter from '@ember-data/adapter/json-api';\n     export default class PostAdapter extends JSONAPIAdapter {\n      shouldReloadAll(store, snapshotArray) {\n        let snapshots = snapshotArray.snapshots();\n         return snapshots.any(function(ticketSnapshot) {\n          let timeDiff = moment().diff(ticketSnapshot.attr('lastAccessedAt'), 'minutes');\n          if (timeDiff > 20) {\n            return true;\n          } else {\n            return false;\n          }\n        });\n      }\n    }\n    ```\n     @method snapshots\n    @public\n    @return {Array} Array of snapshots\n  */\n  snapshots() {\n    if (this._snapshots !== null) {\n      return this._snapshots;\n    }\n    upgradeStore(this.__store);\n    const {\n      _fetchManager\n    } = this.__store;\n    this._snapshots = this._recordArray[_ember_data_store_private__WEBPACK_IMPORTED_MODULE_0__.SOURCE].map(identifier => _fetchManager.createSnapshot(identifier));\n    return this._snapshots;\n  }\n}\nfunction assertIdentifierHasId(identifier) {\n  ( true && !(identifier && identifier.id !== null) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)(`Attempted to schedule a fetch for a record without an id.`, identifier && identifier.id !== null));\n}\nfunction iterateData(data, fn) {\n  if (Array.isArray(data)) {\n    return data.map(fn);\n  } else {\n    return fn(data);\n  }\n}\nfunction payloadIsNotBlank(adapterPayload) {\n  if (Array.isArray(adapterPayload)) {\n    return true;\n  } else {\n    return Object.keys(adapterPayload || {}).length !== 0;\n  }\n}\n\n/**\n  This is a helper method that validates a JSON API top-level document\n\n  The format of a document is described here:\n  http://jsonapi.org/format/#document-top-level\n\n  @internal\n*/\nfunction validateDocumentStructure(doc) {\n  {\n    const errors = [];\n    if (!doc || typeof doc !== 'object') {\n      errors.push('Top level of a JSON API document must be an object');\n    } else {\n      if (!('data' in doc) && !('errors' in doc) && !('meta' in doc)) {\n        errors.push('One or more of the following keys must be present: \"data\", \"errors\", \"meta\".');\n      } else {\n        if ('data' in doc && 'errors' in doc) {\n          errors.push('Top level keys \"errors\" and \"data\" cannot both be present in a JSON API document');\n        }\n      }\n      if ('data' in doc) {\n        if (!(doc.data === null || Array.isArray(doc.data) || typeof doc.data === 'object')) {\n          errors.push('data must be null, an object, or an array');\n        }\n      }\n      if ('meta' in doc) {\n        if (typeof doc.meta !== 'object') {\n          errors.push('meta must be an object');\n        }\n      }\n      if ('errors' in doc) {\n        if (!Array.isArray(doc.errors)) {\n          errors.push('errors must be an array');\n        }\n      }\n      if ('links' in doc) {\n        if (typeof doc.links !== 'object') {\n          errors.push('links must be an object');\n        }\n      }\n      if ('jsonapi' in doc) {\n        if (typeof doc.jsonapi !== 'object') {\n          errors.push('jsonapi must be an object');\n        }\n      }\n      if ('included' in doc) {\n        if (typeof doc.included !== 'object') {\n          errors.push('included must be an array');\n        }\n      }\n    }\n    ( true && !(errors.length === 0) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)(`Response must be normalized to a valid JSON API document:\\n\\t* ${errors.join('\\n\\t* ')}`, errors.length === 0));\n  }\n}\nfunction normalizeResponseHelper(serializer, store, modelClass, payload, id, requestType) {\n  const normalizedResponse = serializer ? serializer.normalizeResponse(store, modelClass, payload, id, requestType) : payload;\n  validateDocumentStructure(normalizedResponse);\n  return normalizedResponse;\n}\n\n/**\n  @module @ember-data/store\n*/\n/**\n  Snapshot is not directly instantiable.\n  Instances are provided to a consuming application's\n  adapters and serializers for certain requests.\n\n  Snapshots are only available when using `@ember-data/legacy-compat`\n  for legacy compatibility with adapters and serializers.\n\n  @class Snapshot\n  @public\n*/\nclass Snapshot {\n  /**\n   * @method constructor\n   * @constructor\n   * @private\n   * @param options\n   * @param identifier\n   * @param _store\n   */\n  constructor(options, identifier, store) {\n    this._store = store;\n    this.__attributes = null;\n    this._belongsToRelationships = Object.create(null);\n    this._belongsToIds = Object.create(null);\n    this._hasManyRelationships = Object.create(null);\n    this._hasManyIds = Object.create(null);\n    const hasRecord = !!store._instanceCache.peek(identifier);\n    this.modelName = identifier.type;\n\n    /**\n      The unique RecordIdentifier associated with this Snapshot.\n       @property identifier\n      @public\n      @type {StableRecordIdentifier}\n    */\n    this.identifier = identifier;\n\n    /*\n      If the we do not yet have a record, then we are\n      likely a snapshot being provided to a find request, so we\n      populate __attributes lazily. Else, to preserve the \"moment\n      in time\" in which a snapshot is created, we greedily grab\n      the values.\n     */\n    if (hasRecord) {\n      this._attributes;\n    }\n\n    /**\n     The id of the snapshot's underlying record\n      Example\n      ```javascript\n     // store.push('post', { id: 1, author: 'Tomster', title: 'Ember.js rocks' });\n     postSnapshot.id; // => '1'\n     ```\n      @property id\n     @type {String}\n     @public\n     */\n    this.id = identifier.id;\n\n    /**\n     A hash of adapter options\n     @property adapterOptions\n     @type {Object}\n     @public\n     */\n    this.adapterOptions = options.adapterOptions;\n\n    /**\n     If `include` was passed to the options hash for the request, the value\n     would be available here.\n      @property include\n     @type {String|Array}\n     @public\n     */\n    this.include = options.include;\n\n    /**\n     The name of the type of the underlying record for this snapshot, as a string.\n      @property modelName\n     @type {String}\n     @public\n     */\n    this.modelName = identifier.type;\n    if (hasRecord) {\n      const cache = this._store.cache;\n      this._changedAttributes = cache.changedAttrs(identifier);\n    }\n  }\n\n  /**\n   The underlying record for this snapshot. Can be used to access methods and\n   properties defined on the record.\n    Example\n    ```javascript\n   let json = snapshot.record.toJSON();\n   ```\n    @property record\n   @type {Model}\n   @public\n   */\n  get record() {\n    const record = this._store.peekRecord(this.identifier);\n    ( true && !(record !== null) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)(`Record ${this.identifier.type} ${this.identifier.id} (${this.identifier.lid}) is not yet loaded and thus cannot be accessed from the Snapshot during serialization`, record !== null));\n    return record;\n  }\n  get _attributes() {\n    if (this.__attributes !== null) {\n      return this.__attributes;\n    }\n    const attributes = this.__attributes = Object.create(null);\n    const {\n      identifier\n    } = this;\n    const attrs = Object.keys(this._store.getSchemaDefinitionService().attributesDefinitionFor(identifier));\n    const cache = this._store.cache;\n    attrs.forEach(keyName => {\n      attributes[keyName] = cache.getAttr(identifier, keyName);\n    });\n    return attributes;\n  }\n  get isNew() {\n    const cache = this._store.cache;\n    return cache?.isNew(this.identifier) || false;\n  }\n\n  /**\n   Returns the value of an attribute.\n    Example\n    ```javascript\n   // store.push('post', { id: 1, author: 'Tomster', title: 'Ember.js rocks' });\n   postSnapshot.attr('author'); // => 'Tomster'\n   postSnapshot.attr('title'); // => 'Ember.js rocks'\n   ```\n    Note: Values are loaded eagerly and cached when the snapshot is created.\n    @method attr\n   @param {String} keyName\n   @return {Object} The attribute value or undefined\n   @public\n   */\n  attr(keyName) {\n    if (keyName in this._attributes) {\n      return this._attributes[keyName];\n    }\n    ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)(`Model '${this.identifier.lid}' has no attribute named '${keyName}' defined.`, false));\n  }\n\n  /**\n   Returns all attributes and their corresponding values.\n    Example\n    ```javascript\n   // store.push('post', { id: 1, author: 'Tomster', title: 'Ember.js rocks' });\n   postSnapshot.attributes(); // => { author: 'Tomster', title: 'Ember.js rocks' }\n   ```\n    @method attributes\n   @return {Object} All attributes of the current snapshot\n   @public\n   */\n  attributes() {\n    return {\n      ...this._attributes\n    };\n  }\n\n  /**\n   Returns all changed attributes and their old and new values.\n    Example\n    ```javascript\n   // store.push('post', { id: 1, author: 'Tomster', title: 'Ember.js rocks' });\n   postModel.set('title', 'Ember.js rocks!');\n   postSnapshot.changedAttributes(); // => { title: ['Ember.js rocks', 'Ember.js rocks!'] }\n   ```\n    @method changedAttributes\n   @return {Object} All changed attributes of the current snapshot\n   @public\n   */\n  changedAttributes() {\n    const changedAttributes = Object.create(null);\n    if (!this._changedAttributes) {\n      return changedAttributes;\n    }\n    const changedAttributeKeys = Object.keys(this._changedAttributes);\n    for (let i = 0, length = changedAttributeKeys.length; i < length; i++) {\n      const key = changedAttributeKeys[i];\n      changedAttributes[key] = this._changedAttributes[key].slice();\n    }\n    return changedAttributes;\n  }\n\n  /**\n   Returns the current value of a belongsTo relationship.\n    `belongsTo` takes an optional hash of options as a second parameter,\n   currently supported options are:\n    - `id`: set to `true` if you only want the ID of the related record to be\n   returned.\n    Example\n    ```javascript\n   // store.push('post', { id: 1, title: 'Hello World' });\n   // store.createRecord('comment', { body: 'Lorem ipsum', post: post });\n   commentSnapshot.belongsTo('post'); // => Snapshot\n   commentSnapshot.belongsTo('post', { id: true }); // => '1'\n    // store.push('comment', { id: 1, body: 'Lorem ipsum' });\n   commentSnapshot.belongsTo('post'); // => undefined\n   ```\n    Calling `belongsTo` will return a new Snapshot as long as there's any known\n   data for the relationship available, such as an ID. If the relationship is\n   known but unset, `belongsTo` will return `null`. If the contents of the\n   relationship is unknown `belongsTo` will return `undefined`.\n    Note: Relationships are loaded lazily and cached upon first access.\n    @method belongsTo\n   @param {String} keyName\n   @param {Object} [options]\n   @public\n   @return {(Snapshot|String|null|undefined)} A snapshot or ID of a known\n   relationship or null if the relationship is known but unset. undefined\n   will be returned if the contents of the relationship is unknown.\n   */\n  belongsTo(keyName, options) {\n    const returnModeIsId = !!(options && options.id);\n    let result;\n    const store = this._store;\n    if (returnModeIsId === true && keyName in this._belongsToIds) {\n      return this._belongsToIds[keyName];\n    }\n    if (returnModeIsId === false && keyName in this._belongsToRelationships) {\n      return this._belongsToRelationships[keyName];\n    }\n    const relationshipMeta = store.getSchemaDefinitionService().relationshipsDefinitionFor({\n      type: this.modelName\n    })[keyName];\n    ( true && !(relationshipMeta && relationshipMeta.kind === 'belongsTo') && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)(`Model '${this.identifier.lid}' has no belongsTo relationship named '${keyName}' defined.`, relationshipMeta && relationshipMeta.kind === 'belongsTo')); // TODO @runspired it seems this code branch would not work with CUSTOM_MODEL_CLASSes\n    // this check is not a regression in behavior because relationships don't currently\n    // function without access to intimate API contracts between RecordData and Model.\n    // This is a requirement we should fix as soon as the relationship layer does not require\n    // this intimate API usage.\n    const graphFor = (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(__webpack_require__(/*! @ember-data/graph/-private */ \"../rewritten-packages/@ember-data/graph.4c9e27df/node_modules/@ember-data/graph/-private.js\")).graphFor;\n    const {\n      identifier\n    } = this;\n    {\n      const relationship = graphFor(this._store).get(identifier, keyName);\n      ( true && !(relationship) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)(`You looked up the ${keyName} belongsTo relationship for { type: ${identifier.type}, id: ${identifier.id || ''}, lid: ${identifier.lid} but no such relationship was found.`, relationship));\n      ( true && !(relationship.definition.kind === 'belongsTo') && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)(`You looked up the ${keyName} belongsTo relationship for { type: ${identifier.type}, id: ${identifier.id || ''}, lid: ${identifier.lid} but that relationship is a hasMany.`, relationship.definition.kind === 'belongsTo'));\n    }\n    const value = graphFor(this._store).getData(identifier, keyName);\n    const data = value && value.data;\n    const inverseIdentifier = data ? store.identifierCache.getOrCreateRecordIdentifier(data) : null;\n    if (value && value.data !== undefined) {\n      const cache = store.cache;\n      if (inverseIdentifier && !cache.isDeleted(inverseIdentifier)) {\n        if (returnModeIsId) {\n          result = inverseIdentifier.id;\n        } else {\n          result = store._fetchManager.createSnapshot(inverseIdentifier);\n        }\n      } else {\n        result = null;\n      }\n    }\n    if (returnModeIsId) {\n      this._belongsToIds[keyName] = result;\n    } else {\n      this._belongsToRelationships[keyName] = result;\n    }\n    return result;\n  }\n\n  /**\n   Returns the current value of a hasMany relationship.\n    `hasMany` takes an optional hash of options as a second parameter,\n   currently supported options are:\n    - `ids`: set to `true` if you only want the IDs of the related records to be\n   returned.\n    Example\n    ```javascript\n   // store.push('post', { id: 1, title: 'Hello World', comments: [2, 3] });\n   postSnapshot.hasMany('comments'); // => [Snapshot, Snapshot]\n   postSnapshot.hasMany('comments', { ids: true }); // => ['2', '3']\n    // store.push('post', { id: 1, title: 'Hello World' });\n   postSnapshot.hasMany('comments'); // => undefined\n   ```\n    Note: Relationships are loaded lazily and cached upon first access.\n    @method hasMany\n   @param {String} keyName\n   @param {Object} [options]\n   @public\n   @return {(Array|undefined)} An array of snapshots or IDs of a known\n   relationship or an empty array if the relationship is known but unset.\n   undefined will be returned if the contents of the relationship is unknown.\n   */\n  hasMany(keyName, options) {\n    const returnModeIsIds = !!(options && options.ids);\n    let results;\n    const cachedIds = this._hasManyIds[keyName];\n    const cachedSnapshots = this._hasManyRelationships[keyName];\n    if (returnModeIsIds === true && keyName in this._hasManyIds) {\n      return cachedIds;\n    }\n    if (returnModeIsIds === false && keyName in this._hasManyRelationships) {\n      return cachedSnapshots;\n    }\n    const store = this._store;\n    const relationshipMeta = store.getSchemaDefinitionService().relationshipsDefinitionFor({\n      type: this.modelName\n    })[keyName];\n    ( true && !(relationshipMeta && relationshipMeta.kind === 'hasMany') && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)(`Model '${this.identifier.lid}' has no hasMany relationship named '${keyName}' defined.`, relationshipMeta && relationshipMeta.kind === 'hasMany')); // TODO @runspired it seems this code branch would not work with CUSTOM_MODEL_CLASSes\n    // this check is not a regression in behavior because relationships don't currently\n    // function without access to intimate API contracts between RecordData and Model.\n    // This is a requirement we should fix as soon as the relationship layer does not require\n    // this intimate API usage.\n    const graphFor = (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(__webpack_require__(/*! @ember-data/graph/-private */ \"../rewritten-packages/@ember-data/graph.4c9e27df/node_modules/@ember-data/graph/-private.js\")).graphFor;\n    const {\n      identifier\n    } = this;\n    {\n      const relationship = graphFor(this._store).get(identifier, keyName);\n      ( true && !(relationship) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)(`You looked up the ${keyName} hasMany relationship for { type: ${identifier.type}, id: ${identifier.id || ''}, lid: ${identifier.lid} but no such relationship was found.`, relationship));\n      ( true && !(relationship.definition.kind === 'hasMany') && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)(`You looked up the ${keyName} hasMany relationship for { type: ${identifier.type}, id: ${identifier.id || ''}, lid: ${identifier.lid} but that relationship is a belongsTo.`, relationship.definition.kind === 'hasMany'));\n    }\n    const value = graphFor(this._store).getData(identifier, keyName);\n    if (value.data) {\n      results = [];\n      value.data.forEach(member => {\n        const inverseIdentifier = store.identifierCache.getOrCreateRecordIdentifier(member);\n        const cache = store.cache;\n        if (!cache.isDeleted(inverseIdentifier)) {\n          if (returnModeIsIds) {\n            results.push(inverseIdentifier.id);\n          } else {\n            results.push(store._fetchManager.createSnapshot(inverseIdentifier));\n          }\n        }\n      });\n    }\n\n    // we assign even if `undefined` so that we don't reprocess the relationship\n    // on next access. This works with the `keyName in` checks above.\n    if (returnModeIsIds) {\n      this._hasManyIds[keyName] = results;\n    } else {\n      this._hasManyRelationships[keyName] = results;\n    }\n    return results;\n  }\n\n  /**\n    Iterates through all the attributes of the model, calling the passed\n    function on each attribute.\n     Example\n     ```javascript\n    snapshot.eachAttribute(function(name, meta) {\n      // ...\n    });\n    ```\n     @method eachAttribute\n    @param {Function} callback the callback to execute\n    @param {Object} [binding] the value to which the callback's `this` should be bound\n    @public\n  */\n  eachAttribute(callback, binding) {\n    const attrDefs = this._store.getSchemaDefinitionService().attributesDefinitionFor(this.identifier);\n    Object.keys(attrDefs).forEach(key => {\n      callback.call(binding, key, attrDefs[key]);\n    });\n  }\n\n  /**\n    Iterates through all the relationships of the model, calling the passed\n    function on each relationship.\n     Example\n     ```javascript\n    snapshot.eachRelationship(function(name, relationship) {\n      // ...\n    });\n    ```\n     @method eachRelationship\n    @param {Function} callback the callback to execute\n    @param {Object} [binding] the value to which the callback's `this` should be bound\n    @public\n  */\n  eachRelationship(callback, binding) {\n    const relationshipDefs = this._store.getSchemaDefinitionService().relationshipsDefinitionFor(this.identifier);\n    Object.keys(relationshipDefs).forEach(key => {\n      callback.call(binding, key, relationshipDefs[key]);\n    });\n  }\n\n  /**\n    Serializes the snapshot using the serializer for the model.\n     Example\n     ```app/adapters/application.js\n    import Adapter from '@ember-data/adapter';\n     export default Adapter.extend({\n      createRecord(store, type, snapshot) {\n        let data = snapshot.serialize({ includeId: true });\n        let url = `/${type.modelName}`;\n         return fetch(url, {\n          method: 'POST',\n          body: data,\n        }).then((response) => response.json())\n      }\n    });\n    ```\n     @method serialize\n    @param {Object} options\n    @return {Object} an object whose values are primitive JSON values only\n    @public\n   */\n  serialize(options) {\n    upgradeStore(this._store);\n    const serializer = this._store.serializerFor(this.modelName);\n    ( true && !(serializer) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)(`Cannot serialize record, no serializer found`, serializer));\n    return serializer.serialize(this, options);\n  }\n}\nconst SaveOp = Symbol('SaveOp');\nclass FetchManager {\n  // fetches pending in the runloop, waiting to be coalesced\n\n  constructor(store) {\n    this._store = store;\n    // used to keep track of all the find requests that need to be coalesced\n    this._pendingFetch = new Map();\n    this.requestCache = store.getRequestStateService();\n    this.isDestroyed = false;\n  }\n  createSnapshot(identifier, options = {}) {\n    return new Snapshot(options, identifier, this._store);\n  }\n\n  /**\n    This method is called by `record.save`, and gets passed a\n    resolver for the promise that `record.save` returns.\n     It schedules saving to happen at the end of the run loop.\n     @internal\n  */\n  scheduleSave(identifier, options) {\n    const resolver = (0,_ember_data_request__WEBPACK_IMPORTED_MODULE_2__.createDeferred)();\n    const query = {\n      op: 'saveRecord',\n      recordIdentifier: identifier,\n      options\n    };\n    const queryRequest = {\n      data: [query]\n    };\n    const snapshot = this.createSnapshot(identifier, options);\n    const pendingSaveItem = {\n      snapshot: snapshot,\n      resolver: resolver,\n      identifier,\n      options,\n      queryRequest\n    };\n    const monitored = this.requestCache._enqueue(resolver.promise, pendingSaveItem.queryRequest);\n    _flushPendingSave(this._store, pendingSaveItem);\n    return monitored;\n  }\n  scheduleFetch(identifier, options, request) {\n    const query = {\n      op: 'findRecord',\n      recordIdentifier: identifier,\n      options\n    };\n    const queryRequest = {\n      data: [query]\n    };\n    const pendingFetch = this.getPendingFetch(identifier, options);\n    if (pendingFetch) {\n      return pendingFetch;\n    }\n    const modelName = identifier.type;\n    const resolver = (0,_ember_data_request__WEBPACK_IMPORTED_MODULE_2__.createDeferred)();\n    const pendingFetchItem = {\n      identifier,\n      resolver,\n      options,\n      queryRequest\n    };\n    const resolverPromise = resolver.promise;\n    const store = this._store;\n    const isInitialLoad = !store._instanceCache.recordIsLoaded(identifier); // we don't use isLoading directly because we are the request\n\n    const monitored = this.requestCache._enqueue(resolverPromise, pendingFetchItem.queryRequest);\n    let promise = monitored.then(payload => {\n      // ensure that regardless of id returned we assign to the correct record\n      if (payload.data && !Array.isArray(payload.data)) {\n        payload.data.lid = identifier.lid;\n      }\n\n      // additional data received in the payload\n      // may result in the merging of identifiers (and thus records)\n      const potentiallyNewIm = store._push(payload, options.reload);\n      if (potentiallyNewIm && !Array.isArray(potentiallyNewIm)) {\n        return potentiallyNewIm;\n      }\n      return identifier;\n    }, error => {\n      ( true && !(!store.isDestroyed) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)(`Async Leak Detected: Expected the store to not be destroyed`, !store.isDestroyed));\n      const cache = store.cache;\n      if (!cache || cache.isEmpty(identifier) || isInitialLoad) {\n        let isReleasable = true;\n        {\n          if (!cache) {\n            const graphFor = (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(__webpack_require__(/*! @ember-data/graph/-private */ \"../rewritten-packages/@ember-data/graph.4c9e27df/node_modules/@ember-data/graph/-private.js\")).graphFor;\n            const graph = graphFor(store);\n            isReleasable = graph.isReleasable(identifier);\n            if (!isReleasable) {\n              graph.unload(identifier, true);\n            }\n          }\n        }\n        if (cache || isReleasable) {\n          store._enableAsyncFlush = true;\n          store._instanceCache.unloadRecord(identifier);\n          store._enableAsyncFlush = null;\n        }\n      }\n      throw error;\n    });\n    if (this._pendingFetch.size === 0) {\n      void new Promise(resolve => setTimeout(resolve, 0)).then(() => {\n        this.flushAllPendingFetches();\n      });\n    }\n    const fetchesByType = this._pendingFetch;\n    let fetchesById = fetchesByType.get(modelName);\n    if (!fetchesById) {\n      fetchesById = new Map();\n      fetchesByType.set(modelName, fetchesById);\n    }\n    let requestsForIdentifier = fetchesById.get(identifier);\n    if (!requestsForIdentifier) {\n      requestsForIdentifier = [];\n      fetchesById.set(identifier, requestsForIdentifier);\n    }\n    requestsForIdentifier.push(pendingFetchItem);\n    {\n      if (!request.disableTestWaiter) {\n        const {\n          waitForPromise\n        } = (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(__webpack_require__(/*! @ember/test-waiters */ \"../rewritten-packages/@ember/test-waiters.2bac1e98/node_modules/@ember/test-waiters/index.js\"));\n        promise = waitForPromise(promise);\n      }\n    }\n    pendingFetchItem.promise = promise;\n    return promise;\n  }\n  getPendingFetch(identifier, options) {\n    const pendingFetches = this._pendingFetch.get(identifier.type)?.get(identifier);\n\n    // We already have a pending fetch for this\n    if (pendingFetches) {\n      const matchingPendingFetch = pendingFetches.find(fetch => isSameRequest(options, fetch.options));\n      if (matchingPendingFetch) {\n        return matchingPendingFetch.promise;\n      }\n    }\n  }\n  flushAllPendingFetches() {\n    if (this.isDestroyed) {\n      return;\n    }\n    const store = this._store;\n    this._pendingFetch.forEach((fetchItem, type) => _flushPendingFetchForType(store, fetchItem, type));\n    this._pendingFetch.clear();\n  }\n  fetchDataIfNeededForIdentifier(identifier, options = {}, request) {\n    // pre-loading will change the isEmpty value\n    const isEmpty = _isEmpty(this._store._instanceCache, identifier);\n    const isLoading = _isLoading(this._store._instanceCache, identifier);\n    let promise;\n    if (isEmpty) {\n      assertIdentifierHasId(identifier);\n      {\n        promise = this.scheduleFetch(identifier, Object.assign({}, options, {\n          reload: true\n        }), request);\n      }\n    } else if (isLoading) {\n      promise = this.getPendingFetch(identifier, options);\n      ( true && !(promise) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)(`Expected to find a pending request for a record in the loading state, but found none`, promise));\n    } else {\n      promise = Promise.resolve(identifier);\n    }\n    return promise;\n  }\n  destroy() {\n    this.isDestroyed = true;\n  }\n}\nfunction _isEmpty(instanceCache, identifier) {\n  const cache = instanceCache.cache;\n  if (!cache) {\n    return true;\n  }\n  const isNew = cache.isNew(identifier);\n  const isDeleted = cache.isDeleted(identifier);\n  const isEmpty = cache.isEmpty(identifier);\n  return (!isNew || isDeleted) && isEmpty;\n}\nfunction _isLoading(cache, identifier) {\n  const req = cache.store.getRequestStateService();\n  // const fulfilled = req.getLastRequestForRecord(identifier);\n  const isLoaded = cache.recordIsLoaded(identifier);\n  return !isLoaded &&\n  // fulfilled === null &&\n  req.getPendingRequestsForRecord(identifier).some(r => r.type === 'query');\n}\nfunction includesSatisfies(current, existing) {\n  // if we have no includes we are good\n  if (!current?.length) {\n    return true;\n  }\n\n  // if we are here we have includes,\n  // and if existing has no includes then we will need a new request\n  if (!existing?.length) {\n    return false;\n  }\n  const arrCurrent = (Array.isArray(current) ? current : current.split(',')).sort();\n  const arrExisting = (Array.isArray(existing) ? existing : existing.split(',')).sort();\n\n  // includes are identical\n  if (arrCurrent.join(',') === arrExisting.join(',')) {\n    return true;\n  }\n\n  // if all of current includes are in existing includes then we are good\n  // so if we find one that is not in existing then we need a new request\n  for (let i = 0; i < arrCurrent.length; i++) {\n    if (!arrExisting.includes(arrCurrent[i])) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction optionsSatisfies(current, existing) {\n  return !current || current === existing || Object.keys(current).length === 0;\n}\n\n// this function helps resolve whether we have a pending request that we should use instead\nfunction isSameRequest(options = {}, existingOptions = {}) {\n  return optionsSatisfies(options.adapterOptions, existingOptions.adapterOptions) && includesSatisfies(options.include, existingOptions.include);\n}\nfunction _findMany(store, adapter, modelName, snapshots) {\n  const modelClass = store.modelFor(modelName); // `adapter.findMany` gets the modelClass still\n  const promise = Promise.resolve().then(() => {\n    const ids = snapshots.map(s => s.id);\n    ( true && !(ids.every(v => v !== null)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)(`Cannot fetch a record without an id`, ids.every(v => v !== null))); // eslint-disable-next-line @typescript-eslint/unbound-method\n    ( true && !(adapter.findMany) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)(`Expected this adapter to implement findMany for coalescing`, adapter.findMany));\n    const ret = adapter.findMany(store, modelClass, ids, snapshots);\n    ( true && !(ret !== undefined) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)('adapter.findMany returned undefined, this was very likely a mistake', ret !== undefined));\n    return ret;\n  });\n  return promise.then(adapterPayload => {\n    ( true && !(!!payloadIsNotBlank(adapterPayload)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)(`You made a 'findMany' request for '${modelName}' records with ids '[${snapshots.map(s => s.id).join(',')}]', but the adapter's response did not have any data`, !!payloadIsNotBlank(adapterPayload)));\n    const serializer = store.serializerFor(modelName);\n    const payload = normalizeResponseHelper(serializer, store, modelClass, adapterPayload, null, 'findMany');\n    return payload;\n  });\n}\nfunction rejectFetchedItems(fetchMap, snapshots, error) {\n  for (let i = 0, l = snapshots.length; i < l; i++) {\n    const snapshot = snapshots[i];\n    const pair = fetchMap.get(snapshot);\n    if (pair) {\n      pair.resolver.reject(error || new Error(`Expected: '<${snapshot.modelName}:${snapshot.id}>' to be present in the adapter provided payload, but it was not found.`));\n    }\n  }\n}\nfunction handleFoundRecords(store, fetchMap, snapshots, coalescedPayload) {\n  /*\n    It is possible that the same ID is included multiple times\n    via multiple snapshots. This happens when more than one\n    options hash was supplied, each of which must be uniquely\n    accounted for.\n     However, since we can't map from response to a specific\n    options object, we resolve all snapshots by id with\n    the first response we see.\n  */\n  const snapshotsById = new Map();\n  for (let i = 0; i < snapshots.length; i++) {\n    const id = snapshots[i].id;\n    let snapshotGroup = snapshotsById.get(id);\n    if (!snapshotGroup) {\n      snapshotGroup = [];\n      snapshotsById.set(id, snapshotGroup);\n    }\n    snapshotGroup.push(snapshots[i]);\n  }\n  const included = Array.isArray(coalescedPayload.included) ? coalescedPayload.included : [];\n\n  // resolve found records\n  const resources = coalescedPayload.data;\n  for (let i = 0, l = resources.length; i < l; i++) {\n    const resource = resources[i];\n    const snapshotGroup = snapshotsById.get(resource.id);\n    snapshotsById.delete(resource.id);\n    if (!snapshotGroup) {\n      // TODO consider whether this should be a deprecation/assertion\n      included.push(resource);\n    } else {\n      snapshotGroup.forEach(snapshot => {\n        const pair = fetchMap.get(snapshot);\n        const resolver = pair.resolver;\n        resolver.resolve({\n          data: resource\n        });\n      });\n    }\n  }\n  if (included.length > 0) {\n    store._push({\n      data: null,\n      included\n    }, true);\n  }\n  if (snapshotsById.size === 0) {\n    return;\n  }\n\n  // reject missing records\n  const rejected = [];\n  snapshotsById.forEach(snapshotArray => {\n    rejected.push(...snapshotArray);\n  });\n  ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.warn)('Ember Data expected to find records with the following ids in the adapter response from findMany but they were missing: [ \"' + [...snapshotsById.values()].map(r => r[0].id).join('\", \"') + '\" ]', {\n    id: 'ds.store.missing-records-from-adapter'\n  }));\n  rejectFetchedItems(fetchMap, rejected);\n}\nfunction _fetchRecord(store, adapter, fetchItem) {\n  const identifier = fetchItem.identifier;\n  const modelName = identifier.type;\n  ( true && !(adapter) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)(`You tried to find a record but you have no adapter (for ${modelName})`, adapter));\n  ( true && !(typeof adapter.findRecord === 'function') && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)(`You tried to find a record but your adapter (for ${modelName}) does not implement 'findRecord'`, typeof adapter.findRecord === 'function'));\n  const snapshot = store._fetchManager.createSnapshot(identifier, fetchItem.options);\n  const klass = store.modelFor(identifier.type);\n  const id = identifier.id;\n  let promise = Promise.resolve().then(() => {\n    return adapter.findRecord(store, klass, identifier.id, snapshot);\n  });\n  promise = promise.then(adapterPayload => {\n    ( true && !(!(store.isDestroyed || store.isDestroying)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)(`Async Leak Detected: Expected the store to not be destroyed`, !(store.isDestroyed || store.isDestroying)));\n    ( true && !(!!payloadIsNotBlank(adapterPayload)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)(`You made a 'findRecord' request for a '${modelName}' with id '${id}', but the adapter's response did not have any data`, !!payloadIsNotBlank(adapterPayload)));\n    const serializer = store.serializerFor(modelName);\n    const payload = normalizeResponseHelper(serializer, store, klass, adapterPayload, id, 'findRecord');\n    ( true && !(!Array.isArray(payload.data)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)(`Ember Data expected the primary data returned from a 'findRecord' response to be an object but instead it found an array.`, !Array.isArray(payload.data)));\n    ( true && !('data' in payload && payload.data !== null && typeof payload.data === 'object') && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)(`The 'findRecord' request for ${modelName}:${id} resolved indicating success but contained no primary data. To indicate a 404 not found you should either reject the promise returned by the adapter's findRecord method or throw a NotFoundError.`, 'data' in payload && payload.data !== null && typeof payload.data === 'object'));\n    ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.warn)(`You requested a record of type '${modelName}' with id '${id}' but the adapter returned a payload with primary data having an id of '${payload.data.id}'. Use 'store.findRecord()' when the requested id is the same as the one returned by the adapter. In other cases use 'store.queryRecord()' instead.`, (0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_0__.coerceId)(payload.data.id) === (0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_0__.coerceId)(id), {\n      id: 'ds.store.findRecord.id-mismatch'\n    }));\n    return payload;\n  });\n  fetchItem.resolver.resolve(promise);\n}\nfunction _processCoalescedGroup(store, fetchMap, group, adapter, modelName) {\n  if (group.length > 1) {\n    _findMany(store, adapter, modelName, group).then(payloads => {\n      handleFoundRecords(store, fetchMap, group, payloads);\n    }).catch(error => {\n      rejectFetchedItems(fetchMap, group, error);\n    });\n  } else if (group.length === 1) {\n    _fetchRecord(store, adapter, fetchMap.get(group[0]));\n  } else {\n    ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)(\"You cannot return an empty array from adapter's method groupRecordsForFindMany\", false));\n  }\n}\nfunction _flushPendingFetchForType(store, pendingFetchMap, modelName) {\n  const adapter = store.adapterFor(modelName);\n  const shouldCoalesce = !!adapter.findMany && adapter.coalesceFindRequests;\n  if (shouldCoalesce) {\n    const pendingFetchItems = [];\n    pendingFetchMap.forEach((requestsForIdentifier, identifier) => {\n      if (requestsForIdentifier.length > 1) {\n        return;\n      }\n\n      // remove this entry from the map so it's not processed again\n      pendingFetchMap.delete(identifier);\n      pendingFetchItems.push(requestsForIdentifier[0]);\n    });\n    const totalItems = pendingFetchItems.length;\n    if (totalItems > 1) {\n      const snapshots = new Array(totalItems);\n      const fetchMap = new Map();\n      for (let i = 0; i < totalItems; i++) {\n        const fetchItem = pendingFetchItems[i];\n        snapshots[i] = store._fetchManager.createSnapshot(fetchItem.identifier, fetchItem.options);\n        fetchMap.set(snapshots[i], fetchItem);\n      }\n      let groups;\n      if (adapter.groupRecordsForFindMany) {\n        groups = adapter.groupRecordsForFindMany(store, snapshots);\n      } else {\n        groups = [snapshots];\n      }\n      for (let i = 0, l = groups.length; i < l; i++) {\n        _processCoalescedGroup(store, fetchMap, groups[i], adapter, modelName);\n      }\n    } else if (totalItems === 1) {\n      _fetchRecord(store, adapter, pendingFetchItems[0]);\n    }\n  }\n  pendingFetchMap.forEach(pendingFetchItems => {\n    pendingFetchItems.forEach(pendingFetchItem => {\n      _fetchRecord(store, adapter, pendingFetchItem);\n    });\n  });\n}\nfunction _flushPendingSave(store, pending) {\n  const {\n    snapshot,\n    resolver,\n    identifier,\n    options\n  } = pending;\n  const adapter = store.adapterFor(identifier.type);\n  const operation = options[SaveOp];\n  const modelName = snapshot.modelName;\n  const modelClass = store.modelFor(modelName);\n  ( true && !(adapter) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)(`You tried to update a record but you have no adapter (for ${modelName})`, adapter));\n  ( true && !(typeof adapter[operation] === 'function') && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)(`You tried to update a record but your adapter (for ${modelName}) does not implement '${operation}'`, typeof adapter[operation] === 'function'));\n  let promise = Promise.resolve().then(() => adapter[operation](store, modelClass, snapshot));\n  const serializer = store.serializerFor(modelName);\n  ( true && !(promise !== undefined) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)(`Your adapter's '${operation}' method must return a value, but it returned 'undefined'`, promise !== undefined));\n  promise = promise.then(adapterPayload => {\n    if (adapterPayload) {\n      return normalizeResponseHelper(serializer, store, modelClass, adapterPayload, snapshot.id, operation);\n    }\n  });\n  resolver.resolve(promise);\n}\n\n/**\n * Utilities - often temporary - for maintaining backwards compatibility with\n * older parts of EmberData.\n *\n  @module @ember-data/legacy-compat\n  @main @ember-data/legacy-compat\n*/\nfunction upgradeStore(store) {}\n\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@ember-data/legacy-compat.e84b6420/node_modules/@ember-data/legacy-compat/-private-1aicprWG.js?");

/***/ }),

/***/ "../rewritten-packages/@ember-data/legacy-compat.e84b6420/node_modules/@ember-data/legacy-compat/-private.js":
/*!*******************************************************************************************************************!*\
  !*** ../rewritten-packages/@ember-data/legacy-compat.e84b6420/node_modules/@ember-data/legacy-compat/-private.js ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FetchManager: () => (/* reexport safe */ _private_1aicprWG__WEBPACK_IMPORTED_MODULE_0__.F),\n/* harmony export */   SaveOp: () => (/* reexport safe */ _private_1aicprWG__WEBPACK_IMPORTED_MODULE_0__.S),\n/* harmony export */   Snapshot: () => (/* reexport safe */ _private_1aicprWG__WEBPACK_IMPORTED_MODULE_0__.c),\n/* harmony export */   SnapshotRecordArray: () => (/* reexport safe */ _private_1aicprWG__WEBPACK_IMPORTED_MODULE_0__.b),\n/* harmony export */   upgradeStore: () => (/* reexport safe */ _private_1aicprWG__WEBPACK_IMPORTED_MODULE_0__.u)\n/* harmony export */ });\n/* harmony import */ var _private_1aicprWG__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./-private-1aicprWG */ \"../rewritten-packages/@ember-data/legacy-compat.e84b6420/node_modules/@ember-data/legacy-compat/-private-1aicprWG.js\");\n\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@ember-data/legacy-compat.e84b6420/node_modules/@ember-data/legacy-compat/-private.js?");

/***/ }),

/***/ "../rewritten-packages/@ember-data/legacy-compat.e84b6420/node_modules/@ember-data/legacy-compat/index.js":
/*!****************************************************************************************************************!*\
  !*** ../rewritten-packages/@ember-data/legacy-compat.e84b6420/node_modules/@ember-data/legacy-compat/index.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LegacyNetworkHandler: () => (/* binding */ LegacyNetworkHandler),\n/* harmony export */   adapterFor: () => (/* binding */ adapterFor),\n/* harmony export */   cleanup: () => (/* binding */ cleanup),\n/* harmony export */   normalize: () => (/* binding */ normalize),\n/* harmony export */   pushPayload: () => (/* binding */ pushPayload),\n/* harmony export */   serializeRecord: () => (/* binding */ serializeRecord),\n/* harmony export */   serializerFor: () => (/* binding */ serializerFor)\n/* harmony export */ });\n/* harmony import */ var _ember_application__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/application */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fapplication&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_application__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_application__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember/debug */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fdebug&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_ember_debug__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _ember_data_store__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ember-data/store */ \"../rewritten-packages/@ember-data/store.a4360448/node_modules/@ember-data/store/index.js\");\n/* harmony import */ var _ember_data_store_private__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ember-data/store/-private */ \"../rewritten-packages/@ember-data/store.a4360448/node_modules/@ember-data/store/-private.js\");\n/* harmony import */ var _private_1aicprWG__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./-private-1aicprWG */ \"../rewritten-packages/@ember-data/legacy-compat.e84b6420/node_modules/@ember-data/legacy-compat/-private-1aicprWG.js\");\n/* harmony import */ var _embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../../../@embroider/macros/src/addon/es-compat2 */ \"../../@embroider/macros/src/addon/es-compat2.js\");\n\n\n\n\n\n\nfunction _findHasMany(adapter, store, identifier, link, relationship, options) {\n  let promise = Promise.resolve().then(() => {\n    const snapshot = store._fetchManager.createSnapshot(identifier, options);\n    const useLink = !link || typeof link === 'string';\n    const relatedLink = useLink ? link : link.href;\n    return adapter.findHasMany(store, snapshot, relatedLink, relationship);\n  });\n  promise = promise.then(adapterPayload => {\n    ( true && !((0,_private_1aicprWG__WEBPACK_IMPORTED_MODULE_4__.p)(adapterPayload)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)(`You made a 'findHasMany' request for a ${identifier.type}'s '${relationship.name}' relationship, using link '${link}' , but the adapter's response did not have any data`, (0,_private_1aicprWG__WEBPACK_IMPORTED_MODULE_4__.p)(adapterPayload)));\n    const modelClass = store.modelFor(relationship.type);\n    const serializer = store.serializerFor(relationship.type);\n    let payload = (0,_private_1aicprWG__WEBPACK_IMPORTED_MODULE_4__.n)(serializer, store, modelClass, adapterPayload, null, 'findHasMany');\n    ( true && !('data' in payload && Array.isArray(payload.data)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)(`fetched the hasMany relationship '${relationship.name}' for ${identifier.type}:${identifier.id} with link '${link}', but no data member is present in the response. If no data exists, the response should set { data: [] }`, 'data' in payload && Array.isArray(payload.data)));\n    payload = syncRelationshipDataFromLink(store, payload, identifier, relationship);\n    return store._push(payload, true);\n  }, null, `DS: Extract payload of '${identifier.type}' : hasMany '${relationship.type}'`);\n  return promise;\n}\nfunction _findBelongsTo(store, identifier, link, relationship, options) {\n  let promise = Promise.resolve().then(() => {\n    const adapter = store.adapterFor(identifier.type);\n    ( true && !(adapter) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)(`You tried to load a belongsTo relationship but you have no adapter (for ${identifier.type})`, adapter));\n    ( true && !(typeof adapter.findBelongsTo === 'function') && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)(`You tried to load a belongsTo relationship from a specified 'link' in the original payload but your adapter does not implement 'findBelongsTo'`, typeof adapter.findBelongsTo === 'function'));\n    const snapshot = store._fetchManager.createSnapshot(identifier, options);\n    const useLink = !link || typeof link === 'string';\n    const relatedLink = useLink ? link : link.href;\n    return adapter.findBelongsTo(store, snapshot, relatedLink, relationship);\n  });\n  promise = promise.then(adapterPayload => {\n    const modelClass = store.modelFor(relationship.type);\n    const serializer = store.serializerFor(relationship.type);\n    let payload = (0,_private_1aicprWG__WEBPACK_IMPORTED_MODULE_4__.n)(serializer, store, modelClass, adapterPayload, null, 'findBelongsTo');\n    ( true && !('data' in payload && (payload.data === null || typeof payload.data === 'object' && !Array.isArray(payload.data))) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)(`fetched the belongsTo relationship '${relationship.name}' for ${identifier.type}:${identifier.id} with link '${link}', but no data member is present in the response. If no data exists, the response should set { data: null }`, 'data' in payload && (payload.data === null || typeof payload.data === 'object' && !Array.isArray(payload.data))));\n    if (!payload.data && !payload.links && !payload.meta) {\n      return null;\n    }\n    payload = syncRelationshipDataFromLink(store, payload, identifier, relationship);\n    return store._push(payload, true);\n  }, null, `DS: Extract payload of ${identifier.type} : ${relationship.type}`);\n  return promise;\n}\n\n// sync\n// iterate over records in payload.data\n// for each record\n//   assert that record.relationships[inverse] is either undefined (so we can fix it)\n//     or provide a data: {id, type} that matches the record that requested it\n//   return the relationship data for the parent\nfunction syncRelationshipDataFromLink(store, payload, parentIdentifier, relationship) {\n  // ensure the right hand side (incoming payload) points to the parent record that\n  // requested this relationship\n  const relationshipData = payload.data ? (0,_private_1aicprWG__WEBPACK_IMPORTED_MODULE_4__.i)(payload.data, (data, index) => {\n    const {\n      id,\n      type\n    } = data;\n    ensureRelationshipIsSetToParent(data, parentIdentifier, store, relationship, index);\n    return {\n      id,\n      type\n    };\n  }) : null;\n  const relatedDataHash = {};\n  if ('meta' in payload) {\n    relatedDataHash.meta = payload.meta;\n  }\n  if ('links' in payload) {\n    relatedDataHash.links = payload.links;\n  }\n  if ('data' in payload) {\n    relatedDataHash.data = relationshipData;\n  }\n\n  // now, push the left hand side (the parent record) to ensure things are in sync, since\n  // the payload will be pushed with store._push\n  const parentPayload = {\n    id: parentIdentifier.id,\n    type: parentIdentifier.type,\n    relationships: {\n      [relationship.name]: relatedDataHash\n    }\n  };\n  if (!Array.isArray(payload.included)) {\n    payload.included = [];\n  }\n  payload.included.push(parentPayload);\n  return payload;\n}\nfunction ensureRelationshipIsSetToParent(payload, parentIdentifier, store, parentRelationship, index) {\n  const {\n    id,\n    type\n  } = payload;\n  if (!payload.relationships) {\n    payload.relationships = {};\n  }\n  const {\n    relationships\n  } = payload;\n  const inverse = getInverse(store, parentIdentifier, parentRelationship, type);\n  if (inverse) {\n    const {\n      inverseKey,\n      kind\n    } = inverse;\n    const relationshipData = relationships[inverseKey] && relationships[inverseKey].data;\n    {\n      if (typeof relationshipData !== 'undefined' && !relationshipDataPointsToParent(relationshipData, parentIdentifier)) {\n        const inspect = function inspect(thing) {\n          return `'${JSON.stringify(thing)}'`;\n        };\n        const quotedType = inspect(type);\n        const quotedInverse = inspect(inverseKey);\n        const expected = inspect({\n          id: parentIdentifier.id,\n          type: parentIdentifier.type\n        });\n        const expectedModel = `${parentIdentifier.type}:${parentIdentifier.id}`;\n        const got = inspect(relationshipData);\n        const prefix = typeof index === 'number' ? `data[${index}]` : `data`;\n        const path = `${prefix}.relationships.${inverseKey}.data`;\n        const other = relationshipData ? `<${relationshipData.type}:${relationshipData.id}>` : null;\n        const relationshipFetched = `${expectedModel}.${parentRelationship.kind}(\"${parentRelationship.name}\")`;\n        const includedRecord = `<${type}:${id}>`;\n        const message = [`Encountered mismatched relationship: Ember Data expected ${path} in the payload from ${relationshipFetched} to include ${expected} but got ${got} instead.\\n`, `The ${includedRecord} record loaded at ${prefix} in the payload specified ${other} as its ${quotedInverse}, but should have specified ${expectedModel} (the record the relationship is being loaded from) as its ${quotedInverse} instead.`, `This could mean that the response for ${relationshipFetched} may have accidentally returned ${quotedType} records that aren't related to ${expectedModel} and could be related to a different ${parentIdentifier.type} record instead.`, `Ember Data has corrected the ${includedRecord} record's ${quotedInverse} relationship to ${expectedModel} so that ${relationshipFetched} will include ${includedRecord}.`, `Please update the response from the server or change your serializer to either ensure that the response for only includes ${quotedType} records that specify ${expectedModel} as their ${quotedInverse}, or omit the ${quotedInverse} relationship from the response.`].join('\\n');\n        ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)(message));\n      }\n    }\n    if (kind !== 'hasMany' || typeof relationshipData !== 'undefined') {\n      relationships[inverseKey] = relationships[inverseKey] || {};\n      relationships[inverseKey].data = fixRelationshipData(relationshipData, kind, parentIdentifier);\n    }\n  }\n}\nfunction inverseForRelationship(store, identifier, key) {\n  const definition = store.getSchemaDefinitionService().relationshipsDefinitionFor(identifier)[key];\n  if (!definition) {\n    return null;\n  }\n  ( true && !(definition.options?.inverse === null || typeof definition.options?.inverse === 'string' && definition.options.inverse.length > 0) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)(`Expected the relationship defintion to specify the inverse type or null.`, definition.options?.inverse === null || typeof definition.options?.inverse === 'string' && definition.options.inverse.length > 0));\n  return definition.options.inverse;\n}\nfunction getInverse(store, parentIdentifier, parentRelationship, type) {\n  const {\n    name: lhs_relationshipName\n  } = parentRelationship;\n  const {\n    type: parentType\n  } = parentIdentifier;\n  const inverseKey = inverseForRelationship(store, {\n    type: parentType\n  }, lhs_relationshipName);\n  if (inverseKey) {\n    const definition = store.getSchemaDefinitionService().relationshipsDefinitionFor({\n      type\n    });\n    const {\n      kind\n    } = definition[inverseKey];\n    return {\n      inverseKey,\n      kind\n    };\n  }\n}\nfunction relationshipDataPointsToParent(relationshipData, identifier) {\n  if (relationshipData === null) {\n    return false;\n  }\n  if (Array.isArray(relationshipData)) {\n    if (relationshipData.length === 0) {\n      return false;\n    }\n    for (let i = 0; i < relationshipData.length; i++) {\n      const entry = relationshipData[i];\n      if (validateRelationshipEntry(entry, identifier)) {\n        return true;\n      }\n    }\n  } else {\n    return validateRelationshipEntry(relationshipData, identifier);\n  }\n  return false;\n}\nfunction fixRelationshipData(relationshipData, relationshipKind, {\n  id,\n  type\n}) {\n  const parentRelationshipData = {\n    id,\n    type\n  };\n  let payload;\n  if (relationshipKind === 'hasMany') {\n    payload = relationshipData || [];\n    if (relationshipData) {\n      // these arrays could be massive so this is better than filter\n      // Note: this is potentially problematic if type/id are not in the\n      // same state of normalization.\n      const found = relationshipData.find(v => {\n        return v.type === parentRelationshipData.type && v.id === parentRelationshipData.id;\n      });\n      if (!found) {\n        payload.push(parentRelationshipData);\n      }\n    } else {\n      payload.push(parentRelationshipData);\n    }\n  } else {\n    payload = relationshipData || {};\n    Object.assign(payload, parentRelationshipData);\n  }\n  return payload;\n}\nfunction validateRelationshipEntry({\n  id\n}, {\n  id: parentModelID\n}) {\n  return id && id.toString() === parentModelID;\n}\nconst PotentialLegacyOperations = new Set(['findRecord', 'findAll', 'query', 'queryRecord', 'findBelongsTo', 'findHasMany', 'updateRecord', 'createRecord', 'deleteRecord']);\nconst LegacyNetworkHandler = {\n  request(context, next) {\n    // if we are not a legacy request, move on\n    if (context.request.url || !context.request.op || !PotentialLegacyOperations.has(context.request.op)) {\n      return next(context.request);\n    }\n    const {\n      store\n    } = context.request;\n    if (!store._fetchManager) {\n      store._fetchManager = new _private_1aicprWG__WEBPACK_IMPORTED_MODULE_4__.F(store);\n    }\n    switch (context.request.op) {\n      case 'findRecord':\n        return findRecord(context);\n      case 'findAll':\n        return findAll(context);\n      case 'query':\n        return query(context);\n      case 'queryRecord':\n        return queryRecord(context);\n      case 'findBelongsTo':\n        return findBelongsTo(context);\n      case 'findHasMany':\n        return findHasMany(context);\n      case 'updateRecord':\n        return saveRecord(context);\n      case 'createRecord':\n        return saveRecord(context);\n      case 'deleteRecord':\n        return saveRecord(context);\n      default:\n        return next(context.request);\n    }\n  }\n};\nfunction findBelongsTo(context) {\n  const {\n    store,\n    data,\n    records: identifiers\n  } = context.request;\n  const {\n    options,\n    record,\n    links,\n    useLink,\n    field\n  } = data;\n  const identifier = identifiers?.[0];\n\n  // short circuit if we are already loading\n  const pendingRequest = identifier && store._fetchManager.getPendingFetch(identifier, options);\n  if (pendingRequest) {\n    return pendingRequest;\n  }\n  if (useLink) {\n    ( true && !(links && links.related) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)(`Expected a related link when calling store.findBelongsTo, found ${String(links)}`, links && links.related));\n    return _findBelongsTo(store, record, links.related, field, options);\n  }\n  ( true && !(Array.isArray(identifiers) && identifiers.length === 1) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)(`Expected an identifier`, Array.isArray(identifiers) && identifiers.length === 1));\n  const manager = store._fetchManager;\n  (0,_private_1aicprWG__WEBPACK_IMPORTED_MODULE_4__.a)(identifier);\n  return options.reload ? manager.scheduleFetch(identifier, options, context.request) : manager.fetchDataIfNeededForIdentifier(identifier, options, context.request);\n}\nfunction findHasMany(context) {\n  const {\n    store,\n    data,\n    records: identifiers\n  } = context.request;\n  const {\n    options,\n    record,\n    links,\n    useLink,\n    field\n  } = data;\n\n  // link case\n  if (useLink) {\n    const adapter = store.adapterFor(record.type);\n    /*\n    If a relationship was originally populated by the adapter as a link\n    (as opposed to a list of IDs), this method is called when the\n    relationship is fetched.\n     The link (which is usually a URL) is passed through unchanged, so the\n    adapter can make whatever request it wants.\n     The usual use-case is for the server to register a URL as a link, and\n    then use that URL in the future to make a request for the relationship.\n    */\n    ( true && !(adapter) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)(`You tried to load a hasMany relationship but you have no adapter (for ${record.type})`, adapter));\n    ( true && !(typeof adapter.findHasMany === 'function') && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)(`You tried to load a hasMany relationship from a specified 'link' in the original payload but your adapter does not implement 'findHasMany'`, typeof adapter.findHasMany === 'function'));\n    ( true && !(links && links.related) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)(`Expected a related link when calling store.findhasMany, found ${String(links)}`, links && links.related));\n    return _findHasMany(adapter, store, record, links.related, field, options);\n  }\n\n  // identifiers case\n  ( true && !(Array.isArray(identifiers)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)(`Expected an array of identifiers to fetch`, Array.isArray(identifiers)));\n  const fetches = new Array(identifiers.length);\n  const manager = store._fetchManager;\n  for (let i = 0; i < identifiers.length; i++) {\n    const identifier = identifiers[i];\n    // TODO we probably can be lenient here and return from cache for the isNew case\n    (0,_private_1aicprWG__WEBPACK_IMPORTED_MODULE_4__.a)(identifier);\n    fetches[i] = options.reload ? manager.scheduleFetch(identifier, options, context.request) : manager.fetchDataIfNeededForIdentifier(identifier, options, context.request);\n  }\n  return Promise.all(fetches);\n}\nfunction saveRecord(context) {\n  const {\n    store,\n    data,\n    op: operation\n  } = context.request;\n  const {\n    options,\n    record: identifier\n  } = data;\n  const saveOptions = Object.assign({\n    [_private_1aicprWG__WEBPACK_IMPORTED_MODULE_4__.S]: operation\n  }, options);\n  const fetchManagerPromise = store._fetchManager.scheduleSave(identifier, saveOptions);\n  return fetchManagerPromise.then(payload => {\n    let result;\n    store._join(() => {\n      // @ts-expect-error we don't have access to a response in legacy\n      result = store.cache.didCommit(identifier, {\n        request: context.request,\n        content: payload\n      });\n    });\n\n    // blatantly lie if we were a createRecord request\n    // to give some semblance of cache-control to the\n    // lifetimes service while legacy is still around\n    if (store.lifetimes?.didRequest && operation === 'createRecord') {\n      store.lifetimes.didRequest(context.request, {\n        status: 201\n      }, null, store);\n    }\n    return store.peekRecord(result.data);\n  }).catch(e => {\n    let err = e;\n    if (!e) {\n      err = new Error(`Unknown Error Occurred During Request`);\n    } else if (typeof e === 'string') {\n      err = new Error(e);\n    }\n    adapterDidInvalidate(store, identifier, err);\n    throw err;\n  });\n}\nfunction adapterDidInvalidate(store, identifier, error) {\n  if (error && error.isAdapterError === true && error.code === 'InvalidError') {\n    const serializer = store.serializerFor(identifier.type);\n\n    // TODO @deprecate extractErrors being called\n    // TODO remove extractErrors from the default serializers.\n    if (serializer && typeof serializer.extractErrors === 'function') {\n      const errorsHash = serializer.extractErrors(store, store.modelFor(identifier.type), error, identifier.id);\n      error.errors = errorsHashToArray(errorsHash);\n    }\n  }\n  const cache = store.cache;\n  if (error.errors) {\n    ( true && !(typeof cache.getErrors === 'function') && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)(`Expected the cache in use by resource ${String(identifier)} to have a getErrors(identifier) method for retreiving errors.`, typeof cache.getErrors === 'function'));\n    let jsonApiErrors = error.errors;\n    if (jsonApiErrors.length === 0) {\n      jsonApiErrors = [{\n        title: 'Invalid Error',\n        detail: '',\n        source: {\n          pointer: '/data'\n        }\n      }];\n    }\n    cache.commitWasRejected(identifier, jsonApiErrors);\n  } else {\n    cache.commitWasRejected(identifier);\n  }\n}\nfunction makeArray(value) {\n  return Array.isArray(value) ? value : [value];\n}\nconst PRIMARY_ATTRIBUTE_KEY = 'base';\nfunction errorsHashToArray(errors) {\n  const out = [];\n  if (errors) {\n    Object.keys(errors).forEach(key => {\n      const messages = makeArray(errors[key]);\n      for (let i = 0; i < messages.length; i++) {\n        let title = 'Invalid Attribute';\n        let pointer = `/data/attributes/${key}`;\n        if (key === PRIMARY_ATTRIBUTE_KEY) {\n          title = 'Invalid Document';\n          pointer = `/data`;\n        }\n        out.push({\n          title: title,\n          detail: messages[i],\n          source: {\n            pointer: pointer\n          }\n        });\n      }\n    });\n  }\n  return out;\n}\nfunction findRecord(context) {\n  const {\n    store,\n    data\n  } = context.request;\n  const {\n    record: identifier,\n    options\n  } = data;\n  let promise;\n\n  // if not loaded start loading\n  if (!store._instanceCache.recordIsLoaded(identifier)) {\n    promise = store._fetchManager.fetchDataIfNeededForIdentifier(identifier, options, context.request);\n\n    // Refetch if the reload option is passed\n  } else if (options.reload) {\n    (0,_private_1aicprWG__WEBPACK_IMPORTED_MODULE_4__.a)(identifier);\n    promise = store._fetchManager.scheduleFetch(identifier, options, context.request);\n  } else {\n    let snapshot = null;\n    const adapter = store.adapterFor(identifier.type);\n\n    // Refetch the record if the adapter thinks the record is stale\n    if (typeof options.reload === 'undefined' && adapter.shouldReloadRecord && adapter.shouldReloadRecord(store, snapshot = store._fetchManager.createSnapshot(identifier, options))) {\n      (0,_private_1aicprWG__WEBPACK_IMPORTED_MODULE_4__.a)(identifier);\n      {\n        promise = store._fetchManager.scheduleFetch(identifier, Object.assign({}, options, {\n          reload: true\n        }), context.request);\n      }\n    } else {\n      // Trigger the background refetch if backgroundReload option is passed\n      if (options.backgroundReload !== false && (options.backgroundReload || !adapter.shouldBackgroundReloadRecord || adapter.shouldBackgroundReloadRecord(store, snapshot = snapshot || store._fetchManager.createSnapshot(identifier, options)))) {\n        (0,_private_1aicprWG__WEBPACK_IMPORTED_MODULE_4__.a)(identifier);\n        {\n          void store._fetchManager.scheduleFetch(identifier, Object.assign({}, options, {\n            backgroundReload: true\n          }), context.request);\n        }\n      }\n\n      // Return the cached record\n      promise = Promise.resolve(identifier);\n    }\n  }\n  return promise.then(i => store.peekRecord(i));\n}\nfunction findAll(context) {\n  const {\n    store,\n    data\n  } = context.request;\n  const {\n    type,\n    options\n  } = data;\n  const adapter = store.adapterFor(type);\n  ( true && !(adapter) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)(`You tried to load all records but you have no adapter (for ${type})`, adapter));\n  ( true && !(typeof adapter.findAll === 'function') && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)(`You tried to load all records but your adapter does not implement 'findAll'`, typeof adapter.findAll === 'function')); // avoid initializing the liveArray just to set `isUpdating`\n  const maybeRecordArray = store.recordArrayManager._live.get(type);\n  const snapshotArray = new _private_1aicprWG__WEBPACK_IMPORTED_MODULE_4__.b(store, type, options);\n  const shouldReload = options.reload || options.reload !== false && (adapter.shouldReloadAll && adapter.shouldReloadAll(store, snapshotArray) || !adapter.shouldReloadAll && snapshotArray.length === 0);\n  let fetch;\n  if (shouldReload) {\n    maybeRecordArray && (maybeRecordArray.isUpdating = true);\n    fetch = _findAll(adapter, store, type, snapshotArray, context.request, true);\n  } else {\n    fetch = Promise.resolve(store.peekAll(type));\n    if (options.backgroundReload || options.backgroundReload !== false && (!adapter.shouldBackgroundReloadAll || adapter.shouldBackgroundReloadAll(store, snapshotArray))) {\n      maybeRecordArray && (maybeRecordArray.isUpdating = true);\n      void _findAll(adapter, store, type, snapshotArray, context.request, false);\n    }\n  }\n  return fetch;\n}\nfunction _findAll(adapter, store, type, snapshotArray, request, isAsyncFlush) {\n  const schema = store.modelFor(type);\n  let promise = Promise.resolve().then(() => adapter.findAll(store, schema, null, snapshotArray));\n  promise = promise.then(adapterPayload => {\n    ( true && !((0,_private_1aicprWG__WEBPACK_IMPORTED_MODULE_4__.p)(adapterPayload)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)(`You made a 'findAll' request for '${type}' records, but the adapter's response did not have any data`, (0,_private_1aicprWG__WEBPACK_IMPORTED_MODULE_4__.p)(adapterPayload)));\n    const serializer = store.serializerFor(type);\n    const payload = (0,_private_1aicprWG__WEBPACK_IMPORTED_MODULE_4__.n)(serializer, store, schema, adapterPayload, null, 'findAll');\n    store._push(payload, isAsyncFlush);\n    snapshotArray._recordArray.isUpdating = false;\n    return snapshotArray._recordArray;\n  });\n  {\n    if (!request.disableTestWaiter) {\n      const {\n        waitForPromise\n      } = (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(__webpack_require__(/*! @ember/test-waiters */ \"../rewritten-packages/@ember/test-waiters.2bac1e98/node_modules/@ember/test-waiters/index.js\"));\n      promise = waitForPromise(promise);\n    }\n  }\n  return promise;\n}\nfunction query(context) {\n  const {\n    store,\n    data\n  } = context.request;\n  let {\n    options\n  } = data;\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  const {\n    type,\n    query\n  } = data;\n  const adapter = store.adapterFor(type);\n  ( true && !(adapter) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)(`You tried to make a query but you have no adapter (for ${type})`, adapter));\n  ( true && !(typeof adapter.query === 'function') && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)(`You tried to make a query but your adapter does not implement 'query'`, typeof adapter.query === 'function'));\n  const recordArray = options._recordArray || store.recordArrayManager.createArray({\n    type,\n    query\n  });\n  {\n    options = Object.assign({}, options);\n    delete options._recordArray;\n  }\n  const schema = store.modelFor(type);\n  const promise = Promise.resolve().then(() => adapter.query(store, schema, query, recordArray, options));\n  return promise.then(adapterPayload => {\n    const serializer = store.serializerFor(type);\n    const payload = (0,_private_1aicprWG__WEBPACK_IMPORTED_MODULE_4__.n)(serializer, store, schema, adapterPayload, null, 'query');\n    const identifiers = store._push(payload, true);\n    ( true && !(Array.isArray(identifiers)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)('The response to store.query is expected to be an array but it was a single record. Please wrap your response in an array or use `store.queryRecord` to query for a single record.', Array.isArray(identifiers)));\n    store.recordArrayManager.populateManagedArray(recordArray, identifiers, payload);\n    return recordArray;\n  });\n}\nfunction assertSingleResourceDocument(payload) {\n  ( true && !(!Array.isArray(payload.data)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)(`Expected the primary data returned by the serializer for a 'queryRecord' response to be a single object or null but instead it was an array.`, !Array.isArray(payload.data)));\n}\nfunction queryRecord(context) {\n  const {\n    store,\n    data\n  } = context.request;\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  const {\n    type,\n    query,\n    options\n  } = data;\n  const adapter = store.adapterFor(type);\n  ( true && !(adapter) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)(`You tried to make a query but you have no adapter (for ${type})`, adapter));\n  ( true && !(typeof adapter.queryRecord === 'function') && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)(`You tried to make a query but your adapter does not implement 'queryRecord'`, typeof adapter.queryRecord === 'function'));\n  const schema = store.modelFor(type);\n  const promise = Promise.resolve().then(() => adapter.queryRecord(store, schema, query, options));\n  return promise.then(adapterPayload => {\n    const serializer = store.serializerFor(type);\n    const payload = (0,_private_1aicprWG__WEBPACK_IMPORTED_MODULE_4__.n)(serializer, store, schema, adapterPayload, null, 'queryRecord');\n    assertSingleResourceDocument(payload);\n    const identifier = store._push(payload, true);\n    return identifier ? store.peekRecord(identifier) : null;\n  });\n}\n\n/**\n * @module @ember-data/store\n * @class Store\n */\n\n/**\n    Returns an instance of the adapter for a given type. For\n    example, `adapterFor('person')` will return an instance of\n    the adapter located at `app/adapters/person.js`\n\n    If no `person` adapter is found, this method will look\n    for an `application` adapter (the default adapter for\n    your entire application).\n\n    @method adapterFor\n    @public\n    @param {String} modelName\n    @return Adapter\n  */\n\nfunction adapterFor(modelName, _allowMissing) {\n  ( true && !(!(this.isDestroying || this.isDestroyed)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)(`Attempted to call store.adapterFor(), but the store instance has already been destroyed.`, !(this.isDestroying || this.isDestroyed)));\n  ( true && !(modelName) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)(`You need to pass a model name to the store's adapterFor method`, modelName));\n  ( true && !(typeof modelName === 'string') && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)(`Passing classes to store.adapterFor has been removed. Please pass a dasherized string instead of ${modelName}`, typeof modelName === 'string'));\n  this._adapterCache = this._adapterCache || Object.create(null);\n  const normalizedModelName = (0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_3__._deprecatingNormalize)(modelName);\n  const {\n    _adapterCache\n  } = this;\n  let adapter = _adapterCache[normalizedModelName];\n  if (adapter) {\n    return adapter;\n  }\n  const owner = (0,_ember_application__WEBPACK_IMPORTED_MODULE_0__.getOwner)(this);\n\n  // name specific adapter\n  adapter = owner.lookup(`adapter:${normalizedModelName}`);\n  if (adapter !== undefined) {\n    _adapterCache[normalizedModelName] = adapter;\n    return adapter;\n  }\n\n  // no adapter found for the specific name, fallback and check for application adapter\n  adapter = _adapterCache.application || owner.lookup('adapter:application');\n  if (adapter !== undefined) {\n    _adapterCache[normalizedModelName] = adapter;\n    _adapterCache.application = adapter;\n    return adapter;\n  }\n  ( true && !(_allowMissing) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)(`No adapter was found for '${modelName}' and no 'application' adapter was found as a fallback.`, _allowMissing));\n}\n\n/**\n    Returns an instance of the serializer for a given type. For\n    example, `serializerFor('person')` will return an instance of\n    `App.PersonSerializer`.\n\n    If no `App.PersonSerializer` is found, this method will look\n    for an `App.ApplicationSerializer` (the default serializer for\n    your entire application).\n\n    If a serializer cannot be found on the adapter, it will fall back\n    to an instance of `JSONSerializer`.\n\n    @method serializerFor\n    @public\n    @param {String} modelName the record to serialize\n    @return {Serializer}\n  */\nfunction serializerFor(modelName) {\n  ( true && !(!(this.isDestroying || this.isDestroyed)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)(`Attempted to call store.serializerFor(), but the store instance has already been destroyed.`, !(this.isDestroying || this.isDestroyed)));\n  ( true && !(modelName) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)(`You need to pass a model name to the store's serializerFor method`, modelName));\n  ( true && !(typeof modelName === 'string') && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)(`Passing classes to store.serializerFor has been removed. Please pass a dasherized string instead of ${modelName}`, typeof modelName === 'string'));\n  this._serializerCache = this._serializerCache || Object.create(null);\n  const normalizedModelName = (0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_3__._deprecatingNormalize)(modelName);\n  const {\n    _serializerCache\n  } = this;\n  let serializer = _serializerCache[normalizedModelName];\n  if (serializer) {\n    return serializer;\n  }\n\n  // by name\n  const owner = (0,_ember_application__WEBPACK_IMPORTED_MODULE_0__.getOwner)(this);\n  serializer = owner.lookup(`serializer:${normalizedModelName}`);\n  if (serializer !== undefined) {\n    _serializerCache[normalizedModelName] = serializer;\n    return serializer;\n  }\n\n  // no serializer found for the specific model, fallback and check for application serializer\n  serializer = _serializerCache.application || owner.lookup('serializer:application');\n  if (serializer !== undefined) {\n    _serializerCache[normalizedModelName] = serializer;\n    _serializerCache.application = serializer;\n    return serializer;\n  }\n  return null;\n}\n\n/**\n    `normalize` converts a json payload into the normalized form that\n    [push](../methods/push?anchor=push) expects.\n\n    Example\n\n    ```js\n    socket.on('message', function(message) {\n      let modelName = message.model;\n      let data = message.data;\n      store.push(store.normalize(modelName, data));\n    });\n    ```\n\n    @method normalize\n    @public\n    @param {String} modelName The name of the model type for this payload\n    @param {Object} payload\n    @return {Object} The normalized payload\n  */\n// TODO @runspired @deprecate users should call normalize on the associated serializer directly\nfunction normalize(modelName, payload) {\n  ( true && !(!(this.isDestroying || this.isDestroyed)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)(`Attempted to call store.normalize(), but the store instance has already been destroyed.`, !(this.isDestroying || this.isDestroyed)));\n  ( true && !(modelName) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)(`You need to pass a model name to the store's normalize method`, modelName));\n  ( true && !(typeof modelName === 'string') && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)(`Passing classes to store methods has been removed. Please pass a dasherized string instead of ${typeof modelName}`, typeof modelName === 'string'));\n  const normalizedModelName = (0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_3__._deprecatingNormalize)(modelName);\n  const serializer = this.serializerFor(normalizedModelName);\n  const schema = this.modelFor(normalizedModelName);\n  ( true && !(typeof serializer?.normalize === 'function') && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)(`You must define a normalize method in your serializer in order to call store.normalize`, typeof serializer?.normalize === 'function'));\n  return serializer.normalize(schema, payload);\n}\n\n/**\n    Push some raw data into the store.\n\n    This method can be used both to push in brand new\n    records, as well as to update existing records. You\n    can push in more than one type of object at once.\n    All objects should be in the format expected by the\n    serializer.\n\n    ```app/serializers/application.js\n    import RESTSerializer from '@ember-data/serializer/rest';\n\n    export default class ApplicationSerializer extends RESTSerializer;\n    ```\n\n    ```js\n    let pushData = {\n      posts: [\n        { id: 1, postTitle: \"Great post\", commentIds: [2] }\n      ],\n      comments: [\n        { id: 2, commentBody: \"Insightful comment\" }\n      ]\n    }\n\n    store.pushPayload(pushData);\n    ```\n\n    By default, the data will be deserialized using a default\n    serializer (the application serializer if it exists).\n\n    Alternatively, `pushPayload` will accept a model type which\n    will determine which serializer will process the payload.\n\n    ```app/serializers/application.js\n    import RESTSerializer from '@ember-data/serializer/rest';\n\n     export default class ApplicationSerializer extends RESTSerializer;\n    ```\n\n    ```app/serializers/post.js\n    import JSONSerializer from '@ember-data/serializer/json';\n\n    export default JSONSerializer;\n    ```\n\n    ```js\n    store.pushPayload(pushData); // Will use the application serializer\n    store.pushPayload('post', pushData); // Will use the post serializer\n    ```\n\n    @method pushPayload\n    @public\n    @param {String} modelName Optionally, a model type used to determine which serializer will be used\n    @param {Object} inputPayload\n  */\n// TODO @runspired @deprecate pushPayload in favor of looking up the serializer\nfunction pushPayload(modelName, inputPayload) {\n  ( true && !(!(this.isDestroying || this.isDestroyed)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)(`Attempted to call store.pushPayload(), but the store instance has already been destroyed.`, !(this.isDestroying || this.isDestroyed)));\n  const payload = inputPayload || modelName;\n  const normalizedModelName = inputPayload ? (0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_3__._deprecatingNormalize)(modelName) : 'application';\n  const serializer = this.serializerFor(normalizedModelName);\n  ( true && !(serializer && typeof serializer.pushPayload === 'function') && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)(`You cannot use 'store.pushPayload(<type>, <payload>)' unless the serializer for '${normalizedModelName}' defines 'pushPayload'`, serializer && typeof serializer.pushPayload === 'function'));\n  serializer.pushPayload(this, payload);\n}\n\n// TODO @runspired @deprecate records should implement their own serialization if desired\nfunction serializeRecord(record, options) {\n  // TODO we used to check if the record was destroyed here\n  if (!this._fetchManager) {\n    this._fetchManager = new _private_1aicprWG__WEBPACK_IMPORTED_MODULE_4__.F(this);\n  }\n  return this._fetchManager.createSnapshot((0,_ember_data_store__WEBPACK_IMPORTED_MODULE_2__.recordIdentifierFor)(record)).serialize(options);\n}\nfunction cleanup() {\n  // enqueue destruction of any adapters/serializers we have created\n  for (const adapterName in this._adapterCache) {\n    const adapter = this._adapterCache[adapterName];\n    if (typeof adapter.destroy === 'function') {\n      adapter.destroy();\n    }\n  }\n  for (const serializerName in this._serializerCache) {\n    const serializer = this._serializerCache[serializerName];\n    if (typeof serializer.destroy === 'function') {\n      serializer.destroy();\n    }\n  }\n}\n\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@ember-data/legacy-compat.e84b6420/node_modules/@ember-data/legacy-compat/index.js?");

/***/ }),

/***/ "../rewritten-packages/@ember-data/model.9cfa41c3/node_modules/@ember-data/model/-private.js":
/*!***************************************************************************************************!*\
  !*** ../rewritten-packages/@ember-data/model.9cfa41c3/node_modules/@ember-data/model/-private.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Errors: () => (/* reexport safe */ _model_YsOraZ6y__WEBPACK_IMPORTED_MODULE_1__.E),\n/* harmony export */   LEGACY_SUPPORT: () => (/* reexport safe */ _model_YsOraZ6y__WEBPACK_IMPORTED_MODULE_1__.L),\n/* harmony export */   ManyArray: () => (/* reexport safe */ _model_YsOraZ6y__WEBPACK_IMPORTED_MODULE_1__.R),\n/* harmony export */   Model: () => (/* reexport safe */ _model_YsOraZ6y__WEBPACK_IMPORTED_MODULE_1__.M),\n/* harmony export */   PromiseBelongsTo: () => (/* reexport safe */ _model_YsOraZ6y__WEBPACK_IMPORTED_MODULE_1__.P),\n/* harmony export */   PromiseManyArray: () => (/* reexport safe */ _model_YsOraZ6y__WEBPACK_IMPORTED_MODULE_1__.a),\n/* harmony export */   attr: () => (/* reexport safe */ _has_many_PdQBns8a__WEBPACK_IMPORTED_MODULE_0__.a),\n/* harmony export */   belongsTo: () => (/* reexport safe */ _has_many_PdQBns8a__WEBPACK_IMPORTED_MODULE_0__.b),\n/* harmony export */   hasMany: () => (/* reexport safe */ _has_many_PdQBns8a__WEBPACK_IMPORTED_MODULE_0__.h),\n/* harmony export */   lookupLegacySupport: () => (/* reexport safe */ _model_YsOraZ6y__WEBPACK_IMPORTED_MODULE_1__.l)\n/* harmony export */ });\n/* harmony import */ var _has_many_PdQBns8a__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./has-many-PdQBns8a */ \"../rewritten-packages/@ember-data/model.9cfa41c3/node_modules/@ember-data/model/has-many-PdQBns8a.js\");\n/* harmony import */ var _model_YsOraZ6y__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./model-YsOraZ6y */ \"../rewritten-packages/@ember-data/model.9cfa41c3/node_modules/@ember-data/model/model-YsOraZ6y.js\");\n\n\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@ember-data/model.9cfa41c3/node_modules/@ember-data/model/-private.js?");

/***/ }),

/***/ "../rewritten-packages/@ember-data/model.9cfa41c3/node_modules/@ember-data/model/has-many-PdQBns8a.js":
/*!************************************************************************************************************!*\
  !*** ../rewritten-packages/@ember-data/model.9cfa41c3/node_modules/@ember-data/model/has-many-PdQBns8a.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   a: () => (/* binding */ attr$1),\n/* harmony export */   b: () => (/* binding */ belongsTo$1),\n/* harmony export */   h: () => (/* binding */ hasMany$1)\n/* harmony export */ });\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/debug */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fdebug&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_debug__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _ember_object__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember/object */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fobject&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_object__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_ember_object__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _ember_data_store__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ember-data/store */ \"../rewritten-packages/@ember-data/store.a4360448/node_modules/@ember-data/store/index.js\");\n/* harmony import */ var _ember_data_store_private__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ember-data/store/-private */ \"../rewritten-packages/@ember-data/store.a4360448/node_modules/@ember-data/store/-private.js\");\n/* harmony import */ var _util_3DHZJC9h__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./util-3DHZJC9h */ \"../rewritten-packages/@ember-data/model.9cfa41c3/node_modules/@ember-data/model/util-3DHZJC9h.js\");\n/* harmony import */ var _model_YsOraZ6y__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./model-YsOraZ6y */ \"../rewritten-packages/@ember-data/model.9cfa41c3/node_modules/@ember-data/model/model-YsOraZ6y.js\");\n/* harmony import */ var _ember_string__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ember/string */ \"../rewritten-packages/@ember/string.5601e258/node_modules/@ember/string/index.js\");\n/* harmony import */ var ember_inflector__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ember-inflector */ \"../rewritten-packages/ember-inflector.73f9432a/node_modules/ember-inflector/index.js\");\n\n\n\n\n\n\n\n\nfunction attr(type, options) {\n  if (typeof type === 'object') {\n    options = type;\n    type = undefined;\n  } else {\n    options = options || {};\n  }\n  const meta = {\n    type: type,\n    kind: 'attribute',\n    isAttribute: true,\n    options: options,\n    key: null\n  };\n  return (0,_ember_object__WEBPACK_IMPORTED_MODULE_1__.computed)({\n    get(key) {\n      {\n        if (['currentState'].indexOf(key) !== -1) {\n          throw new Error(`'${key}' is a reserved property name on instances of classes extending Model. Please choose a different property name for your attr on ${this.constructor.toString()}`);\n        }\n      }\n      if (this.isDestroyed || this.isDestroying) {\n        return;\n      }\n      return (0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_3__.peekCache)(this).getAttr((0,_ember_data_store__WEBPACK_IMPORTED_MODULE_2__.recordIdentifierFor)(this), key);\n    },\n    set(key, value) {\n      {\n        if (['currentState'].indexOf(key) !== -1) {\n          throw new Error(`'${key}' is a reserved property name on instances of classes extending Model. Please choose a different property name for your attr on ${this.constructor.toString()}`);\n        }\n      }\n      ( true && !(!this.currentState.isDeleted) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Attempted to set '${key}' on the deleted record ${(0,_ember_data_store__WEBPACK_IMPORTED_MODULE_2__.recordIdentifierFor)(this)}`, !this.currentState.isDeleted));\n      const identifier = (0,_ember_data_store__WEBPACK_IMPORTED_MODULE_2__.recordIdentifierFor)(this);\n      const cache = (0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_3__.peekCache)(this);\n      const currentValue = cache.getAttr(identifier, key);\n      if (currentValue !== value) {\n        cache.setAttr(identifier, key, value);\n        if (!this.isValid) {\n          const {\n            errors\n          } = this;\n          if (errors.get(key)) {\n            errors.remove(key);\n            this.currentState.cleanErrorRequests();\n          }\n        }\n      }\n      return value;\n    }\n  }).meta(meta);\n}\nvar attr$1 = (0,_util_3DHZJC9h__WEBPACK_IMPORTED_MODULE_4__.c)(attr);\nfunction belongsTo(modelName, options) {\n  const opts = options;\n  const userEnteredModelName = modelName;\n  ( true && !(opts && typeof opts.async === 'boolean') && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Expected options.async from @belongsTo('${userEnteredModelName}', options) to be a boolean`, opts && typeof opts.async === 'boolean'));\n  ( true && !(opts.inverse === null || typeof opts.inverse === 'string' && opts.inverse.length > 0) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Expected options.inverse from @belongsTo('${userEnteredModelName}', options) to be either null or the string type of the related resource.`, opts.inverse === null || typeof opts.inverse === 'string' && opts.inverse.length > 0));\n  const meta = {\n    type: (0,_util_3DHZJC9h__WEBPACK_IMPORTED_MODULE_4__.n)(userEnteredModelName),\n    isRelationship: true,\n    options: opts,\n    kind: 'belongsTo',\n    name: '<Unknown BelongsTo>',\n    key: null\n  };\n  return (0,_ember_object__WEBPACK_IMPORTED_MODULE_1__.computed)({\n    get(key) {\n      // this is a legacy behavior we may not carry into a new model setup\n      // it's better to error on disconnected records so users find errors\n      // in their logic.\n      if (this.isDestroying || this.isDestroyed) {\n        return null;\n      }\n      const support = (0,_model_YsOraZ6y__WEBPACK_IMPORTED_MODULE_5__.l)(this);\n      {\n        if (['currentState'].indexOf(key) !== -1) {\n          throw new Error(`'${key}' is a reserved property name on instances of classes extending Model. Please choose a different property name for your belongsTo on ${this.constructor.toString()}`);\n        }\n        if (Object.prototype.hasOwnProperty.call(opts, 'serialize')) {\n          ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.warn)(`You provided a serialize option on the \"${key}\" property in the \"${support.identifier.type}\" class, this belongs in the serializer. See Serializer and it's implementations https://api.emberjs.com/ember-data/release/classes/Serializer`, false, {\n            id: 'ds.model.serialize-option-in-belongs-to'\n          }));\n        }\n        if (Object.prototype.hasOwnProperty.call(opts, 'embedded')) {\n          ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.warn)(`You provided an embedded option on the \"${key}\" property in the \"${support.identifier.type}\" class, this belongs in the serializer. See EmbeddedRecordsMixin https://api.emberjs.com/ember-data/release/classes/EmbeddedRecordsMixin`, false, {\n            id: 'ds.model.embedded-option-in-belongs-to'\n          }));\n        }\n      }\n      return support.getBelongsTo(key);\n    },\n    set(key, value) {\n      const support = (0,_model_YsOraZ6y__WEBPACK_IMPORTED_MODULE_5__.l)(this);\n      {\n        if (['currentState'].indexOf(key) !== -1) {\n          throw new Error(`'${key}' is a reserved property name on instances of classes extending Model. Please choose a different property name for your belongsTo on ${this.constructor.toString()}`);\n        }\n      }\n      this.store._join(() => {\n        support.setDirtyBelongsTo(key, value);\n      });\n      return support.getBelongsTo(key);\n    }\n  }).meta(meta);\n}\nvar belongsTo$1 = (0,_util_3DHZJC9h__WEBPACK_IMPORTED_MODULE_4__.c)(belongsTo);\n\n/**\n  @module @ember-data/model\n*/\nfunction normalizeType(type) {\n  {\n    const result = (0,ember_inflector__WEBPACK_IMPORTED_MODULE_7__.singularize)((0,_ember_string__WEBPACK_IMPORTED_MODULE_6__.dasherize)(type));\n    ( true && !(result === type) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.deprecate)(`The resource type '${type}' is not normalized. Update your application code to use '${result}' instead of '${type}'.`, result === type, {\n      id: 'ember-data:deprecate-non-strict-types',\n      until: '6.0',\n      for: 'ember-data',\n      since: {\n        available: '5.3',\n        enabled: '5.3'\n      }\n    }));\n    return result;\n  }\n  return type;\n}\n\n/**\n  `hasMany` is used to define One-To-Many and Many-To-Many\n  relationships on a [Model](/ember-data/release/classes/Model).\n\n  `hasMany` takes an optional hash as a second parameter, currently\n  supported options are:\n\n  - `async`: A boolean value used to explicitly declare this to be an async relationship. The default is true.\n  - `inverse`: A string used to identify the inverse property on a related model.\n  - `polymorphic` A boolean value to mark the relationship as polymorphic\n\n  #### One-To-Many\n  To declare a one-to-many relationship between two models, use\n  `belongsTo` in combination with `hasMany`, like this:\n\n  ```app/models/post.js\n  import Model, { hasMany } from '@ember-data/model';\n\n  export default class PostModel extends Model {\n    @hasMany('comment') comments;\n  }\n  ```\n\n  ```app/models/comment.js\n  import Model, { belongsTo } from '@ember-data/model';\n\n  export default class CommentModel extends Model {\n    @belongsTo('post') post;\n  }\n  ```\n\n  #### Many-To-Many\n  To declare a many-to-many relationship between two models, use\n  `hasMany`:\n\n  ```app/models/post.js\n  import Model, { hasMany } from '@ember-data/model';\n\n  export default class PostModel extends Model {\n    @hasMany('tag') tags;\n  }\n  ```\n\n  ```app/models/tag.js\n  import Model, { hasMany } from '@ember-data/model';\n\n  export default class TagModel extends Model {\n    @hasMany('post') posts;\n  }\n  ```\n\n  You can avoid passing a string as the first parameter. In that case Ember Data\n  will infer the type from the singularized key name.\n\n  ```app/models/post.js\n  import Model, { hasMany } from '@ember-data/model';\n\n  export default class PostModel extends Model {\n    @hasMany tags;\n  }\n  ```\n\n  will lookup for a Tag type.\n\n  #### Explicit Inverses\n\n  Ember Data will do its best to discover which relationships map to\n  one another. In the one-to-many code above, for example, Ember Data\n  can figure out that changing the `comments` relationship should update\n  the `post` relationship on the inverse because post is the only\n  relationship to that model.\n\n  However, sometimes you may have multiple `belongsTo`/`hasMany` for the\n  same type. You can specify which property on the related model is\n  the inverse using `hasMany`'s `inverse` option:\n\n  ```app/models/comment.js\n  import Model, { belongsTo } from '@ember-data/model';\n\n  export default class CommentModel extends Model {\n    @belongsTo('post') onePost;\n    @belongsTo('post') twoPost\n    @belongsTo('post') redPost;\n    @belongsTo('post') bluePost;\n  }\n  ```\n\n  ```app/models/post.js\n  import Model, { hasMany } from '@ember-data/model';\n\n  export default class PostModel extends Model {\n    @hasMany('comment', {\n      inverse: 'redPost'\n    })\n    comments;\n  }\n  ```\n\n  You can also specify an inverse on a `belongsTo`, which works how\n  you'd expect.\n\n  #### Sync relationships\n\n  Ember Data resolves sync relationships with the related resources\n  available in its local store, hence it is expected these resources\n  to be loaded before or along-side the primary resource.\n\n  ```app/models/post.js\n  import Model, { hasMany } from '@ember-data/model';\n\n  export default class PostModel extends Model {\n    @hasMany('comment', {\n      async: false\n    })\n    comments;\n  }\n  ```\n\n  In contrast to async relationship, accessing a sync relationship\n  will always return a [ManyArray](/ember-data/release/classes/ManyArray) instance\n  containing the existing local resources. But it will error on access\n  when any of the known related resources have not been loaded.\n\n  ```\n  post.comments.forEach((comment) => {\n\n  });\n\n  ```\n\n  If you are using `links` with sync relationships, you have to use\n  `ref.reload` to fetch the resources.\n\n  @method hasMany\n  @public\n  @static\n  @for @ember-data/model\n  @param {String} type (optional) type of the relationship\n  @param {Object} options (optional) a hash of options\n  @return {Ember.computed} relationship\n*/\nfunction hasMany(type, options) {\n  ( true && !(options && typeof options.async === 'boolean') && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Expected hasMany options.async to be a boolean`, options && typeof options.async === 'boolean')); // Metadata about relationships is stored on the meta of\n  // the relationship. This is used for introspection and\n  // serialization. Note that `key` is populated lazily\n  // the first time the CP is called.\n  const meta = {\n    type: normalizeType(type),\n    options,\n    isRelationship: true,\n    kind: 'hasMany',\n    name: '<Unknown BelongsTo>',\n    key: null\n  };\n  return (0,_ember_object__WEBPACK_IMPORTED_MODULE_1__.computed)({\n    get(key) {\n      {\n        if (['currentState'].indexOf(key) !== -1) {\n          throw new Error(`'${key}' is a reserved property name on instances of classes extending Model. Please choose a different property name for your hasMany on ${this.constructor.toString()}`);\n        }\n      }\n      if (this.isDestroying || this.isDestroyed) {\n        return [];\n      }\n      return (0,_model_YsOraZ6y__WEBPACK_IMPORTED_MODULE_5__.l)(this).getHasMany(key);\n    },\n    set(key, records) {\n      {\n        if (['currentState'].indexOf(key) !== -1) {\n          throw new Error(`'${key}' is a reserved property name on instances of classes extending Model. Please choose a different property name for your hasMany on ${this.constructor.toString()}`);\n        }\n      }\n      const support = (0,_model_YsOraZ6y__WEBPACK_IMPORTED_MODULE_5__.l)(this);\n      const manyArray = support.getManyArray(key);\n      ( true && !(Array.isArray(records)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`You must pass an array of records to set a hasMany relationship`, Array.isArray(records)));\n      this.store._join(() => {\n        manyArray.splice(0, manyArray.length, ...records);\n      });\n      return support.getHasMany(key);\n    }\n  }).meta(meta);\n}\nvar hasMany$1 = (0,_util_3DHZJC9h__WEBPACK_IMPORTED_MODULE_4__.c)(hasMany);\n\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@ember-data/model.9cfa41c3/node_modules/@ember-data/model/has-many-PdQBns8a.js?");

/***/ }),

/***/ "../rewritten-packages/@ember-data/model.9cfa41c3/node_modules/@ember-data/model/hooks-dXmQbIOF.js":
/*!*********************************************************************************************************!*\
  !*** ../rewritten-packages/@ember-data/model.9cfa41c3/node_modules/@ember-data/model/hooks-dXmQbIOF.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   M: () => (/* binding */ ModelSchemaProvider),\n/* harmony export */   b: () => (/* binding */ buildSchema),\n/* harmony export */   i: () => (/* binding */ instantiateRecord),\n/* harmony export */   m: () => (/* binding */ modelFor),\n/* harmony export */   t: () => (/* binding */ teardownRecord)\n/* harmony export */ });\n/* harmony import */ var _ember_application__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/application */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fapplication&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_application__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_application__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember/debug */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fdebug&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_ember_debug__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _ember_data_store_private__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ember-data/store/-private */ \"../rewritten-packages/@ember-data/store.a4360448/node_modules/@ember-data/store/-private.js\");\n/* harmony import */ var _model_YsOraZ6y__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./model-YsOraZ6y */ \"../rewritten-packages/@ember-data/model.9cfa41c3/node_modules/@ember-data/model/model-YsOraZ6y.js\");\n/* harmony import */ var _util_3DHZJC9h__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./util-3DHZJC9h */ \"../rewritten-packages/@ember-data/model.9cfa41c3/node_modules/@ember-data/model/util-3DHZJC9h.js\");\n\n\n\n\n\n\n/*\n    In case someone defined a relationship to a mixin, for example:\n    ```ts\n      class CommentModel extends Model {\n        @belongsTo('commentable', { polymorphic: true }) owner;\n      }\n\n      let Commentable = Mixin.create({\n        @hasMany('comment') comments;\n      });\n    ```\n    we want to look up a Commentable class which has all the necessary\n    relationship meta data. Thus, we look up the mixin and create a mock\n    Model, so we can access the relationship CPs of the mixin (`comments`)\n    in this case\n  */\nfunction modelForMixin(store, normalizedModelName) {\n  const owner = (0,_ember_application__WEBPACK_IMPORTED_MODULE_0__.getOwner)(store);\n  const MaybeMixin = owner.factoryFor(`mixin:${normalizedModelName}`);\n  const mixin = MaybeMixin && MaybeMixin.class;\n  if (mixin) {\n    const ModelForMixin = _model_YsOraZ6y__WEBPACK_IMPORTED_MODULE_3__.M.extend(mixin);\n    ModelForMixin.__isMixin = true;\n    ModelForMixin.__mixin = mixin;\n    //Cache the class as a model\n    owner.register(`model:${normalizedModelName}`, ModelForMixin);\n  }\n  return owner.factoryFor(`model:${normalizedModelName}`);\n}\nclass ModelSchemaProvider {\n  constructor(store) {\n    this.store = store;\n    this._relationshipsDefCache = Object.create(null);\n    this._attributesDefCache = Object.create(null);\n    this._fieldsDefCache = Object.create(null);\n  }\n  fields(identifier) {\n    const {\n      type\n    } = identifier;\n    let fieldDefs = this._fieldsDefCache[type];\n    if (fieldDefs === undefined) {\n      fieldDefs = new Map();\n      this._fieldsDefCache[type] = fieldDefs;\n      const attributes = this.attributesDefinitionFor(identifier);\n      const relationships = this.relationshipsDefinitionFor(identifier);\n      for (const attr of Object.values(attributes)) {\n        fieldDefs.set(attr.name, attr);\n      }\n      for (const rel of Object.values(relationships)) {\n        fieldDefs.set(rel.name, rel);\n      }\n    }\n    return fieldDefs;\n  }\n\n  // Following the existing RD implementation\n  attributesDefinitionFor(identifier) {\n    const {\n      type\n    } = identifier;\n    let attributes;\n    attributes = this._attributesDefCache[type];\n    if (attributes === undefined) {\n      const modelClass = this.store.modelFor(type);\n      const attributeMap = modelClass.attributes;\n      attributes = Object.create(null);\n      attributeMap.forEach((meta, name) => attributes[name] = meta);\n      this._attributesDefCache[type] = attributes;\n    }\n    return attributes;\n  }\n\n  // Following the existing RD implementation\n  relationshipsDefinitionFor(identifier) {\n    const {\n      type\n    } = identifier;\n    let relationships;\n    relationships = this._relationshipsDefCache[type];\n    if (relationships === undefined) {\n      const modelClass = this.store.modelFor(type);\n      relationships = modelClass.relationshipsObject || null;\n      this._relationshipsDefCache[type] = relationships;\n    }\n    return relationships;\n  }\n  doesTypeExist(modelName) {\n    const type = (0,_util_3DHZJC9h__WEBPACK_IMPORTED_MODULE_4__.n)(modelName);\n    const factory = getModelFactory(this.store, type);\n    return factory !== null;\n  }\n}\nfunction buildSchema(store) {\n  return new ModelSchemaProvider(store);\n}\nfunction getModelFactory(store, type) {\n  if (!store._modelFactoryCache) {\n    store._modelFactoryCache = Object.create(null);\n  }\n  const cache = store._modelFactoryCache;\n  let factory = cache[type];\n  if (!factory) {\n    const owner = (0,_ember_application__WEBPACK_IMPORTED_MODULE_0__.getOwner)(store);\n    factory = owner.factoryFor(`model:${type}`);\n    if (!factory) {\n      //Support looking up mixins as base types for polymorphic relationships\n      factory = modelForMixin(store, type);\n    }\n    if (!factory) {\n      // we don't cache misses in case someone wants to register a missing model\n      return null;\n    }\n    const klass = factory.class;\n    if (klass.isModel) {\n      const hasOwnModelNameSet = klass.modelName && Object.prototype.hasOwnProperty.call(klass, 'modelName');\n      if (!hasOwnModelNameSet) {\n        Object.defineProperty(klass, 'modelName', {\n          value: type\n        });\n      }\n    }\n    cache[type] = factory;\n  }\n  return factory;\n}\nfunction instantiateRecord(identifier, createRecordArgs) {\n  const type = identifier.type;\n  const cache = this.cache;\n  // TODO deprecate allowing unknown args setting\n  const createOptions = {\n    _createProps: createRecordArgs,\n    // TODO @deprecate consider deprecating accessing record properties during init which the below is necessary for\n    _secretInit: {\n      identifier,\n      cache,\n      store: this,\n      cb: secretInit\n    }\n  };\n\n  // ensure that `getOwner(this)` works inside a model instance\n  (0,_ember_application__WEBPACK_IMPORTED_MODULE_0__.setOwner)(createOptions, (0,_ember_application__WEBPACK_IMPORTED_MODULE_0__.getOwner)(this));\n  const factory = getModelFactory(this, type);\n  ( true && !(factory) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)(`No model was found for '${type}'`, factory));\n  return factory.class.create(createOptions);\n}\nfunction teardownRecord(record) {\n  ( true && !('destroy' in record) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)(`expected to receive an instance of Model from @ember-data/model. If using a custom model make sure you implement teardownRecord`, 'destroy' in record));\n  record.destroy();\n}\nfunction modelFor(modelName) {\n  ( true && !(!this.isDestroyed && !this.isDestroying) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)(`Attempted to call store.modelFor(), but the store instance has already been destroyed.`, !this.isDestroyed && !this.isDestroying));\n  ( true && !(modelName) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)(`You need to pass a model name to the store's modelFor method`, modelName));\n  ( true && !(typeof modelName === 'string' && modelName.length) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)(`Please pass a proper model name to the store's modelFor method`, typeof modelName === 'string' && modelName.length));\n  const type = (0,_util_3DHZJC9h__WEBPACK_IMPORTED_MODULE_4__.n)(modelName);\n  const maybeFactory = getModelFactory(this, type);\n  const klass = maybeFactory && maybeFactory.class ? maybeFactory.class : null;\n  const ignoreType = !klass || !klass.isModel || this._forceShim;\n  if (!ignoreType) {\n    return klass;\n  }\n  ( true && !(this.getSchemaDefinitionService().doesTypeExist(type)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)(`No model was found for '${type}' and no schema handles the type`, this.getSchemaDefinitionService().doesTypeExist(type)));\n}\nfunction secretInit(record, cache, identifier, store) {\n  (0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_2__.setRecordIdentifier)(record, identifier);\n  _ember_data_store_private__WEBPACK_IMPORTED_MODULE_2__.StoreMap.set(record, store);\n  (0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_2__.setCacheFor)(record, cache);\n}\n\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@ember-data/model.9cfa41c3/node_modules/@ember-data/model/hooks-dXmQbIOF.js?");

/***/ }),

/***/ "../rewritten-packages/@ember-data/model.9cfa41c3/node_modules/@ember-data/model/hooks.js":
/*!************************************************************************************************!*\
  !*** ../rewritten-packages/@ember-data/model.9cfa41c3/node_modules/@ember-data/model/hooks.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildSchema: () => (/* reexport safe */ _hooks_dXmQbIOF__WEBPACK_IMPORTED_MODULE_0__.b),\n/* harmony export */   instantiateRecord: () => (/* reexport safe */ _hooks_dXmQbIOF__WEBPACK_IMPORTED_MODULE_0__.i),\n/* harmony export */   modelFor: () => (/* reexport safe */ _hooks_dXmQbIOF__WEBPACK_IMPORTED_MODULE_0__.m),\n/* harmony export */   teardownRecord: () => (/* reexport safe */ _hooks_dXmQbIOF__WEBPACK_IMPORTED_MODULE_0__.t)\n/* harmony export */ });\n/* harmony import */ var _hooks_dXmQbIOF__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hooks-dXmQbIOF */ \"../rewritten-packages/@ember-data/model.9cfa41c3/node_modules/@ember-data/model/hooks-dXmQbIOF.js\");\n\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@ember-data/model.9cfa41c3/node_modules/@ember-data/model/hooks.js?");

/***/ }),

/***/ "../rewritten-packages/@ember-data/model.9cfa41c3/node_modules/@ember-data/model/index.js":
/*!************************************************************************************************!*\
  !*** ../rewritten-packages/@ember-data/model.9cfa41c3/node_modules/@ember-data/model/index.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ModelSchemaProvider: () => (/* reexport safe */ _hooks_dXmQbIOF__WEBPACK_IMPORTED_MODULE_2__.M),\n/* harmony export */   attr: () => (/* reexport safe */ _has_many_PdQBns8a__WEBPACK_IMPORTED_MODULE_0__.a),\n/* harmony export */   belongsTo: () => (/* reexport safe */ _has_many_PdQBns8a__WEBPACK_IMPORTED_MODULE_0__.b),\n/* harmony export */   \"default\": () => (/* reexport safe */ _model_YsOraZ6y__WEBPACK_IMPORTED_MODULE_1__.M),\n/* harmony export */   hasMany: () => (/* reexport safe */ _has_many_PdQBns8a__WEBPACK_IMPORTED_MODULE_0__.h),\n/* harmony export */   instantiateRecord: () => (/* reexport safe */ _hooks_dXmQbIOF__WEBPACK_IMPORTED_MODULE_2__.i),\n/* harmony export */   modelFor: () => (/* reexport safe */ _hooks_dXmQbIOF__WEBPACK_IMPORTED_MODULE_2__.m),\n/* harmony export */   teardownRecord: () => (/* reexport safe */ _hooks_dXmQbIOF__WEBPACK_IMPORTED_MODULE_2__.t)\n/* harmony export */ });\n/* harmony import */ var _has_many_PdQBns8a__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./has-many-PdQBns8a */ \"../rewritten-packages/@ember-data/model.9cfa41c3/node_modules/@ember-data/model/has-many-PdQBns8a.js\");\n/* harmony import */ var _model_YsOraZ6y__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./model-YsOraZ6y */ \"../rewritten-packages/@ember-data/model.9cfa41c3/node_modules/@ember-data/model/model-YsOraZ6y.js\");\n/* harmony import */ var _hooks_dXmQbIOF__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./hooks-dXmQbIOF */ \"../rewritten-packages/@ember-data/model.9cfa41c3/node_modules/@ember-data/model/hooks-dXmQbIOF.js\");\n\n\n\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@ember-data/model.9cfa41c3/node_modules/@ember-data/model/index.js?");

/***/ }),

/***/ "../rewritten-packages/@ember-data/model.9cfa41c3/node_modules/@ember-data/model/migration-support.js":
/*!************************************************************************************************************!*\
  !*** ../rewritten-packages/@ember-data/model.9cfa41c3/node_modules/@ember-data/model/migration-support.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   registerDerivations: () => (/* binding */ registerDerivations),\n/* harmony export */   withFields: () => (/* binding */ withFields)\n/* harmony export */ });\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/debug */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fdebug&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_debug__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _ember_data_store__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember-data/store */ \"../rewritten-packages/@ember-data/store.a4360448/node_modules/@ember-data/store/index.js\");\n/* harmony import */ var _model_YsOraZ6y__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./model-YsOraZ6y */ \"../rewritten-packages/@ember-data/model.9cfa41c3/node_modules/@ember-data/model/model-YsOraZ6y.js\");\n\n\n\n// 'isDestroying', 'isDestroyed'\nconst LegacyFields = ['_createSnapshot', 'adapterError', 'belongsTo', 'changedAttributes', 'constructor', 'currentState', 'deleteRecord', 'destroyRecord', 'dirtyType', 'errors', 'hasDirtyAttributes', 'hasMany', 'isDeleted', 'isEmpty', 'isError', 'isLoaded', 'isLoading', 'isNew', 'isSaving', 'isValid', 'reload', 'rollbackAttributes', 'save', 'serialize', 'unloadRecord'];\nconst LegacySupport = new WeakMap();\nfunction legacySupport(record, options, prop) {\n  let state = LegacySupport.get(record);\n  if (!state) {\n    state = {};\n    LegacySupport.set(record, state);\n  }\n  switch (prop) {\n    case '_createSnapshot':\n      return _model_YsOraZ6y__WEBPACK_IMPORTED_MODULE_2__.j;\n    case 'adapterError':\n      return record.currentState.adapterError;\n    case 'belongsTo':\n      return _model_YsOraZ6y__WEBPACK_IMPORTED_MODULE_2__.i;\n    case 'changedAttributes':\n      return _model_YsOraZ6y__WEBPACK_IMPORTED_MODULE_2__.g;\n    case 'constructor':\n      return state._constructor = state._constructor || {\n        isModel: true,\n        name: `Record<${(0,_ember_data_store__WEBPACK_IMPORTED_MODULE_1__.recordIdentifierFor)(record).type}>`,\n        modelName: (0,_ember_data_store__WEBPACK_IMPORTED_MODULE_1__.recordIdentifierFor)(record).type\n      };\n    case 'currentState':\n      return state.recordState = state.recordState || new _model_YsOraZ6y__WEBPACK_IMPORTED_MODULE_2__.f(record);\n    case 'deleteRecord':\n      return _model_YsOraZ6y__WEBPACK_IMPORTED_MODULE_2__.e;\n    case 'destroyRecord':\n      return _model_YsOraZ6y__WEBPACK_IMPORTED_MODULE_2__.d;\n    case 'dirtyType':\n      return record.currentState.dirtyType;\n    case 'errors':\n      // @ts-expect-error\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n      return state.errors = state.errors || _model_YsOraZ6y__WEBPACK_IMPORTED_MODULE_2__.E.create({\n        __record: record\n      });\n    case 'hasDirtyAttributes':\n      return record.currentState.isDirty;\n    case 'hasMany':\n      return _model_YsOraZ6y__WEBPACK_IMPORTED_MODULE_2__.h;\n    case 'isDeleted':\n      return record.currentState.isDeleted;\n    case 'isEmpty':\n      return record.currentState.isEmpty;\n    case 'isError':\n      return record.currentState.isError;\n    case 'isLoaded':\n      return record.currentState.isLoaded;\n    case 'isLoading':\n      return record.currentState.isLoading;\n    case 'isNew':\n      return record.currentState.isNew;\n    case 'isSaving':\n      return record.currentState.isSaving;\n    case 'isValid':\n      return record.currentState.isValid;\n    case 'reload':\n      return _model_YsOraZ6y__WEBPACK_IMPORTED_MODULE_2__.c;\n    case 'rollbackAttributes':\n      return _model_YsOraZ6y__WEBPACK_IMPORTED_MODULE_2__.r;\n    case 'save':\n      return _model_YsOraZ6y__WEBPACK_IMPORTED_MODULE_2__.b;\n    case 'serialize':\n      return _model_YsOraZ6y__WEBPACK_IMPORTED_MODULE_2__.s;\n    case 'unloadRecord':\n      return _model_YsOraZ6y__WEBPACK_IMPORTED_MODULE_2__.u;\n    default:\n      ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`${prop} is not a supported legacy field`, false));\n  }\n}\nfunction withFields(fields) {\n  LegacyFields.forEach(field => {\n    fields.push({\n      type: '@legacy',\n      name: field,\n      kind: 'derived'\n    });\n  });\n  fields.push({\n    name: 'id',\n    kind: '@id',\n    type: null\n  });\n  fields.push({\n    name: 'isReloading',\n    kind: '@local',\n    type: 'boolean',\n    options: {\n      defaultValue: false\n    }\n  });\n  fields.push({\n    name: 'isDestroying',\n    kind: '@local',\n    type: 'boolean',\n    options: {\n      defaultValue: false\n    }\n  });\n  fields.push({\n    name: 'isDestroyed',\n    kind: '@local',\n    type: 'boolean',\n    options: {\n      defaultValue: false\n    }\n  });\n  return fields;\n}\nfunction registerDerivations(schema) {\n  schema.registerDerivation('@legacy', legacySupport);\n}\n\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@ember-data/model.9cfa41c3/node_modules/@ember-data/model/migration-support.js?");

/***/ }),

/***/ "../rewritten-packages/@ember-data/model.9cfa41c3/node_modules/@ember-data/model/model-YsOraZ6y.js":
/*!*********************************************************************************************************!*\
  !*** ../rewritten-packages/@ember-data/model.9cfa41c3/node_modules/@ember-data/model/model-YsOraZ6y.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   E: () => (/* binding */ Errors),\n/* harmony export */   L: () => (/* binding */ LEGACY_SUPPORT),\n/* harmony export */   M: () => (/* binding */ Model),\n/* harmony export */   P: () => (/* binding */ PromiseBelongsTo),\n/* harmony export */   R: () => (/* binding */ RelatedCollection),\n/* harmony export */   a: () => (/* binding */ PromiseManyArray),\n/* harmony export */   b: () => (/* binding */ save),\n/* harmony export */   c: () => (/* binding */ reload),\n/* harmony export */   d: () => (/* binding */ destroyRecord),\n/* harmony export */   e: () => (/* binding */ deleteRecord),\n/* harmony export */   f: () => (/* binding */ RecordState),\n/* harmony export */   g: () => (/* binding */ changedAttributes),\n/* harmony export */   h: () => (/* binding */ hasMany),\n/* harmony export */   i: () => (/* binding */ belongsTo),\n/* harmony export */   j: () => (/* binding */ createSnapshot),\n/* harmony export */   l: () => (/* binding */ lookupLegacySupport),\n/* harmony export */   r: () => (/* binding */ rollbackAttributes),\n/* harmony export */   s: () => (/* binding */ serialize),\n/* harmony export */   u: () => (/* binding */ unloadRecord)\n/* harmony export */ });\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/debug */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fdebug&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_debug__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _ember_object__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember/object */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fobject&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_object__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_ember_object__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _ember_data_store__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ember-data/store */ \"../rewritten-packages/@ember-data/store.a4360448/node_modules/@ember-data/store/index.js\");\n/* harmony import */ var _ember_data_store_private__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ember-data/store/-private */ \"../rewritten-packages/@ember-data/store.a4360448/node_modules/@ember-data/store/-private.js\");\n/* harmony import */ var _ember_data_tracking__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ember-data/tracking */ \"../rewritten-packages/@ember-data/tracking.bbb05d16/node_modules/@ember-data/tracking/index.js\");\n/* harmony import */ var _ember_data_tracking_private__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ember-data/tracking/-private */ \"../rewritten-packages/@ember-data/tracking.bbb05d16/node_modules/@ember-data/tracking/-private.js\");\n/* harmony import */ var _warp_drive_core_types_symbols__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @warp-drive/core-types/symbols */ \"../rewritten-packages/@warp-drive/core-types.f90747f3/node_modules/@warp-drive/core-types/symbols.js\");\n/* harmony import */ var _ember_array__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @ember/array */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Farray&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_array__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_ember_array__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var _ember_array_proxy__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @ember/array/proxy */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Farray%2Fproxy&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_array_proxy__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_ember_array_proxy__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var _ember_object_computed__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @ember/object/computed */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fobject%2Fcomputed&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_object_computed__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_ember_object_computed__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var _ember_data_legacy_compat_private__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @ember-data/legacy-compat/-private */ \"../rewritten-packages/@ember-data/legacy-compat.e84b6420/node_modules/@ember-data/legacy-compat/-private.js\");\n/* harmony import */ var _ember_object_promise_proxy_mixin__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @ember/object/promise-proxy-mixin */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fobject%2Fpromise-proxy-mixin&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_object_promise_proxy_mixin__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(_ember_object_promise_proxy_mixin__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var _ember_object_proxy__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @ember/object/proxy */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fobject%2Fproxy&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_object_proxy__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(_ember_object_proxy__WEBPACK_IMPORTED_MODULE_12__);\n/* harmony import */ var _ember_object_internals__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @ember/object/internals */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fobject%2Finternals&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_object_internals__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(_ember_object_internals__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var _embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../../../../../../@embroider/macros/src/addon/es-compat2 */ \"../../@embroider/macros/src/addon/es-compat2.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n  @module @ember-data/store\n*/\n/**\n  A `ManyArray` is a `MutableArray` that represents the contents of a has-many\n  relationship.\n\n  The `ManyArray` is instantiated lazily the first time the relationship is\n  requested.\n\n  This class is not intended to be directly instantiated by consuming applications.\n\n  ### Inverses\n\n  Often, the relationships in Ember Data applications will have\n  an inverse. For example, imagine the following models are\n  defined:\n\n  ```app/models/post.js\n  import Model, { hasMany } from '@ember-data/model';\n\n  export default class PostModel extends Model {\n    @hasMany('comment') comments;\n  }\n  ```\n\n  ```app/models/comment.js\n  import Model, { belongsTo } from '@ember-data/model';\n\n  export default class CommentModel extends Model {\n    @belongsTo('post') post;\n  }\n  ```\n\n  If you created a new instance of `Post` and added\n  a `Comment` record to its `comments` has-many\n  relationship, you would expect the comment's `post`\n  property to be set to the post that contained\n  the has-many.\n\n  We call the record to which a relationship belongs-to the\n  relationship's _owner_.\n\n  @class ManyArray\n  @public\n*/\n\nclass RelatedCollection extends _ember_data_store_private__WEBPACK_IMPORTED_MODULE_3__.RecordArray {\n  /**\n    The loading state of this array\n     @property {Boolean} isLoaded\n    @public\n    */\n\n  /**\n    `true` if the relationship is polymorphic, `false` otherwise.\n     @property {Boolean} isPolymorphic\n    @private\n    */\n\n  /**\n    Metadata associated with the request for async hasMany relationships.\n     Example\n     Given that the server returns the following JSON payload when fetching a\n    hasMany relationship:\n     ```js\n    {\n      \"comments\": [{\n        \"id\": 1,\n        \"comment\": \"This is the first comment\",\n      }, {\n    // ...\n      }],\n       \"meta\": {\n        \"page\": 1,\n        \"total\": 5\n      }\n    }\n    ```\n     You can then access the meta data via the `meta` property:\n     ```js\n    let comments = await post.comments;\n    let meta = comments.meta;\n     // meta.page => 1\n    // meta.total => 5\n    ```\n     @property {Object | null} meta\n    @public\n    */\n\n  /**\n     * Retrieve the links for this relationship\n     *\n     @property {Object | null} links\n     @public\n     */\n\n  // @ts-expect-error\n\n  constructor(options) {\n    super(options);\n    this.isLoaded = options.isLoaded || false;\n    this.isAsync = options.isAsync || false;\n    this.isPolymorphic = options.isPolymorphic || false;\n    this.identifier = options.identifier;\n    this.key = options.key;\n  }\n  [_ember_data_store_private__WEBPACK_IMPORTED_MODULE_3__.MUTATE](target, receiver, prop, args, _SIGNAL) {\n    switch (prop) {\n      case 'length 0':\n        {\n          Reflect.set(target, 'length', 0);\n          mutateReplaceRelatedRecords(this, [], _SIGNAL);\n          return true;\n        }\n      case 'replace cell':\n        {\n          const [index, prior, value] = args;\n          target[index] = value;\n          mutateReplaceRelatedRecord(this, {\n            value,\n            prior,\n            index\n          }, _SIGNAL);\n          return true;\n        }\n      case 'push':\n        {\n          const newValues = extractIdentifiersFromRecords(args);\n          assertNoDuplicates(this, target, currentState => currentState.push(...newValues), `Cannot push duplicates to a hasMany's state.`);\n          {\n            // dedupe\n            const seen = new Set(target);\n            const unique = new Set();\n            args.forEach(item => {\n              const identifier = (0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_3__.recordIdentifierFor)(item);\n              if (!seen.has(identifier)) {\n                seen.add(identifier);\n                unique.add(item);\n              }\n            });\n            const newArgs = Array.from(unique);\n            const result = Reflect.apply(target[prop], receiver, newArgs);\n            if (newArgs.length) {\n              mutateAddToRelatedRecords(this, {\n                value: extractIdentifiersFromRecords(newArgs)\n              }, _SIGNAL);\n            }\n            return result;\n          }\n\n          // else, no dedupe, error on duplicates\n          const result = Reflect.apply(target[prop], receiver, args);\n          if (newValues.length) {\n            mutateAddToRelatedRecords(this, {\n              value: newValues\n            }, _SIGNAL);\n          }\n          return result;\n        }\n      case 'pop':\n        {\n          const result = Reflect.apply(target[prop], receiver, args);\n          if (result) {\n            mutateRemoveFromRelatedRecords(this, {\n              value: (0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_3__.recordIdentifierFor)(result)\n            }, _SIGNAL);\n          }\n          return result;\n        }\n      case 'unshift':\n        {\n          const newValues = extractIdentifiersFromRecords(args);\n          assertNoDuplicates(this, target, currentState => currentState.unshift(...newValues), `Cannot unshift duplicates to a hasMany's state.`);\n          {\n            // dedupe\n            const seen = new Set(target);\n            const unique = new Set();\n            args.forEach(item => {\n              const identifier = (0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_3__.recordIdentifierFor)(item);\n              if (!seen.has(identifier)) {\n                seen.add(identifier);\n                unique.add(item);\n              }\n            });\n            const newArgs = Array.from(unique);\n            const result = Reflect.apply(target[prop], receiver, newArgs);\n            if (newArgs.length) {\n              mutateAddToRelatedRecords(this, {\n                value: extractIdentifiersFromRecords(newArgs),\n                index: 0\n              }, _SIGNAL);\n            }\n            return result;\n          }\n\n          // else, no dedupe, error on duplicates\n          const result = Reflect.apply(target[prop], receiver, args);\n          if (newValues.length) {\n            mutateAddToRelatedRecords(this, {\n              value: newValues,\n              index: 0\n            }, _SIGNAL);\n          }\n          return result;\n        }\n      case 'shift':\n        {\n          const result = Reflect.apply(target[prop], receiver, args);\n          if (result) {\n            mutateRemoveFromRelatedRecords(this, {\n              value: (0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_3__.recordIdentifierFor)(result),\n              index: 0\n            }, _SIGNAL);\n          }\n          return result;\n        }\n      case 'sort':\n        {\n          const result = Reflect.apply(target[prop], receiver, args);\n          mutateSortRelatedRecords(this, result.map(_ember_data_store_private__WEBPACK_IMPORTED_MODULE_3__.recordIdentifierFor), _SIGNAL);\n          return result;\n        }\n      case 'splice':\n        {\n          const [start, deleteCount, ...adds] = args;\n\n          // detect a full replace\n          if (start === 0 && deleteCount === this[_ember_data_store_private__WEBPACK_IMPORTED_MODULE_3__.SOURCE].length) {\n            const newValues = extractIdentifiersFromRecords(adds);\n            assertNoDuplicates(this, target, currentState => currentState.splice(start, deleteCount, ...newValues), `Cannot replace a hasMany's state with a new state that contains duplicates.`);\n            {\n              // dedupe\n              const current = new Set(adds);\n              const unique = Array.from(current);\n              const newArgs = [start, deleteCount].concat(unique);\n              const result = Reflect.apply(target[prop], receiver, newArgs);\n              mutateReplaceRelatedRecords(this, extractIdentifiersFromRecords(unique), _SIGNAL);\n              return result;\n            }\n\n            // else, no dedupe, error on duplicates\n            const result = Reflect.apply(target[prop], receiver, args);\n            mutateReplaceRelatedRecords(this, newValues, _SIGNAL);\n            return result;\n          }\n          const newValues = extractIdentifiersFromRecords(adds);\n          assertNoDuplicates(this, target, currentState => currentState.splice(start, deleteCount, ...newValues), `Cannot splice a hasMany's state with a new state that contains duplicates.`);\n          {\n            // dedupe\n            const currentState = target.slice();\n            currentState.splice(start, deleteCount);\n            const seen = new Set(currentState);\n            const unique = [];\n            adds.forEach(item => {\n              const identifier = (0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_3__.recordIdentifierFor)(item);\n              if (!seen.has(identifier)) {\n                seen.add(identifier);\n                unique.push(item);\n              }\n            });\n            const newArgs = [start, deleteCount, ...unique];\n            const result = Reflect.apply(target[prop], receiver, newArgs);\n            if (deleteCount > 0) {\n              mutateRemoveFromRelatedRecords(this, {\n                value: result.map(_ember_data_store_private__WEBPACK_IMPORTED_MODULE_3__.recordIdentifierFor),\n                index: start\n              }, _SIGNAL);\n            }\n            if (unique.length > 0) {\n              mutateAddToRelatedRecords(this, {\n                value: extractIdentifiersFromRecords(unique),\n                index: start\n              }, _SIGNAL);\n            }\n            return result;\n          }\n\n          // else, no dedupe, error on duplicates\n          const result = Reflect.apply(target[prop], receiver, args);\n          if (deleteCount > 0) {\n            mutateRemoveFromRelatedRecords(this, {\n              value: result.map(_ember_data_store_private__WEBPACK_IMPORTED_MODULE_3__.recordIdentifierFor),\n              index: start\n            }, _SIGNAL);\n          }\n          if (newValues.length > 0) {\n            mutateAddToRelatedRecords(this, {\n              value: newValues,\n              index: start\n            }, _SIGNAL);\n          }\n          return result;\n        }\n      default:\n        ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`unable to convert ${prop} into a transaction that updates the cache state for this record array`));\n    }\n  }\n  notify() {\n    const signal = this[_ember_data_store_private__WEBPACK_IMPORTED_MODULE_3__.ARRAY_SIGNAL];\n    signal.shouldReset = true;\n    // @ts-expect-error\n    (0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_3__.notifyArray)(this);\n  }\n\n  /**\n    Reloads all of the records in the manyArray. If the manyArray\n    holds a relationship that was originally fetched using a links url\n    Ember Data will revisit the original links url to repopulate the\n    relationship.\n     If the manyArray holds the result of a `store.query()` reload will\n    re-run the original query.\n     Example\n     ```javascript\n    let user = store.peekRecord('user', '1')\n    await login(user);\n     let permissions = await user.permissions;\n    await permissions.reload();\n    ```\n     @method reload\n    @public\n  */\n  reload(options) {\n    // TODO this is odd, we don't ask the store for anything else like this?\n    return this._manager.reloadHasMany(this.key, options);\n  }\n\n  /**\n    Saves all of the records in the `ManyArray`.\n     Example\n     ```javascript\n    let inbox = await store.findRecord('inbox', '1');\n    let messages = await inbox.messages;\n    messages.forEach((message) => {\n      message.isRead = true;\n    });\n    messages.save();\n    ```\n     @method save\n    @public\n    @return {PromiseArray} promise\n  */\n\n  /**\n    Create a child record within the owner\n     @method createRecord\n    @public\n    @param {Object} hash\n    @return {Model} record\n  */\n  createRecord(hash) {\n    const {\n      store\n    } = this;\n    ( true && !(this.modelName) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Expected modelName to be set`, this.modelName));\n    const record = store.createRecord(this.modelName, hash);\n    this.push(record);\n    return record;\n  }\n  destroy() {\n    super.destroy(false);\n  }\n}\nRelatedCollection.prototype.isAsync = false;\nRelatedCollection.prototype.isPolymorphic = false;\nRelatedCollection.prototype.identifier = null;\nRelatedCollection.prototype.cache = null;\nRelatedCollection.prototype._inverseIsAsync = false;\nRelatedCollection.prototype.key = '';\nRelatedCollection.prototype.DEPRECATED_CLASS_NAME = 'ManyArray';\nfunction assertRecordPassedToHasMany(record) {\n  ( true && !(function () {\n    try {\n      (0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_3__.recordIdentifierFor)(record);\n      return true;\n    } catch {\n      return false;\n    }\n  }()) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`All elements of a hasMany relationship must be instances of Model, you passed $${typeof record}`, function () {\n    try {\n      (0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_3__.recordIdentifierFor)(record);\n      return true;\n    } catch {\n      return false;\n    }\n  }()));\n}\nfunction extractIdentifiersFromRecords(records) {\n  return records.map(extractIdentifierFromRecord$1);\n}\nfunction extractIdentifierFromRecord$1(recordOrPromiseRecord) {\n  assertRecordPassedToHasMany(recordOrPromiseRecord);\n  return (0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_3__.recordIdentifierFor)(recordOrPromiseRecord);\n}\nfunction assertNoDuplicates(collection, target, callback, reason) {\n  const state = target.slice();\n  callback(state);\n  if (state.length !== new Set(state).size) {\n    const duplicates = state.filter((currentValue, currentIndex) => state.indexOf(currentValue) !== currentIndex);\n    {\n      ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.deprecate)(`${reason} This behavior is deprecated. Found duplicates for the following records within the new state provided to \\`<${collection.identifier.type}:${collection.identifier.id || collection.identifier.lid}>.${collection.key}\\`\\n\\t- ${Array.from(new Set(duplicates)).map(r => (0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_3__.isStableIdentifier)(r) ? r.lid : (0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_3__.recordIdentifierFor)(r).lid).sort((a, b) => a.localeCompare(b)).join('\\n\\t- ')}`, false, {\n        id: 'ember-data:deprecate-many-array-duplicates',\n        for: 'ember-data',\n        until: '6.0',\n        since: {\n          enabled: '5.3',\n          available: '5.3'\n        }\n      }));\n    }\n  }\n}\nfunction mutateAddToRelatedRecords(collection, operationInfo, _SIGNAL) {\n  mutate(collection, {\n    op: 'addToRelatedRecords',\n    record: collection.identifier,\n    field: collection.key,\n    ...operationInfo\n  }, _SIGNAL);\n}\nfunction mutateRemoveFromRelatedRecords(collection, operationInfo, _SIGNAL) {\n  mutate(collection, {\n    op: 'removeFromRelatedRecords',\n    record: collection.identifier,\n    field: collection.key,\n    ...operationInfo\n  }, _SIGNAL);\n}\nfunction mutateReplaceRelatedRecord(collection, operationInfo, _SIGNAL) {\n  mutate(collection, {\n    op: 'replaceRelatedRecord',\n    record: collection.identifier,\n    field: collection.key,\n    ...operationInfo\n  }, _SIGNAL);\n}\nfunction mutateReplaceRelatedRecords(collection, value, _SIGNAL) {\n  mutate(collection, {\n    op: 'replaceRelatedRecords',\n    record: collection.identifier,\n    field: collection.key,\n    value\n  }, _SIGNAL);\n}\nfunction mutateSortRelatedRecords(collection, value, _SIGNAL) {\n  mutate(collection, {\n    op: 'sortRelatedRecords',\n    record: collection.identifier,\n    field: collection.key,\n    value\n  }, _SIGNAL);\n}\nfunction mutate(collection, mutation, _SIGNAL) {\n  collection._manager.mutate(mutation);\n  (0,_ember_data_tracking_private__WEBPACK_IMPORTED_MODULE_5__.addToTransaction)(_SIGNAL);\n}\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object.keys(descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n  if (desc.initializer === void 0) {\n    Object.defineProperty(target, property, desc);\n    desc = null;\n  }\n  return desc;\n}\nconst PromiseObject = _ember_object_proxy__WEBPACK_IMPORTED_MODULE_12___default().extend((_ember_object_promise_proxy_mixin__WEBPACK_IMPORTED_MODULE_11___default()));\nvar _dec$1, _class$6;\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\nconst Extended = PromiseObject;\n\n/**\n @module @ember-data/model\n */\n\n/**\n  A PromiseBelongsTo is a PromiseObject that also proxies certain method calls\n  to the underlying belongsTo model.\n  Right now we proxy:\n    * `reload()`\n  @class PromiseBelongsTo\n  @extends PromiseObject\n  @private\n*/\nlet PromiseBelongsTo = (_dec$1 = (0,_ember_object__WEBPACK_IMPORTED_MODULE_1__.computed)(), (_class$6 = class PromiseBelongsTo extends Extended {\n  get id() {\n    const {\n      key,\n      legacySupport\n    } = this._belongsToState;\n    const ref = legacySupport.referenceFor('belongsTo', key);\n    return ref.id();\n  }\n\n  // we don't proxy meta because we would need to proxy it to the relationship state container\n  //  however, meta on relationships does not trigger change notifications.\n  //  if you need relationship meta, you should do `record.belongsTo(relationshipName).meta()`\n  get meta() {\n    // eslint-disable-next-line no-constant-condition\n    {\n      ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)('You attempted to access meta on the promise for the async belongsTo relationship ' + `${this._belongsToState.modelName}:${this._belongsToState.key}'.` + '\\nUse `record.belongsTo(relationshipName).meta()` instead.', false));\n    }\n    return;\n  }\n  async reload(options) {\n    ( true && !(this.content !== undefined) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)('You are trying to reload an async belongsTo before it has been created', this.content !== undefined));\n    const {\n      key,\n      legacySupport\n    } = this._belongsToState;\n    await legacySupport.reloadBelongsTo(key, options);\n    return this;\n  }\n}, (_applyDecoratedDescriptor(_class$6.prototype, \"id\", [_ember_data_tracking__WEBPACK_IMPORTED_MODULE_4__.cached], Object.getOwnPropertyDescriptor(_class$6.prototype, \"id\"), _class$6.prototype), _applyDecoratedDescriptor(_class$6.prototype, \"meta\", [_dec$1], Object.getOwnPropertyDescriptor(_class$6.prototype, \"meta\"), _class$6.prototype)), _class$6));\nvar _class$5;\n/**\n @module @ember-data/model\n */\n/**\n  This class is returned as the result of accessing an async hasMany relationship\n  on an instance of a Model extending from `@ember-data/model`.\n\n  A PromiseManyArray is an iterable proxy that allows templates to consume related\n  ManyArrays and update once their contents are no longer pending.\n\n  In your JS code you should resolve the promise first.\n\n  ```js\n  const comments = await post.comments;\n  ```\n\n  @class PromiseManyArray\n  @public\n*/\nlet PromiseManyArray = (_class$5 = class PromiseManyArray {\n  constructor(promise, content) {\n    this._update(promise, content);\n    this.isDestroyed = false;\n  }\n\n  //---- Methods/Properties on ArrayProxy that we will keep as our API\n\n  /**\n   * Retrieve the length of the content\n   * @property length\n   * @public\n   */\n  get length() {\n    // shouldn't be needed, but ends up being needed\n    // for computed chains even in 4.x\n    {\n      this['[]'];\n    }\n    return this.content ? this.content.length : 0;\n  }\n\n  /**\n   * Iterate the proxied content. Called by the glimmer iterator in #each\n   * We do not guarantee that forEach will always be available. This\n   * may eventually be made to use Symbol.Iterator once glimmer supports it.\n   *\n   * @method forEach\n   * @param cb\n   * @return\n   * @private\n   */\n  forEach(cb) {\n    if (this.content && this.length) {\n      this.content.forEach(cb);\n    }\n  }\n\n  /**\n   * Reload the relationship\n   * @method reload\n   * @public\n   * @param options\n   * @return\n   */\n  reload(options) {\n    ( true && !(this.content) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)('You are trying to reload an async manyArray before it has been created', this.content));\n    void this.content.reload(options);\n    return this;\n  }\n\n  //----  Properties/Methods from the PromiseProxyMixin that we will keep as our API\n\n  /**\n   * Whether the loading promise is still pending\n   *\n   * @property {boolean} isPending\n   * @public\n   */\n\n  /**\n   * Whether the loading promise rejected\n   *\n   * @property {boolean} isRejected\n   * @public\n   */\n\n  /**\n   * Whether the loading promise succeeded\n   *\n   * @property {boolean} isFulfilled\n   * @public\n   */\n\n  /**\n   * Whether the loading promise completed (resolved or rejected)\n   *\n   * @property {boolean} isSettled\n   * @public\n   */\n\n  /**\n   * chain this promise\n   *\n   * @method then\n   * @public\n   * @param success\n   * @param fail\n   * @return Promise\n   */\n  then(s, f) {\n    return this.promise.then(s, f);\n  }\n\n  /**\n   * catch errors thrown by this promise\n   * @method catch\n   * @public\n   * @param callback\n   * @return Promise\n   */\n  catch(cb) {\n    return this.promise.catch(cb);\n  }\n\n  /**\n   * run cleanup after this promise completes\n   *\n   * @method finally\n   * @public\n   * @param callback\n   * @return Promise\n   */\n  finally(cb) {\n    return this.promise.finally(cb);\n  }\n\n  //---- Methods on EmberObject that we should keep\n\n  destroy() {\n    this.isDestroyed = true;\n    this.content = null;\n    this.promise = null;\n  }\n\n  //---- Methods/Properties on ManyArray that we own and proxy to\n\n  /**\n   * Retrieve the links for this relationship\n   * @property links\n   * @public\n   */\n  get links() {\n    return this.content ? this.content.links : undefined;\n  }\n\n  /**\n   * Retrieve the meta for this relationship\n   * @property meta\n   * @public\n   */\n  get meta() {\n    return this.content ? this.content.meta : undefined;\n  }\n\n  //---- Our own stuff\n\n  _update(promise, content) {\n    if (content !== undefined) {\n      this.content = content;\n    }\n    this.promise = tapPromise(this, promise);\n  }\n  static create({\n    promise,\n    content\n  }) {\n    return new this(promise, content);\n  }\n}, (_applyDecoratedDescriptor(_class$5.prototype, \"length\", [_ember_data_tracking__WEBPACK_IMPORTED_MODULE_4__.compat], Object.getOwnPropertyDescriptor(_class$5.prototype, \"length\"), _class$5.prototype), _applyDecoratedDescriptor(_class$5.prototype, \"links\", [_ember_data_tracking__WEBPACK_IMPORTED_MODULE_4__.compat], Object.getOwnPropertyDescriptor(_class$5.prototype, \"links\"), _class$5.prototype), _applyDecoratedDescriptor(_class$5.prototype, \"meta\", [_ember_data_tracking__WEBPACK_IMPORTED_MODULE_4__.compat], Object.getOwnPropertyDescriptor(_class$5.prototype, \"meta\"), _class$5.prototype)), _class$5);\n(0,_ember_data_tracking_private__WEBPACK_IMPORTED_MODULE_5__.defineSignal)(PromiseManyArray.prototype, 'content', null);\n(0,_ember_data_tracking_private__WEBPACK_IMPORTED_MODULE_5__.defineSignal)(PromiseManyArray.prototype, 'isPending', false);\n(0,_ember_data_tracking_private__WEBPACK_IMPORTED_MODULE_5__.defineSignal)(PromiseManyArray.prototype, 'isRejected', false);\n(0,_ember_data_tracking_private__WEBPACK_IMPORTED_MODULE_5__.defineSignal)(PromiseManyArray.prototype, 'isFulfilled', false);\n(0,_ember_data_tracking_private__WEBPACK_IMPORTED_MODULE_5__.defineSignal)(PromiseManyArray.prototype, 'isSettled', false);\n\n// this will error if someone tries to call\n// A(identifierArray) since it is not configurable\n// which is preferrable to the `meta` override we used\n// before which required importing all of Ember\n{\n  const desc = {\n    enumerable: true,\n    configurable: false,\n    get: function () {\n      return this.content?.length && this.content;\n    }\n  };\n  (0,_ember_data_tracking__WEBPACK_IMPORTED_MODULE_4__.compat)(desc);\n\n  // ember-source < 3.23 (e.g. 3.20 lts)\n  // requires that the tag `'[]'` be notified\n  // on the ArrayProxy in order for `{{#each}}`\n  // to recompute. We entangle the '[]' tag from content\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  Object.defineProperty(PromiseManyArray.prototype, '[]', desc);\n}\nfunction tapPromise(proxy, promise) {\n  proxy.isPending = true;\n  proxy.isSettled = false;\n  proxy.isFulfilled = false;\n  proxy.isRejected = false;\n  return Promise.resolve(promise).then(content => {\n    proxy.isPending = false;\n    proxy.isFulfilled = true;\n    proxy.isSettled = true;\n    proxy.content = content;\n    return content;\n  }, error => {\n    proxy.isPending = false;\n    proxy.isFulfilled = false;\n    proxy.isRejected = true;\n    proxy.isSettled = true;\n    throw error;\n  });\n}\n\n/*\n  Assert that `addedRecord` has a valid type so it can be added to the\n  relationship of the `record`.\n\n  The assert basically checks if the `addedRecord` can be added to the\n  relationship (specified via `relationshipMeta`) of the `record`.\n\n  This utility should only be used internally, as both record parameters must\n  be stable record identifiers and the `relationshipMeta` needs to be the meta\n  information about the relationship, retrieved via\n  `record.relationshipFor(key)`.\n*/\nlet assertPolymorphicType;\n{\n  assertPolymorphicType = function assertPolymorphicType(parentIdentifier, parentDefinition, addedIdentifier, store) {\n    if (parentDefinition.inverseIsImplicit) {\n      return;\n    }\n    if (parentDefinition.isPolymorphic) {\n      let meta = store.getSchemaDefinitionService().relationshipsDefinitionFor(addedIdentifier)[parentDefinition.inverseKey];\n      ( true && !(meta?.options.as === parentDefinition.type) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`The schema for the relationship '${parentDefinition.inverseKey}' on '${addedIdentifier.type}' type does not implement '${parentDefinition.type}' and thus cannot be assigned to the '${parentDefinition.key}' relationship in '${parentIdentifier.type}'. The definition should specify 'as: \"${parentDefinition.type}\"' in options.`, meta?.options.as === parentDefinition.type));\n    }\n  };\n}\nvar _class$4;\n/**\n  @module @ember-data/model\n*/\nfunction isResourceIdentiferWithRelatedLinks$1(value) {\n  return Boolean(value && value.links && value.links.related);\n}\n/**\n A `HasManyReference` is a low-level API that allows access\n and manipulation of a hasMany relationship.\n\n It is especially useful when you're dealing with `async` relationships\n from `@ember-data/model` as it allows synchronous access to\n the relationship data if loaded, as well as APIs for loading, reloading\n the data or accessing available information without triggering a load.\n\n It may also be useful when using `sync` relationships with `@ember-data/model`\n that need to be loaded/reloaded with more precise timing than marking the\n relationship as `async` and relying on autofetch would have allowed.\n\n However,keep in mind that marking a relationship as `async: false` will introduce\n bugs into your application if the data is not always guaranteed to be available\n by the time the relationship is accessed. Ergo, it is recommended when using this\n approach to utilize `links` for unloaded relationship state instead of identifiers.\n\n Reference APIs are entangled with the relationship's underlying state,\n thus any getters or cached properties that utilize these will properly\n invalidate if the relationship state changes.\n\n References are \"stable\", meaning that multiple calls to retrieve the reference\n  for a given relationship will always return the same HasManyReference.\n\n @class HasManyReference\n @public\n */\nlet HasManyReference = (_class$4 = class HasManyReference {\n  constructor(store, graph, parentIdentifier, hasManyRelationship, key) {\n    /**\n     * The field name on the parent record for this has-many relationship.\n     *\n     * @property {String} key\n     * @public\n     */\n    /**\n     * The type of resource this relationship will contain.\n     *\n     * @property {String} type\n     * @public\n     */\n    // unsubscribe tokens given to us by the notification manager\n    this.___token = void 0;\n    this.___identifier = void 0;\n    this.___relatedTokenMap = void 0;\n    this.graph = graph;\n    this.key = key;\n    this.hasManyRelationship = hasManyRelationship;\n    this.type = hasManyRelationship.definition.type;\n    this.store = store;\n    this.___identifier = parentIdentifier;\n    this.___token = store.notifications.subscribe(parentIdentifier, (_, bucket, notifiedKey) => {\n      if (bucket === 'relationships' && notifiedKey === key) {\n        this._ref++;\n      }\n    });\n    this.___relatedTokenMap = new Map();\n    // TODO inverse\n  }\n\n  /**\n   * This method should never be called by user code.\n   *\n   * @internal\n   */\n  destroy() {\n    this.store.notifications.unsubscribe(this.___token);\n    this.___relatedTokenMap.forEach(token => {\n      this.store.notifications.unsubscribe(token);\n    });\n    this.___relatedTokenMap.clear();\n  }\n\n  /**\n   * An array of identifiers for the records that this reference refers to.\n   *\n   * @property {StableRecordIdentifier[]} identifiers\n   * @public\n   */\n  get identifiers() {\n    this._ref; // consume the tracked prop\n\n    const resource = this._resource();\n    const map = this.___relatedTokenMap;\n    this.___relatedTokenMap = new Map();\n    if (resource && resource.data) {\n      return resource.data.map(resourceIdentifier => {\n        const identifier = this.store.identifierCache.getOrCreateRecordIdentifier(resourceIdentifier);\n        let token = map.get(identifier);\n        if (token) {\n          map.delete(identifier);\n        } else {\n          token = this.store.notifications.subscribe(identifier, (_, bucket, notifiedKey) => {\n            if (bucket === 'identity' || bucket === 'attributes' && notifiedKey === 'id') {\n              this._ref++;\n            }\n          });\n        }\n        this.___relatedTokenMap.set(identifier, token);\n        return identifier;\n      });\n    }\n    map.forEach(token => {\n      this.store.notifications.unsubscribe(token);\n    });\n    map.clear();\n    return [];\n  }\n  _resource() {\n    const cache = this.store.cache;\n    return cache.getRelationship(this.___identifier, this.key);\n  }\n\n  /**\n   This returns a string that represents how the reference will be\n   looked up when it is loaded. If the relationship has a link it will\n   use the \"link\" otherwise it defaults to \"id\".\n    Example\n    ```app/models/post.js\n   import Model, { hasMany } from '@ember-data/model';\n    export default class PostModel extends Model {\n     @hasMany('comment', { async: true, inverse: null }) comments;\n   }\n   ```\n    ```javascript\n   let post = store.push({\n     data: {\n       type: 'post',\n       id: 1,\n       relationships: {\n         comments: {\n           data: [{ type: 'comment', id: 1 }]\n         }\n       }\n     }\n   });\n    let commentsRef = post.hasMany('comments');\n    // get the identifier of the reference\n   if (commentsRef.remoteType() === \"ids\") {\n     let ids = commentsRef.ids();\n   } else if (commentsRef.remoteType() === \"link\") {\n     let link = commentsRef.link();\n   }\n   ```\n    @method remoteType\n   @public\n   @return {String} The name of the remote type. This should either be `link` or `ids`\n   */\n  remoteType() {\n    const value = this._resource();\n    if (value && value.links && value.links.related) {\n      return 'link';\n    }\n    return 'ids';\n  }\n\n  /**\n   `ids()` returns an array of the record IDs in this relationship.\n    Example\n    ```app/models/post.js\n   import Model, { hasMany } from '@ember-data/model';\n    export default class PostModel extends Model {\n     @hasMany('comment', { async: true, inverse: null }) comments;\n   }\n   ```\n    ```javascript\n   let post = store.push({\n     data: {\n       type: 'post',\n       id: 1,\n       relationships: {\n         comments: {\n           data: [{ type: 'comment', id: 1 }]\n         }\n       }\n     }\n   });\n    let commentsRef = post.hasMany('comments');\n    commentsRef.ids(); // ['1']\n   ```\n    @method ids\n    @public\n   @return {Array} The ids in this has-many relationship\n   */\n  ids() {\n    return this.identifiers.map(identifier => identifier.id);\n  }\n\n  /**\n   The link Ember Data will use to fetch or reload this belongs-to\n   relationship. By default it uses only the \"related\" resource linkage.\n    Example\n    ```javascript\n   // models/blog.js\n   import Model, { belongsTo } from '@ember-data/model';\n   export default Model.extend({\n      user: belongsTo('user', { async: true, inverse: null })\n    });\n    let blog = store.push({\n      data: {\n        type: 'blog',\n        id: 1,\n        relationships: {\n          user: {\n            links: {\n              related: '/articles/1/author'\n            }\n          }\n        }\n      }\n    });\n   let userRef = blog.belongsTo('user');\n    // get the identifier of the reference\n   if (userRef.remoteType() === \"link\") {\n      let link = userRef.link();\n    }\n   ```\n    @method link\n   @public\n   @return {String} The link Ember Data will use to fetch or reload this belongs-to relationship.\n   */\n  link() {\n    const resource = this._resource();\n    if (isResourceIdentiferWithRelatedLinks$1(resource)) {\n      if (resource.links) {\n        const related = resource.links.related;\n        return !related || typeof related === 'string' ? related : related.href;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * any links that have been received for this relationship\n   *\n   * @method links\n   * @public\n   * @return\n   */\n  links() {\n    const resource = this._resource();\n    return resource && resource.links ? resource.links : null;\n  }\n\n  /**\n   The meta data for the has-many relationship.\n    Example\n    ```javascript\n   // models/blog.js\n   import Model, { hasMany } from '@ember-data/model';\n   export default Model.extend({\n      users: hasMany('user', { async: true, inverse: null })\n    });\n    let blog = store.push({\n      data: {\n        type: 'blog',\n        id: 1,\n        relationships: {\n          users: {\n            links: {\n              related: {\n                href: '/articles/1/authors'\n              },\n            },\n            meta: {\n              lastUpdated: 1458014400000\n            }\n          }\n        }\n      }\n    });\n    let usersRef = blog.hasMany('user');\n    usersRef.meta() // { lastUpdated: 1458014400000 }\n   ```\n   @method meta\n  @public\n  @return {Object|null} The meta information for the belongs-to relationship.\n  */\n  meta() {\n    let meta = null;\n    const resource = this._resource();\n    if (resource && resource.meta && typeof resource.meta === 'object') {\n      meta = resource.meta;\n    }\n    return meta;\n  }\n\n  /**\n   `push` can be used to update the data in the relationship and EmberData\n   will treat the new data as the canonical value of this relationship on\n   the backend. An empty array will signify the canonical value should be\n   empty.\n    Example model\n    ```app/models/post.js\n   import Model, { hasMany } from '@ember-data/model';\n    export default class PostModel extends Model {\n     @hasMany('comment', { async: true, inverse: null }) comments;\n   }\n   ```\n    Setup some initial state, note we haven't loaded the comments yet:\n    ```js\n   const post = store.push({\n     data: {\n       type: 'post',\n       id: '1',\n       relationships: {\n         comments: {\n           data: [{ type: 'comment', id: '1' }]\n         }\n       }\n     }\n   });\n    const commentsRef = post.hasMany('comments');\n   commentsRef.ids(); // ['1']\n   ```\n    Update the state using `push`, note we can do this even without\n   having loaded these comments yet by providing resource identifiers.\n    Both full resources and resource identifiers are supported.\n    ```js\n   await commentsRef.push({\n    data: [\n     { type: 'comment', id: '2' },\n     { type: 'comment', id: '3' },\n    ]\n   });\n    commentsRef.ids(); // ['2', '3']\n   ```\n    For convenience, you can also pass in an array of resources or resource identifiers\n   without wrapping them in the `data` property:\n    ```js\n   await commentsRef.push([\n     { type: 'comment', id: '4' },\n     { type: 'comment', id: '5' },\n   ]);\n    commentsRef.ids(); // ['4', '5']\n   ```\n    When using the `data` property, you may also include other resource data via included,\n   as well as provide new links and meta to the relationship.\n    ```js\n   await commentsRef.push({\n     links: {\n       related: '/posts/1/comments'\n     },\n     meta: {\n       total: 2\n     },\n     data: [\n       { type: 'comment', id: '4' },\n       { type: 'comment', id: '5' },\n     ],\n     included: [\n       { type: 'other-thing', id: '1', attributes: { foo: 'bar' },\n     ]\n   });\n   ```\n    By default, the store will attempt to fetch any unloaded records before resolving\n   the returned promise with the ManyArray.\n    Alternatively, pass `true` as the second argument to avoid fetching unloaded records\n   and instead the promise will resolve with void without attempting to fetch. This is\n   particularly useful if you want to update the state of the relationship without\n   forcing the load of all of the associated records.\n    @method push\n   @public\n   @param {Array|Object} doc a JSONAPI document object describing the new value of this relationship.\n   @param {Boolean} [skipFetch] if `true`, do not attempt to fetch unloaded records\n   @return {Promise<ManyArray | void>}\n  */\n  async push(doc, skipFetch) {\n    const {\n      store\n    } = this;\n    const dataDoc = Array.isArray(doc) ? {\n      data: doc\n    } : doc;\n    const isResourceData = Array.isArray(dataDoc.data) && dataDoc.data.length > 0 && isMaybeResource(dataDoc.data[0]);\n\n    // enforce that one of links, meta or data is present\n    ( true && !('links' in dataDoc || 'meta' in dataDoc || 'data' in dataDoc) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`You must provide at least one of 'links', 'meta' or 'data' when calling hasManyReference.push`, 'links' in dataDoc || 'meta' in dataDoc || 'data' in dataDoc));\n    const identifiers = !Array.isArray(dataDoc.data) ? [] : isResourceData ? store._push(dataDoc, true) : dataDoc.data.map(i => store.identifierCache.getOrCreateRecordIdentifier(i));\n    const {\n      identifier\n    } = this.hasManyRelationship;\n    {\n      const relationshipMeta = this.hasManyRelationship.definition;\n      identifiers.forEach(added => {\n        assertPolymorphicType(identifier, relationshipMeta, added, store);\n      });\n    }\n    const newData = {};\n    // only set data if it was passed in\n    if (Array.isArray(dataDoc.data)) {\n      newData.data = identifiers;\n    }\n    if ('links' in dataDoc) {\n      newData.links = dataDoc.links;\n    }\n    if ('meta' in dataDoc) {\n      newData.meta = dataDoc.meta;\n    }\n    store._join(() => {\n      this.graph.push({\n        op: 'updateRelationship',\n        record: identifier,\n        field: this.key,\n        value: newData\n      });\n    });\n    if (!skipFetch) return this.load();\n  }\n  _isLoaded() {\n    const hasRelationshipDataProperty = this.hasManyRelationship.state.hasReceivedData;\n    if (!hasRelationshipDataProperty) {\n      return false;\n    }\n    const relationship = this.graph.getData(this.hasManyRelationship.identifier, this.key);\n    return relationship.data?.every(identifier => {\n      return this.store._instanceCache.recordIsLoaded(identifier, true) === true;\n    });\n  }\n\n  /**\n   `value()` synchronously returns the current value of the has-many\n   relationship. Unlike `record.relationshipName`, calling\n   `value()` on a reference does not trigger a fetch if the async\n   relationship is not yet loaded. If the relationship is not loaded\n   it will always return `null`.\n    Example\n    ```app/models/post.js\n   import Model, { hasMany } from '@ember-data/model';\n    export default class PostModel extends Model {\n     @hasMany('comment', { async: true, inverse: null }) comments;\n   }\n   ```\n    ```javascript\n   let post = store.push({\n     data: {\n       type: 'post',\n       id: 1,\n       relationships: {\n         comments: {\n           data: [{ type: 'comment', id: 1 }]\n         }\n       }\n     }\n   });\n    let commentsRef = post.hasMany('comments');\n    post.comments.then(function(comments) {\n     commentsRef.value() === comments\n   })\n   ```\n    @method value\n    @public\n   @return {ManyArray}\n   */\n  value() {\n    const support = LEGACY_SUPPORT.get(this.___identifier);\n    const loaded = this._isLoaded();\n    if (!loaded) {\n      // subscribe to changes\n      // for when we are not loaded yet\n      this._ref;\n      return null;\n    }\n    return support.getManyArray(this.key);\n  }\n\n  /**\n   Loads the relationship if it is not already loaded.  If the\n   relationship is already loaded this method does not trigger a new\n   load. This causes a request to the specified\n   relationship link or reloads all items currently in the relationship.\n    Example\n    ```app/models/post.js\n   import Model, { hasMany } from '@ember-data/model';\n    export default class PostModel extends Model {\n     @hasMany('comment', { async: true, inverse: null }) comments;\n   }\n   ```\n    ```javascript\n   let post = store.push({\n     data: {\n       type: 'post',\n       id: 1,\n       relationships: {\n         comments: {\n           data: [{ type: 'comment', id: 1 }]\n         }\n       }\n     }\n   });\n    let commentsRef = post.hasMany('comments');\n    commentsRef.load().then(function(comments) {\n     //...\n   });\n   ```\n    You may also pass in an options object whose properties will be\n   fed forward. This enables you to pass `adapterOptions` into the\n   request given to the adapter via the reference.\n    Example\n    ```javascript\n   commentsRef.load({ adapterOptions: { isPrivate: true } })\n     .then(function(comments) {\n       //...\n     });\n   ```\n    ```app/adapters/comment.js\n   export default ApplicationAdapter.extend({\n     findMany(store, type, id, snapshots) {\n       // In the adapter you will have access to adapterOptions.\n       let adapterOptions = snapshots[0].adapterOptions;\n     }\n   });\n   ```\n    @method load\n   @public\n   @param {Object} options the options to pass in.\n   @return {Promise} a promise that resolves with the ManyArray in\n   this has-many relationship.\n   */\n  async load(options) {\n    const support = LEGACY_SUPPORT.get(this.___identifier);\n    const fetchSyncRel = !this.hasManyRelationship.definition.isAsync && !areAllInverseRecordsLoaded(this.store, this._resource());\n    return fetchSyncRel ? support.reloadHasMany(this.key, options) :\n    // we cast to fix the return type since typescript and eslint don't understand async functions\n    // properly\n    support.getHasMany(this.key, options);\n  }\n\n  /**\n   Reloads this has-many relationship. This causes a request to the specified\n   relationship link or reloads all items currently in the relationship.\n    Example\n    ```app/models/post.js\n   import Model, { hasMany } from '@ember-data/model';\n    export default class PostModel extends Model {\n     @hasMany('comment', { async: true, inverse: null }) comments;\n   }\n   ```\n    ```javascript\n   let post = store.push({\n     data: {\n       type: 'post',\n       id: 1,\n       relationships: {\n         comments: {\n           data: [{ type: 'comment', id: 1 }]\n         }\n       }\n     }\n   });\n    let commentsRef = post.hasMany('comments');\n    commentsRef.reload().then(function(comments) {\n     //...\n   });\n   ```\n    You may also pass in an options object whose properties will be\n   fed forward. This enables you to pass `adapterOptions` into the\n   request given to the adapter via the reference. A full example\n   can be found in the `load` method.\n    Example\n    ```javascript\n   commentsRef.reload({ adapterOptions: { isPrivate: true } })\n   ```\n    @method reload\n    @public\n   @param {Object} options the options to pass in.\n   @return {Promise} a promise that resolves with the ManyArray in this has-many relationship.\n   */\n  reload(options) {\n    const support = LEGACY_SUPPORT.get(this.___identifier);\n    return support.reloadHasMany(this.key, options);\n  }\n}, _applyDecoratedDescriptor(_class$4.prototype, \"identifiers\", [_ember_data_tracking__WEBPACK_IMPORTED_MODULE_4__.cached, _ember_data_tracking__WEBPACK_IMPORTED_MODULE_4__.compat], Object.getOwnPropertyDescriptor(_class$4.prototype, \"identifiers\"), _class$4.prototype), _class$4);\n(0,_ember_data_tracking_private__WEBPACK_IMPORTED_MODULE_5__.defineSignal)(HasManyReference.prototype, '_ref', 0);\nfunction isMaybeResource(object) {\n  const keys = Object.keys(object).filter(k => k !== 'id' && k !== 'type' && k !== 'lid');\n  return keys.length > 0;\n}\nvar _class$3;\nfunction isResourceIdentiferWithRelatedLinks(value) {\n  return Boolean(value && value.links && value.links.related);\n}\n\n/**\n A `BelongsToReference` is a low-level API that allows access\n and manipulation of a belongsTo relationship.\n\n It is especially useful when you're dealing with `async` relationships\n from `@ember-data/model` as it allows synchronous access to\n the relationship data if loaded, as well as APIs for loading, reloading\n the data or accessing available information without triggering a load.\n\n It may also be useful when using `sync` relationships with `@ember-data/model`\n that need to be loaded/reloaded with more precise timing than marking the\n relationship as `async` and relying on autofetch would have allowed.\n\n However,keep in mind that marking a relationship as `async: false` will introduce\n bugs into your application if the data is not always guaranteed to be available\n by the time the relationship is accessed. Ergo, it is recommended when using this\n approach to utilize `links` for unloaded relationship state instead of identifiers.\n\n Reference APIs are entangled with the relationship's underlying state,\n thus any getters or cached properties that utilize these will properly\n invalidate if the relationship state changes.\n\n References are \"stable\", meaning that multiple calls to retrieve the reference\n  for a given relationship will always return the same HasManyReference.\n\n @class BelongsToReference\n @public\n */\nlet BelongsToReference = (_class$3 = class BelongsToReference {\n  /**\n   * The field name on the parent record for this has-many relationship.\n   *\n   * @property {String} key\n   * @public\n   */\n\n  /**\n   * The type of resource this relationship will contain.\n   *\n   * @property {String} type\n   * @public\n   */\n\n  // unsubscribe tokens given to us by the notification manager\n\n  constructor(store, graph, parentIdentifier, belongsToRelationship, key) {\n    this.graph = graph;\n    this.key = key;\n    this.belongsToRelationship = belongsToRelationship;\n    this.type = belongsToRelationship.definition.type;\n    this.store = store;\n    this.___identifier = parentIdentifier;\n    this.___relatedToken = null;\n    this.___token = store.notifications.subscribe(parentIdentifier, (_, bucket, notifiedKey) => {\n      if (bucket === 'relationships' && notifiedKey === key) {\n        this._ref++;\n      }\n    });\n\n    // TODO inverse\n  }\n  destroy() {\n    // TODO @feature we need the notification manager often enough\n    // we should potentially just expose it fully public\n    this.store.notifications.unsubscribe(this.___token);\n    this.___token = null;\n    if (this.___relatedToken) {\n      this.store.notifications.unsubscribe(this.___relatedToken);\n      this.___relatedToken = null;\n    }\n  }\n\n  /**\n   * The identifier of the record that this reference refers to.\n   * `null` if no related record is known.\n   *\n   * @property {StableRecordIdentifier | null} identifier\n   * @public\n   */\n  get identifier() {\n    if (this.___relatedToken) {\n      this.store.notifications.unsubscribe(this.___relatedToken);\n      this.___relatedToken = null;\n    }\n    const resource = this._resource();\n    if (resource && resource.data) {\n      const identifier = this.store.identifierCache.getOrCreateRecordIdentifier(resource.data);\n      this.___relatedToken = this.store.notifications.subscribe(identifier, (_, bucket, notifiedKey) => {\n        if (bucket === 'identity' || bucket === 'attributes' && notifiedKey === 'id') {\n          this._ref++;\n        }\n      });\n      return identifier;\n    }\n    return null;\n  }\n\n  /**\n   The `id` of the record that this reference refers to. Together, the\n   `type()` and `id()` methods form a composite key for the identity\n   map. This can be used to access the id of an async relationship\n   without triggering a fetch that would normally happen if you\n   attempted to use `record.relationship.id`.\n    Example\n    ```javascript\n   // models/blog.js\n   import Model, { belongsTo } from '@ember-data/model';\n    export default class BlogModel extends Model {\n    @belongsTo('user', { async: true, inverse: null }) user;\n   }\n    let blog = store.push({\n      data: {\n        type: 'blog',\n        id: 1,\n        relationships: {\n          user: {\n            data: { type: 'user', id: 1 }\n          }\n        }\n      }\n    });\n   let userRef = blog.belongsTo('user');\n    // get the identifier of the reference\n   if (userRef.remoteType() === \"id\") {\n      let id = userRef.id();\n    }\n   ```\n    @method id\n   @public\n   @return {String} The id of the record in this belongsTo relationship.\n   */\n  id() {\n    return this.identifier?.id || null;\n  }\n\n  /**\n   The link Ember Data will use to fetch or reload this belongs-to\n   relationship. By default it uses only the \"related\" resource linkage.\n    Example\n    ```javascript\n   // models/blog.js\n   import Model, { belongsTo } from '@ember-data/model';\n   export default Model.extend({\n      user: belongsTo('user', { async: true, inverse: null })\n    });\n    let blog = store.push({\n      data: {\n        type: 'blog',\n        id: 1,\n        relationships: {\n          user: {\n            links: {\n              related: '/articles/1/author'\n            }\n          }\n        }\n      }\n    });\n   let userRef = blog.belongsTo('user');\n    // get the identifier of the reference\n   if (userRef.remoteType() === \"link\") {\n      let link = userRef.link();\n    }\n   ```\n    @method link\n   @public\n   @return {String} The link Ember Data will use to fetch or reload this belongs-to relationship.\n   */\n  link() {\n    const resource = this._resource();\n    if (isResourceIdentiferWithRelatedLinks(resource)) {\n      if (resource.links) {\n        const related = resource.links.related;\n        return !related || typeof related === 'string' ? related : related.href;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * any links that have been received for this relationship\n   *\n   * @method links\n   * @public\n   * @return\n   */\n  links() {\n    const resource = this._resource();\n    return resource && resource.links ? resource.links : null;\n  }\n\n  /**\n   The meta data for the belongs-to relationship.\n    Example\n    ```javascript\n   // models/blog.js\n   import Model, { belongsTo } from '@ember-data/model';\n   export default Model.extend({\n      user: belongsTo('user', { async: true, inverse: null })\n    });\n    let blog = store.push({\n      data: {\n        type: 'blog',\n        id: 1,\n        relationships: {\n          user: {\n            links: {\n              related: {\n                href: '/articles/1/author'\n              },\n            },\n            meta: {\n              lastUpdated: 1458014400000\n            }\n          }\n        }\n      }\n    });\n    let userRef = blog.belongsTo('user');\n    userRef.meta() // { lastUpdated: 1458014400000 }\n   ```\n    @method meta\n    @public\n   @return {Object} The meta information for the belongs-to relationship.\n   */\n  meta() {\n    let meta = null;\n    const resource = this._resource();\n    if (resource && resource.meta && typeof resource.meta === 'object') {\n      meta = resource.meta;\n    }\n    return meta;\n  }\n  _resource() {\n    this._ref; // subscribe\n    const cache = this.store.cache;\n    return cache.getRelationship(this.___identifier, this.key);\n  }\n\n  /**\n   This returns a string that represents how the reference will be\n   looked up when it is loaded. If the relationship has a link it will\n   use the \"link\" otherwise it defaults to \"id\".\n    Example\n    ```app/models/post.js\n   import Model, { hasMany } from '@ember-data/model';\n    export default class PostModel extends Model {\n     @hasMany('comment', { async: true, inverse: null }) comments;\n   }\n   ```\n    ```javascript\n   let post = store.push({\n     data: {\n       type: 'post',\n       id: 1,\n       relationships: {\n         comments: {\n           data: [{ type: 'comment', id: 1 }]\n         }\n       }\n     }\n   });\n    let commentsRef = post.hasMany('comments');\n    // get the identifier of the reference\n   if (commentsRef.remoteType() === \"ids\") {\n     let ids = commentsRef.ids();\n   } else if (commentsRef.remoteType() === \"link\") {\n     let link = commentsRef.link();\n   }\n   ```\n    @method remoteType\n   @public\n   @return {String} The name of the remote type. This should either be `link` or `id`\n   */\n  remoteType() {\n    const value = this._resource();\n    if (isResourceIdentiferWithRelatedLinks(value)) {\n      return 'link';\n    }\n    return 'id';\n  }\n\n  /**\n   `push` can be used to update the data in the relationship and EmberData\n   will treat the new data as the canonical value of this relationship on\n   the backend. A value of `null` (e.g. `{ data: null }`) can be passed to\n   clear the relationship.\n    Example model\n    ```app/models/blog.js\n   import Model, { belongsTo } from '@ember-data/model';\n    export default class BlogModel extends Model {\n      @belongsTo('user', { async: true, inverse: null }) user;\n    }\n   ```\n    Setup some initial state, note we haven't loaded the user yet:\n    ```js\n   const blog = store.push({\n      data: {\n        type: 'blog',\n        id: '1',\n        relationships: {\n          user: {\n            data: { type: 'user', id: '1' }\n          }\n        }\n      }\n   });\n    const userRef = blog.belongsTo('user');\n   userRef.id(); // '1'\n   ```\n    Update the state using `push`, note we can do this even without\n   having loaded the user yet by providing a resource-identifier.\n    Both full a resource and a resource-identifier are supported.\n    ```js\n   await userRef.push({\n      data: {\n        type: 'user',\n        id: '2',\n      }\n    });\n     userRef.id(); // '2'\n   ```\n    You may also pass in links and meta fore the relationship, and sideload\n   additional resources that might be required.\n    ```js\n    await userRef.push({\n        data: {\n          type: 'user',\n          id: '2',\n        },\n        links: {\n          related: '/articles/1/author'\n        },\n        meta: {\n          lastUpdated: Date.now()\n        },\n        included: [\n          {\n            type: 'user-preview',\n            id: '2',\n            attributes: {\n              username: '@runspired'\n            }\n          }\n        ]\n      });\n    ```\n    By default, the store will attempt to fetch the record if it is not loaded or its\n   resource data is not included in the call to `push` before resolving the returned\n   promise with the new state..\n    Alternatively, pass `true` as the second argument to avoid fetching unloaded records\n   and instead the promise will resolve with void without attempting to fetch. This is\n   particularly useful if you want to update the state of the relationship without\n   forcing the load of all of the associated record.\n    @method push\n   @public\n   @param {Object} doc a JSONAPI document object describing the new value of this relationship.\n   @param {Boolean} [skipFetch] if `true`, do not attempt to fetch unloaded records\n   @return {Promise<RecordInstance | null | void>}\n  */\n  async push(doc, skipFetch) {\n    const {\n      store\n    } = this;\n    const isResourceData = doc.data && isMaybeResource(doc.data);\n    const added = isResourceData ? store._push(doc, true) : doc.data ? store.identifierCache.getOrCreateRecordIdentifier(doc.data) : null;\n    const {\n      identifier\n    } = this.belongsToRelationship;\n    {\n      if (added) {\n        assertPolymorphicType(identifier, this.belongsToRelationship.definition, added, store);\n      }\n    }\n    const newData = {};\n\n    // only set data if it was passed in\n    if (doc.data || doc.data === null) {\n      newData.data = added;\n    }\n    if ('links' in doc) {\n      newData.links = doc.links;\n    }\n    if ('meta' in doc) {\n      newData.meta = doc.meta;\n    }\n    store._join(() => {\n      this.graph.push({\n        op: 'updateRelationship',\n        record: identifier,\n        field: this.key,\n        value: newData\n      });\n    });\n    if (!skipFetch) return this.load();\n  }\n\n  /**\n   `value()` synchronously returns the current value of the belongs-to\n   relationship. Unlike `record.relationshipName`, calling\n   `value()` on a reference does not trigger a fetch if the async\n   relationship is not yet loaded. If the relationship is not loaded\n   it will always return `null`.\n    Example\n    ```javascript\n   // models/blog.js\n   import Model, { belongsTo } from '@ember-data/model';\n    export default class BlogModel extends Model {\n     @belongsTo('user', { async: true, inverse: null }) user;\n   }\n    let blog = store.push({\n      data: {\n        type: 'blog',\n        id: 1,\n        relationships: {\n          user: {\n            data: { type: 'user', id: 1 }\n          }\n        }\n      }\n    });\n   let userRef = blog.belongsTo('user');\n    userRef.value(); // null\n    // provide data for reference\n   userRef.push({\n      data: {\n        type: 'user',\n        id: 1,\n        attributes: {\n          username: \"@user\"\n        }\n      }\n    }).then(function(user) {\n      userRef.value(); // user\n    });\n   ```\n    @method value\n    @public\n   @return {Model} the record in this relationship\n   */\n  value() {\n    const resource = this._resource();\n    return resource && resource.data ? this.store.peekRecord(resource.data) : null;\n  }\n\n  /**\n   Loads a record in a belongs-to relationship if it is not already\n   loaded. If the relationship is already loaded this method does not\n   trigger a new load.\n    Example\n    ```javascript\n   // models/blog.js\n   import Model, { belongsTo } from '@ember-data/model';\n    export default class BlogModel extends Model {\n     @belongsTo('user', { async: true, inverse: null }) user;\n   }\n    let blog = store.push({\n      data: {\n        type: 'blog',\n        id: 1,\n        relationships: {\n          user: {\n            data: { type: 'user', id: 1 }\n          }\n        }\n      }\n    });\n   let userRef = blog.belongsTo('user');\n    userRef.value(); // null\n    userRef.load().then(function(user) {\n      userRef.value() === user\n    });\n   ```\n    You may also pass in an options object whose properties will be\n   fed forward. This enables you to pass `adapterOptions` into the\n   request given to the adapter via the reference.\n    Example\n    ```javascript\n   userRef.load({ adapterOptions: { isPrivate: true } }).then(function(user) {\n     userRef.value() === user;\n   });\n   ```\n   ```app/adapters/user.js\n   import Adapter from '@ember-data/adapter';\n    export default class UserAdapter extends Adapter {\n     findRecord(store, type, id, snapshot) {\n       // In the adapter you will have access to adapterOptions.\n       let adapterOptions = snapshot.adapterOptions;\n     }\n   });\n   ```\n    @method load\n    @public\n   @param {Object} options the options to pass in.\n   @return {Promise} a promise that resolves with the record in this belongs-to relationship.\n   */\n  async load(options) {\n    const support = LEGACY_SUPPORT.get(this.___identifier);\n    const fetchSyncRel = !this.belongsToRelationship.definition.isAsync && !areAllInverseRecordsLoaded(this.store, this._resource());\n    return fetchSyncRel ? support.reloadBelongsTo(this.key, options).then(() => this.value()) :\n    // we cast to fix the return type since typescript and eslint don't understand async functions\n    // properly\n    support.getBelongsTo(this.key, options);\n  }\n\n  /**\n   Triggers a reload of the value in this relationship. If the\n   remoteType is `\"link\"` Ember Data will use the relationship link to\n   reload the relationship. Otherwise it will reload the record by its\n   id.\n    Example\n    ```javascript\n   // models/blog.js\n   import Model, { belongsTo } from '@ember-data/model';\n    export default class BlogModel extends Model {\n     @belongsTo('user', { async: true, inverse: null }) user;\n   }\n    let blog = store.push({\n      data: {\n        type: 'blog',\n        id: 1,\n        relationships: {\n          user: {\n            data: { type: 'user', id: 1 }\n          }\n        }\n      }\n    });\n   let userRef = blog.belongsTo('user');\n    userRef.reload().then(function(user) {\n      userRef.value() === user\n    });\n   ```\n    You may also pass in an options object whose properties will be\n   fed forward. This enables you to pass `adapterOptions` into the\n   request given to the adapter via the reference. A full example\n   can be found in the `load` method.\n    Example\n    ```javascript\n   userRef.reload({ adapterOptions: { isPrivate: true } })\n   ```\n    @method reload\n    @public\n   @param {Object} options the options to pass in.\n   @return {Promise} a promise that resolves with the record in this belongs-to relationship after the reload has completed.\n   */\n  reload(options) {\n    const support = LEGACY_SUPPORT.get(this.___identifier);\n    return support.reloadBelongsTo(this.key, options).then(() => this.value());\n  }\n}, _applyDecoratedDescriptor(_class$3.prototype, \"identifier\", [_ember_data_tracking__WEBPACK_IMPORTED_MODULE_4__.cached, _ember_data_tracking__WEBPACK_IMPORTED_MODULE_4__.compat], Object.getOwnPropertyDescriptor(_class$3.prototype, \"identifier\"), _class$3.prototype), _class$3);\n(0,_ember_data_tracking_private__WEBPACK_IMPORTED_MODULE_5__.defineSignal)(BelongsToReference.prototype, '_ref', 0);\nconst LEGACY_SUPPORT = new Map();\nfunction lookupLegacySupport(record) {\n  const identifier = (0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_3__.recordIdentifierFor)(record);\n  ( true && !(identifier) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Expected a record`, identifier));\n  let support = LEGACY_SUPPORT.get(identifier);\n  if (!support) {\n    ( true && !(!record.isDestroyed && !record.isDestroying) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Memory Leak Detected`, !record.isDestroyed && !record.isDestroying));\n    support = new LegacySupport(record);\n    LEGACY_SUPPORT.set(identifier, support);\n    LEGACY_SUPPORT.set(record, support);\n  }\n  return support;\n}\nclass LegacySupport {\n  constructor(record) {\n    this.record = record;\n    this.store = (0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_3__.storeFor)(record);\n    this.identifier = (0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_3__.recordIdentifierFor)(record);\n    this.cache = (0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_3__.peekCache)(record);\n    {\n      const graphFor = (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_14__[\"default\"])(__webpack_require__(/*! @ember-data/graph/-private */ \"../rewritten-packages/@ember-data/graph.4c9e27df/node_modules/@ember-data/graph/-private.js\")).graphFor;\n      this.graph = graphFor(this.store);\n    }\n    this._manyArrayCache = Object.create(null);\n    this._relationshipPromisesCache = Object.create(null);\n    this._relationshipProxyCache = Object.create(null);\n    this._pending = Object.create(null);\n    this.references = Object.create(null);\n  }\n  _syncArray(array) {\n    // It’s possible the parent side of the relationship may have been destroyed by this point\n    if (this.isDestroyed || this.isDestroying) {\n      return;\n    }\n    const currentState = array[_ember_data_store_private__WEBPACK_IMPORTED_MODULE_3__.SOURCE];\n    const identifier = this.identifier;\n    const [identifiers, jsonApi] = this._getCurrentState(identifier, array.key);\n    if (jsonApi.meta) {\n      array.meta = jsonApi.meta;\n    }\n    if (jsonApi.links) {\n      array.links = jsonApi.links;\n    }\n    currentState.length = 0;\n    (0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_3__.fastPush)(currentState, identifiers);\n  }\n  mutate(mutation) {\n    this.cache.mutate(mutation);\n  }\n  _findBelongsTo(key, resource, relationship, options) {\n    // TODO @runspired follow up if parent isNew then we should not be attempting load here\n    // TODO @runspired follow up on whether this should be in the relationship requests cache\n    return this._findBelongsToByJsonApiResource(resource, this.identifier, relationship, options).then(identifier => handleCompletedRelationshipRequest(this, key, relationship, identifier), e => handleCompletedRelationshipRequest(this, key, relationship, null, e));\n  }\n  reloadBelongsTo(key, options) {\n    const loadingPromise = this._relationshipPromisesCache[key];\n    if (loadingPromise) {\n      return loadingPromise;\n    }\n    const relationship = this.graph.get(this.identifier, key);\n    ( true && !(isBelongsTo(relationship)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Expected ${key} to be a belongs-to relationship`, isBelongsTo(relationship)));\n    const resource = this.cache.getRelationship(this.identifier, key);\n    relationship.state.hasFailedLoadAttempt = false;\n    relationship.state.shouldForceReload = true;\n    const promise = this._findBelongsTo(key, resource, relationship, options);\n    if (this._relationshipProxyCache[key]) {\n      // @ts-expect-error\n      return this._updatePromiseProxyFor('belongsTo', key, {\n        promise\n      });\n    }\n    return promise;\n  }\n  getBelongsTo(key, options) {\n    const {\n      identifier,\n      cache\n    } = this;\n    const resource = cache.getRelationship(this.identifier, key);\n    const relatedIdentifier = resource && resource.data ? resource.data : null;\n    ( true && !(!relatedIdentifier || (0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_3__.isStableIdentifier)(relatedIdentifier)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Expected a stable identifier`, !relatedIdentifier || (0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_3__.isStableIdentifier)(relatedIdentifier)));\n    const store = this.store;\n    const relationship = this.graph.get(this.identifier, key);\n    ( true && !(isBelongsTo(relationship)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Expected ${key} to be a belongs-to relationship`, isBelongsTo(relationship)));\n    const isAsync = relationship.definition.isAsync;\n    const _belongsToState = {\n      key,\n      store,\n      legacySupport: this,\n      modelName: relationship.definition.type\n    };\n    if (isAsync) {\n      if (relationship.state.hasFailedLoadAttempt) {\n        return this._relationshipProxyCache[key];\n      }\n      const promise = this._findBelongsTo(key, resource, relationship, options);\n      const isLoaded = relatedIdentifier && store._instanceCache.recordIsLoaded(relatedIdentifier);\n      return this._updatePromiseProxyFor('belongsTo', key, {\n        promise,\n        content: isLoaded ? store._instanceCache.getRecord(relatedIdentifier) : null,\n        _belongsToState\n      });\n    } else {\n      if (relatedIdentifier === null) {\n        return null;\n      } else {\n        const toReturn = store._instanceCache.getRecord(relatedIdentifier);\n        ( true && !(toReturn === null || store._instanceCache.recordIsLoaded(relatedIdentifier, true)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`You looked up the '${key}' relationship on a '${identifier.type}' with id ${identifier.id || 'null'} but some of the associated records were not loaded. Either make sure they are all loaded together with the parent record, or specify that the relationship is async (\\`belongsTo(<type>, { async: true, inverse: <inverse> })\\`)`, toReturn === null || store._instanceCache.recordIsLoaded(relatedIdentifier, true)));\n        return toReturn;\n      }\n    }\n  }\n  setDirtyBelongsTo(key, value) {\n    return this.cache.mutate({\n      op: 'replaceRelatedRecord',\n      record: this.identifier,\n      field: key,\n      value: extractIdentifierFromRecord(value)\n    },\n    // @ts-expect-error\n    true);\n  }\n  _getCurrentState(identifier, field) {\n    const jsonApi = this.cache.getRelationship(identifier, field);\n    const cache = this.store._instanceCache;\n    const identifiers = [];\n    if (jsonApi.data) {\n      for (let i = 0; i < jsonApi.data.length; i++) {\n        const relatedIdentifier = jsonApi.data[i];\n        ( true && !((0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_3__.isStableIdentifier)(relatedIdentifier)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Expected a stable identifier`, (0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_3__.isStableIdentifier)(relatedIdentifier)));\n        if (cache.recordIsLoaded(relatedIdentifier, true)) {\n          identifiers.push(relatedIdentifier);\n        }\n      }\n    }\n    return [identifiers, jsonApi];\n  }\n  getManyArray(key, definition) {\n    {\n      let manyArray = this._manyArrayCache[key];\n      if (!definition) {\n        definition = this.graph.get(this.identifier, key).definition;\n      }\n      if (!manyArray) {\n        const [identifiers, doc] = this._getCurrentState(this.identifier, key);\n        manyArray = new RelatedCollection({\n          store: this.store,\n          type: definition.type,\n          identifier: this.identifier,\n          cache: this.cache,\n          identifiers,\n          key,\n          meta: doc.meta || null,\n          links: doc.links || null,\n          isPolymorphic: definition.isPolymorphic,\n          isAsync: definition.isAsync,\n          _inverseIsAsync: definition.inverseIsAsync,\n          manager: this,\n          isLoaded: !definition.isAsync,\n          allowMutation: true\n        });\n        this._manyArrayCache[key] = manyArray;\n      }\n      return manyArray;\n    }\n    ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)('hasMany only works with the @ember-data/json-api package'));\n  }\n  fetchAsyncHasMany(key, relationship, manyArray, options) {\n    {\n      let loadingPromise = this._relationshipPromisesCache[key];\n      if (loadingPromise) {\n        return loadingPromise;\n      }\n      const jsonApi = this.cache.getRelationship(this.identifier, key);\n      const promise = this._findHasManyByJsonApiResource(jsonApi, this.identifier, relationship, options);\n      if (!promise) {\n        manyArray.isLoaded = true;\n        return Promise.resolve(manyArray);\n      }\n      loadingPromise = promise.then(() => handleCompletedRelationshipRequest(this, key, relationship, manyArray), e => handleCompletedRelationshipRequest(this, key, relationship, manyArray, e));\n      this._relationshipPromisesCache[key] = loadingPromise;\n      return loadingPromise;\n    }\n    ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)('hasMany only works with the @ember-data/json-api package'));\n  }\n  reloadHasMany(key, options) {\n    {\n      const loadingPromise = this._relationshipPromisesCache[key];\n      if (loadingPromise) {\n        return loadingPromise;\n      }\n      const relationship = this.graph.get(this.identifier, key);\n      const {\n        definition,\n        state\n      } = relationship;\n      state.hasFailedLoadAttempt = false;\n      state.shouldForceReload = true;\n      const manyArray = this.getManyArray(key, definition);\n      const promise = this.fetchAsyncHasMany(key, relationship, manyArray, options);\n      if (this._relationshipProxyCache[key]) {\n        return this._updatePromiseProxyFor('hasMany', key, {\n          promise\n        });\n      }\n      return promise;\n    }\n    ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`hasMany only works with the @ember-data/json-api package`));\n  }\n  getHasMany(key, options) {\n    {\n      const relationship = this.graph.get(this.identifier, key);\n      const {\n        definition,\n        state\n      } = relationship;\n      const manyArray = this.getManyArray(key, definition);\n      if (definition.isAsync) {\n        if (state.hasFailedLoadAttempt) {\n          return this._relationshipProxyCache[key];\n        }\n        const promise = this.fetchAsyncHasMany(key, relationship, manyArray, options);\n        return this._updatePromiseProxyFor('hasMany', key, {\n          promise,\n          content: manyArray\n        });\n      } else {\n        ( true && !(!anyUnloaded(this.store, relationship)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`You looked up the '${key}' relationship on a '${this.identifier.type}' with id ${this.identifier.id || 'null'} but some of the associated records were not loaded. Either make sure they are all loaded together with the parent record, or specify that the relationship is async ('hasMany(<type>, { async: true, inverse: <inverse> })')`, !anyUnloaded(this.store, relationship)));\n        return manyArray;\n      }\n    }\n    ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`hasMany only works with the @ember-data/json-api package`));\n  }\n  _updatePromiseProxyFor(kind, key, args) {\n    let promiseProxy = this._relationshipProxyCache[key];\n    if (kind === 'hasMany') {\n      const {\n        promise,\n        content\n      } = args;\n      if (promiseProxy) {\n        ( true && !('_update' in promiseProxy) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Expected a PromiseManyArray`, '_update' in promiseProxy));\n        promiseProxy._update(promise, content);\n      } else {\n        promiseProxy = this._relationshipProxyCache[key] = new PromiseManyArray(promise, content);\n      }\n      return promiseProxy;\n    }\n    if (promiseProxy) {\n      const {\n        promise,\n        content\n      } = args;\n      ( true && !('_belongsToState' in promiseProxy) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Expected a PromiseBelongsTo`, '_belongsToState' in promiseProxy));\n      if (content !== undefined) {\n        promiseProxy.set('content', content);\n      }\n      void promiseProxy.set('promise', promise);\n    } else {\n      promiseProxy = PromiseBelongsTo.create(args);\n      this._relationshipProxyCache[key] = promiseProxy;\n    }\n    return promiseProxy;\n  }\n  referenceFor(kind, name) {\n    let reference = this.references[name];\n    if (!reference) {\n      const {\n        graph,\n        identifier\n      } = this;\n      const relationship = graph.get(identifier, name);\n      {\n        if (kind) {\n          const modelName = identifier.type;\n          const actualRelationshipKind = relationship.definition.kind;\n          ( true && !(actualRelationshipKind === kind) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`You tried to get the '${name}' relationship on a '${modelName}' via record.${kind}('${name}'), but the relationship is of kind '${actualRelationshipKind}'. Use record.${actualRelationshipKind}('${name}') instead.`, actualRelationshipKind === kind));\n        }\n      }\n      const relationshipKind = relationship.definition.kind;\n      if (relationshipKind === 'belongsTo') {\n        reference = new BelongsToReference(this.store, graph, identifier, relationship, name);\n      } else if (relationshipKind === 'hasMany') {\n        reference = new HasManyReference(this.store, graph, identifier, relationship, name);\n      }\n      this.references[name] = reference;\n    }\n    return reference;\n  }\n  _findHasManyByJsonApiResource(resource, parentIdentifier, relationship, options = {}) {\n    {\n      if (!resource) {\n        return;\n      }\n      const {\n        definition,\n        state\n      } = relationship;\n      (0,_ember_data_legacy_compat_private__WEBPACK_IMPORTED_MODULE_10__.upgradeStore)(this.store);\n      const adapter = this.store.adapterFor(definition.type);\n      const {\n        isStale,\n        hasDematerializedInverse,\n        hasReceivedData,\n        isEmpty,\n        shouldForceReload\n      } = state;\n      const allInverseRecordsAreLoaded = areAllInverseRecordsLoaded(this.store, resource);\n      const identifiers = resource.data;\n      const shouldFindViaLink = resource.links && resource.links.related && (typeof adapter.findHasMany === 'function' || typeof identifiers === 'undefined') && (shouldForceReload || hasDematerializedInverse || isStale || !allInverseRecordsAreLoaded && !isEmpty);\n      const relationshipMeta = this.store.getSchemaDefinitionService().relationshipsDefinitionFor({\n        type: definition.inverseType\n      })[definition.key];\n      const request = {\n        useLink: shouldFindViaLink,\n        field: relationshipMeta,\n        links: resource.links,\n        meta: resource.meta,\n        options,\n        record: parentIdentifier\n      };\n\n      // fetch via link\n      if (shouldFindViaLink) {\n        ( true && !(!identifiers || Array.isArray(identifiers)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Expected collection to be an array`, !identifiers || Array.isArray(identifiers)));\n        ( true && !(!identifiers || identifiers.every(_ember_data_store_private__WEBPACK_IMPORTED_MODULE_3__.isStableIdentifier)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Expected stable identifiers`, !identifiers || identifiers.every(_ember_data_store_private__WEBPACK_IMPORTED_MODULE_3__.isStableIdentifier)));\n        return this.store.request({\n          op: 'findHasMany',\n          records: identifiers || [],\n          data: request,\n          cacheOptions: {\n            [Symbol.for('wd:skip-cache')]: true\n          }\n        });\n      }\n      const preferLocalCache = hasReceivedData && !isEmpty;\n      const hasLocalPartialData = hasDematerializedInverse || isEmpty && Array.isArray(identifiers) && identifiers.length > 0;\n      const attemptLocalCache = !shouldForceReload && !isStale && (preferLocalCache || hasLocalPartialData);\n      if (attemptLocalCache && allInverseRecordsAreLoaded) {\n        return;\n      }\n      const hasData = hasReceivedData && !isEmpty;\n      if (attemptLocalCache || hasData || hasLocalPartialData) {\n        ( true && !(Array.isArray(identifiers)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Expected collection to be an array`, Array.isArray(identifiers)));\n        ( true && !(identifiers.every(_ember_data_store_private__WEBPACK_IMPORTED_MODULE_3__.isStableIdentifier)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Expected stable identifiers`, identifiers.every(_ember_data_store_private__WEBPACK_IMPORTED_MODULE_3__.isStableIdentifier)));\n        options.reload = options.reload || !attemptLocalCache || undefined;\n        return this.store.request({\n          op: 'findHasMany',\n          records: identifiers,\n          data: request,\n          cacheOptions: {\n            [Symbol.for('wd:skip-cache')]: true\n          }\n        });\n      }\n\n      // we were explicitly told we have no data and no links.\n      //   TODO if the relationshipIsStale, should we hit the adapter anyway?\n      return;\n    }\n    ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`hasMany only works with the @ember-data/json-api package`));\n  }\n  _findBelongsToByJsonApiResource(resource, parentIdentifier, relationship, options = {}) {\n    if (!resource) {\n      return Promise.resolve(null);\n    }\n    const key = relationship.definition.key;\n\n    // interleaved promises mean that we MUST cache this here\n    // in order to prevent infinite re-render if the request\n    // fails.\n    if (this._pending[key]) {\n      return this._pending[key];\n    }\n    const identifier = resource.data ? resource.data : null;\n    ( true && !(!identifier || (0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_3__.isStableIdentifier)(identifier)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Expected a stable identifier`, !identifier || (0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_3__.isStableIdentifier)(identifier)));\n    const {\n      isStale,\n      hasDematerializedInverse,\n      hasReceivedData,\n      isEmpty,\n      shouldForceReload\n    } = relationship.state;\n    const allInverseRecordsAreLoaded = areAllInverseRecordsLoaded(this.store, resource);\n    const shouldFindViaLink = resource.links?.related && (shouldForceReload || hasDematerializedInverse || isStale || !allInverseRecordsAreLoaded && !isEmpty);\n    const relationshipMeta = this.store.getSchemaDefinitionService().relationshipsDefinitionFor(this.identifier)[relationship.definition.key];\n    ( true && !(relationshipMeta) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Attempted to access a belongsTo relationship but no definition exists for it`, relationshipMeta));\n    const request = {\n      useLink: shouldFindViaLink,\n      field: relationshipMeta,\n      links: resource.links,\n      meta: resource.meta,\n      options,\n      record: parentIdentifier\n    };\n\n    // fetch via link\n    if (shouldFindViaLink) {\n      const future = this.store.request({\n        op: 'findBelongsTo',\n        records: identifier ? [identifier] : [],\n        data: request,\n        cacheOptions: {\n          [Symbol.for('wd:skip-cache')]: true\n        }\n      });\n      this._pending[key] = future.then(doc => doc.content).finally(() => {\n        this._pending[key] = undefined;\n      });\n      return this._pending[key];\n    }\n    const preferLocalCache = hasReceivedData && allInverseRecordsAreLoaded && !isEmpty;\n    const hasLocalPartialData = hasDematerializedInverse || isEmpty && resource.data;\n    // null is explicit empty, undefined is \"we don't know anything\"\n    const localDataIsEmpty = !identifier;\n    const attemptLocalCache = !shouldForceReload && !isStale && (preferLocalCache || hasLocalPartialData);\n\n    // we dont need to fetch and are empty\n    if (attemptLocalCache && localDataIsEmpty) {\n      return Promise.resolve(null);\n    }\n\n    // we dont need to fetch because we are local state\n    const resourceIsLocal = identifier?.id === null;\n    if (attemptLocalCache && allInverseRecordsAreLoaded || resourceIsLocal) {\n      return Promise.resolve(identifier);\n    }\n\n    // we may need to fetch\n    if (identifier) {\n      ( true && !(identifier) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Cannot fetch belongs-to relationship with no information`, identifier));\n      options.reload = options.reload || !attemptLocalCache || undefined;\n      this._pending[key] = this.store.request({\n        op: 'findBelongsTo',\n        records: [identifier],\n        data: request,\n        cacheOptions: {\n          [Symbol.for('wd:skip-cache')]: true\n        }\n      }).then(doc => doc.content).finally(() => {\n        this._pending[key] = undefined;\n      });\n      return this._pending[key];\n    }\n\n    // we were explicitly told we have no data and no links.\n    //   TODO if the relationshipIsStale, should we hit the adapter anyway?\n    return Promise.resolve(null);\n  }\n  destroy() {\n    this.isDestroying = true;\n    let cache = this._manyArrayCache;\n    this._manyArrayCache = Object.create(null);\n    Object.keys(cache).forEach(key => {\n      cache[key].destroy();\n    });\n    cache = this._relationshipProxyCache;\n    this._relationshipProxyCache = Object.create(null);\n    Object.keys(cache).forEach(key => {\n      const proxy = cache[key];\n      if (proxy.destroy) {\n        proxy.destroy();\n      }\n    });\n    cache = this.references;\n    this.references = Object.create(null);\n    Object.keys(cache).forEach(key => {\n      cache[key].destroy();\n    });\n    this.isDestroyed = true;\n  }\n}\nfunction handleCompletedRelationshipRequest(recordExt, key, relationship, value, error) {\n  delete recordExt._relationshipPromisesCache[key];\n  relationship.state.shouldForceReload = false;\n  const isHasMany = relationship.definition.kind === 'hasMany';\n  if (isHasMany) {\n    // we don't notify the record property here to avoid refetch\n    // only the many array\n    value.notify();\n  }\n  if (error) {\n    relationship.state.hasFailedLoadAttempt = true;\n    const proxy = recordExt._relationshipProxyCache[key];\n    // belongsTo relationships are sometimes unloaded\n    // when a load fails, in this case we need\n    // to make sure that we aren't proxying\n    // to destroyed content\n    // for the sync belongsTo reload case there will be no proxy\n    // for the async reload case there will be no proxy if the ui\n    // has never been accessed\n    if (proxy && !isHasMany) {\n      // @ts-expect-error unsure why this is not resolving the boolean but async belongsTo is weird\n      if (proxy.content && proxy.content.isDestroying) {\n        proxy.set('content', null);\n      }\n      recordExt.store.notifications._flush();\n    }\n    throw error;\n  }\n  if (isHasMany) {\n    value.isLoaded = true;\n  } else {\n    recordExt.store.notifications._flush();\n  }\n  relationship.state.hasFailedLoadAttempt = false;\n  // only set to not stale if no error is thrown\n  relationship.state.isStale = false;\n  return isHasMany || !value ? value : recordExt.store.peekRecord(value);\n}\nfunction extractIdentifierFromRecord(record) {\n  if (!record) {\n    return null;\n  }\n  return (0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_3__.recordIdentifierFor)(record);\n}\nfunction anyUnloaded(store, relationship) {\n  const graph = store._graph;\n  ( true && !(graph) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Expected a Graph instance to be available`, graph));\n  const relationshipData = graph.getData(relationship.identifier, relationship.definition.key);\n  const state = relationshipData.data;\n  const cache = store._instanceCache;\n  const unloaded = state?.find(s => {\n    const isLoaded = cache.recordIsLoaded(s, true);\n    return !isLoaded;\n  });\n  return unloaded || false;\n}\nfunction areAllInverseRecordsLoaded(store, resource) {\n  const instanceCache = store._instanceCache;\n  const identifiers = resource.data;\n  if (Array.isArray(identifiers)) {\n    ( true && !(identifiers.every(_ember_data_store_private__WEBPACK_IMPORTED_MODULE_3__.isStableIdentifier)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Expected stable identifiers`, identifiers.every(_ember_data_store_private__WEBPACK_IMPORTED_MODULE_3__.isStableIdentifier))); // treat as collection\n    // check for unloaded records\n    return identifiers.every(identifier => instanceCache.recordIsLoaded(identifier));\n  }\n\n  // treat as single resource\n  if (!identifiers) return true;\n  ( true && !((0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_3__.isStableIdentifier)(identifiers)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Expected stable identifiers`, (0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_3__.isStableIdentifier)(identifiers)));\n  return instanceCache.recordIsLoaded(identifiers);\n}\nfunction isBelongsTo(relationship) {\n  return relationship.definition.kind === 'belongsTo';\n}\nfunction _initializerDefineProperty(target, property, descriptor, context) {\n  if (!descriptor) return;\n  Object.defineProperty(target, property, {\n    enumerable: descriptor.enumerable,\n    configurable: descriptor.configurable,\n    writable: descriptor.writable,\n    value: descriptor.initializer ? descriptor.initializer.call(context) : void 0\n  });\n}\nvar _dec, _dec2, _dec3, _dec4, _class$2, _descriptor, _descriptor2;\n\n/**\n  @module @ember-data/model\n*/\n\n// we force the type here to our own construct because mixin and extend patterns\n// lose generic signatures. We also do this because we need to Omit `clear` from\n// the type of ArrayProxy as we override it's signature.\nconst ArrayProxyWithCustomOverrides = (_ember_array_proxy__WEBPACK_IMPORTED_MODULE_8___default());\n\n/**\n  Holds validation errors for a given record, organized by attribute names.\n\n  This class is not directly instantiable.\n\n  Every `Model` has an `errors` property that is an instance of\n  `Errors`. This can be used to display validation error\n  messages returned from the server when a `record.save()` rejects.\n\n  For Example, if you had a `User` model that looked like this:\n\n  ```app/models/user.js\n  import Model, { attr } from '@ember-data/model';\n\n  export default class UserModel extends Model {\n    @attr('string') username;\n    @attr('string') email;\n  }\n  ```\n  And you attempted to save a record that did not validate on the backend:\n\n  ```javascript\n  let user = store.createRecord('user', {\n    username: 'tomster',\n    email: 'invalidEmail'\n  });\n  user.save();\n  ```\n\n  Your backend would be expected to return an error response that described\n  the problem, so that error messages can be generated on the app.\n\n  API responses will be translated into instances of `Errors` differently,\n  depending on the specific combination of adapter and serializer used. You\n  may want to check the documentation or the source code of the libraries\n  that you are using, to know how they expect errors to be communicated.\n\n  Errors can be displayed to the user by accessing their property name\n  to get an array of all the error objects for that property. Each\n  error object is a JavaScript object with two keys:\n\n  - `message` A string containing the error message from the backend\n  - `attribute` The name of the property associated with this error message\n\n  ```handlebars\n  <label>Username: <Input @value={{@model.username}} /> </label>\n  {{#each @model.errors.username as |error|}}\n    <div class=\"error\">\n      {{error.message}}\n    </div>\n  {{/each}}\n\n  <label>Email: <Input @value={{@model.email}} /> </label>\n  {{#each @model.errors.email as |error|}}\n    <div class=\"error\">\n      {{error.message}}\n    </div>\n  {{/each}}\n  ```\n\n  You can also access the special `messages` property on the error\n  object to get an array of all the error strings.\n\n  ```handlebars\n  {{#each @model.errors.messages as |message|}}\n    <div class=\"error\">\n      {{message}}\n    </div>\n  {{/each}}\n  ```\n\n  @class Errors\n  @public\n  @extends Ember.ArrayProxy\n */\nlet Errors = (_dec = (0,_ember_object__WEBPACK_IMPORTED_MODULE_1__.computed)(), _dec2 = (0,_ember_object_computed__WEBPACK_IMPORTED_MODULE_9__.mapBy)('content', 'message'), _dec3 = (0,_ember_object__WEBPACK_IMPORTED_MODULE_1__.computed)(), _dec4 = (0,_ember_object_computed__WEBPACK_IMPORTED_MODULE_9__.not)('length'), (_class$2 = class Errors extends ArrayProxyWithCustomOverrides {\n  constructor(...args) {\n    super(...args);\n    /**\n      An array containing all of the error messages for this\n      record. This is useful for displaying all errors to the user.\n       ```handlebars\n      {{#each @model.errors.messages as |message|}}\n        <div class=\"error\">\n          {{message}}\n        </div>\n      {{/each}}\n      ```\n       @property messages\n      @public\n      @type {Array}\n    */\n    _initializerDefineProperty(this, \"messages\", _descriptor, this);\n    /**\n      Total number of errors.\n       @property length\n      @type {Number}\n      @public\n      @readOnly\n    */\n    /**\n      `true` if we have no errors.\n       @property isEmpty\n      @type {Boolean}\n      @public\n      @readOnly\n    */\n    _initializerDefineProperty(this, \"isEmpty\", _descriptor2, this);\n  }\n  /**\n    @property errorsByAttributeName\n    @type {MapWithDefault}\n    @private\n  */\n  get errorsByAttributeName() {\n    return new Map();\n  }\n\n  /**\n    Returns errors for a given attribute\n     ```javascript\n    let user = store.createRecord('user', {\n      username: 'tomster',\n      email: 'invalidEmail'\n    });\n    user.save().catch(function(){\n      user.errors.errorsFor('email'); // returns:\n      // [{attribute: \"email\", message: \"Doesn't look like a valid email.\"}]\n    });\n    ```\n     @method errorsFor\n    @public\n    @param {String} attribute\n    @return {Array}\n  */\n  errorsFor(attribute) {\n    const map = this.errorsByAttributeName;\n    let errors = map.get(attribute);\n    if (errors === undefined) {\n      errors = (0,_ember_array__WEBPACK_IMPORTED_MODULE_7__.A)();\n      map.set(attribute, errors);\n    }\n\n    // Errors may be a native array with extensions turned on. Since we access\n    // the array via a method, and not a computed or using `Ember.get`, it does\n    // not entangle properly with autotracking, so we entangle manually by\n    // getting the `[]` property.\n    (0,_ember_object__WEBPACK_IMPORTED_MODULE_1__.get)(errors, '[]');\n    return errors;\n  }\n  /**\n    @property content\n    @type {Array}\n    @private\n  */\n  get content() {\n    return (0,_ember_array__WEBPACK_IMPORTED_MODULE_7__.A)();\n  }\n\n  /**\n    @method unknownProperty\n    @private\n  */\n  unknownProperty(attribute) {\n    const errors = this.errorsFor(attribute);\n    if (errors.length === 0) {\n      return undefined;\n    }\n    return errors;\n  }\n  /**\n   Manually adds errors to the record. This will trigger the `becameInvalid` event/ lifecycle method on\n    the record and transition the record into an `invalid` state.\n    Example\n   ```javascript\n    let errors = user.errors;\n     // add multiple errors\n    errors.add('password', [\n      'Must be at least 12 characters',\n      'Must contain at least one symbol',\n      'Cannot contain your name'\n    ]);\n     errors.errorsFor('password');\n    // =>\n    // [\n    //   { attribute: 'password', message: 'Must be at least 12 characters' },\n    //   { attribute: 'password', message: 'Must contain at least one symbol' },\n    //   { attribute: 'password', message: 'Cannot contain your name' },\n    // ]\n     // add a single error\n    errors.add('username', 'This field is required');\n     errors.errorsFor('username');\n    // =>\n    // [\n    //   { attribute: 'username', message: 'This field is required' },\n    // ]\n   ```\n    @method add\n    @public\n    @param {string} attribute - the property name of an attribute or relationship\n    @param {string[]|string} messages - an error message or array of error messages for the attribute\n   */\n  add(attribute, messages) {\n    const errors = this._findOrCreateMessages(attribute, messages);\n    this.addObjects(errors);\n    this.errorsFor(attribute).addObjects(errors);\n    this.__record.currentState.notify('isValid');\n    this.notifyPropertyChange(attribute);\n  }\n\n  /**\n    @method _findOrCreateMessages\n    @private\n  */\n  _findOrCreateMessages(attribute, messages) {\n    const errors = this.errorsFor(attribute);\n    const messagesArray = Array.isArray(messages) ? messages : [messages];\n    const _messages = new Array(messagesArray.length);\n    for (let i = 0; i < messagesArray.length; i++) {\n      const message = messagesArray[i];\n      const err = errors.findBy('message', message);\n      if (err) {\n        _messages[i] = err;\n      } else {\n        _messages[i] = {\n          attribute: attribute,\n          message\n        };\n      }\n    }\n    return _messages;\n  }\n\n  /**\n   Manually removes all errors for a given member from the record.\n     This will transition the record into a `valid` state, and\n    triggers the `becameValid` event and lifecycle method.\n    Example:\n    ```javascript\n    let errors = user.errors;\n    errors.add('phone', ['error-1', 'error-2']);\n     errors.errorsFor('phone');\n    // =>\n    // [\n    //   { attribute: 'phone', message: 'error-1' },\n    //   { attribute: 'phone', message: 'error-2' },\n    // ]\n     errors.remove('phone');\n     errors.errorsFor('phone');\n    // => undefined\n   ```\n   @method remove\n    @public\n   @param {string} member - the property name of an attribute or relationship\n   */\n  remove(attribute) {\n    if (this.isEmpty) {\n      return;\n    }\n    const content = this.rejectBy('attribute', attribute);\n    this.content.setObjects(content);\n\n    // Although errorsByAttributeName.delete is technically enough to sync errors state, we also\n    // must mutate the array as well for autotracking\n    const errors = this.errorsFor(attribute);\n    for (let i = 0; i < errors.length; i++) {\n      if (errors[i].attribute === attribute) {\n        // .replace from Ember.NativeArray is necessary. JS splice will not work.\n        errors.replace(i, 1);\n      }\n    }\n    this.errorsByAttributeName.delete(attribute);\n    this.__record.currentState.notify('isValid');\n    this.notifyPropertyChange(attribute);\n    this.notifyPropertyChange('length');\n  }\n\n  /**\n   Manually clears all errors for the record.\n     This will transition the record into a `valid` state, and\n     will trigger the `becameValid` event and lifecycle method.\n   Example:\n    ```javascript\n   let errors = user.errors;\n   errors.add('username', ['error-a']);\n   errors.add('phone', ['error-1', 'error-2']);\n    errors.errorsFor('username');\n   // =>\n   // [\n   //   { attribute: 'username', message: 'error-a' },\n   // ]\n    errors.errorsFor('phone');\n   // =>\n   // [\n   //   { attribute: 'phone', message: 'error-1' },\n   //   { attribute: 'phone', message: 'error-2' },\n   // ]\n    errors.clear();\n    errors.errorsFor('username');\n   // => undefined\n    errors.errorsFor('phone');\n   // => undefined\n    errors.messages\n   // => []\n   ```\n   @method clear\n   @public\n   */\n  clear() {\n    if (this.isEmpty) {\n      return;\n    }\n    const errorsByAttributeName = this.errorsByAttributeName;\n    const attributes = [];\n    errorsByAttributeName.forEach(function (_, attribute) {\n      attributes.push(attribute);\n    });\n    errorsByAttributeName.clear();\n    attributes.forEach(attribute => {\n      this.notifyPropertyChange(attribute);\n    });\n    this.__record.currentState.notify('isValid');\n    super.clear();\n  }\n\n  /**\n    Checks if there are error messages for the given attribute.\n     ```app/controllers/user/edit.js\n    import Controller from '@ember/controller';\n    import { action } from '@ember/object';\n     export default class UserEditController extends Controller {\n      @action\n      save(user) {\n        if (user.errors.has('email')) {\n          return alert('Please update your email before attempting to save.');\n        }\n        user.save();\n      }\n    }\n    ```\n     @method has\n    @public\n    @param {String} attribute\n    @return {Boolean} true if there some errors on given attribute\n  */\n  has(attribute) {\n    return this.errorsFor(attribute).length > 0;\n  }\n}, (_applyDecoratedDescriptor(_class$2.prototype, \"errorsByAttributeName\", [_dec], Object.getOwnPropertyDescriptor(_class$2.prototype, \"errorsByAttributeName\"), _class$2.prototype), _descriptor = _applyDecoratedDescriptor(_class$2.prototype, \"messages\", [_dec2], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _applyDecoratedDescriptor(_class$2.prototype, \"content\", [_dec3], Object.getOwnPropertyDescriptor(_class$2.prototype, \"content\"), _class$2.prototype), _descriptor2 = _applyDecoratedDescriptor(_class$2.prototype, \"isEmpty\", [_dec4], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class$2));\nfunction rollbackAttributes() {\n  const {\n    currentState\n  } = this;\n  const {\n    isNew\n  } = currentState;\n  this[_warp_drive_core_types_symbols__WEBPACK_IMPORTED_MODULE_6__.RecordStore]._join(() => {\n    (0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_3__.peekCache)(this).rollbackAttrs((0,_ember_data_store__WEBPACK_IMPORTED_MODULE_2__.recordIdentifierFor)(this));\n    this.errors.clear();\n    currentState.cleanErrorRequests();\n    if (isNew) {\n      this.unloadRecord();\n    }\n  });\n}\nfunction unloadRecord() {\n  if (this.currentState.isNew && (this.isDestroyed || this.isDestroying)) {\n    return;\n  }\n  this[_warp_drive_core_types_symbols__WEBPACK_IMPORTED_MODULE_6__.RecordStore].unloadRecord(this);\n}\nfunction belongsTo(prop) {\n  return lookupLegacySupport(this).referenceFor('belongsTo', prop);\n}\nfunction hasMany(prop) {\n  return lookupLegacySupport(this).referenceFor('hasMany', prop);\n}\nfunction reload(options = {}) {\n  options.isReloading = true;\n  options.reload = true;\n  const identifier = (0,_ember_data_store__WEBPACK_IMPORTED_MODULE_2__.recordIdentifierFor)(this);\n  ( true && !(identifier.id) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`You cannot reload a record without an ID`, identifier.id));\n  this.isReloading = true;\n  const promise = this[_warp_drive_core_types_symbols__WEBPACK_IMPORTED_MODULE_6__.RecordStore].request({\n    op: 'findRecord',\n    data: {\n      options,\n      record: identifier\n    },\n    cacheOptions: {\n      [Symbol.for('wd:skip-cache')]: true\n    }\n  }).then(() => this).finally(() => {\n    this.isReloading = false;\n  });\n  return promise;\n}\nfunction changedAttributes() {\n  return (0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_3__.peekCache)(this).changedAttrs((0,_ember_data_store__WEBPACK_IMPORTED_MODULE_2__.recordIdentifierFor)(this));\n}\nfunction serialize(options) {\n  (0,_ember_data_legacy_compat_private__WEBPACK_IMPORTED_MODULE_10__.upgradeStore)(this[_warp_drive_core_types_symbols__WEBPACK_IMPORTED_MODULE_6__.RecordStore]);\n  return this[_warp_drive_core_types_symbols__WEBPACK_IMPORTED_MODULE_6__.RecordStore].serializeRecord(this, options);\n}\nfunction deleteRecord() {\n  // ensure we've populated currentState prior to deleting a new record\n  if (this.currentState) {\n    this[_warp_drive_core_types_symbols__WEBPACK_IMPORTED_MODULE_6__.RecordStore].deleteRecord(this);\n  }\n}\nfunction save(options) {\n  let promise;\n  if (this.currentState.isNew && this.currentState.isDeleted) {\n    promise = Promise.resolve(this);\n  } else {\n    this.errors.clear();\n    promise = this[_warp_drive_core_types_symbols__WEBPACK_IMPORTED_MODULE_6__.RecordStore].saveRecord(this, options);\n  }\n  return promise;\n}\nfunction destroyRecord(options) {\n  const {\n    isNew\n  } = this.currentState;\n  this.deleteRecord();\n  if (isNew) {\n    return Promise.resolve(this);\n  }\n  return this.save(options).then(_ => {\n    this.unloadRecord();\n    return this;\n  });\n}\nfunction createSnapshot() {\n  const store = this[_warp_drive_core_types_symbols__WEBPACK_IMPORTED_MODULE_6__.RecordStore];\n  (0,_ember_data_legacy_compat_private__WEBPACK_IMPORTED_MODULE_10__.upgradeStore)(store);\n  if (!store._fetchManager) {\n    const FetchManager = (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_14__[\"default\"])(__webpack_require__(/*! @ember-data/legacy-compat/-private */ \"../rewritten-packages/@ember-data/legacy-compat.e84b6420/node_modules/@ember-data/legacy-compat/-private.js\")).FetchManager;\n    store._fetchManager = new FetchManager(store);\n  }\n  return store._fetchManager.createSnapshot((0,_ember_data_store__WEBPACK_IMPORTED_MODULE_2__.recordIdentifierFor)(this));\n}\nfunction notifyChanges(identifier, value, key, record, store) {\n  if (value === 'attributes') {\n    if (key) {\n      notifyAttribute(store, identifier, key, record);\n    } else {\n      record.eachAttribute(name => {\n        notifyAttribute(store, identifier, name, record);\n      });\n    }\n  } else if (value === 'relationships') {\n    if (key) {\n      const meta = record.constructor.relationshipsByName.get(key);\n      ( true && !(meta) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Expected to find a relationship for ${key} on ${identifier.type}`, meta));\n      notifyRelationship(identifier, key, record, meta);\n    } else {\n      record.eachRelationship((name, meta) => {\n        notifyRelationship(identifier, name, record, meta);\n      });\n    }\n  } else if (value === 'identity') {\n    record.notifyPropertyChange('id');\n  }\n}\nfunction notifyRelationship(identifier, key, record, meta) {\n  if (meta.kind === 'belongsTo') {\n    record.notifyPropertyChange(key);\n  } else if (meta.kind === 'hasMany') {\n    const support = LEGACY_SUPPORT.get(identifier);\n    const manyArray = support && support._manyArrayCache[key];\n    const hasPromise = support && support._relationshipPromisesCache[key];\n    if (manyArray && hasPromise) {\n      // do nothing, we will notify the ManyArray directly\n      // once the fetch has completed.\n      return;\n    }\n    if (manyArray) {\n      manyArray.notify();\n\n      //We need to notifyPropertyChange in the adding case because we need to make sure\n      //we fetch the newly added record in case it is unloaded\n      //TODO(Igor): Consider whether we could do this only if the record state is unloaded\n      ( true && !(meta.options) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Expected options to exist on relationship meta`, meta.options));\n      ( true && !('async' in meta.options) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Expected async to exist on relationship meta options`, 'async' in meta.options));\n      if (meta.options.async) {\n        record.notifyPropertyChange(key);\n      }\n    }\n  }\n}\nfunction notifyAttribute(store, identifier, key, record) {\n  const currentValue = (0,_ember_object_internals__WEBPACK_IMPORTED_MODULE_13__.cacheFor)(record, key);\n  const cache = store.cache;\n  if (currentValue !== cache.getAttr(identifier, key)) {\n    record.notifyPropertyChange(key);\n  }\n}\nvar _class$1;\nconst SOURCE_POINTER_REGEXP = /^\\/?data\\/(attributes|relationships)\\/(.*)/;\nconst SOURCE_POINTER_PRIMARY_REGEXP = /^\\/?data/;\nconst PRIMARY_ATTRIBUTE_KEY = 'base';\nfunction isInvalidError(error) {\n  return !!error && error instanceof Error && 'isAdapterError' in error && error.isAdapterError === true && 'code' in error && error.code === 'InvalidError';\n}\n\n/**\n * A decorator that caches a getter while\n * providing the ability to bust that cache\n * when we so choose in a way that notifies\n * tracking systems.\n *\n * @internal\n */\nfunction tagged(_target, key, desc) {\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  const getter = desc.get;\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  const setter = desc.set;\n  desc.get = function () {\n    const signal = (0,_ember_data_tracking_private__WEBPACK_IMPORTED_MODULE_5__.getSignal)(this, key, true);\n    (0,_ember_data_tracking_private__WEBPACK_IMPORTED_MODULE_5__.subscribe)(signal);\n    if (signal.shouldReset) {\n      signal.shouldReset = false;\n      signal.lastValue = getter.call(this);\n    }\n    return signal.lastValue;\n  };\n  desc.set = function (v) {\n    (0,_ember_data_tracking_private__WEBPACK_IMPORTED_MODULE_5__.getSignal)(this, key, true); // ensure signal is setup in case we want to use it.\n    // probably notify here but not yet.\n    setter.call(this, v);\n  };\n  (0,_ember_data_tracking__WEBPACK_IMPORTED_MODULE_4__.compat)(desc);\n  return desc;\n}\nfunction notifySignal(obj, key) {\n  const signal = (0,_ember_data_tracking_private__WEBPACK_IMPORTED_MODULE_5__.peekSignal)(obj, key);\n  if (signal) {\n    signal.shouldReset = true;\n    (0,_ember_data_tracking_private__WEBPACK_IMPORTED_MODULE_5__.addToTransaction)(signal);\n  }\n}\n\n/**\nHistorically EmberData managed a state machine\nfor each record, the localState for which\nwas reflected onto Model.\n\nThis implements the flags and stateName for backwards compat\nwith the state tree that used to be possible (listed below).\n\nstateName and dirtyType are candidates for deprecation.\n\nroot\n  empty\n    deleted    // hidden from stateName\n    preloaded  // hidden from stateName\n\n  loading\n     empty     // hidden from stateName\n     preloaded // hidden from stateName\n\n  loaded\n    saved\n    updated\n      uncommitted\n      invalid\n      inFlight\n    created\n      uncommitted\n      invalid\n      inFlight\n\n  deleted\n    saved\n      new      // hidden from stateName\n    uncommitted\n    invalid\n    inFlight\n\n  @internal\n*/\nlet RecordState = (_class$1 = class RecordState {\n  constructor(record) {\n    const store = (0,_ember_data_store__WEBPACK_IMPORTED_MODULE_2__.storeFor)(record);\n    const identity = (0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_3__.recordIdentifierFor)(record);\n    this.identifier = identity;\n    this.record = record;\n    this.cache = store.cache;\n    this.pendingCount = 0;\n    this.fulfilledCount = 0;\n    this.rejectedCount = 0;\n    this._errorRequests = [];\n    this._lastError = null;\n    const requests = store.getRequestStateService();\n    const notifications = store.notifications;\n    const handleRequest = req => {\n      if (req.type === 'mutation') {\n        switch (req.state) {\n          case 'pending':\n            this.isSaving = true;\n            break;\n          case 'rejected':\n            this.isSaving = false;\n            this._lastError = req;\n            if (!(req.response && isInvalidError(req.response.data))) {\n              this._errorRequests.push(req);\n            }\n            notifyErrorsStateChanged(this);\n            break;\n          case 'fulfilled':\n            this._errorRequests = [];\n            this._lastError = null;\n            this.isSaving = false;\n            this.notify('isDirty');\n            notifyErrorsStateChanged(this);\n            break;\n        }\n      } else {\n        switch (req.state) {\n          case 'pending':\n            this.pendingCount++;\n            this.notify('isLoading');\n            break;\n          case 'rejected':\n            this.pendingCount--;\n            this._lastError = req;\n            if (!(req.response && isInvalidError(req.response.data))) {\n              this._errorRequests.push(req);\n            }\n            this.notify('isLoading');\n            notifyErrorsStateChanged(this);\n            break;\n          case 'fulfilled':\n            this.pendingCount--;\n            this.fulfilledCount++;\n            this.notify('isLoading');\n            this.notify('isDirty');\n            notifyErrorsStateChanged(this);\n            this._errorRequests = [];\n            this._lastError = null;\n            break;\n        }\n      }\n    };\n    requests.subscribeForRecord(identity, handleRequest);\n\n    // we instantiate lazily\n    // so we grab anything we don't have yet\n    const lastRequest = requests.getLastRequestForRecord(identity);\n    if (lastRequest) {\n      handleRequest(lastRequest);\n    }\n    this.handler = notifications.subscribe(identity, (identifier, type, key) => {\n      switch (type) {\n        case 'state':\n          this.notify('isSaved');\n          this.notify('isNew');\n          this.notify('isDeleted');\n          this.notify('isDirty');\n          break;\n        case 'attributes':\n          this.notify('isEmpty');\n          this.notify('isDirty');\n          break;\n        case 'errors':\n          this.updateInvalidErrors(this.record.errors);\n          this.notify('isValid');\n          break;\n      }\n    });\n  }\n  destroy() {\n    (0,_ember_data_store__WEBPACK_IMPORTED_MODULE_2__.storeFor)(this.record).notifications.unsubscribe(this.handler);\n  }\n  notify(key) {\n    notifySignal(this, key);\n  }\n  updateInvalidErrors(errors) {\n    ( true && !(typeof this.cache.getErrors === 'function') && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Expected the Cache instance for ${this.identifier.lid}  to implement getErrors(identifier)`, typeof this.cache.getErrors === 'function'));\n    const jsonApiErrors = this.cache.getErrors(this.identifier);\n    errors.clear();\n    for (let i = 0; i < jsonApiErrors.length; i++) {\n      const error = jsonApiErrors[i];\n      if (error.source && error.source.pointer) {\n        const keyMatch = error.source.pointer.match(SOURCE_POINTER_REGEXP);\n        let key;\n        if (keyMatch) {\n          key = keyMatch[2];\n        } else if (error.source.pointer.search(SOURCE_POINTER_PRIMARY_REGEXP) !== -1) {\n          key = PRIMARY_ATTRIBUTE_KEY;\n        }\n        if (key) {\n          const errMsg = error.detail || error.title;\n          ( true && !(errMsg) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Expected field error to have a detail or title to use as the message`, errMsg));\n          errors.add(key, errMsg);\n        }\n      }\n    }\n  }\n  cleanErrorRequests() {\n    this.notify('isValid');\n    this.notify('isError');\n    this.notify('adapterError');\n    this._errorRequests = [];\n    this._lastError = null;\n  }\n  get isLoading() {\n    return !this.isLoaded && this.pendingCount > 0 && this.fulfilledCount === 0;\n  }\n  get isLoaded() {\n    if (this.isNew) {\n      return true;\n    }\n    return this.fulfilledCount > 0 || !this.isEmpty;\n  }\n  get isSaved() {\n    const rd = this.cache;\n    if (this.isDeleted) {\n      ( true && !(typeof rd.isDeletionCommitted === 'function') && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Expected Cache to implement isDeletionCommitted()`, typeof rd.isDeletionCommitted === 'function'));\n      return rd.isDeletionCommitted(this.identifier);\n    }\n    if (this.isNew || this.isEmpty || !this.isValid || this.isDirty || this.isLoading) {\n      return false;\n    }\n    return true;\n  }\n  get isEmpty() {\n    const rd = this.cache;\n    // TODO this is not actually an RFC'd concept. Determine the\n    // correct heuristic to replace this with.\n    ( true && !(typeof rd.isEmpty === 'function') && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Expected Cache to implement isEmpty()`, typeof rd.isEmpty === 'function'));\n    return !this.isNew && rd.isEmpty(this.identifier);\n  }\n  get isNew() {\n    const rd = this.cache;\n    ( true && !(typeof rd.isNew === 'function') && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Expected Cache to implement isNew()`, typeof rd.isNew === 'function'));\n    return rd.isNew(this.identifier);\n  }\n  get isDeleted() {\n    const rd = this.cache;\n    ( true && !(typeof rd.isDeleted === 'function') && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Expected Cache to implement isDeleted()`, typeof rd.isDeleted === 'function'));\n    return rd.isDeleted(this.identifier);\n  }\n  get isValid() {\n    return this.record.errors.length === 0;\n  }\n  get isDirty() {\n    const rd = this.cache;\n    if (this.isEmpty || rd.isDeletionCommitted(this.identifier) || this.isDeleted && this.isNew) {\n      return false;\n    }\n    return this.isDeleted || this.isNew || rd.hasChangedAttrs(this.identifier);\n  }\n  get isError() {\n    const errorReq = this._errorRequests[this._errorRequests.length - 1];\n    if (!errorReq) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n  get adapterError() {\n    const request = this._lastError;\n    if (!request) {\n      return null;\n    }\n    return request.state === 'rejected' && request.response.data;\n  }\n  get isPreloaded() {\n    return !this.isEmpty && this.isLoading;\n  }\n  get stateName() {\n    // we might be empty while loading so check this first\n    if (this.isLoading) {\n      return 'root.loading';\n\n      // got nothing yet or were unloaded\n    } else if (this.isEmpty) {\n      return 'root.empty';\n\n      // deleted substates\n    } else if (this.isDeleted) {\n      if (this.isSaving) {\n        return 'root.deleted.inFlight';\n      } else if (this.isSaved) {\n        // TODO ensure isSaved isn't true from previous requests\n        return 'root.deleted.saved';\n      } else if (!this.isValid) {\n        return 'root.deleted.invalid';\n      } else {\n        return 'root.deleted.uncommitted';\n      }\n\n      // loaded.created substates\n    } else if (this.isNew) {\n      if (this.isSaving) {\n        return 'root.loaded.created.inFlight';\n      } else if (!this.isValid) {\n        return 'root.loaded.created.invalid';\n      }\n      return 'root.loaded.created.uncommitted';\n\n      // loaded.updated substates\n    } else if (this.isSaving) {\n      return 'root.loaded.updated.inFlight';\n    } else if (!this.isValid) {\n      return 'root.loaded.updated.invalid';\n    } else if (this.isDirty) {\n      return 'root.loaded.updated.uncommitted';\n\n      // if nothing remains, we are loaded saved!\n    } else {\n      return 'root.loaded.saved';\n    }\n  }\n  get dirtyType() {\n    // we might be empty while loading so check this first\n    if (this.isLoading || this.isEmpty) {\n      return '';\n\n      // deleted substates\n    } else if (this.isDirty && this.isDeleted) {\n      return 'deleted';\n\n      // loaded.created substates\n    } else if (this.isNew) {\n      return 'created';\n\n      // loaded.updated substates\n    } else if (this.isSaving || !this.isValid || this.isDirty) {\n      return 'updated';\n\n      // if nothing remains, we are loaded saved!\n    } else {\n      return '';\n    }\n  }\n}, (_applyDecoratedDescriptor(_class$1.prototype, \"isLoading\", [tagged], Object.getOwnPropertyDescriptor(_class$1.prototype, \"isLoading\"), _class$1.prototype), _applyDecoratedDescriptor(_class$1.prototype, \"isLoaded\", [tagged], Object.getOwnPropertyDescriptor(_class$1.prototype, \"isLoaded\"), _class$1.prototype), _applyDecoratedDescriptor(_class$1.prototype, \"isSaved\", [tagged], Object.getOwnPropertyDescriptor(_class$1.prototype, \"isSaved\"), _class$1.prototype), _applyDecoratedDescriptor(_class$1.prototype, \"isEmpty\", [tagged], Object.getOwnPropertyDescriptor(_class$1.prototype, \"isEmpty\"), _class$1.prototype), _applyDecoratedDescriptor(_class$1.prototype, \"isNew\", [tagged], Object.getOwnPropertyDescriptor(_class$1.prototype, \"isNew\"), _class$1.prototype), _applyDecoratedDescriptor(_class$1.prototype, \"isDeleted\", [tagged], Object.getOwnPropertyDescriptor(_class$1.prototype, \"isDeleted\"), _class$1.prototype), _applyDecoratedDescriptor(_class$1.prototype, \"isValid\", [tagged], Object.getOwnPropertyDescriptor(_class$1.prototype, \"isValid\"), _class$1.prototype), _applyDecoratedDescriptor(_class$1.prototype, \"isDirty\", [tagged], Object.getOwnPropertyDescriptor(_class$1.prototype, \"isDirty\"), _class$1.prototype), _applyDecoratedDescriptor(_class$1.prototype, \"isError\", [tagged], Object.getOwnPropertyDescriptor(_class$1.prototype, \"isError\"), _class$1.prototype), _applyDecoratedDescriptor(_class$1.prototype, \"adapterError\", [tagged], Object.getOwnPropertyDescriptor(_class$1.prototype, \"adapterError\"), _class$1.prototype), _applyDecoratedDescriptor(_class$1.prototype, \"isPreloaded\", [_ember_data_tracking__WEBPACK_IMPORTED_MODULE_4__.cached], Object.getOwnPropertyDescriptor(_class$1.prototype, \"isPreloaded\"), _class$1.prototype), _applyDecoratedDescriptor(_class$1.prototype, \"stateName\", [_ember_data_tracking__WEBPACK_IMPORTED_MODULE_4__.cached], Object.getOwnPropertyDescriptor(_class$1.prototype, \"stateName\"), _class$1.prototype), _applyDecoratedDescriptor(_class$1.prototype, \"dirtyType\", [_ember_data_tracking__WEBPACK_IMPORTED_MODULE_4__.cached], Object.getOwnPropertyDescriptor(_class$1.prototype, \"dirtyType\"), _class$1.prototype)), _class$1);\n(0,_ember_data_tracking_private__WEBPACK_IMPORTED_MODULE_5__.defineSignal)(RecordState.prototype, 'isSaving', false);\nfunction notifyErrorsStateChanged(state) {\n  state.notify('isValid');\n  state.notify('isError');\n  state.notify('adapterError');\n}\nvar _class, _class2;\nfunction findPossibleInverses(type, inverseType, name, relationshipsSoFar) {\n  const possibleRelationships = relationshipsSoFar || [];\n  const relationshipMap = inverseType.relationships;\n  if (!relationshipMap) {\n    return possibleRelationships;\n  }\n  const relationshipsForType = relationshipMap.get(type.modelName);\n  const relationships = Array.isArray(relationshipsForType) ? relationshipsForType.filter(relationship => {\n    const optionsForRelationship = relationship.options;\n    if (!optionsForRelationship.inverse && optionsForRelationship.inverse !== null) {\n      return true;\n    }\n    return name === optionsForRelationship.inverse;\n  }) : null;\n  if (relationships) {\n    possibleRelationships.push.apply(possibleRelationships, relationships);\n  }\n\n  //Recurse to support polymorphism\n  if (type.superclass) {\n    findPossibleInverses(type.superclass, inverseType, name, possibleRelationships);\n  }\n  return possibleRelationships;\n}\n\n/*\n * This decorator allows us to lazily compute\n * an expensive getter on first-access and thereafter\n * never recompute it.\n */\nfunction computeOnce(target, propertyName, desc) {\n  const cache = new WeakMap();\n  const getter = desc.get;\n  desc.get = function () {\n    let meta = cache.get(this);\n    if (!meta) {\n      meta = {\n        hasComputed: false,\n        value: undefined\n      };\n      cache.set(this, meta);\n    }\n    if (!meta.hasComputed) {\n      meta.value = getter.call(this);\n      meta.hasComputed = true;\n    }\n    return meta.value;\n  };\n  return desc;\n}\n\n/**\n  Base class from which Models can be defined.\n\n  ```js\n  import Model, { attr } from '@ember-data/model';\n\n  export default class User extends Model {\n    @attr name;\n  }\n  ```\n\n  Models are used both to define the static schema for a\n  particular resource type as well as the class to instantiate\n  to present that data from cache.\n\n  @class Model\n  @public\n  @extends Ember.EmberObject\n*/\nlet Model = (_class = (_class2 = class Model extends (_ember_object__WEBPACK_IMPORTED_MODULE_1___default()) {\n  constructor(...args) {\n    super(...args);\n    this.___private_notifications = void 0;\n  }\n  init(options = {}) {\n    {\n      if (!options._secretInit && !options._createProps) {\n        throw new Error('You should not call `create` on a model. Instead, call `store.createRecord` with the attributes you would like to set.');\n      }\n    }\n    const createProps = options._createProps;\n    const _secretInit = options._secretInit;\n    options._createProps = null;\n    options._secretInit = null;\n    const store = this.store = _secretInit.store;\n    super.init(options);\n    this[_warp_drive_core_types_symbols__WEBPACK_IMPORTED_MODULE_6__.RecordStore] = store;\n    const identity = _secretInit.identifier;\n    _secretInit.cb(this, _secretInit.cache, identity, _secretInit.store);\n    this.___recordState = new RecordState(this);\n    this.setProperties(createProps);\n    const notifications = store.notifications;\n    this.___private_notifications = notifications.subscribe(identity, (identifier, type, field) => {\n      notifyChanges(identifier, type, field, this, store);\n    });\n  }\n  destroy() {\n    const identifier = (0,_ember_data_store__WEBPACK_IMPORTED_MODULE_2__.recordIdentifierFor)(this);\n    this.___recordState?.destroy();\n    const store = (0,_ember_data_store__WEBPACK_IMPORTED_MODULE_2__.storeFor)(this);\n    store.notifications.unsubscribe(this.___private_notifications);\n    // Legacy behavior is to notify the relationships on destroy\n    // such that they \"clear\". It's uncertain this behavior would\n    // be good for a new model paradigm, likely cheaper and safer\n    // to simply not notify, for this reason the store does not itself\n    // notify individual changes once the delete has been signaled,\n    // this decision is left to model instances.\n\n    this.eachRelationship((name, meta) => {\n      if (meta.kind === 'belongsTo') {\n        this.notifyPropertyChange(name);\n      }\n    });\n    LEGACY_SUPPORT.get(this)?.destroy();\n    LEGACY_SUPPORT.delete(this);\n    LEGACY_SUPPORT.delete(identifier);\n    super.destroy();\n  }\n\n  /**\n    If this property is `true` the record is in the `empty`\n    state. Empty is the first state all records enter after they have\n    been created. Most records created by the store will quickly\n    transition to the `loading` state if data needs to be fetched from\n    the server or the `created` state if the record is created on the\n    client. A record can also enter the empty state if the adapter is\n    unable to locate the record.\n     @property isEmpty\n    @public\n    @type {Boolean}\n    @readOnly\n  */\n  get isEmpty() {\n    return this.currentState.isEmpty;\n  }\n\n  /**\n    If this property is `true` the record is in the `loading` state. A\n    record enters this state when the store asks the adapter for its\n    data. It remains in this state until the adapter provides the\n    requested data.\n     @property isLoading\n    @public\n    @type {Boolean}\n    @readOnly\n  */\n  get isLoading() {\n    return this.currentState.isLoading;\n  }\n\n  /**\n    If this property is `true` the record is in the `loaded` state. A\n    record enters this state when its data is populated. Most of a\n    record's lifecycle is spent inside substates of the `loaded`\n    state.\n     Example\n     ```javascript\n    let record = store.createRecord('model');\n    record.isLoaded; // true\n     store.findRecord('model', 1).then(function(model) {\n      model.isLoaded; // true\n    });\n    ```\n     @property isLoaded\n    @public\n    @type {Boolean}\n    @readOnly\n  */\n  get isLoaded() {\n    return this.currentState.isLoaded;\n  }\n\n  /**\n    If this property is `true` the record is in the `dirty` state. The\n    record has local changes that have not yet been saved by the\n    adapter. This includes records that have been created (but not yet\n    saved) or deleted.\n     Example\n     ```javascript\n    let record = store.createRecord('model');\n    record.hasDirtyAttributes; // true\n     store.findRecord('model', 1).then(function(model) {\n      model.hasDirtyAttributes; // false\n      model.set('foo', 'some value');\n      model.hasDirtyAttributes; // true\n    });\n    ```\n     @since 1.13.0\n    @property hasDirtyAttributes\n    @public\n    @type {Boolean}\n    @readOnly\n  */\n  get hasDirtyAttributes() {\n    return this.currentState.isDirty;\n  }\n\n  /**\n    If this property is `true` the record is in the `saving` state. A\n    record enters the saving state when `save` is called, but the\n    adapter has not yet acknowledged that the changes have been\n    persisted to the backend.\n     Example\n     ```javascript\n    let record = store.createRecord('model');\n    record.isSaving; // false\n    let promise = record.save();\n    record.isSaving; // true\n    promise.then(function() {\n      record.isSaving; // false\n    });\n    ```\n     @property isSaving\n    @public\n    @type {Boolean}\n    @readOnly\n  */\n  get isSaving() {\n    return this.currentState.isSaving;\n  }\n\n  /**\n    If this property is `true` the record is in the `deleted` state\n    and has been marked for deletion. When `isDeleted` is true and\n    `hasDirtyAttributes` is true, the record is deleted locally but the deletion\n    was not yet persisted. When `isSaving` is true, the change is\n    in-flight. When both `hasDirtyAttributes` and `isSaving` are false, the\n    change has persisted.\n     Example\n     ```javascript\n    let record = store.createRecord('model');\n    record.isDeleted;    // false\n    record.deleteRecord();\n     // Locally deleted\n    record.isDeleted;           // true\n    record.hasDirtyAttributes;  // true\n    record.isSaving;            // false\n     // Persisting the deletion\n    let promise = record.save();\n    record.isDeleted;    // true\n    record.isSaving;     // true\n     // Deletion Persisted\n    promise.then(function() {\n      record.isDeleted;          // true\n      record.isSaving;           // false\n      record.hasDirtyAttributes; // false\n    });\n    ```\n     @property isDeleted\n    @public\n    @type {Boolean}\n    @readOnly\n  */\n  get isDeleted() {\n    return this.currentState.isDeleted;\n  }\n\n  /**\n    If this property is `true` the record is in the `new` state. A\n    record will be in the `new` state when it has been created on the\n    client and the adapter has not yet report that it was successfully\n    saved.\n     Example\n     ```javascript\n    let record = store.createRecord('model');\n    record.isNew; // true\n     record.save().then(function(model) {\n      model.isNew; // false\n    });\n    ```\n     @property isNew\n    @public\n    @type {Boolean}\n    @readOnly\n  */\n  get isNew() {\n    return this.currentState.isNew;\n  }\n\n  /**\n    If this property is `true` the record is in the `valid` state.\n     A record will be in the `valid` state when the adapter did not report any\n    server-side validation failures.\n     @property isValid\n    @public\n    @type {Boolean}\n    @readOnly\n  */\n  get isValid() {\n    return this.currentState.isValid;\n  }\n\n  /**\n    If the record is in the dirty state this property will report what\n    kind of change has caused it to move into the dirty\n    state. Possible values are:\n     - `created` The record has been created by the client and not yet saved to the adapter.\n    - `updated` The record has been updated by the client and not yet saved to the adapter.\n    - `deleted` The record has been deleted by the client and not yet saved to the adapter.\n     Example\n     ```javascript\n    let record = store.createRecord('model');\n    record.dirtyType; // 'created'\n    ```\n     @property dirtyType\n    @public\n    @type {String}\n    @readOnly\n  */\n  get dirtyType() {\n    return this.currentState.dirtyType;\n  }\n\n  /**\n    If `true` the adapter reported that it was unable to save local\n    changes to the backend for any reason other than a server-side\n    validation error.\n     Example\n     ```javascript\n    record.isError; // false\n    record.set('foo', 'valid value');\n    record.save().then(null, function() {\n      record.isError; // true\n    });\n    ```\n     @property isError\n    @public\n    @type {Boolean}\n    @readOnly\n  */\n  get isError() {\n    return this.currentState.isError;\n  }\n  set isError(v) {\n    {\n      throw new Error(`isError is not directly settable`);\n    }\n  }\n\n  /**\n    If `true` the store is attempting to reload the record from the adapter.\n     Example\n     ```javascript\n    record.isReloading; // false\n    record.reload();\n    record.isReloading; // true\n    ```\n     @property isReloading\n    @public\n    @type {Boolean}\n    @readOnly\n  */\n\n  /**\n    All ember models have an id property. This is an identifier\n    managed by an external source. These are always coerced to be\n    strings before being used internally. Note when declaring the\n    attributes for a model it is an error to declare an id\n    attribute.\n     ```javascript\n    let record = store.createRecord('model');\n    record.id; // null\n     store.findRecord('model', 1).then(function(model) {\n      model.id; // '1'\n    });\n    ```\n     @property id\n    @public\n    @type {String}\n  */\n  get id() {\n    // this guard exists, because some dev-only deprecation code\n    // (addListener via validatePropertyInjections) invokes toString before the\n    // object is real.\n    {\n      try {\n        return (0,_ember_data_store__WEBPACK_IMPORTED_MODULE_2__.recordIdentifierFor)(this).id;\n      } catch {\n        return void 0;\n      }\n    }\n    return (0,_ember_data_store__WEBPACK_IMPORTED_MODULE_2__.recordIdentifierFor)(this).id;\n  }\n  set id(id) {\n    const normalizedId = (0,_ember_data_store_private__WEBPACK_IMPORTED_MODULE_3__.coerceId)(id);\n    const identifier = (0,_ember_data_store__WEBPACK_IMPORTED_MODULE_2__.recordIdentifierFor)(this);\n    const didChange = normalizedId !== identifier.id;\n    ( true && !(!didChange || identifier.id === null) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Cannot set ${identifier.type} record's id to ${id}, because id is already ${identifier.id}`, !didChange || identifier.id === null));\n    if (normalizedId !== null && didChange) {\n      this.store._instanceCache.setRecordId(identifier, normalizedId);\n      this.store.notifications.notify(identifier, 'identity');\n    }\n  }\n  toString() {\n    return `<model::${this.constructor.modelName}:${this.id}>`;\n  }\n\n  /**\n    @property currentState\n    @private\n    @type {Object}\n  */\n  // TODO we can probably make this a computeOnce\n  // we likely do not need to notify the currentState root anymore\n  get currentState() {\n    // descriptors are called with the wrong `this` context during mergeMixins\n    // when using legacy/classic ember classes. Basically: lazy in prod and eager in dev.\n    // so we do this to try to steer folks to the nicer \"dont user currentState\"\n    // error.\n\n    return this.___recordState;\n  }\n  set currentState(_v) {\n    throw new Error('cannot set currentState');\n  }\n\n  /**\n    The store service instance which created this record instance\n    @property store\n    @public\n   */\n\n  /**\n    When the record is in the `invalid` state this object will contain\n    any errors returned by the adapter. When present the errors hash\n    contains keys corresponding to the invalid property names\n    and values which are arrays of Javascript objects with two keys:\n     - `message` A string containing the error message from the backend\n    - `attribute` The name of the property associated with this error message\n     ```javascript\n    record.errors.length; // 0\n    record.set('foo', 'invalid value');\n    record.save().catch(function() {\n      record.errors.foo;\n      // [{message: 'foo should be a number.', attribute: 'foo'}]\n    });\n    ```\n     The `errors` property is useful for displaying error messages to\n    the user.\n     ```handlebars\n    <label>Username: <Input @value={{@model.username}} /> </label>\n    {{#each @model.errors.username as |error|}}\n      <div class=\"error\">\n        {{error.message}}\n      </div>\n    {{/each}}\n    <label>Email: <Input @value={{@model.email}} /> </label>\n    {{#each @model.errors.email as |error|}}\n      <div class=\"error\">\n        {{error.message}}\n      </div>\n    {{/each}}\n    ```\n      You can also access the special `messages` property on the error\n    object to get an array of all the error strings.\n     ```handlebars\n    {{#each @model.errors.messages as |message|}}\n      <div class=\"error\">\n        {{message}}\n      </div>\n    {{/each}}\n    ```\n     @property errors\n    @public\n    @type {Errors}\n  */\n  get errors() {\n    const errors = Errors.create({\n      __record: this\n    });\n    this.currentState.updateInvalidErrors(errors);\n    return errors;\n  }\n\n  /**\n    This property holds the `AdapterError` object with which\n    last adapter operation was rejected.\n     @property adapterError\n    @public\n    @type {AdapterError}\n  */\n  get adapterError() {\n    return this.currentState.adapterError;\n  }\n  set adapterError(v) {\n    throw new Error(`adapterError is not directly settable`);\n  }\n\n  /**\n    Create a JSON representation of the record, using the serialization\n    strategy of the store's adapter.\n    `serialize` takes an optional hash as a parameter, currently\n    supported options are:\n    - `includeId`: `true` if the record's ID should be included in the\n      JSON representation.\n     @method serialize\n    @public\n    @param {Object} options\n    @return {Object} an object whose values are primitive JSON values only\n  */\n\n  /*\n    We hook the default implementation to ensure\n    our tagged properties are properly notified\n    as well. We still super for everything because\n    sync observers require a direct call occuring\n    to trigger their flush. We wouldn't need to\n    super in 4.0+ where sync observers are removed.\n   */\n  notifyPropertyChange(prop) {\n    notifySignal(this, prop);\n    super.notifyPropertyChange(prop);\n  }\n\n  /**\n    Marks the record as deleted but does not save it. You must call\n    `save` afterwards if you want to persist it. You might use this\n    method if you want to allow the user to still `rollbackAttributes()`\n    after a delete was made.\n     Example\n     ```js\n    import Component from '@glimmer/component';\n     export default class extends Component {\n      softDelete = () => {\n        this.args.model.deleteRecord();\n      }\n       confirm = () => {\n        this.args.model.save();\n      }\n       undo = () => {\n        this.args.model.rollbackAttributes();\n      }\n    }\n    ```\n     @method deleteRecord\n    @public\n  */\n\n  /**\n    Same as `deleteRecord`, but saves the record immediately.\n     Example\n     ```js\n    import Component from '@glimmer/component';\n     export default class extends Component {\n      delete = () => {\n        this.args.model.destroyRecord().then(function() {\n          this.transitionToRoute('model.index');\n        });\n      }\n    }\n    ```\n     If you pass an object on the `adapterOptions` property of the options\n    argument it will be passed to your adapter via the snapshot\n     ```js\n    record.destroyRecord({ adapterOptions: { subscribe: false } });\n    ```\n     ```app/adapters/post.js\n    import MyCustomAdapter from './custom-adapter';\n     export default class PostAdapter extends MyCustomAdapter {\n      deleteRecord(store, type, snapshot) {\n        if (snapshot.adapterOptions.subscribe) {\n          // ...\n        }\n        // ...\n      }\n    }\n    ```\n     @method destroyRecord\n    @public\n    @param {Object} options\n    @return {Promise} a promise that will be resolved when the adapter returns\n    successfully or rejected if the adapter returns with an error.\n  */\n\n  /**\n    Unloads the record from the store. This will not send a delete request\n    to your server, it just unloads the record from memory.\n     @method unloadRecord\n    @public\n  */\n\n  /**\n    Returns an object, whose keys are changed properties, and value is\n    an [oldProp, newProp] array.\n     The array represents the diff of the canonical state with the local state\n    of the model. Note: if the model is created locally, the canonical state is\n    empty since the adapter hasn't acknowledged the attributes yet:\n     Example\n     ```app/models/mascot.js\n    import Model, { attr } from '@ember-data/model';\n     export default class MascotModel extends Model {\n      @attr('string') name;\n      @attr('boolean', {\n        defaultValue: false\n      })\n      isAdmin;\n    }\n    ```\n     ```javascript\n    let mascot = store.createRecord('mascot');\n     mascot.changedAttributes(); // {}\n     mascot.set('name', 'Tomster');\n    mascot.changedAttributes(); // { name: [undefined, 'Tomster'] }\n     mascot.set('isAdmin', true);\n    mascot.changedAttributes(); // { isAdmin: [undefined, true], name: [undefined, 'Tomster'] }\n     mascot.save().then(function() {\n      mascot.changedAttributes(); // {}\n       mascot.set('isAdmin', false);\n      mascot.changedAttributes(); // { isAdmin: [true, false] }\n    });\n    ```\n     @method changedAttributes\n    @public\n    @return {Object} an object, whose keys are changed properties,\n      and value is an [oldProp, newProp] array.\n  */\n\n  /**\n    If the model `hasDirtyAttributes` this function will discard any unsaved\n    changes. If the model `isNew` it will be removed from the store.\n     Example\n     ```javascript\n    record.name; // 'Untitled Document'\n    record.set('name', 'Doc 1');\n    record.name; // 'Doc 1'\n    record.rollbackAttributes();\n    record.name; // 'Untitled Document'\n    ```\n     @since 1.13.0\n    @method rollbackAttributes\n    @public\n  */\n\n  /**\n    @method _createSnapshot\n    @private\n  */\n  // TODO @deprecate in favor of a public API or examples of how to test successfully\n\n  /**\n    Save the record and persist any changes to the record to an\n    external source via the adapter.\n     Example\n     ```javascript\n    record.set('name', 'Tomster');\n    record.save().then(function() {\n      // Success callback\n    }, function() {\n      // Error callback\n    });\n    ```\n    If you pass an object using the `adapterOptions` property of the options\n   argument it will be passed to your adapter via the snapshot.\n     ```js\n    record.save({ adapterOptions: { subscribe: false } });\n    ```\n     ```app/adapters/post.js\n    import MyCustomAdapter from './custom-adapter';\n     export default class PostAdapter extends MyCustomAdapter {\n      updateRecord(store, type, snapshot) {\n        if (snapshot.adapterOptions.subscribe) {\n          // ...\n        }\n        // ...\n      }\n    }\n    ```\n     @method save\n    @public\n    @param {Object} options\n    @return {Promise} a promise that will be resolved when the adapter returns\n    successfully or rejected if the adapter returns with an error.\n  */\n\n  /**\n    Reload the record from the adapter.\n     This will only work if the record has already finished loading.\n     Example\n     ```js\n    import Component from '@glimmer/component';\n     export default class extends Component {\n      async reload = () => {\n        await this.args.model.reload();\n        // do something with the reloaded model\n      }\n    }\n    ```\n     @method reload\n    @public\n    @param {Object} options optional, may include `adapterOptions` hash which will be passed to adapter request\n    @return {Promise} a promise that will be resolved with the record when the\n    adapter returns successfully or rejected if the adapter returns\n    with an error.\n  */\n\n  attr() {\n    ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)('The `attr` method is not available on Model, a Snapshot was probably expected. Are you passing a Model instead of a Snapshot to your serializer?', false));\n  }\n\n  /**\n    Get the reference for the specified belongsTo relationship.\n     For instance, given the following model\n     ```app/models/blog-post.js\n    import Model, { belongsTo } from '@ember-data/model';\n     export default class BlogPost extends Model {\n      @belongsTo('user', { async: true, inverse: null }) author;\n    }\n    ```\n     Then the reference for the author relationship would be\n    retrieved from a record instance like so:\n     ```js\n    blogPost.belongsTo('author');\n    ```\n     A `BelongsToReference` is a low-level API that allows access\n    and manipulation of a belongsTo relationship.\n     It is especially useful when you're dealing with `async` relationships\n    as it allows synchronous access to the relationship data if loaded, as\n    well as APIs for loading, reloading the data or accessing available\n    information without triggering a load.\n     It may also be useful when using `sync` relationships that need to be\n    loaded/reloaded with more precise timing than marking the\n    relationship as `async` and relying on autofetch would have allowed.\n     However,keep in mind that marking a relationship as `async: false` will introduce\n    bugs into your application if the data is not always guaranteed to be available\n    by the time the relationship is accessed. Ergo, it is recommended when using this\n    approach to utilize `links` for unloaded relationship state instead of identifiers.\n     Reference APIs are entangled with the relationship's underlying state,\n    thus any getters or cached properties that utilize these will properly\n    invalidate if the relationship state changes.\n     References are \"stable\", meaning that multiple calls to retrieve the reference\n    for a given relationship will always return the same HasManyReference.\n     @method belongsTo\n    @public\n    @param {String} name of the relationship\n    @since 2.5.0\n    @return {BelongsToReference} reference for this relationship\n  */\n\n  /**\n    Get the reference for the specified hasMany relationship.\n     For instance, given the following model\n     ```app/models/blog-post.js\n    import Model, { hasMany } from '@ember-data/model';\n     export default class BlogPost extends Model {\n      @hasMany('comment', { async: true, inverse: null }) comments;\n    }\n    ```\n     Then the reference for the comments relationship would be\n    retrieved from a record instance like so:\n     ```js\n    blogPost.hasMany('comments');\n    ```\n     A `HasManyReference` is a low-level API that allows access\n    and manipulation of a hasMany relationship.\n     It is especially useful when you are dealing with `async` relationships\n    as it allows synchronous access to the relationship data if loaded, as\n    well as APIs for loading, reloading the data or accessing available\n    information without triggering a load.\n     It may also be useful when using `sync` relationships with `@ember-data/model`\n    that need to be loaded/reloaded with more precise timing than marking the\n    relationship as `async` and relying on autofetch would have allowed.\n     However,keep in mind that marking a relationship as `async: false` will introduce\n    bugs into your application if the data is not always guaranteed to be available\n    by the time the relationship is accessed. Ergo, it is recommended when using this\n    approach to utilize `links` for unloaded relationship state instead of identifiers.\n     Reference APIs are entangled with the relationship's underlying state,\n    thus any getters or cached properties that utilize these will properly\n    invalidate if the relationship state changes.\n     References are \"stable\", meaning that multiple calls to retrieve the reference\n    for a given relationship will always return the same HasManyReference.\n     @method hasMany\n    @public\n    @param {String} name of the relationship\n    @since 2.5.0\n    @return {HasManyReference} reference for this relationship\n  */\n\n  /**\n   Given a callback, iterates over each of the relationships in the model,\n   invoking the callback with the name of each relationship and its relationship\n   descriptor.\n     The callback method you provide should have the following signature (all\n   parameters are optional):\n    ```javascript\n   function(name, descriptor);\n   ```\n    - `name` the name of the current property in the iteration\n   - `descriptor` the meta object that describes this relationship\n    The relationship descriptor argument is an object with the following properties.\n    - **name** <span class=\"type\">String</span> the name of this relationship on the Model\n   - **kind** <span class=\"type\">String</span> \"hasMany\" or \"belongsTo\"\n   - **options** <span class=\"type\">Object</span> the original options hash passed when the relationship was declared\n   - **parentType** <span class=\"type\">Model</span> the type of the Model that owns this relationship\n   - **type** <span class=\"type\">String</span> the type name of the related Model\n    Note that in addition to a callback, you can also pass an optional target\n   object that will be set as `this` on the context.\n    Example\n    ```app/serializers/application.js\n   import JSONSerializer from '@ember-data/serializer/json';\n    export default class ApplicationSerializer extends JSONSerializer {\n      serialize(record, options) {\n      let json = {};\n       record.eachRelationship(function(name, descriptor) {\n        if (descriptor.kind === 'hasMany') {\n          let serializedHasManyName = name.toUpperCase() + '_IDS';\n          json[serializedHasManyName] = record.get(name).map(r => r.id);\n        }\n      });\n       return json;\n    }\n  }\n   ```\n    @method eachRelationship\n    @public\n   @param {Function} callback the callback to invoke\n   @param {any} binding the value to which the callback's `this` should be bound\n   */\n  eachRelationship(callback, binding) {\n    this.constructor.eachRelationship(callback, binding);\n  }\n  relationshipFor(name) {\n    return this.constructor.relationshipsByName.get(name);\n  }\n  inverseFor(name) {\n    return this.constructor.inverseFor(name, (0,_ember_data_store__WEBPACK_IMPORTED_MODULE_2__.storeFor)(this));\n  }\n  eachAttribute(callback, binding) {\n    this.constructor.eachAttribute(callback, binding);\n  }\n  /*\n   These class methods below provide relationship\n   introspection abilities about relationships.\n    A note about the computed properties contained here:\n    **These properties are effectively sealed once called for the first time.**\n   To avoid repeatedly doing expensive iteration over a model's fields, these\n   values are computed once and then cached for the remainder of the runtime of\n   your application.\n    If your application needs to modify a class after its initial definition\n   (for example, using `reopen()` to add additional attributes), make sure you\n   do it before using your model with the store, which uses these properties\n   extensively.\n   */\n\n  /**\n   For a given relationship name, returns the model type of the relationship.\n    For example, if you define a model like this:\n    ```app/models/post.js\n   import Model, { hasMany } from '@ember-data/model';\n    export default class PostModel extends Model {\n     @hasMany('comment') comments;\n   }\n   ```\n    Calling `store.modelFor('post').typeForRelationship('comments', store)` will return `Comment`.\n    @method typeForRelationship\n    @public\n   @static\n   @param {String} name the name of the relationship\n   @param {store} store an instance of Store\n   @return {Model} the type of the relationship, or undefined\n   */\n  static typeForRelationship(name, store) {\n    ( true && !(this.modelName) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Accessing schema information on Models without looking up the model via the store is disallowed.`, this.modelName));\n    const relationship = this.relationshipsByName.get(name);\n    return relationship && store.modelFor(relationship.type);\n  }\n  static get inverseMap() {\n    ( true && !(this.modelName) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Accessing schema information on Models without looking up the model via the store is disallowed.`, this.modelName));\n    return Object.create(null);\n  }\n\n  /**\n   Find the relationship which is the inverse of the one asked for.\n    For example, if you define models like this:\n    ```app/models/post.js\n   import Model, { hasMany } from '@ember-data/model';\n    export default class PostModel extends Model {\n      @hasMany('message') comments;\n    }\n   ```\n    ```app/models/message.js\n   import Model, { belongsTo } from '@ember-data/model';\n    export default class MessageModel extends Model {\n      @belongsTo('post') owner;\n    }\n   ```\n    ``` js\n   store.modelFor('post').inverseFor('comments', store) // { type: App.Message, name: 'owner', kind: 'belongsTo' }\n   store.modelFor('message').inverseFor('owner', store) // { type: App.Post, name: 'comments', kind: 'hasMany' }\n   ```\n    @method inverseFor\n    @public\n   @static\n   @param {String} name the name of the relationship\n   @param {Store} store\n   @return {Object} the inverse relationship, or null\n   */\n  static inverseFor(name, store) {\n    ( true && !(this.modelName) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Accessing schema information on Models without looking up the model via the store is disallowed.`, this.modelName));\n    const inverseMap = this.inverseMap;\n    if (inverseMap[name]) {\n      return inverseMap[name];\n    } else {\n      const inverse = this._findInverseFor(name, store);\n      inverseMap[name] = inverse;\n      return inverse;\n    }\n  }\n\n  //Calculate the inverse, ignoring the cache\n  static _findInverseFor(name, store) {\n    ( true && !(this.modelName) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Accessing schema information on Models without looking up the model via the store is disallowed.`, this.modelName));\n    const relationship = this.relationshipsByName.get(name);\n    const {\n      options\n    } = relationship;\n    const isPolymorphic = options.polymorphic;\n\n    //If inverse is manually specified to be null, like  `comments: hasMany('message', { inverse: null })`\n    const isExplicitInverseNull = options.inverse === null;\n    const isAbstractType = !isExplicitInverseNull && isPolymorphic && !store.getSchemaDefinitionService().doesTypeExist(relationship.type);\n    if (isExplicitInverseNull || isAbstractType) {\n      ( true && !(!isPolymorphic || isExplicitInverseNull) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`No schema for the abstract type '${relationship.type}' for the polymorphic relationship '${name}' on '${this.modelName}' was provided by the SchemaDefinitionService.`, !isPolymorphic || isExplicitInverseNull));\n      return null;\n    }\n    let fieldOnInverse, inverseKind, inverseRelationship, inverseOptions;\n    const inverseSchema = this.typeForRelationship(name, store);\n\n    // if the type does not exist and we are not polymorphic\n    //If inverse is specified manually, return the inverse\n    if (options.inverse !== undefined) {\n      fieldOnInverse = options.inverse;\n      inverseRelationship = inverseSchema && inverseSchema.relationshipsByName.get(fieldOnInverse);\n      ( true && !(inverseRelationship) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`We found no field named '${fieldOnInverse}' on the schema for '${inverseSchema.modelName}' to be the inverse of the '${name}' relationship on '${this.modelName}'. This is most likely due to a missing field on your model definition.`, inverseRelationship)); // TODO probably just return the whole inverse here\n      inverseKind = inverseRelationship.kind;\n      inverseOptions = inverseRelationship.options;\n    } else {\n      //No inverse was specified manually, we need to use a heuristic to guess one\n      if (relationship.type === relationship.parentModelName) {\n        ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.warn)(`Detected a reflexive relationship named '${name}' on the schema for '${relationship.type}' without an inverse option. Look at https://guides.emberjs.com/current/models/relationships/#toc_reflexive-relations for how to explicitly specify inverses.`, false, {\n          id: 'ds.model.reflexive-relationship-without-inverse'\n        }));\n      }\n      let possibleRelationships = findPossibleInverses(this, inverseSchema, name);\n      if (possibleRelationships.length === 0) {\n        return null;\n      }\n      {\n        const filteredRelationships = possibleRelationships.filter(possibleRelationship => {\n          const optionsForRelationship = possibleRelationship.options;\n          return name === optionsForRelationship.inverse;\n        });\n        ( true && !(filteredRelationships.length < 2) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(\"You defined the '\" + name + \"' relationship on \" + this + ', but you defined the inverse relationships of type ' + inverseSchema.toString() + ' multiple times. Look at https://guides.emberjs.com/current/models/relationships/#toc_explicit-inverses for how to explicitly specify inverses', filteredRelationships.length < 2));\n      }\n      const explicitRelationship = possibleRelationships.find(relationship => relationship.options.inverse === name);\n      if (explicitRelationship) {\n        possibleRelationships = [explicitRelationship];\n      }\n      ( true && !(possibleRelationships.length === 1) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(\"You defined the '\" + name + \"' relationship on \" + this + ', but multiple possible inverse relationships of type ' + this + ' were found on ' + inverseSchema + '. Look at https://guides.emberjs.com/current/models/relationships/#toc_explicit-inverses for how to explicitly specify inverses', possibleRelationships.length === 1));\n      fieldOnInverse = possibleRelationships[0].name;\n      inverseKind = possibleRelationships[0].kind;\n      inverseOptions = possibleRelationships[0].options;\n    }\n\n    // ensure inverse is properly configured\n    {\n      if (isPolymorphic) {\n        ( true && !(inverseOptions.as) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Relationships that satisfy polymorphic relationships MUST define which abstract-type they are satisfying using 'as'. The field '${fieldOnInverse}' on type '${inverseSchema.modelName}' is misconfigured.`, inverseOptions.as));\n        ( true && !(!!inverseOptions.as && relationship.type === inverseOptions.as) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`options.as should match the expected type of the polymorphic relationship. Expected field '${fieldOnInverse}' on type '${inverseSchema.modelName}' to specify '${relationship.type}' but found '${inverseOptions.as}'`, !!inverseOptions.as && relationship.type === inverseOptions.as));\n      }\n    }\n\n    // ensure we are properly configured\n    {\n      if (inverseOptions.polymorphic) {\n        ( true && !(options.as) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Relationships that satisfy polymorphic relationships MUST define which abstract-type they are satisfying using 'as'. The field '${name}' on type '${this.modelName}' is misconfigured.`, options.as));\n        ( true && !(!!options.as && inverseRelationship.type === options.as) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`options.as should match the expected type of the polymorphic relationship. Expected field '${name}' on type '${this.modelName}' to specify '${inverseRelationship.type}' but found '${options.as}'`, !!options.as && inverseRelationship.type === options.as));\n      }\n    }\n    ( true && !(inverseOptions.inverse !== null) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`The ${inverseSchema.modelName}:${fieldOnInverse} relationship declares 'inverse: null', but it was resolved as the inverse for ${this.modelName}:${name}.`, inverseOptions.inverse !== null));\n    return {\n      type: inverseSchema,\n      name: fieldOnInverse,\n      kind: inverseKind,\n      options: inverseOptions\n    };\n  }\n\n  /**\n   The model's relationships as a map, keyed on the type of the\n   relationship. The value of each entry is an array containing a descriptor\n   for each relationship with that type, describing the name of the relationship\n   as well as the type.\n    For example, given the following model definition:\n    ```app/models/blog.js\n   import Model, { belongsTo, hasMany } from '@ember-data/model';\n    export default class BlogModel extends Model {\n      @hasMany('user') users;\n      @belongsTo('user') owner;\n      @hasMany('post') posts;\n    }\n   ```\n    This computed property would return a map describing these\n   relationships, like this:\n    ```javascript\n   import Blog from 'app/models/blog';\n   import User from 'app/models/user';\n   import Post from 'app/models/post';\n    let relationships = Blog.relationships;\n   relationships.user;\n   //=> [ { name: 'users', kind: 'hasMany' },\n   //     { name: 'owner', kind: 'belongsTo' } ]\n   relationships.post;\n   //=> [ { name: 'posts', kind: 'hasMany' } ]\n   ```\n    @property relationships\n    @public\n   @static\n   @type Map\n   @readOnly\n   */\n\n  static get relationships() {\n    ( true && !(this.modelName) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Accessing schema information on Models without looking up the model via the store is disallowed.`, this.modelName));\n    const map = new Map();\n    const relationshipsByName = this.relationshipsByName;\n\n    // Loop through each computed property on the class\n    relationshipsByName.forEach(desc => {\n      const {\n        type\n      } = desc;\n      if (!map.has(type)) {\n        map.set(type, []);\n      }\n      map.get(type).push(desc);\n    });\n    return map;\n  }\n\n  /**\n   A hash containing lists of the model's relationships, grouped\n   by the relationship kind. For example, given a model with this\n   definition:\n    ```app/models/blog.js\n   import Model, { belongsTo, hasMany } from '@ember-data/model';\n    export default class BlogModel extends Model {\n      @hasMany('user') users;\n      @belongsTo('user') owner;\n       @hasMany('post') posts;\n    }\n   ```\n    This property would contain the following:\n    ```javascript\n   import Blog from 'app/models/blog';\n    let relationshipNames = Blog.relationshipNames;\n   relationshipNames.hasMany;\n   //=> ['users', 'posts']\n   relationshipNames.belongsTo;\n   //=> ['owner']\n   ```\n    @property relationshipNames\n    @public\n   @static\n   @type Object\n   @readOnly\n   */\n  static get relationshipNames() {\n    ( true && !(this.modelName) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Accessing schema information on Models without looking up the model via the store is disallowed.`, this.modelName));\n    const names = {\n      hasMany: [],\n      belongsTo: []\n    };\n    this.eachComputedProperty((name, meta) => {\n      if (meta.kind === 'hasMany' || meta.kind === 'belongsTo') {\n        names[meta.kind].push(name);\n      }\n    });\n    return names;\n  }\n\n  /**\n   An array of types directly related to a model. Each type will be\n   included once, regardless of the number of relationships it has with\n   the model.\n    For example, given a model with this definition:\n    ```app/models/blog.js\n   import Model, { belongsTo, hasMany } from '@ember-data/model';\n    export default class BlogModel extends Model {\n      @hasMany('user') users;\n      @belongsTo('user') owner;\n       @hasMany('post') posts;\n    }\n   ```\n    This property would contain the following:\n    ```javascript\n   import Blog from 'app/models/blog';\n    let relatedTypes = Blog.relatedTypes');\n   //=> ['user', 'post']\n   ```\n    @property relatedTypes\n   @public\n   @static\n   @type Array\n   @readOnly\n   */\n  static get relatedTypes() {\n    ( true && !(this.modelName) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Accessing schema information on Models without looking up the model via the store is disallowed.`, this.modelName));\n    const types = [];\n    const rels = this.relationshipsObject;\n    const relationships = Object.keys(rels);\n\n    // create an array of the unique types involved\n    // in relationships\n    for (let i = 0; i < relationships.length; i++) {\n      const name = relationships[i];\n      const meta = rels[name];\n      const modelName = meta.type;\n      if (types.indexOf(modelName) === -1) {\n        types.push(modelName);\n      }\n    }\n    return types;\n  }\n\n  /**\n   A map whose keys are the relationships of a model and whose values are\n   relationship descriptors.\n    For example, given a model with this\n   definition:\n    ```app/models/blog.js\n   import Model, { belongsTo, hasMany } from '@ember-data/model';\n    export default class BlogModel extends Model {\n      @hasMany('user') users;\n      @belongsTo('user') owner;\n       @hasMany('post') posts;\n    }\n   ```\n    This property would contain the following:\n    ```javascript\n   import Blog from 'app/models/blog';\n    let relationshipsByName = Blog.relationshipsByName;\n   relationshipsByName.users;\n   //=> { name: 'users', kind: 'hasMany', type: 'user', options: Object }\n   relationshipsByName.owner;\n   //=> { name: 'owner', kind: 'belongsTo', type: 'user', options: Object }\n   ```\n    @property relationshipsByName\n    @public\n   @static\n   @type Map\n   @readOnly\n   */\n  static get relationshipsByName() {\n    ( true && !(this.modelName) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Accessing schema information on Models without looking up the model via the store is disallowed.`, this.modelName));\n    const map = new Map();\n    const rels = this.relationshipsObject;\n    const relationships = Object.keys(rels);\n    for (let i = 0; i < relationships.length; i++) {\n      const name = relationships[i];\n      const value = rels[name];\n      map.set(value.name, value);\n    }\n    return map;\n  }\n  static get relationshipsObject() {\n    ( true && !(this.modelName) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Accessing schema information on Models without looking up the model via the store is disallowed.`, this.modelName));\n    const relationships = Object.create(null);\n    const modelName = this.modelName;\n    this.eachComputedProperty((name, meta) => {\n      if (meta.kind === 'hasMany' || meta.kind === 'belongsTo') {\n        // TODO deprecate key being here\n        meta.key = name;\n        meta.name = name;\n        meta.parentModelName = modelName;\n        relationships[name] = meta;\n        ( true && !(!(meta.options.inverse === null && meta.options.as?.length > 0)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`You should not specify both options.as and options.inverse as null on ${modelName}.${meta.name}, as if there is no inverse field there is no abstract type to conform to. You may have intended for this relationship to be polymorphic, or you may have mistakenly set inverse to null.`, !(meta.options.inverse === null && meta.options.as?.length > 0)));\n      }\n    });\n    return relationships;\n  }\n\n  /**\n   A map whose keys are the fields of the model and whose values are strings\n   describing the kind of the field. A model's fields are the union of all of its\n   attributes and relationships.\n    For example:\n    ```app/models/blog.js\n   import Model, { attr, belongsTo, hasMany } from '@ember-data/model';\n    export default class BlogModel extends Model {\n      @hasMany('user') users;\n      @belongsTo('user') owner;\n       @hasMany('post') posts;\n       @attr('string') title;\n    }\n   ```\n    ```js\n   import Blog from 'app/models/blog'\n    let fields = Blog.fields;\n   fields.forEach(function(kind, field) {\n      // do thing\n    });\n    // prints:\n   // users, hasMany\n   // owner, belongsTo\n   // posts, hasMany\n   // title, attribute\n   ```\n    @property fields\n    @public\n   @static\n   @type Map\n   @readOnly\n   */\n  static get fields() {\n    ( true && !(this.modelName) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Accessing schema information on Models without looking up the model via the store is disallowed.`, this.modelName));\n    const map = new Map();\n    this.eachComputedProperty((name, meta) => {\n      if (meta.kind === 'hasMany' || meta.kind === 'belongsTo') {\n        map.set(name, meta.kind);\n      } else if (meta.kind === 'attribute') {\n        map.set(name, 'attribute');\n      }\n    });\n    return map;\n  }\n\n  /**\n   Given a callback, iterates over each of the relationships in the model,\n   invoking the callback with the name of each relationship and its relationship\n   descriptor.\n    @method eachRelationship\n    @public\n   @static\n   @param {Function} callback the callback to invoke\n   @param {any} binding the value to which the callback's `this` should be bound\n   */\n  static eachRelationship(callback, binding) {\n    ( true && !(this.modelName) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Accessing schema information on Models without looking up the model via the store is disallowed.`, this.modelName));\n    this.relationshipsByName.forEach((relationship, name) => {\n      callback.call(binding, name, relationship);\n    });\n  }\n\n  /**\n   Given a callback, iterates over each of the types related to a model,\n   invoking the callback with the related type's class. Each type will be\n   returned just once, regardless of how many different relationships it has\n   with a model.\n    @method eachRelatedType\n    @public\n   @static\n   @param {Function} callback the callback to invoke\n   @param {any} binding the value to which the callback's `this` should be bound\n   */\n  static eachRelatedType(callback, binding) {\n    ( true && !(this.modelName) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Accessing schema information on Models without looking up the model via the store is disallowed.`, this.modelName));\n    const relationshipTypes = this.relatedTypes;\n    for (let i = 0; i < relationshipTypes.length; i++) {\n      const type = relationshipTypes[i];\n      callback.call(binding, type);\n    }\n  }\n  static determineRelationshipType(knownSide, store) {\n    ( true && !(this.modelName) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Accessing schema information on Models without looking up the model via the store is disallowed.`, this.modelName));\n    const knownKey = knownSide.name;\n    const knownKind = knownSide.kind;\n    const inverse = this.inverseFor(knownKey, store);\n    // let key;\n\n    if (!inverse) {\n      return knownKind === 'belongsTo' ? 'oneToNone' : 'manyToNone';\n    }\n\n    // key = inverse.name;\n    const otherKind = inverse.kind;\n    if (otherKind === 'belongsTo') {\n      return knownKind === 'belongsTo' ? 'oneToOne' : 'manyToOne';\n    } else {\n      return knownKind === 'belongsTo' ? 'oneToMany' : 'manyToMany';\n    }\n  }\n\n  /**\n   A map whose keys are the attributes of the model (properties\n   described by attr) and whose values are the meta object for the\n   property.\n    Example\n    ```app/models/person.js\n   import Model, { attr } from '@ember-data/model';\n    export default class PersonModel extends Model {\n      @attr('string') firstName;\n      @attr('string') lastName;\n      @attr('date') birthday;\n    }\n   ```\n    ```javascript\n   import Person from 'app/models/person'\n    let attributes = Person.attributes\n    attributes.forEach(function(meta, name) {\n      // do thing\n    });\n    // prints:\n   // firstName {type: \"string\", kind: 'attribute', options: Object, parentType: function, name: \"firstName\"}\n   // lastName {type: \"string\", kind: 'attribute', options: Object, parentType: function, name: \"lastName\"}\n   // birthday {type: \"date\", kind: 'attribute', options: Object, parentType: function, name: \"birthday\"}\n   ```\n    @property attributes\n    @public\n   @static\n   @type {Map}\n   @readOnly\n   */\n  static get attributes() {\n    ( true && !(this.modelName) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Accessing schema information on Models without looking up the model via the store is disallowed.`, this.modelName));\n    const map = new Map();\n    this.eachComputedProperty((name, meta) => {\n      if (meta.kind === 'attribute') {\n        ( true && !(name !== 'id') && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(\"You may not set `id` as an attribute on your model. Please remove any lines that look like: `id: attr('<type>')` from \" + this.toString(), name !== 'id')); // TODO deprecate key being here\n        meta.key = name;\n        meta.name = name;\n        map.set(name, meta);\n      }\n    });\n    return map;\n  }\n\n  /**\n   A map whose keys are the attributes of the model (properties\n   described by attr) and whose values are type of transformation\n   applied to each attribute. This map does not include any\n   attributes that do not have an transformation type.\n    Example\n    ```app/models/person.js\n   import Model, { attr } from '@ember-data/model';\n    export default class PersonModel extends Model {\n      @attr firstName;\n      @attr('string') lastName;\n      @attr('date') birthday;\n    }\n   ```\n    ```javascript\n   import Person from 'app/models/person';\n    let transformedAttributes = Person.transformedAttributes\n    transformedAttributes.forEach(function(field, type) {\n      // do thing\n    });\n    // prints:\n   // lastName string\n   // birthday date\n   ```\n    @property transformedAttributes\n    @public\n   @static\n   @type {Map}\n   @readOnly\n   */\n  static get transformedAttributes() {\n    ( true && !(this.modelName) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Accessing schema information on Models without looking up the model via the store is disallowed.`, this.modelName));\n    const map = new Map();\n    this.eachAttribute((name, meta) => {\n      if (meta.type) {\n        map.set(name, meta.type);\n      }\n    });\n    return map;\n  }\n\n  /**\n   Iterates through the attributes of the model, calling the passed function on each\n   attribute.\n    The callback method you provide should have the following signature (all\n   parameters are optional):\n    ```javascript\n   function(name, meta);\n   ```\n    - `name` the name of the current property in the iteration\n   - `meta` the meta object for the attribute property in the iteration\n    Note that in addition to a callback, you can also pass an optional target\n   object that will be set as `this` on the context.\n    Example\n    ```javascript\n   import Model, { attr } from '@ember-data/model';\n    class PersonModel extends Model {\n      @attr('string') firstName;\n      @attr('string') lastName;\n      @attr('date') birthday;\n    }\n    PersonModel.eachAttribute(function(name, meta) {\n      // do thing\n    });\n    // prints:\n   // firstName {type: \"string\", kind: 'attribute', options: Object, parentType: function, name: \"firstName\"}\n   // lastName {type: \"string\", kind: 'attribute', options: Object, parentType: function, name: \"lastName\"}\n   // birthday {type: \"date\", kind: 'attribute', options: Object, parentType: function, name: \"birthday\"}\n   ```\n    @method eachAttribute\n    @public\n   @param {Function} callback The callback to execute\n   @param {Object} [binding] the value to which the callback's `this` should be bound\n   @static\n   */\n  static eachAttribute(callback, binding) {\n    ( true && !(this.modelName) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Accessing schema information on Models without looking up the model via the store is disallowed.`, this.modelName));\n    this.attributes.forEach((meta, name) => {\n      callback.call(binding, name, meta);\n    });\n  }\n\n  /**\n   Iterates through the transformedAttributes of the model, calling\n   the passed function on each attribute. Note the callback will not be\n   called for any attributes that do not have an transformation type.\n    The callback method you provide should have the following signature (all\n   parameters are optional):\n    ```javascript\n   function(name, type);\n   ```\n    - `name` the name of the current property in the iteration\n   - `type` a string containing the name of the type of transformed\n   applied to the attribute\n    Note that in addition to a callback, you can also pass an optional target\n   object that will be set as `this` on the context.\n    Example\n    ```javascript\n   import Model, { attr } from '@ember-data/model';\n    let Person = Model.extend({\n      firstName: attr(),\n      lastName: attr('string'),\n      birthday: attr('date')\n    });\n    Person.eachTransformedAttribute(function(name, type) {\n      // do thing\n    });\n    // prints:\n   // lastName string\n   // birthday date\n   ```\n    @method eachTransformedAttribute\n    @public\n   @param {Function} callback The callback to execute\n   @param {Object} [binding] the value to which the callback's `this` should be bound\n   @static\n   */\n  static eachTransformedAttribute(callback, binding) {\n    ( true && !(this.modelName) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Accessing schema information on Models without looking up the model via the store is disallowed.`, this.modelName));\n    this.transformedAttributes.forEach((type, name) => {\n      callback.call(binding, name, type);\n    });\n  }\n\n  /**\n   Returns the name of the model class.\n    @method toString\n    @public\n   @static\n   */\n  static toString() {\n    ( true && !(this.modelName) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Accessing schema information on Models without looking up the model via the store is disallowed.`, this.modelName));\n    return `model:${this.modelName}`;\n  }\n}, _class2.isModel = true, _class2.modelName = null, _class2), (_applyDecoratedDescriptor(_class.prototype, \"isEmpty\", [_ember_data_tracking__WEBPACK_IMPORTED_MODULE_4__.compat], Object.getOwnPropertyDescriptor(_class.prototype, \"isEmpty\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"isLoading\", [_ember_data_tracking__WEBPACK_IMPORTED_MODULE_4__.compat], Object.getOwnPropertyDescriptor(_class.prototype, \"isLoading\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"isLoaded\", [_ember_data_tracking__WEBPACK_IMPORTED_MODULE_4__.compat], Object.getOwnPropertyDescriptor(_class.prototype, \"isLoaded\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"hasDirtyAttributes\", [_ember_data_tracking__WEBPACK_IMPORTED_MODULE_4__.compat], Object.getOwnPropertyDescriptor(_class.prototype, \"hasDirtyAttributes\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"isSaving\", [_ember_data_tracking__WEBPACK_IMPORTED_MODULE_4__.compat], Object.getOwnPropertyDescriptor(_class.prototype, \"isSaving\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"isDeleted\", [_ember_data_tracking__WEBPACK_IMPORTED_MODULE_4__.compat], Object.getOwnPropertyDescriptor(_class.prototype, \"isDeleted\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"isNew\", [_ember_data_tracking__WEBPACK_IMPORTED_MODULE_4__.compat], Object.getOwnPropertyDescriptor(_class.prototype, \"isNew\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"isValid\", [_ember_data_tracking__WEBPACK_IMPORTED_MODULE_4__.compat], Object.getOwnPropertyDescriptor(_class.prototype, \"isValid\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"dirtyType\", [_ember_data_tracking__WEBPACK_IMPORTED_MODULE_4__.compat], Object.getOwnPropertyDescriptor(_class.prototype, \"dirtyType\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"isError\", [_ember_data_tracking__WEBPACK_IMPORTED_MODULE_4__.compat], Object.getOwnPropertyDescriptor(_class.prototype, \"isError\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"id\", [tagged], Object.getOwnPropertyDescriptor(_class.prototype, \"id\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"currentState\", [tagged], Object.getOwnPropertyDescriptor(_class.prototype, \"currentState\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"errors\", [computeOnce], Object.getOwnPropertyDescriptor(_class.prototype, \"errors\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"adapterError\", [_ember_data_tracking__WEBPACK_IMPORTED_MODULE_4__.compat], Object.getOwnPropertyDescriptor(_class.prototype, \"adapterError\"), _class.prototype), _applyDecoratedDescriptor(_class, \"inverseMap\", [computeOnce], Object.getOwnPropertyDescriptor(_class, \"inverseMap\"), _class), _applyDecoratedDescriptor(_class, \"relationships\", [computeOnce], Object.getOwnPropertyDescriptor(_class, \"relationships\"), _class), _applyDecoratedDescriptor(_class, \"relationshipNames\", [computeOnce], Object.getOwnPropertyDescriptor(_class, \"relationshipNames\"), _class), _applyDecoratedDescriptor(_class, \"relatedTypes\", [computeOnce], Object.getOwnPropertyDescriptor(_class, \"relatedTypes\"), _class), _applyDecoratedDescriptor(_class, \"relationshipsByName\", [computeOnce], Object.getOwnPropertyDescriptor(_class, \"relationshipsByName\"), _class), _applyDecoratedDescriptor(_class, \"relationshipsObject\", [computeOnce], Object.getOwnPropertyDescriptor(_class, \"relationshipsObject\"), _class), _applyDecoratedDescriptor(_class, \"fields\", [computeOnce], Object.getOwnPropertyDescriptor(_class, \"fields\"), _class), _applyDecoratedDescriptor(_class, \"attributes\", [computeOnce], Object.getOwnPropertyDescriptor(_class, \"attributes\"), _class), _applyDecoratedDescriptor(_class, \"transformedAttributes\", [computeOnce], Object.getOwnPropertyDescriptor(_class, \"transformedAttributes\"), _class)), _class);\nModel.prototype.save = save;\nModel.prototype.destroyRecord = destroyRecord;\nModel.prototype.unloadRecord = unloadRecord;\nModel.prototype.hasMany = hasMany;\nModel.prototype.belongsTo = belongsTo;\nModel.prototype.serialize = serialize;\nModel.prototype._createSnapshot = createSnapshot;\nModel.prototype.deleteRecord = deleteRecord;\nModel.prototype.changedAttributes = changedAttributes;\nModel.prototype.rollbackAttributes = rollbackAttributes;\nModel.prototype.reload = reload;\n(0,_ember_data_tracking_private__WEBPACK_IMPORTED_MODULE_5__.defineSignal)(Model.prototype, 'isReloading', false);\n\n// this is required to prevent `init` from passing\n// the values initialized during create to `setUnknownProperty`\nModel.prototype._createProps = null;\nModel.prototype._secretInit = null;\n{\n  /**\n   Provides info about the model for debugging purposes\n   by grouping the properties into more semantic groups.\n    Meant to be used by debugging tools such as the Chrome Ember Extension.\n    - Groups all attributes in \"Attributes\" group.\n   - Groups all belongsTo relationships in \"Belongs To\" group.\n   - Groups all hasMany relationships in \"Has Many\" group.\n   - Groups all flags in \"Flags\" group.\n   - Flags relationship CPs as expensive properties.\n    @method _debugInfo\n   @for Model\n   @private\n   */\n  Model.prototype._debugInfo = function () {\n    const relationships = {};\n    const expensiveProperties = [];\n    const identifier = (0,_ember_data_store__WEBPACK_IMPORTED_MODULE_2__.recordIdentifierFor)(this);\n    const schema = this.store.getSchemaDefinitionService();\n    const attrDefs = schema.attributesDefinitionFor(identifier);\n    const relDefs = schema.relationshipsDefinitionFor(identifier);\n    const attributes = Object.keys(attrDefs);\n    attributes.unshift('id');\n    const groups = [{\n      name: 'Attributes',\n      properties: attributes,\n      expand: true\n    }];\n    Object.keys(relDefs).forEach(name => {\n      const relationship = relDefs[name];\n      let properties = relationships[relationship.kind];\n      if (properties === undefined) {\n        properties = relationships[relationship.kind] = [];\n        groups.push({\n          name: relationship.kind,\n          properties,\n          expand: true\n        });\n      }\n      properties.push(name);\n      expensiveProperties.push(name);\n    });\n    groups.push({\n      name: 'Flags',\n      properties: ['isLoaded', 'hasDirtyAttributes', 'isSaving', 'isDeleted', 'isError', 'isNew', 'isValid']\n    });\n    return {\n      propertyInfo: {\n        // include all other mixins / properties (not just the grouped ones)\n        includeOtherProperties: true,\n        groups: groups,\n        // don't pre-calculate unless cached\n        expensiveProperties: expensiveProperties\n      }\n    };\n  };\n}\n{\n  const lookupDescriptor = function lookupDescriptor(obj, keyName) {\n    let current = obj;\n    do {\n      const descriptor = Object.getOwnPropertyDescriptor(current, keyName);\n      if (descriptor !== undefined) {\n        return descriptor;\n      }\n      current = Object.getPrototypeOf(current);\n    } while (current !== null);\n    return null;\n  };\n  Model.reopen({\n    init() {\n      this._super(...arguments);\n      const ourDescriptor = lookupDescriptor(Model.prototype, 'currentState');\n      const theirDescriptor = lookupDescriptor(this, 'currentState');\n      const realState = this.___recordState;\n      if (ourDescriptor.get !== theirDescriptor.get || realState !== this.currentState) {\n        throw new Error(`'currentState' is a reserved property name on instances of classes extending Model. Please choose a different property name for ${this.constructor.toString()}`);\n      }\n      const ID_DESCRIPTOR = lookupDescriptor(Model.prototype, 'id');\n      const idDesc = lookupDescriptor(this, 'id');\n      if (idDesc.get !== ID_DESCRIPTOR.get) {\n        throw new Error(`You may not set 'id' as an attribute on your model. Please remove any lines that look like: \\`id: attr('<type>')\\` from ${this.constructor.toString()}`);\n      }\n    }\n  });\n  Model.reopen = function deprecatedReopen() {\n    ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Model.reopen is deprecated. Use Foo extends Model to extend your class instead.`));\n  };\n  Model.reopenClass = function deprecatedReopenClass() {\n    ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Model.reopenClass is deprecated. Use Foo extends Model to add static methods and properties to your class instead.`));\n  };\n}\n\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@ember-data/model.9cfa41c3/node_modules/@ember-data/model/model-YsOraZ6y.js?");

/***/ }),

/***/ "../rewritten-packages/@ember-data/model.9cfa41c3/node_modules/@ember-data/model/util-3DHZJC9h.js":
/*!********************************************************************************************************!*\
  !*** ../rewritten-packages/@ember-data/model.9cfa41c3/node_modules/@ember-data/model/util-3DHZJC9h.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   c: () => (/* binding */ computedMacroWithOptionalParams),\n/* harmony export */   n: () => (/* binding */ normalizeModelName)\n/* harmony export */ });\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/debug */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fdebug&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_debug__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _ember_string__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember/string */ \"../rewritten-packages/@ember/string.5601e258/node_modules/@ember/string/index.js\");\n\n\nfunction isElementDescriptor(args) {\n  const [maybeTarget, maybeKey, maybeDesc] = args;\n  return (\n    // Ensure we have the right number of args\n    args.length === 3 && (\n    // Make sure the target is a class or object (prototype)\n    typeof maybeTarget === 'function' || typeof maybeTarget === 'object' && maybeTarget !== null) &&\n    // Make sure the key is a string\n    typeof maybeKey === 'string' && (\n    // Make sure the descriptor is the right shape\n    typeof maybeDesc === 'object' && maybeDesc !== null && 'enumerable' in maybeDesc && 'configurable' in maybeDesc ||\n    // TS compatibility\n    maybeDesc === undefined)\n  );\n}\nfunction computedMacroWithOptionalParams(fn) {\n  return (...maybeDesc) => isElementDescriptor(maybeDesc) ? fn()(...maybeDesc) : fn(...maybeDesc);\n}\nfunction normalizeModelName(type) {\n  {\n    const result = (0,_ember_string__WEBPACK_IMPORTED_MODULE_1__.dasherize)(type);\n    ( true && !(result === type) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.deprecate)(`The resource type '${type}' is not normalized. Update your application code to use '${result}' instead of '${type}'.`, result === type, {\n      id: 'ember-data:deprecate-non-strict-types',\n      until: '6.0',\n      for: 'ember-data',\n      since: {\n        available: '5.3',\n        enabled: '5.3'\n      }\n    }));\n    return result;\n  }\n  return type;\n}\n\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@ember-data/model.9cfa41c3/node_modules/@ember-data/model/util-3DHZJC9h.js?");

/***/ }),

/***/ "../rewritten-packages/@ember-data/request-utils.d2e97183/node_modules/@ember-data/request-utils/index.js":
/*!****************************************************************************************************************!*\
  !*** ../rewritten-packages/@ember-data/request-utils.d2e97183/node_modules/@ember-data/request-utils/index.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LifetimesService: () => (/* binding */ LifetimesService),\n/* harmony export */   buildBaseURL: () => (/* binding */ buildBaseURL),\n/* harmony export */   buildQueryParams: () => (/* binding */ buildQueryParams),\n/* harmony export */   filterEmpty: () => (/* binding */ filterEmpty),\n/* harmony export */   parseCacheControl: () => (/* binding */ parseCacheControl),\n/* harmony export */   setBuildURLConfig: () => (/* binding */ setBuildURLConfig),\n/* harmony export */   sortQueryParams: () => (/* binding */ sortQueryParams)\n/* harmony export */ });\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/debug */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fdebug&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_debug__WEBPACK_IMPORTED_MODULE_0__);\n\n\n/**\n * Simple utility function to assist in url building,\n * query params, and other common request operations.\n *\n * These primitives may be used directly or composed\n * by request builders to provide a consistent interface\n * for building requests.\n *\n * For instance:\n *\n * ```ts\n * import { buildBaseURL, buildQueryParams } from '@ember-data/request-utils';\n *\n * const baseURL = buildBaseURL({\n *   host: 'https://api.example.com',\n *   namespace: 'api/v1',\n *   resourcePath: 'emberDevelopers',\n *   op: 'query',\n *   identifier: { type: 'ember-developer' }\n * });\n * const url = `${baseURL}?${buildQueryParams({ name: 'Chris', include:['pets'] })}`;\n * // => 'https://api.example.com/api/v1/emberDevelopers?include=pets&name=Chris'\n * ```\n *\n * This is useful, but not as useful as the REST request builder for query which is sugar\n * over this (and more!):\n *\n * ```ts\n * import { query } from '@ember-data/rest/request';\n *\n * const options = query('ember-developer', { name: 'Chris', include:['pets'] });\n * // => { url: 'https://api.example.com/api/v1/emberDevelopers?include=pets&name=Chris' }\n * // Note: options will also include other request options like headers, method, etc.\n * ```\n *\n * @module @ember-data/request-utils\n * @main @ember-data/request-utils\n * @public\n */\n\n// prevents the final constructed object from needing to add\n// host and namespace which are provided by the final consuming\n// class to the prototype which can result in overwrite errors\n\nconst CONFIG = {\n  host: '',\n  namespace: ''\n};\n\n/**\n * Sets the global configuration for `buildBaseURL`\n * for host and namespace values for the application.\n *\n * These values may still be overridden by passing\n * them to buildBaseURL directly.\n *\n * This method may be called as many times as needed.\n * host values of `''` or `'/'` are equivalent.\n *\n * Except for the value of `/` as host, host should not\n * end with `/`.\n *\n * namespace should not start or end with a `/`.\n *\n * ```ts\n * type BuildURLConfig = {\n *   host: string;\n *   namespace: string'\n * }\n * ```\n *\n * Example:\n *\n * ```ts\n * import { setBuildURLConfig } from '@ember-data/request-utils';\n *\n * setBuildURLConfig({\n *   host: 'https://api.example.com',\n *   namespace: 'api/v1'\n * });\n * ```\n *\n * @method setBuildURLConfig\n * @static\n * @public\n * @for @ember-data/request-utils\n * @param {BuildURLConfig} config\n * @return void\n */\nfunction setBuildURLConfig(config) {\n  ( true && !(config) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`setBuildURLConfig: You must pass a config object`, config));\n  ( true && !('host' in config || 'namespace' in config) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`setBuildURLConfig: You must pass a config object with a 'host' or 'namespace' property`, 'host' in config || 'namespace' in config));\n  CONFIG.host = config.host || '';\n  CONFIG.namespace = config.namespace || '';\n  ( true && !(CONFIG.host === '/' || !CONFIG.host.endsWith('/')) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`buildBaseURL: host must NOT end with '/', received '${CONFIG.host}'`, CONFIG.host === '/' || !CONFIG.host.endsWith('/')));\n  ( true && !(!CONFIG.namespace.startsWith('/')) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`buildBaseURL: namespace must NOT start with '/', received '${CONFIG.namespace}'`, !CONFIG.namespace.startsWith('/')));\n  ( true && !(!CONFIG.namespace.endsWith('/')) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`buildBaseURL: namespace must NOT end with '/', received '${CONFIG.namespace}'`, !CONFIG.namespace.endsWith('/')));\n}\nconst OPERATIONS_WITH_PRIMARY_RECORDS = new Set(['findRecord', 'findRelatedRecord', 'findRelatedCollection', 'updateRecord', 'deleteRecord']);\nfunction isOperationWithPrimaryRecord(options) {\n  return 'op' in options && OPERATIONS_WITH_PRIMARY_RECORDS.has(options.op);\n}\nfunction hasResourcePath(options) {\n  return 'resourcePath' in options && typeof options.resourcePath === 'string' && options.resourcePath.length > 0;\n}\nfunction resourcePathForType(options) {\n  ( true && !('op' in options && typeof options.op === 'string') && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`resourcePathForType: You must pass a valid op as part of options`, 'op' in options && typeof options.op === 'string'));\n  return options.op === 'findMany' ? options.identifiers[0].type : options.identifier.type;\n}\n\n/**\n * Builds a URL for a request based on the provided options.\n * Does not include support for building query params (see `buildQueryParams`)\n * so that it may be composed cleanly with other query-params strategies.\n *\n * Usage:\n *\n * ```ts\n * import { buildBaseURL } from '@ember-data/request-utils';\n *\n * const url = buildBaseURL({\n *   host: 'https://api.example.com',\n *   namespace: 'api/v1',\n *   resourcePath: 'emberDevelopers',\n *   op: 'query',\n *   identifier: { type: 'ember-developer' }\n * });\n *\n * // => 'https://api.example.com/api/v1/emberDevelopers'\n * ```\n *\n * On the surface this may seem like a lot of work to do something simple, but\n * it is designed to be composable with other utilities and interfaces that the\n * average product engineer will never need to see or use.\n *\n * A few notes:\n *\n * - `resourcePath` is optional, but if it is not provided, `identifier.type` will be used.\n * - `host` and `namespace` are optional, but if they are not provided, the values globally\n *    configured via `setBuildURLConfig` will be used.\n * - `op` is required and must be one of the following:\n *   - 'findRecord' 'query' 'findMany' 'findRelatedCollection' 'findRelatedRecord'` 'createRecord' 'updateRecord' 'deleteRecord'\n * - Depending on the value of `op`, `identifier` or `identifiers` will be required.\n *\n * @method buildBaseURL\n * @static\n * @public\n * @for @ember-data/request-utils\n * @param urlOptions\n * @return string\n */\nfunction buildBaseURL(urlOptions) {\n  const options = Object.assign({\n    host: CONFIG.host,\n    namespace: CONFIG.namespace\n  }, urlOptions);\n  ( true && !(hasResourcePath(options) || typeof options.op === 'string' && options.op.length > 0) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`buildBaseURL: You must pass \\`op\\` as part of options`, hasResourcePath(options) || typeof options.op === 'string' && options.op.length > 0));\n  ( true && !(hasResourcePath(options) || options.op === 'findMany' || options.identifier && typeof options.identifier === 'object') && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`buildBaseURL: You must pass \\`identifier\\` as part of options`, hasResourcePath(options) || options.op === 'findMany' || options.identifier && typeof options.identifier === 'object'));\n  ( true && !(hasResourcePath(options) || options.op !== 'findMany' || options.identifiers && Array.isArray(options.identifiers) && options.identifiers.length > 0 && options.identifiers.every(i => i && typeof i === 'object')) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`buildBaseURL: You must pass \\`identifiers\\` as part of options`, hasResourcePath(options) || options.op !== 'findMany' || options.identifiers && Array.isArray(options.identifiers) && options.identifiers.length > 0 && options.identifiers.every(i => i && typeof i === 'object')));\n  ( true && !(hasResourcePath(options) || !isOperationWithPrimaryRecord(options) || typeof options.identifier.id === 'string' && options.identifier.id.length > 0) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`buildBaseURL: You must pass valid \\`identifier\\` as part of options, expected 'id'`, hasResourcePath(options) || !isOperationWithPrimaryRecord(options) || typeof options.identifier.id === 'string' && options.identifier.id.length > 0));\n  ( true && !(hasResourcePath(options) || options.op !== 'findMany' || options.identifiers.every(i => typeof i.id === 'string' && i.id.length > 0)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`buildBaseURL: You must pass \\`identifiers\\` as part of options`, hasResourcePath(options) || options.op !== 'findMany' || options.identifiers.every(i => typeof i.id === 'string' && i.id.length > 0)));\n  ( true && !(hasResourcePath(options) || options.op === 'findMany' || typeof options.identifier.type === 'string' && options.identifier.type.length > 0) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`buildBaseURL: You must pass valid \\`identifier\\` as part of options, expected 'type'`, hasResourcePath(options) || options.op === 'findMany' || typeof options.identifier.type === 'string' && options.identifier.type.length > 0));\n  ( true && !(hasResourcePath(options) || options.op !== 'findMany' || typeof options.identifiers[0].type === 'string' && options.identifiers[0].type.length > 0) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`buildBaseURL: You must pass valid \\`identifiers\\` as part of options, expected 'type'`, hasResourcePath(options) || options.op !== 'findMany' || typeof options.identifiers[0].type === 'string' && options.identifiers[0].type.length > 0)); // prettier-ignore\n  const idPath = isOperationWithPrimaryRecord(options) ? encodeURIComponent(options.identifier.id) : '';\n  const resourcePath = options.resourcePath || resourcePathForType(options);\n  const {\n    host,\n    namespace\n  } = options;\n  const fieldPath = 'fieldPath' in options ? options.fieldPath : '';\n  ( true && !(hasResourcePath(options) || ['findRecord', 'query', 'findMany', 'findRelatedCollection', 'findRelatedRecord', 'createRecord', 'updateRecord', 'deleteRecord'].includes(options.op)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`buildBaseURL: You tried to build a url for a ${String('op' in options ? options.op + ' ' : '')}request to ${resourcePath} but resourcePath must be set or op must be one of \"${['findRecord', 'findRelatedRecord', 'findRelatedCollection', 'updateRecord', 'deleteRecord', 'createRecord', 'query', 'findMany'].join('\",\"')}\".`, hasResourcePath(options) || ['findRecord', 'query', 'findMany', 'findRelatedCollection', 'findRelatedRecord', 'createRecord', 'updateRecord', 'deleteRecord'].includes(options.op)));\n  ( true && !(host === '/' || !host.endsWith('/')) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`buildBaseURL: host must NOT end with '/', received '${host}'`, host === '/' || !host.endsWith('/')));\n  ( true && !(!namespace.startsWith('/')) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`buildBaseURL: namespace must NOT start with '/', received '${namespace}'`, !namespace.startsWith('/')));\n  ( true && !(!namespace.endsWith('/')) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`buildBaseURL: namespace must NOT end with '/', received '${namespace}'`, !namespace.endsWith('/')));\n  ( true && !(!resourcePath.startsWith('/')) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`buildBaseURL: resourcePath must NOT start with '/', received '${resourcePath}'`, !resourcePath.startsWith('/')));\n  ( true && !(!resourcePath.endsWith('/')) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`buildBaseURL: resourcePath must NOT end with '/', received '${resourcePath}'`, !resourcePath.endsWith('/')));\n  ( true && !(!fieldPath.startsWith('/')) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`buildBaseURL: fieldPath must NOT start with '/', received '${fieldPath}'`, !fieldPath.startsWith('/')));\n  ( true && !(!fieldPath.endsWith('/')) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`buildBaseURL: fieldPath must NOT end with '/', received '${fieldPath}'`, !fieldPath.endsWith('/')));\n  ( true && !(!idPath.startsWith('/')) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`buildBaseURL: idPath must NOT start with '/', received '${idPath}'`, !idPath.startsWith('/')));\n  ( true && !(!idPath.endsWith('/')) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`buildBaseURL: idPath must NOT end with '/', received '${idPath}'`, !idPath.endsWith('/')));\n  const hasHost = host !== '' && host !== '/';\n  const url = [hasHost ? host : '', namespace, resourcePath, idPath, fieldPath].filter(Boolean).join('/');\n  return hasHost ? url : `/${url}`;\n}\nconst DEFAULT_QUERY_PARAMS_SERIALIZATION_OPTIONS = {\n  arrayFormat: 'comma'\n};\nfunction handleInclude(include) {\n  ( true && !(typeof include === 'string' || Array.isArray(include)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Expected include to be a string or array, got ${typeof include}`, typeof include === 'string' || Array.isArray(include)));\n  return typeof include === 'string' ? include.split(',') : include;\n}\n\n/**\n * filter out keys of an object that have falsy values or point to empty arrays\n * returning a new object with only those keys that have truthy values / non-empty arrays\n *\n * @method filterEmpty\n * @static\n * @public\n * @for @ember-data/request-utils\n * @param {Record<string, Serializable>} source object to filter keys with empty values from\n * @return {Record<string, Serializable>} A new object with the keys that contained empty values removed\n */\nfunction filterEmpty(source) {\n  const result = {};\n  for (const key in source) {\n    const value = source[key];\n    // Allow `0` and `false` but filter falsy values that indicate \"empty\"\n    if (value !== undefined && value !== null && value !== '') {\n      if (!Array.isArray(value) || value.length > 0) {\n        result[key] = source[key];\n      }\n    }\n  }\n  return result;\n}\n\n/**\n * Sorts query params by both key and value returning a new URLSearchParams\n * object with the keys inserted in sorted order.\n *\n * Treats `included` specially, splicing it into an array if it is a string and sorting the array.\n *\n * Options:\n * - arrayFormat: 'bracket' | 'indices' | 'repeat' | 'comma'\n *\n * 'bracket': appends [] to the key for every value e.g. `&ids[]=1&ids[]=2`\n * 'indices': appends [i] to the key for every value e.g. `&ids[0]=1&ids[1]=2`\n * 'repeat': appends the key for every value e.g. `&ids=1&ids=2`\n * 'comma' (default): appends the key once with a comma separated list of values e.g. `&ids=1,2`\n *\n * @method sortQueryParams\n * @static\n * @public\n * @for @ember-data/request-utils\n * @param {URLSearchParams | object} params\n * @param {object} options\n * @return {URLSearchParams} A URLSearchParams with keys inserted in sorted order\n */\nfunction sortQueryParams(params, options) {\n  const opts = Object.assign({}, DEFAULT_QUERY_PARAMS_SERIALIZATION_OPTIONS, options);\n  const paramsIsObject = !(params instanceof URLSearchParams);\n  const urlParams = new URLSearchParams();\n  const dictionaryParams = paramsIsObject ? params : {};\n  if (!paramsIsObject) {\n    params.forEach((value, key) => {\n      const hasExisting = (key in dictionaryParams);\n      if (!hasExisting) {\n        dictionaryParams[key] = value;\n      } else {\n        const existingValue = dictionaryParams[key];\n        if (Array.isArray(existingValue)) {\n          existingValue.push(value);\n        } else {\n          dictionaryParams[key] = [existingValue, value];\n        }\n      }\n    });\n  }\n  if ('include' in dictionaryParams) {\n    dictionaryParams.include = handleInclude(dictionaryParams.include);\n  }\n  const sortedKeys = Object.keys(dictionaryParams).sort();\n  sortedKeys.forEach(key => {\n    const value = dictionaryParams[key];\n    if (Array.isArray(value)) {\n      value.sort();\n      switch (opts.arrayFormat) {\n        case 'indices':\n          value.forEach((v, i) => {\n            urlParams.append(`${key}[${i}]`, String(v));\n          });\n          return;\n        case 'bracket':\n          value.forEach(v => {\n            urlParams.append(`${key}[]`, String(v));\n          });\n          return;\n        case 'repeat':\n          value.forEach(v => {\n            urlParams.append(key, String(v));\n          });\n          return;\n        case 'comma':\n        default:\n          urlParams.append(key, value.join(','));\n          return;\n      }\n    } else {\n      urlParams.append(key, String(value));\n    }\n  });\n  return urlParams;\n}\n\n/**\n * Sorts query params by both key and value, returning a query params string\n *\n * Treats `included` specially, splicing it into an array if it is a string and sorting the array.\n *\n * Options:\n * - arrayFormat: 'bracket' | 'indices' | 'repeat' | 'comma'\n *\n * 'bracket': appends [] to the key for every value e.g. `ids[]=1&ids[]=2`\n * 'indices': appends [i] to the key for every value e.g. `ids[0]=1&ids[1]=2`\n * 'repeat': appends the key for every value e.g. `ids=1&ids=2`\n * 'comma' (default): appends the key once with a comma separated list of values e.g. `ids=1,2`\n *\n * @method buildQueryParams\n * @static\n * @public\n * @for @ember-data/request-utils\n * @param {URLSearchParams | object} params\n * @param {object} [options]\n * @return {string} A sorted query params string without the leading `?`\n */\nfunction buildQueryParams(params, options) {\n  return sortQueryParams(params, options).toString();\n}\nconst NUMERIC_KEYS = new Set(['max-age', 's-maxage', 'stale-if-error', 'stale-while-revalidate']);\n\n/**\n *  Parses a string Cache-Control header value into an object with the following structure:\n *\n * ```ts\n * interface CacheControlValue {\n *   immutable?: boolean;\n *   'max-age'?: number;\n *   'must-revalidate'?: boolean;\n *   'must-understand'?: boolean;\n *   'no-cache'?: boolean;\n *   'no-store'?: boolean;\n *   'no-transform'?: boolean;\n *   'only-if-cached'?: boolean;\n *   private?: boolean;\n *   'proxy-revalidate'?: boolean;\n *   public?: boolean;\n *   's-maxage'?: number;\n *   'stale-if-error'?: number;\n *   'stale-while-revalidate'?: number;\n * }\n * ```\n * @method parseCacheControl\n * @static\n * @public\n * @for @ember-data/request-utils\n * @param {string} header\n * @return {CacheControlValue}\n */\nfunction parseCacheControl(header) {\n  let key = '';\n  let value = '';\n  let isParsingKey = true;\n  const cacheControlValue = {};\n  function parseCacheControlValue(stringToParse) {\n    const parsedValue = Number.parseInt(stringToParse);\n    ( true && !(!Number.isNaN(parsedValue)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Invalid Cache-Control value, expected a number but got - ${stringToParse}`, !Number.isNaN(parsedValue)));\n    return parsedValue;\n  }\n  for (let i = 0; i < header.length; i++) {\n    const char = header.charAt(i);\n    if (char === ',') {\n      ( true && !(!isParsingKey || !NUMERIC_KEYS.has(key)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Invalid Cache-Control value, expected a value`, !isParsingKey || !NUMERIC_KEYS.has(key)));\n      ( true && !(i === 0 || header.charAt(i - 1) !== '=') && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Invalid Cache-Control value, expected a value after \"=\" but got \",\"`, i === 0 || header.charAt(i - 1) !== '='));\n      isParsingKey = true;\n      // @ts-expect-error TS incorrectly thinks that optional keys must have a type that includes undefined\n      cacheControlValue[key] = NUMERIC_KEYS.has(key) ? parseCacheControlValue(value) : true;\n      key = '';\n      value = '';\n      continue;\n    } else if (char === '=') {\n      ( true && !(i + 1 !== header.length) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Invalid Cache-Control value, expected a value after \"=\"`, i + 1 !== header.length));\n      isParsingKey = false;\n    } else if (char === ' ' || char === `\\t` || char === `\\n`) {\n      continue;\n    } else if (isParsingKey) {\n      key += char;\n    } else {\n      value += char;\n    }\n    if (i === header.length - 1) {\n      // @ts-expect-error TS incorrectly thinks that optional keys must have a type that includes undefined\n      cacheControlValue[key] = NUMERIC_KEYS.has(key) ? parseCacheControlValue(value) : true;\n    }\n  }\n  return cacheControlValue;\n}\nfunction isStale(headers, expirationTime) {\n  // const age = headers.get('age');\n  // const cacheControl = parseCacheControl(headers.get('cache-control') || '');\n  // const expires = headers.get('expires');\n  // const lastModified = headers.get('last-modified');\n  const date = headers.get('date');\n  if (!date) {\n    return true;\n  }\n  const time = new Date(date).getTime();\n  const now = Date.now();\n  const deadline = time + expirationTime;\n  const result = now > deadline;\n  return result;\n}\n/**\n * A basic LifetimesService that can be added to the Store service.\n *\n * Determines staleness based on time since the request was last received from the API\n * using the `date` header.\n *\n * Invalidates any request for which `cacheOptions.types` was provided when a createRecord\n * request for that type is successful.\n *\n * This allows the Store's CacheHandler to determine if a request is expired and\n * should be refetched upon next request.\n *\n * The `Fetch` handler provided by `@ember-data/request/fetch` will automatically\n * add the `date` header to responses if it is not present.\n *\n * Note: Date headers do not have millisecond precision, so expiration times should\n * generally be larger than 1000ms.\n *\n * Usage:\n *\n * ```ts\n * import { LifetimesService } from '@ember-data/request-utils';\n * import DataStore from '@ember-data/store';\n *\n * // ...\n *\n * export class Store extends DataStore {\n *   constructor(args) {\n *     super(args);\n *     this.lifetimes = new LifetimesService({ apiCacheSoftExpires: 30_000, apiCacheHardExpires: 60_000 });\n *   }\n * }\n * ```\n *\n * @class LifetimesService\n * @public\n * @module @ember-data/request-utils\n */\nclass LifetimesService {\n  _getStore(store) {\n    let set = this._stores.get(store);\n    if (!set) {\n      set = {\n        invalidated: new Set(),\n        types: new Map()\n      };\n      this._stores.set(store, set);\n    }\n    return set;\n  }\n  constructor(config) {\n    this._stores = new WeakMap();\n    const _config = arguments.length === 1 ? config : arguments[1];\n    ( true && !(arguments.length === 1) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.deprecate)(`Passing a Store to the LifetimesService is deprecated, please pass only a config instead.`, arguments.length === 1, {\n      id: 'ember-data:request-utils:lifetimes-service-store-arg',\n      since: {\n        enabled: '5.4',\n        available: '5.4'\n      },\n      for: '@ember-data/request-utils',\n      until: '6.0'\n    }));\n    ( true && !(_config) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`You must pass a config to the LifetimesService`, _config));\n    ( true && !(typeof _config.apiCacheSoftExpires === 'number') && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`You must pass a apiCacheSoftExpires to the LifetimesService`, typeof _config.apiCacheSoftExpires === 'number'));\n    ( true && !(typeof _config.apiCacheHardExpires === 'number') && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`You must pass a apiCacheHardExpires to the LifetimesService`, typeof _config.apiCacheHardExpires === 'number'));\n    this.config = _config;\n  }\n\n  /**\n   * Invalidate a request by its identifier for a given store instance.\n   *\n   * While the store argument may seem redundant, the lifetimes service\n   * is designed to be shared across multiple stores / forks\n   * of the store.\n   *\n   * ```ts\n   * store.lifetimes.invalidateRequest(store, identifier);\n   * ```\n   *\n   * @method invalidateRequest\n   * @public\n   * @param {StableDocumentIdentifier} identifier\n   * @param {Store} store\n   */\n  invalidateRequest(identifier, store) {\n    this._getStore(store).invalidated.add(identifier.lid);\n  }\n\n  /**\n   * Invalidate all requests associated to a specific type\n   * for a given store instance.\n   *\n   * While the store argument may seem redundant, the lifetimes service\n   * is designed to be shared across multiple stores / forks\n   * of the store.\n   *\n   * This invalidation is done automatically when using this service\n   * for both the CacheHandler and the LegacyNetworkHandler.\n   *\n   * ```ts\n   * store.lifetimes.invalidateRequestsForType(store, 'person');\n   * ```\n   *\n   * @method invalidateRequestsForType\n   * @public\n   * @param {string} type\n   * @param {Store} store\n   */\n  invalidateRequestsForType(type, store) {\n    const storeCache = this._getStore(store);\n    const set = storeCache.types.get(type);\n    if (set) {\n      set.forEach(id => {\n        storeCache.invalidated.add(id);\n      });\n    }\n  }\n\n  /**\n   * Invoked when a request has been fulfilled from the configured request handlers.\n   * This is invoked by the CacheHandler for both foreground and background requests\n   * once the cache has been updated.\n   *\n   * Note, this is invoked by the CacheHandler regardless of whether\n   * the request has a cache-key.\n   *\n   * This method should not be invoked directly by consumers.\n   *\n   * @method didRequest\n   * @public\n   * @param {ImmutableRequestInfo} request\n   * @param {ImmutableResponse} response\n   * @param {Store} store\n   * @param {StableDocumentIdentifier | null} identifier\n   * @return {void}\n   */\n  didRequest(request, response, identifier, store) {\n    // if this is a successful createRecord request, invalidate the cacheKey for the type\n    if (request.op === 'createRecord') {\n      const statusNumber = response?.status ?? 0;\n      if (statusNumber >= 200 && statusNumber < 400) {\n        const types = new Set(request.records?.map(r => r.type));\n        types.forEach(type => {\n          this.invalidateRequestsForType(type, store);\n        });\n      }\n\n      // add this document's cacheKey to a map for all associated types\n      // it is recommended to only use this for queries\n    } else if (identifier && request.cacheOptions?.types?.length) {\n      const storeCache = this._getStore(store);\n      request.cacheOptions?.types.forEach(type => {\n        const set = storeCache.types.get(type);\n        if (set) {\n          set.add(identifier.lid);\n          storeCache.invalidated.delete(identifier.lid);\n        } else {\n          storeCache.types.set(type, new Set([identifier.lid]));\n        }\n      });\n    }\n  }\n\n  /**\n   * Invoked to determine if the request may be fulfilled from cache\n   * if possible.\n   *\n   * Note, this is only invoked by the CacheHandler if the request has\n   * a cache-key.\n   *\n   * If no cache entry is found or the entry is hard expired,\n   * the request will be fulfilled from the configured request handlers\n   * and the cache will be updated before returning the response.\n   *\n   * @method isHardExpired\n   * @public\n   * @param {StableDocumentIdentifier} identifier\n   * @param {Store} store\n   * @return {boolean} true if the request is considered hard expired\n   */\n  isHardExpired(identifier, store) {\n    // if we are explicitly invalidated, we are hard expired\n    const storeCache = this._getStore(store);\n    if (storeCache.invalidated.has(identifier.lid)) {\n      return true;\n    }\n    const cache = store.cache;\n    const cached = cache.peekRequest(identifier);\n    return !cached || !cached.response || isStale(cached.response.headers, this.config.apiCacheHardExpires);\n  }\n\n  /**\n   * Invoked if `isHardExpired` is false to determine if the request\n   * should be update behind the scenes if cache data is already available.\n   *\n   * Note, this is only invoked by the CacheHandler if the request has\n   * a cache-key.\n   *\n   * If true, the request will be fulfilled from cache while a backgrounded\n   * request is made to update the cache via the configured request handlers.\n   *\n   * @method isSoftExpired\n   * @public\n   * @param {StableDocumentIdentifier} identifier\n   * @param {Store} store\n   * @return {boolean} true if the request is considered soft expired\n   */\n  isSoftExpired(identifier, store) {\n    const cache = store.cache;\n    const cached = cache.peekRequest(identifier);\n    return !cached || !cached.response || isStale(cached.response.headers, this.config.apiCacheSoftExpires);\n  }\n}\n\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@ember-data/request-utils.d2e97183/node_modules/@ember-data/request-utils/index.js?");

/***/ }),

/***/ "../rewritten-packages/@ember-data/request.7c2e6d52/node_modules/@ember-data/request/context-g9X123os.js":
/*!***************************************************************************************************************!*\
  !*** ../rewritten-packages/@ember-data/request.7c2e6d52/node_modules/@ember-data/request/context-g9X123os.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _: () => (/* binding */ _classPrivateFieldBase),\n/* harmony export */   a: () => (/* binding */ assertValidRequest),\n/* harmony export */   b: () => (/* binding */ _classPrivateFieldKey),\n/* harmony export */   c: () => (/* binding */ cloneResponseProperties),\n/* harmony export */   d: () => (/* binding */ createDeferred),\n/* harmony export */   e: () => (/* binding */ executeNextHandler),\n/* harmony export */   u: () => (/* binding */ upgradePromise)\n/* harmony export */ });\n/* harmony import */ var _warp_drive_core_types_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @warp-drive/core-types/request */ \"../rewritten-packages/@warp-drive/core-types.f90747f3/node_modules/@warp-drive/core-types/request.js\");\n\nfunction _classPrivateFieldBase(receiver, privateKey) {\n  if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) {\n    throw new TypeError(\"attempted to use private field on non-instance\");\n  }\n  return receiver;\n}\nvar id = 0;\nfunction _classPrivateFieldKey(name) {\n  return \"__private_\" + id++ + \"_\" + name;\n}\nconst BODY_TYPES = {\n  type: 'string',\n  klass: ['Blob', 'ArrayBuffer', 'TypedArray', 'DataView', 'FormData', 'URLSearchParams', 'ReadableStream']\n};\nconst ValidKeys = new Map([['records', 'array'], ['data', 'json'], ['body', BODY_TYPES], ['disableTestWaiter', 'boolean'], ['options', 'object'], ['cacheOptions', 'object'], ['op', 'string'], ['store', 'object'], ['url', 'string'], ['cache', ['default', 'force-cache', 'no-cache', 'no-store', 'only-if-cached', 'reload']], ['credentials', ['include', 'omit', 'same-origin']], ['destination', ['', 'object', 'audio', 'audioworklet', 'document', 'embed', 'font', 'frame', 'iframe', 'image', 'manifest', 'paintworklet', 'report', 'script', 'sharedworker', 'style', 'track', 'video', 'worker', 'xslt']], ['headers', 'headers'], ['integrity', 'string'], ['keepalive', 'boolean'], ['method', ['GET', 'PUT', 'PATCH', 'DELETE', 'POST', 'OPTIONS']], ['mode', ['same-origin', 'cors', 'navigate', 'no-cors']], ['redirect', ['error', 'follow', 'manual']], ['referrer', 'string'], ['signal', 'AbortSignal'], ['controller', 'AbortController'], ['referrerPolicy', ['', 'same-origin', 'no-referrer', 'no-referrer-when-downgrade', 'origin', 'origin-when-cross-origin', 'strict-origin', 'strict-origin-when-cross-origin', 'unsafe-url']]]);\nconst IS_FROZEN = Symbol('FROZEN');\nconst IS_COLLECTION = Symbol.for('Collection');\nfunction freezeHeaders(headers) {\n  headers.delete = headers.set = headers.append = () => {\n    throw new Error(`Cannot Mutate Immutatable Headers, use headers.clone to get a copy`);\n  };\n  upgradeHeaders(headers);\n  return headers;\n}\nfunction deepFreeze(value) {\n  if (value && value[IS_FROZEN]) {\n    return value;\n  }\n  const _type = typeof value;\n  switch (_type) {\n    case 'boolean':\n    case 'string':\n    case 'number':\n    case 'symbol':\n    case 'undefined':\n    case 'bigint':\n      return value;\n    case 'function':\n      throw new Error(`Cannot deep-freeze a function`);\n    case 'object':\n      {\n        const _niceType = niceTypeOf(value);\n        switch (_niceType) {\n          case 'array':\n            {\n              if (value[IS_COLLECTION]) {\n                return value;\n              }\n              const arr = value.map(deepFreeze);\n              arr[IS_FROZEN] = true;\n              return Object.freeze(arr);\n            }\n          case 'null':\n            return value;\n          case 'object':\n            Object.keys(value).forEach(key => {\n              try {\n                value[key] = deepFreeze(value[key]);\n              } catch {\n                // continue\n              }\n            });\n            value[IS_FROZEN] = true;\n            return Object.freeze(value);\n          case 'headers':\n            return freezeHeaders(value);\n          case 'Collection':\n          case 'Store':\n          case 'AbortSignal':\n            return value;\n          case 'date':\n          case 'map':\n          case 'set':\n          case 'error':\n          case 'stream':\n          default:\n            // eslint-disable-next-line no-console\n            // console.log(`Cannot deep-freeze ${_niceType}`);\n            return value;\n        }\n      }\n  }\n}\nfunction isMaybeContext(request) {\n  if (request && typeof request === 'object') {\n    const keys = Object.keys(request);\n    if (keys.length === 1 && keys[0] === 'request') {\n      return true;\n    }\n  }\n  return false;\n}\nfunction niceTypeOf(v) {\n  if (v === null) {\n    return 'null';\n  }\n  if (typeof v === 'string') {\n    return v ? 'non-empty-string' : 'empty-string';\n  }\n  if (!v) {\n    return typeof v;\n  }\n  if (Array.isArray(v)) {\n    return 'array';\n  }\n  if (v instanceof Date) {\n    return 'date';\n  }\n  if (v instanceof Map) {\n    return 'map';\n  }\n  if (v instanceof Set) {\n    return 'set';\n  }\n  if (v instanceof Error) {\n    return 'error';\n  }\n  if (v instanceof ReadableStream || v instanceof WritableStream || v instanceof TransformStream) {\n    return 'stream';\n  }\n  if (v instanceof Headers) {\n    return 'headers';\n  }\n  if (typeof v === 'object' && v.constructor && v.constructor.name !== 'Object') {\n    return v.constructor.name;\n  }\n  return typeof v;\n}\nfunction validateKey(key, value, errors) {\n  const schema = ValidKeys.get(key);\n  if (!schema && !IgnoredKeys.has(key)) {\n    errors.push(`InvalidKey: '${key}'`);\n    return;\n  }\n  if (schema) {\n    if (schema === BODY_TYPES) {\n      if (typeof value === 'string' || value instanceof ReadableStream) {\n        return;\n      }\n      let type = niceTypeOf(value);\n      if (schema.klass.includes(type)) {\n        return;\n      }\n      errors.push(`InvalidValue: key 'body' should be a string or one of '${schema.klass.join(\"', '\")}', received ${'<a value of type ' + niceTypeOf(value) + '>'}`);\n      return;\n    }\n    if (Array.isArray(schema)) {\n      if (!schema.includes(value)) {\n        errors.push(`InvalidValue: key ${key} should be a one of '${schema.join(\"', '\")}', received ${typeof value === 'string' ? value : '<a value of type ' + niceTypeOf(value) + '>'}`);\n      }\n      return;\n    } else if (schema === 'json') {\n      try {\n        JSON.stringify(value);\n      } catch (e) {\n        errors.push(`InvalidValue: key ${key} should be a JSON serializable value, but failed to serialize with Error - ${e.message}`);\n      }\n      return;\n    } else if (schema === 'headers') {\n      if (!(value instanceof Headers)) {\n        errors.push(`InvalidValue: key ${key} should be an instance of Headers, received ${niceTypeOf(value)}`);\n      }\n      return;\n    } else if (schema === 'record') {\n      const _type = typeof value;\n      // record must extend plain object or Object.create(null)\n      if (!value || _type !== 'object' || value.constructor && value.constructor !== Object) {\n        errors.push(`InvalidValue: key ${key} should be a dictionary of string keys to string values, received ${niceTypeOf(value)}`);\n        return;\n      }\n      const keys = Object.keys(value);\n      keys.forEach(k => {\n        let v = value[k];\n        if (typeof k !== 'string') {\n          errors.push(`\\tThe key ${String(k)} on ${key} should be a string key`);\n        } else if (typeof v !== 'string') {\n          errors.push(`\\tThe value of ${key}.${k} should be a string not ${niceTypeOf(v)}`);\n        }\n      });\n      return;\n    } else if (schema === 'string') {\n      if (typeof value !== 'string' || value.length === 0) {\n        errors.push(`InvalidValue: key ${key} should be a non-empty string, received ${typeof value === 'string' ? \"''\" : typeof value}`);\n      }\n      return;\n    } else if (schema === 'object') {\n      if (!value || Array.isArray(value) || typeof value !== 'object') {\n        errors.push(`InvalidValue: key ${key} should be an object`);\n      }\n      return;\n    } else if (schema === 'boolean') {\n      if (typeof value !== 'boolean') {\n        errors.push(`InvalidValue: key ${key} should be a boolean, received ${typeof value}`);\n      }\n      return;\n    } else if (schema === 'array') {\n      if (!Array.isArray(value)) {\n        errors.push(`InvalidValue: key ${key} should be an array, received ${typeof value}`);\n      }\n      return;\n    }\n  }\n}\nconst IgnoredKeys = new Set([]);\nfunction assertValidRequest(request, isTopLevel) {\n  {\n    // handle basic shape\n    if (!request) {\n      throw new Error(`Expected ${isTopLevel ? 'RequestManager.request' : 'next'}(<request>) to be called with a request, but none was provided.`);\n    }\n    if (Array.isArray(request) || typeof request !== 'object') {\n      throw new Error(`The \\`request\\` passed to \\`${isTopLevel ? 'RequestManager.request' : 'next'}(<request>)\\` should be an object, received \\`${niceTypeOf(request)}\\``);\n    }\n    if (Object.keys(request).length === 0) {\n      throw new Error(`The \\`request\\` passed to \\`${isTopLevel ? 'RequestManager.request' : 'next'}(<request>)\\` was empty (\\`{}\\`). Requests need at least one valid key.`);\n    }\n\n    // handle accidentally passing context entirely\n    if (request instanceof Context) {\n      throw new Error(`Expected a request passed to \\`${isTopLevel ? 'RequestManager.request' : 'next'}(<request>)\\` but received the previous handler's context instead`);\n    }\n    // handle Object.assign({}, context);\n    if (isMaybeContext(request)) {\n      throw new Error(`Expected a request passed to \\`${isTopLevel ? 'RequestManager.request' : 'next'}(<request>)\\` but received an object with a request key instead.`);\n    }\n\n    // handle schema\n    const keys = Object.keys(request);\n    const validationErrors = [];\n    const isLegacyRequest = Boolean('op' in request && !request.url);\n    keys.forEach(key => {\n      if (isLegacyRequest && key === 'data') {\n        return;\n      }\n      validateKey(key, request[key], validationErrors);\n    });\n    if (validationErrors.length) {\n      const error = new Error(`Invalid Request passed to \\`${isTopLevel ? 'RequestManager.request' : 'next'}(<request>)\\`.\\n\\nThe following issues were found:\\n\\n\\t${validationErrors.join('\\n\\t')}`);\n      error.errors = validationErrors;\n      throw error;\n    }\n  }\n}\nfunction curryFuture(owner, inbound, outbound) {\n  owner.setStream(inbound.getStream());\n  inbound.then(doc => {\n    const document = {\n      [_warp_drive_core_types_request__WEBPACK_IMPORTED_MODULE_0__.STRUCTURED]: true,\n      request: owner.request,\n      response: doc.response,\n      content: doc.content\n    };\n    outbound.resolve(document);\n  }, error => {\n    if (isDoc(error)) {\n      owner.setStream(owner.god.stream);\n    }\n    if (!error || !(error instanceof Error)) {\n      try {\n        throw new Error(error ? error : `Request Rejected with an Unknown Error`);\n      } catch (e) {\n        if (error && typeof error === 'object') {\n          Object.assign(e, error);\n          e.message = error.message || `Request Rejected with an Unknown Error`;\n        }\n        error = e;\n      }\n    }\n    error[_warp_drive_core_types_request__WEBPACK_IMPORTED_MODULE_0__.STRUCTURED] = true;\n    error.request = owner.request;\n    error.response = owner.getResponse();\n    error.error = error.error || error.message;\n    outbound.reject(error);\n  });\n  return outbound.promise;\n}\nfunction isDoc(doc) {\n  return doc && doc[_warp_drive_core_types_request__WEBPACK_IMPORTED_MODULE_0__.STRUCTURED] === true;\n}\nfunction enhanceReason(reason) {\n  return new DOMException(reason || 'The user aborted a request.', 'AbortError');\n}\nfunction handleOutcome(owner, inbound, outbound) {\n  inbound.then(content => {\n    if (owner.controller.signal.aborted) {\n      // the next function did not respect the signal, we handle it here\n      outbound.reject(enhanceReason(owner.controller.signal.reason));\n      return;\n    }\n    if (isDoc(content)) {\n      owner.setStream(owner.god.stream);\n      content = content.content;\n    }\n    const document = {\n      [_warp_drive_core_types_request__WEBPACK_IMPORTED_MODULE_0__.STRUCTURED]: true,\n      request: owner.request,\n      response: owner.getResponse(),\n      content\n    };\n    outbound.resolve(document);\n  }, error => {\n    if (isDoc(error)) {\n      owner.setStream(owner.god.stream);\n    }\n    if (!error) {\n      try {\n        throw new Error(`Request Rejected with an Unknown Error`);\n      } catch (e) {\n        error = e;\n      }\n    }\n    error[_warp_drive_core_types_request__WEBPACK_IMPORTED_MODULE_0__.STRUCTURED] = true;\n    error.request = owner.request;\n    error.response = owner.getResponse();\n    error.error = error.error || error.message;\n    outbound.reject(error);\n  });\n  return outbound.promise;\n}\nfunction executeNextHandler(wares, request, i, god) {\n  {\n    if (i === wares.length) {\n      throw new Error(`No handler was able to handle this request.`);\n    }\n    assertValidRequest(request, false);\n  }\n  const owner = new ContextOwner(request, god);\n  function next(r) {\n    owner.nextCalled++;\n    return executeNextHandler(wares, r, i + 1, god);\n  }\n  const context = new Context(owner);\n  let outcome;\n  try {\n    outcome = wares[i].request(context, next);\n    {\n      if (!outcome || !(outcome instanceof Promise) && !(typeof outcome === 'object' && 'then' in outcome)) {\n        // eslint-disable-next-line no-console\n        console.log({\n          request,\n          handler: wares[i],\n          outcome\n        });\n        if (outcome === undefined) {\n          throw new Error(`Expected handler.request to return a promise, instead received undefined.`);\n        }\n        throw new Error(`Expected handler.request to return a promise, instead received a synchronous value.`);\n      }\n    }\n  } catch (e) {\n    outcome = Promise.reject(e);\n  }\n  const future = createFuture(owner);\n  if (isFuture(outcome)) {\n    return curryFuture(owner, outcome, future);\n  }\n  return handleOutcome(owner, outcome, future);\n}\nfunction isFuture(maybe) {\n  return Boolean(maybe && maybe instanceof Promise && maybe[_warp_drive_core_types_request__WEBPACK_IMPORTED_MODULE_0__.IS_FUTURE] === true);\n}\nfunction createDeferred() {\n  let resolve;\n  let reject;\n  const promise = new Promise((res, rej) => {\n    resolve = res;\n    reject = rej;\n  });\n  return {\n    resolve,\n    reject,\n    promise\n  };\n}\nfunction upgradePromise(promise, future) {\n  promise[_warp_drive_core_types_request__WEBPACK_IMPORTED_MODULE_0__.IS_FUTURE] = true;\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  promise.getStream = future.getStream;\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  promise.abort = future.abort;\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  promise.onFinalize = future.onFinalize;\n  return promise;\n}\nfunction createFuture(owner) {\n  const deferred = createDeferred();\n  let {\n    promise\n  } = deferred;\n  let cbs;\n  promise = promise.finally(() => {\n    owner.resolveStream();\n    if (cbs) {\n      cbs.forEach(cb => cb());\n    }\n  });\n  promise.onFinalize = fn => {\n    cbs = cbs || [];\n    cbs.push(fn);\n  };\n  promise[_warp_drive_core_types_request__WEBPACK_IMPORTED_MODULE_0__.IS_FUTURE] = true;\n  promise.getStream = () => {\n    return owner.getStream();\n  };\n  promise.abort = reason => {\n    owner.abort(enhanceReason(reason));\n  };\n  deferred.promise = promise;\n  return deferred;\n}\nfunction upgradeHeaders(headers) {\n  headers.clone = () => {\n    return new Headers(headers);\n  };\n  headers.toJSON = () => {\n    return Array.from(headers);\n  };\n  return headers;\n}\nfunction cloneResponseProperties(response) {\n  const {\n    headers,\n    ok,\n    redirected,\n    status,\n    statusText,\n    type,\n    url\n  } = response;\n  upgradeHeaders(headers);\n  return {\n    headers: headers,\n    ok,\n    redirected,\n    status,\n    statusText,\n    type,\n    url\n  };\n}\nclass ContextOwner {\n  constructor(request, god) {\n    this.hasSetStream = false;\n    this.hasSetResponse = false;\n    this.hasSubscribers = false;\n    this.stream = createDeferred();\n    this.response = null;\n    this.nextCalled = 0;\n    this.requestId = god.id;\n    this.controller = request.controller || god.controller;\n    if (request.controller) {\n      if (request.controller !== god.controller) {\n        god.controller.signal.addEventListener('abort', () => {\n          this.controller.abort(god.controller.signal.reason);\n        });\n      }\n      delete request.controller;\n    }\n    let enhancedRequest = Object.assign({\n      signal: this.controller.signal\n    }, request);\n    {\n      if (!request?.cacheOptions?.[_warp_drive_core_types_request__WEBPACK_IMPORTED_MODULE_0__.SkipCache]) {\n        request = deepFreeze(request);\n        enhancedRequest = deepFreeze(enhancedRequest);\n      }\n    }\n    this.enhancedRequest = enhancedRequest;\n    this.request = request;\n    this.god = god;\n    this.stream.promise = this.stream.promise.then(stream => {\n      if (this.god.stream === stream && this.hasSubscribers) {\n        this.god.stream = null;\n      }\n      return stream;\n    });\n  }\n  getResponse() {\n    if (this.hasSetResponse) {\n      return this.response;\n    }\n    if (this.nextCalled === 1) {\n      return this.god.response;\n    }\n    return null;\n  }\n  getStream() {\n    this.hasSubscribers = true;\n    return this.stream.promise;\n  }\n  abort(reason) {\n    this.controller.abort(reason);\n  }\n  setStream(stream) {\n    if (!this.hasSetStream) {\n      this.hasSetStream = true;\n      if (!(stream instanceof Promise)) {\n        this.god.stream = stream;\n      }\n      // @ts-expect-error\n      this.stream.resolve(stream);\n    }\n  }\n  resolveStream() {\n    this.setStream(this.nextCalled === 1 ? this.god.stream : null);\n  }\n  setResponse(response) {\n    if (this.hasSetResponse) {\n      {\n        throw new Error(`Cannot setResponse when a response has already been set`);\n      }\n      return;\n    }\n    this.hasSetResponse = true;\n    if (response instanceof Response) {\n      let responseData = cloneResponseProperties(response);\n      {\n        responseData = deepFreeze(responseData);\n      }\n      this.response = responseData;\n      this.god.response = responseData;\n    } else {\n      this.response = response;\n      this.god.response = response;\n    }\n  }\n}\nvar _owner = /*#__PURE__*/_classPrivateFieldKey(\"owner\");\nclass Context {\n  constructor(owner) {\n    Object.defineProperty(this, _owner, {\n      writable: true,\n      value: void 0\n    });\n    this.id = owner.requestId;\n    _classPrivateFieldBase(this, _owner)[_owner] = owner;\n    this.request = owner.enhancedRequest;\n  }\n  setStream(stream) {\n    _classPrivateFieldBase(this, _owner)[_owner].setStream(stream);\n  }\n  setResponse(response) {\n    _classPrivateFieldBase(this, _owner)[_owner].setResponse(response);\n  }\n}\n\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@ember-data/request.7c2e6d52/node_modules/@ember-data/request/context-g9X123os.js?");

/***/ }),

/***/ "../rewritten-packages/@ember-data/request.7c2e6d52/node_modules/@ember-data/request/fetch.js":
/*!****************************************************************************************************!*\
  !*** ../rewritten-packages/@ember-data/request.7c2e6d52/node_modules/@ember-data/request/fetch.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Fetch)\n/* harmony export */ });\n/* harmony import */ var _context_g9X123os__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./context-g9X123os */ \"../rewritten-packages/@ember-data/request.7c2e6d52/node_modules/@ember-data/request/context-g9X123os.js\");\n\n\n/**\n * A basic Fetch Handler which converts a request into a\n * `fetch` call presuming the response to be `json`.\n *\n * ```ts\n * import Fetch from '@ember-data/request/fetch';\n *\n * manager.use([Fetch]);\n * ```\n *\n * @module @ember-data/request/fetch\n * @main @ember-data/request/fetch\n */\n// Lazily close over fetch to avoid breaking Mirage\nconst _fetch = typeof fetch !== 'undefined' ? (...args) => fetch(...args) : typeof FastBoot !== 'undefined' ? (...args) => FastBoot.require('node-fetch')(...args) : () => {\n  throw new Error('No Fetch Implementation Found');\n};\n\n// clones a response in a way that should still\n// allow it to stream\nfunction cloneResponse(response, overrides) {\n  const props = (0,_context_g9X123os__WEBPACK_IMPORTED_MODULE_0__.c)(response);\n  return new Response(response.body, Object.assign(props, overrides));\n}\nlet IS_MAYBE_MIRAGE = () => false;\n{\n  IS_MAYBE_MIRAGE = () => Boolean(typeof window !== 'undefined' && window.server?.pretender);\n}\nconst MUTATION_OPS = new Set(['updateRecord', 'createRecord', 'deleteRecord']);\nconst ERROR_STATUS_CODE_FOR = new Map([[400, 'Bad Request'], [401, 'Unauthorized'], [402, 'Payment Required'], [403, 'Forbidden'], [404, 'Not Found'], [405, 'Method Not Allowed'], [406, 'Not Acceptable'], [407, 'Proxy Authentication Required'], [408, 'Request Timeout'], [409, 'Conflict'], [410, 'Gone'], [411, 'Length Required'], [412, 'Precondition Failed'], [413, 'Payload Too Large'], [414, 'URI Too Long'], [415, 'Unsupported Media Type'], [416, 'Range Not Satisfiable'], [417, 'Expectation Failed'], [419, 'Page Expired'], [420, 'Enhance Your Calm'], [421, 'Misdirected Request'], [422, 'Unprocessable Entity'], [423, 'Locked'], [424, 'Failed Dependency'], [425, 'Too Early'], [426, 'Upgrade Required'], [428, 'Precondition Required'], [429, 'Too Many Requests'], [430, 'Request Header Fields Too Large'], [431, 'Request Header Fields Too Large'], [450, 'Blocked By Windows Parental Controls'], [451, 'Unavailable For Legal Reasons'], [500, 'Internal Server Error'], [501, 'Not Implemented'], [502, 'Bad Gateway'], [503, 'Service Unavailable'], [504, 'Gateway Timeout'], [505, 'HTTP Version Not Supported'], [506, 'Variant Also Negotiates'], [507, 'Insufficient Storage'], [508, 'Loop Detected'], [509, 'Bandwidth Limit Exceeded'], [510, 'Not Extended'], [511, 'Network Authentication Required']]);\n\n/**\n * A basic handler which converts a request into a\n * `fetch` call presuming the response to be `json`.\n *\n * ```ts\n * import Fetch from '@ember-data/request/fetch';\n *\n * manager.use([Fetch]);\n * ```\n *\n * @class Fetch\n * @public\n */\nconst Fetch = {\n  async request(context) {\n    let response;\n    try {\n      response = await _fetch(context.request.url, context.request);\n    } catch (e) {\n      if (e instanceof DOMException && e.name === 'AbortError') {\n        e.statusText = 'Aborted';\n        e.status = 20;\n        e.isRequestError = true;\n      } else {\n        e.statusText = 'Unknown Network Error';\n        e.status = 0;\n        e.isRequestError = true;\n      }\n      throw e;\n    }\n    const isError = !response.ok || response.status >= 400;\n    const op = context.request.op;\n    const isMutationOp = Boolean(op && MUTATION_OPS.has(op));\n    if (!isError && !isMutationOp && response.status !== 204 && !response.headers.has('date')) {\n      if (IS_MAYBE_MIRAGE()) {\n        response.headers.set('date', new Date().toUTCString());\n      } else {\n        const headers = new Headers(response.headers);\n        headers.set('date', new Date().toUTCString());\n        response = cloneResponse(response, {\n          headers\n        });\n      }\n    }\n    context.setResponse(response);\n\n    // if we are an error, we will want to throw\n    if (isError) {\n      const text = await response.text();\n      let errorPayload;\n      try {\n        errorPayload = JSON.parse(text);\n      } catch {\n        // void;\n      }\n      // attempt errors discovery\n      const errors = Array.isArray(errorPayload) ? errorPayload : isDict(errorPayload) && Array.isArray(errorPayload.errors) ? errorPayload.errors : null;\n      const statusText = response.statusText || ERROR_STATUS_CODE_FOR.get(response.status) || 'Unknown Request Error';\n      const msg = `[${response.status} ${statusText}] ${context.request.method ?? 'GET'} (${response.type}) - ${response.url}`;\n      const error = errors ? new AggregateError(errors, msg) : new Error(msg);\n      error.status = response.status;\n      error.statusText = statusText;\n      error.isRequestError = true;\n      error.code = error.status;\n      error.name = error.statusText.replaceAll(' ', '') + 'Error';\n      error.content = errorPayload;\n      throw error;\n    } else {\n      return response.status === 204 ? null : response.json();\n    }\n  }\n};\nfunction isDict(v) {\n  return v !== null && typeof v === 'object';\n}\n\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@ember-data/request.7c2e6d52/node_modules/@ember-data/request/fetch.js?");

/***/ }),

/***/ "../rewritten-packages/@ember-data/request.7c2e6d52/node_modules/@ember-data/request/index.js":
/*!****************************************************************************************************!*\
  !*** ../rewritten-packages/@ember-data/request.7c2e6d52/node_modules/@ember-data/request/index.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createDeferred: () => (/* reexport safe */ _context_g9X123os__WEBPACK_IMPORTED_MODULE_0__.d),\n/* harmony export */   \"default\": () => (/* binding */ RequestManager)\n/* harmony export */ });\n/* harmony import */ var _context_g9X123os__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./context-g9X123os */ \"../rewritten-packages/@ember-data/request.7c2e6d52/node_modules/@ember-data/request/context-g9X123os.js\");\n/* harmony import */ var _embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../../../@embroider/macros/src/addon/es-compat2 */ \"../../@embroider/macros/src/addon/es-compat2.js\");\n\n\n\nlet REQ_ID = 0;\n/**\n * ```js\n * import RequestManager from '@ember-data/request';\n * ```\n *\n * A RequestManager provides a request/response flow in which configured\n * handlers are successively given the opportunity to handle, modify, or\n * pass-along a request.\n *\n * ```ts\n * interface RequestManager {\n *   request<T>(req: RequestInfo): Future<T>;\n * }\n * ```\n *\n * For example:\n *\n * ```ts\n * import RequestManager from '@ember-data/request';\n * import Fetch from '@ember-data/request/fetch';\n * import Auth from 'ember-simple-auth/ember-data-handler';\n * import Config from './config';\n *\n * const { apiUrl } = Config;\n *\n * // ... create manager\n * const manager = new RequestManager();\n * manager.use([Auth, Fetch]);\n *\n * // ... execute a request\n * const response = await manager.request({\n *   url: `${apiUrl}/users`\n * });\n * ```\n *\n * ### Futures\n *\n * The return value of `manager.request` is a `Future`, which allows\n * access to limited information about the request while it is still\n * pending and fulfills with the final state when the request completes.\n *\n * A `Future` is cancellable via `abort`.\n *\n * Handlers may optionally expose a `ReadableStream` to the `Future` for\n * streaming data; however, when doing so the future should not resolve\n * until the response stream is fully read.\n *\n * ```ts\n * interface Future<T> extends Promise<StructuredDocument<T>> {\n *   abort(): void;\n *\n *   async getStream(): ReadableStream | null;\n * }\n * ```\n *\n * ### StructuredDocuments\n *\n * A Future resolves with a `StructuredDataDocument` or rejects with a `StructuredErrorDocument`.\n *\n * ```ts\n * interface StructuredDataDocument<T> {\n *   request: ImmutableRequestInfo;\n *   response: ImmutableResponseInfo;\n *   content: T;\n * }\n * interface StructuredErrorDocument extends Error {\n *   request: ImmutableRequestInfo;\n *   response: ImmutableResponseInfo;\n *   error: string | object;\n * }\n * type StructuredDocument<T> = StructuredDataDocument<T> | StructuredErrorDocument;\n * ```\n *\n * @class RequestManager\n * @public\n */\nvar _handlers = /*#__PURE__*/(0,_context_g9X123os__WEBPACK_IMPORTED_MODULE_0__.b)(\"handlers\");\nclass RequestManager {\n  constructor(options) {\n    Object.defineProperty(this, _handlers, {\n      writable: true,\n      value: []\n    });\n    Object.assign(this, options);\n    this._pending = new Map();\n  }\n\n  /**\n   * Register a handler to use for primary cache intercept.\n   *\n   * Only one such handler may exist. If using the same\n   * RequestManager as the Store instance the Store\n   * registers itself as a Cache handler.\n   *\n   * @method useCache\n   * @public\n   * @param {Handler[]} cacheHandler\n   * @return {void}\n   */\n  useCache(cacheHandler) {\n    {\n      if (this._hasCacheHandler) {\n        throw new Error(`\\`RequestManager.useCache(<handler>)\\` May only be invoked once.`);\n      }\n      if (Object.isFrozen((0,_context_g9X123os__WEBPACK_IMPORTED_MODULE_0__._)(this, _handlers)[_handlers])) {\n        throw new Error(`\\`RequestManager.useCache(<handler>)\\` May only be invoked prior to any request having been made.`);\n      }\n      this._hasCacheHandler = true;\n    }\n    (0,_context_g9X123os__WEBPACK_IMPORTED_MODULE_0__._)(this, _handlers)[_handlers].unshift(cacheHandler);\n  }\n\n  /**\n   * Register handler(s) to use when a request is issued.\n   *\n   * Handlers will be invoked in the order they are registered.\n   * Each Handler is given the opportunity to handle the request,\n   * curry the request, or pass along a modified request.\n   *\n   * @method use\n   * @public\n   * @param {Handler[]} newHandlers\n   * @return {void}\n   */\n  use(newHandlers) {\n    const handlers = (0,_context_g9X123os__WEBPACK_IMPORTED_MODULE_0__._)(this, _handlers)[_handlers];\n    {\n      if (Object.isFrozen(handlers)) {\n        throw new Error(`Cannot add a Handler to a RequestManager after a request has been made`);\n      }\n      if (!Array.isArray(newHandlers)) {\n        throw new Error(`\\`RequestManager.use(<Handler[]>)\\` expects an array of handlers, but was called with \\`${typeof newHandlers}\\``);\n      }\n      newHandlers.forEach((handler, index) => {\n        if (!handler || typeof handler !== 'object' || typeof handler.request !== 'function') {\n          throw new Error(`\\`RequestManager.use(<Handler[]>)\\` expected to receive an array of handler objects with request methods, by the handler at index ${index} does not conform.`);\n        }\n      });\n    }\n    handlers.push(...newHandlers);\n  }\n\n  /**\n   * Issue a Request.\n   *\n   * Returns a Future that fulfills with a StructuredDocument\n   *\n   * @method request\n   * @public\n   * @param {RequestInfo} request\n   * @return {Future}\n   */\n  request(request) {\n    const handlers = (0,_context_g9X123os__WEBPACK_IMPORTED_MODULE_0__._)(this, _handlers)[_handlers];\n    {\n      if (!Object.isFrozen(handlers)) {\n        Object.freeze(handlers);\n      }\n      (0,_context_g9X123os__WEBPACK_IMPORTED_MODULE_0__.a)(request, true);\n    }\n    const controller = request.controller || new AbortController();\n    if (request.controller) {\n      delete request.controller;\n    }\n    const promise = (0,_context_g9X123os__WEBPACK_IMPORTED_MODULE_0__.e)(handlers, request, 0, {\n      controller,\n      response: null,\n      stream: null,\n      id: REQ_ID++\n    });\n    {\n      if (!request.disableTestWaiter) {\n        const {\n          waitForPromise\n        } = (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(__webpack_require__(/*! @ember/test-waiters */ \"../rewritten-packages/@ember/test-waiters.2bac1e98/node_modules/@ember/test-waiters/index.js\"));\n        const newPromise = waitForPromise(promise);\n        return (0,_context_g9X123os__WEBPACK_IMPORTED_MODULE_0__.u)(newPromise, promise);\n      }\n    }\n    return promise;\n  }\n  static create(options) {\n    return new this(options);\n  }\n}\n\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@ember-data/request.7c2e6d52/node_modules/@ember-data/request/index.js?");

/***/ }),

/***/ "../rewritten-packages/@ember-data/serializer.677d83bc/node_modules/@ember-data/serializer/-private.js":
/*!*************************************************************************************************************!*\
  !*** ../rewritten-packages/@ember-data/serializer.677d83bc/node_modules/@ember-data/serializer/-private.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BooleanTransform: () => (/* reexport safe */ _string_A02hFTMo__WEBPACK_IMPORTED_MODULE_1__.B),\n/* harmony export */   DateTransform: () => (/* reexport safe */ _string_A02hFTMo__WEBPACK_IMPORTED_MODULE_1__.D),\n/* harmony export */   EmbeddedRecordsMixin: () => (/* reexport safe */ _embedded_records_mixin_HTw8JJT1__WEBPACK_IMPORTED_MODULE_0__.e),\n/* harmony export */   NumberTransform: () => (/* reexport safe */ _string_A02hFTMo__WEBPACK_IMPORTED_MODULE_1__.N),\n/* harmony export */   StringTransform: () => (/* reexport safe */ _string_A02hFTMo__WEBPACK_IMPORTED_MODULE_1__.S),\n/* harmony export */   Transform: () => (/* reexport safe */ _string_A02hFTMo__WEBPACK_IMPORTED_MODULE_1__.T),\n/* harmony export */   coerceId: () => (/* reexport safe */ _utils_N1ERF6HN__WEBPACK_IMPORTED_MODULE_2__.c)\n/* harmony export */ });\n/* harmony import */ var _embedded_records_mixin_HTw8JJT1__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./embedded-records-mixin-HTw8JJT1 */ \"../rewritten-packages/@ember-data/serializer.677d83bc/node_modules/@ember-data/serializer/embedded-records-mixin-HTw8JJT1.js\");\n/* harmony import */ var _string_A02hFTMo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./string-A02hFTMo */ \"../rewritten-packages/@ember-data/serializer.677d83bc/node_modules/@ember-data/serializer/string-A02hFTMo.js\");\n/* harmony import */ var _utils_N1ERF6HN__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils-N1ERF6HN */ \"../rewritten-packages/@ember-data/serializer.677d83bc/node_modules/@ember-data/serializer/utils-N1ERF6HN.js\");\n\n\n\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@ember-data/serializer.677d83bc/node_modules/@ember-data/serializer/-private.js?");

/***/ }),

/***/ "../rewritten-packages/@ember-data/serializer.677d83bc/node_modules/@ember-data/serializer/embedded-records-mixin-HTw8JJT1.js":
/*!************************************************************************************************************************************!*\
  !*** ../rewritten-packages/@ember-data/serializer.677d83bc/node_modules/@ember-data/serializer/embedded-records-mixin-HTw8JJT1.js ***!
  \************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   e: () => (/* binding */ embeddedRecordsMixin)\n/* harmony export */ });\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/debug */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fdebug&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_debug__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _ember_object_mixin__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember/object/mixin */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fobject%2Fmixin&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_object_mixin__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_ember_object_mixin__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _ember_string__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ember/string */ \"../rewritten-packages/@ember/string.5601e258/node_modules/@ember/string/index.js\");\n\n\n\n\n/**\n  @module @ember-data/serializer/rest\n*/\n\n/**\n  ## Using Embedded Records\n\n  `EmbeddedRecordsMixin` supports serializing embedded records.\n\n  To set up embedded records, include the mixin when extending a serializer,\n  then define and configure embedded (model) relationships.\n\n  Note that embedded records will serialize with the serializer for their model instead of the serializer in which they are defined.\n\n  Note also that this mixin does not work with JSONAPISerializer because the JSON:API specification does not describe how to format embedded resources.\n\n  Below is an example of a per-type serializer (`post` type).\n\n  ```app/serializers/post.js\n  import RESTSerializer, { EmbeddedRecordsMixin } from '@ember-data/serializer/rest';\n\n  export default class PostSerializer extends RESTSerializer.extend(EmbeddedRecordsMixin) {\n    attrs = {\n      author: { embedded: 'always' },\n      comments: { serialize: 'ids' }\n    }\n  }\n  ```\n  Note that this use of `{ embedded: 'always' }` is unrelated to\n  the `{ embedded: 'always' }` that is defined as an option on `attr` as part of\n  defining a model while working with the `ActiveModelSerializer`.  Nevertheless,\n  using `{ embedded: 'always' }` as an option to `attr` is not a valid way to set up\n  embedded records.\n\n  The `attrs` option for a resource `{ embedded: 'always' }` is shorthand for:\n\n  ```js\n  {\n    serialize: 'records',\n    deserialize: 'records'\n  }\n  ```\n\n  ### Configuring Attrs\n\n  A resource's `attrs` option may be set to use `ids`, `records` or false for the\n  `serialize`  and `deserialize` settings.\n\n  The `attrs` property can be set on the `ApplicationSerializer` or a per-type\n  serializer.\n\n  In the case where embedded JSON is expected while extracting a payload (reading)\n  the setting is `deserialize: 'records'`, there is no need to use `ids` when\n  extracting as that is the default behaviour without this mixin if you are using\n  the vanilla `EmbeddedRecordsMixin`. Likewise, to embed JSON in the payload while\n  serializing `serialize: 'records'` is the setting to use. There is an option of\n  not embedding JSON in the serialized payload by using `serialize: 'ids'`. If you\n  do not want the relationship sent at all, you can use `serialize: false`.\n\n\n  ### EmbeddedRecordsMixin defaults\n  If you do not overwrite `attrs` for a specific relationship, the `EmbeddedRecordsMixin`\n  will behave in the following way:\n\n  BelongsTo: `{ serialize: 'id', deserialize: 'id' }`\n  HasMany:   `{ serialize: false, deserialize: 'ids' }`\n\n  ### Model Relationships\n\n  Embedded records must have a model defined to be extracted and serialized. Note that\n  when defining any relationships on your model such as `belongsTo` and `hasMany`, you\n  should not both specify `async: true` and also indicate through the serializer's\n  `attrs` attribute that the related model should be embedded for deserialization.\n  If a model is declared embedded for deserialization (`embedded: 'always'` or `deserialize: 'records'`),\n  then do not use `async: true`.\n\n  To successfully extract and serialize embedded records the model relationships\n  must be set up correctly. See the\n  [defining relationships](https://guides.emberjs.com/current/models/relationships)\n  section of the **Defining Models** guide page.\n\n  Records without an `id` property are not considered embedded records, model\n  instances must have an `id` property to be used with Ember Data.\n\n  ### Example JSON payloads, Models and Serializers\n\n  **When customizing a serializer it is important to grok what the customizations\n  are. Please read the docs for the methods this mixin provides, in case you need\n  to modify it to fit your specific needs.**\n\n  For example, review the docs for each method of this mixin:\n  * [normalize](/ember-data/release/classes/EmbeddedRecordsMixin/methods/normalize?anchor=normalize)\n  * [serializeBelongsTo](/ember-data/release/classes/EmbeddedRecordsMixin/methods/serializeBelongsTo?anchor=serializeBelongsTo)\n  * [serializeHasMany](/ember-data/release/classes/EmbeddedRecordsMixin/methods/serializeHasMany?anchor=serializeHasMany)\n\n  @class EmbeddedRecordsMixin\n  @public\n*/\nvar embeddedRecordsMixin = _ember_object_mixin__WEBPACK_IMPORTED_MODULE_1___default().create({\n  /**\n    Normalize the record and recursively normalize/extract all the embedded records\n    while pushing them into the store as they are encountered\n     A payload with an attr configured for embedded records needs to be extracted:\n     ```js\n    {\n      \"post\": {\n        \"id\": \"1\"\n        \"title\": \"Rails is omakase\",\n        \"comments\": [{\n          \"id\": \"1\",\n          \"body\": \"Rails is unagi\"\n        }, {\n          \"id\": \"2\",\n          \"body\": \"Omakase O_o\"\n        }]\n      }\n    }\n    ```\n   @method normalize\n    @public\n   @param {Model} typeClass\n   @param {Object} hash to be normalized\n   @param {String} prop the hash has been referenced by\n   @return {Object} the normalized hash\n  **/\n  normalize(typeClass, hash, prop) {\n    const normalizedHash = this._super(typeClass, hash, prop);\n    return this._extractEmbeddedRecords(this, this.store, typeClass, normalizedHash);\n  },\n  keyForRelationship(key, typeClass, method) {\n    if (method === 'serialize' && this.hasSerializeRecordsOption(key) || method === 'deserialize' && this.hasDeserializeRecordsOption(key)) {\n      return this.keyForAttribute(key, method);\n    } else {\n      return this._super(key, typeClass, method) || key;\n    }\n  },\n  /**\n    Serialize `belongsTo` relationship when it is configured as an embedded object.\n     This example of an author model belongs to a post model:\n     ```js\n    import Model, { attr, belongsTo } from '@ember-data/model';\n     Post = Model.extend({\n      title:    attr('string'),\n      body:     attr('string'),\n      author:   belongsTo('author')\n    });\n     Author = Model.extend({\n      name:     attr('string'),\n      post:     belongsTo('post')\n    });\n    ```\n     Use a custom (type) serializer for the post model to configure embedded author\n     ```app/serializers/post.js\n    import RESTSerializer, { EmbeddedRecordsMixin } from '@ember-data/serializer/rest';\n     export default class PostSerializer extends RESTSerializer.extend(EmbeddedRecordsMixin) {\n      attrs = {\n        author: { embedded: 'always' }\n      }\n    }\n    ```\n     A payload with an attribute configured for embedded records can serialize\n    the records together under the root attribute's payload:\n     ```js\n    {\n      \"post\": {\n        \"id\": \"1\"\n        \"title\": \"Rails is omakase\",\n        \"author\": {\n          \"id\": \"2\"\n          \"name\": \"dhh\"\n        }\n      }\n    }\n    ```\n     @method serializeBelongsTo\n    @public\n    @param {Snapshot} snapshot\n    @param {Object} json\n    @param {Object} relationship\n  */\n  serializeBelongsTo(snapshot, json, relationship) {\n    const attr = relationship.name;\n    if (this.noSerializeOptionSpecified(attr)) {\n      this._super(snapshot, json, relationship);\n      return;\n    }\n    const includeIds = this.hasSerializeIdsOption(attr);\n    const includeRecords = this.hasSerializeRecordsOption(attr);\n    const embeddedSnapshot = snapshot.belongsTo(attr);\n    if (includeIds) {\n      const schema = this.store.modelFor(snapshot.modelName);\n      let serializedKey = this._getMappedKey(relationship.name, schema);\n      if (serializedKey === relationship.name && this.keyForRelationship) {\n        serializedKey = this.keyForRelationship(relationship.name, relationship.kind, 'serialize');\n      }\n      if (!embeddedSnapshot) {\n        json[serializedKey] = null;\n      } else {\n        json[serializedKey] = embeddedSnapshot.id;\n        if (relationship.options.polymorphic) {\n          this.serializePolymorphicType(snapshot, json, relationship);\n        }\n      }\n    } else if (includeRecords) {\n      this._serializeEmbeddedBelongsTo(snapshot, json, relationship);\n    }\n  },\n  _serializeEmbeddedBelongsTo(snapshot, json, relationship) {\n    const embeddedSnapshot = snapshot.belongsTo(relationship.name);\n    const schema = this.store.modelFor(snapshot.modelName);\n    let serializedKey = this._getMappedKey(relationship.name, schema);\n    if (serializedKey === relationship.name && this.keyForRelationship) {\n      serializedKey = this.keyForRelationship(relationship.name, relationship.kind, 'serialize');\n    }\n    if (!embeddedSnapshot) {\n      json[serializedKey] = null;\n    } else {\n      json[serializedKey] = embeddedSnapshot.serialize({\n        includeId: true\n      });\n      this.removeEmbeddedForeignKey(snapshot, embeddedSnapshot, relationship, json[serializedKey]);\n      if (relationship.options.polymorphic) {\n        this.serializePolymorphicType(snapshot, json, relationship);\n      }\n    }\n  },\n  /**\n    Serializes `hasMany` relationships when it is configured as embedded objects.\n     This example of a post model has many comments:\n     ```js\n    import Model, { attr, belongsTo, hasMany } from '@ember-data/model';\n     Post = Model.extend({\n      title:    attr('string'),\n      body:     attr('string'),\n      comments: hasMany('comment')\n    });\n     Comment = Model.extend({\n      body:     attr('string'),\n      post:     belongsTo('post')\n    });\n    ```\n     Use a custom (type) serializer for the post model to configure embedded comments\n     ```app/serializers/post.js\n    import RESTSerializer, { EmbeddedRecordsMixin } from '@ember-data/serializer/rest';\n     export default class PostSerializer extends RESTSerializer.extend(EmbeddedRecordsMixin) {\n      attrs = {\n        comments: { embedded: 'always' }\n      }\n    }\n    ```\n     A payload with an attribute configured for embedded records can serialize\n    the records together under the root attribute's payload:\n     ```js\n    {\n      \"post\": {\n        \"id\": \"1\"\n        \"title\": \"Rails is omakase\",\n        \"body\": \"I want this for my ORM, I want that for my template language...\"\n        \"comments\": [{\n          \"id\": \"1\",\n          \"body\": \"Rails is unagi\"\n        }, {\n          \"id\": \"2\",\n          \"body\": \"Omakase O_o\"\n        }]\n      }\n    }\n    ```\n     The attrs options object can use more specific instruction for extracting and\n    serializing. When serializing, an option to embed `ids`, `ids-and-types` or `records` can be set.\n    When extracting the only option is `records`.\n     So `{ embedded: 'always' }` is shorthand for:\n    `{ serialize: 'records', deserialize: 'records' }`\n     To embed the `ids` for a related object (using a hasMany relationship):\n     ```app/serializers/post.js\n    import RESTSerializer, { EmbeddedRecordsMixin } from '@ember-data/serializer/rest';\n     export default class PostSerializer extends RESTSerializer.extend(EmbeddedRecordsMixin) {\n      attrs = {\n        comments: { serialize: 'ids', deserialize: 'records' }\n      }\n    }\n    ```\n     ```js\n    {\n      \"post\": {\n        \"id\": \"1\"\n        \"title\": \"Rails is omakase\",\n        \"body\": \"I want this for my ORM, I want that for my template language...\"\n        \"comments\": [\"1\", \"2\"]\n      }\n    }\n    ```\n     To embed the relationship as a collection of objects with `id` and `type` keys, set\n    `ids-and-types` for the related object.\n     This is particularly useful for polymorphic relationships where records don't share\n    the same table and the `id` is not enough information.\n     For example having a user that has many pets:\n     ```js\n    User = Model.extend({\n      name: attr('string'),\n      pets: hasMany('pet', { polymorphic: true })\n    });\n     Pet = Model.extend({\n      name: attr('string'),\n    });\n     Cat = Pet.extend({\n      // ...\n    });\n     Parrot = Pet.extend({\n      // ...\n    });\n    ```\n     ```app/serializers/user.js\n    import RESTSerializer, { EmbeddedRecordsMixin } from '@ember-data/serializer/rest';\n     export default class UserSerializer extends RESTSerializer.extend(EmbeddedRecordsMixin) {\n      attrs = {\n        pets: { serialize: 'ids-and-types', deserialize: 'records' }\n      }\n    }\n    ```\n     ```js\n    {\n      \"user\": {\n        \"id\": \"1\"\n        \"name\": \"Bertin Osborne\",\n        \"pets\": [\n          { \"id\": \"1\", \"type\": \"Cat\" },\n          { \"id\": \"1\", \"type\": \"Parrot\"}\n        ]\n      }\n    }\n    ```\n     @method serializeHasMany\n    @public\n    @param {Snapshot} snapshot\n    @param {Object} json\n    @param {Object} relationship\n  */\n  serializeHasMany(snapshot, json, relationship) {\n    const attr = relationship.name;\n    if (this.noSerializeOptionSpecified(attr)) {\n      this._super(snapshot, json, relationship);\n      return;\n    }\n    if (this.hasSerializeIdsOption(attr)) {\n      const schema = this.store.modelFor(snapshot.modelName);\n      let serializedKey = this._getMappedKey(relationship.name, schema);\n      if (serializedKey === relationship.name && this.keyForRelationship) {\n        serializedKey = this.keyForRelationship(relationship.name, relationship.kind, 'serialize');\n      }\n      json[serializedKey] = snapshot.hasMany(attr, {\n        ids: true\n      });\n    } else if (this.hasSerializeRecordsOption(attr)) {\n      this._serializeEmbeddedHasMany(snapshot, json, relationship);\n    } else {\n      if (this.hasSerializeIdsAndTypesOption(attr)) {\n        this._serializeHasManyAsIdsAndTypes(snapshot, json, relationship);\n      }\n    }\n  },\n  /*\n    Serializes a hasMany relationship as an array of objects containing only `id` and `type`\n    keys.\n    This has its use case on polymorphic hasMany relationships where the server is not storing\n    all records in the same table using STI, and therefore the `id` is not enough information\n     TODO: Make the default in Ember-data 3.0??\n  */\n  _serializeHasManyAsIdsAndTypes(snapshot, json, relationship) {\n    const serializedKey = this.keyForAttribute(relationship.name, 'serialize');\n    const hasMany = snapshot.hasMany(relationship.name) || [];\n    json[serializedKey] = hasMany.map(function (recordSnapshot) {\n      //\n      // I'm sure I'm being utterly naive here. Probably id is a configurable property and\n      // type too, and the modelName has to be normalized somehow.\n      //\n      return {\n        id: recordSnapshot.id,\n        type: recordSnapshot.modelName\n      };\n    });\n  },\n  _serializeEmbeddedHasMany(snapshot, json, relationship) {\n    const schema = this.store.modelFor(snapshot.modelName);\n    let serializedKey = this._getMappedKey(relationship.name, schema);\n    if (serializedKey === relationship.name && this.keyForRelationship) {\n      serializedKey = this.keyForRelationship(relationship.name, relationship.kind, 'serialize');\n    }\n    ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.warn)(`The embedded relationship '${serializedKey}' is undefined for '${snapshot.modelName}' with id '${snapshot.id}'. Please include it in your original payload.`, typeof snapshot.hasMany(relationship.name) !== 'undefined', {\n      id: 'ds.serializer.embedded-relationship-undefined'\n    }));\n    json[serializedKey] = this._generateSerializedHasMany(snapshot, relationship);\n  },\n  /*\n    Returns an array of embedded records serialized to JSON\n  */\n  _generateSerializedHasMany(snapshot, relationship) {\n    const hasMany = snapshot.hasMany(relationship.name) || [];\n    const ret = new Array(hasMany.length);\n    for (let i = 0; i < hasMany.length; i++) {\n      const embeddedSnapshot = hasMany[i];\n      const embeddedJson = embeddedSnapshot.serialize({\n        includeId: true\n      });\n      this.removeEmbeddedForeignKey(snapshot, embeddedSnapshot, relationship, embeddedJson);\n      ret[i] = embeddedJson;\n    }\n    return ret;\n  },\n  /**\n    When serializing an embedded record, modify the property (in the `JSON` payload)\n    that refers to the parent record (foreign key for the relationship).\n     Serializing a `belongsTo` relationship removes the property that refers to the\n    parent record\n     Serializing a `hasMany` relationship does not remove the property that refers to\n    the parent record.\n     @method removeEmbeddedForeignKey\n    @public\n    @param {Snapshot} snapshot\n    @param {Snapshot} embeddedSnapshot\n    @param {Object} relationship\n    @param {Object} json\n  */\n  removeEmbeddedForeignKey(snapshot, embeddedSnapshot, relationship, json) {\n    if (relationship.kind === 'belongsTo') {\n      const schema = this.store.modelFor(snapshot.modelName);\n      const parentRecord = schema.inverseFor(relationship.name, this.store);\n      if (parentRecord) {\n        const name = parentRecord.name;\n        const embeddedSerializer = this.store.serializerFor(embeddedSnapshot.modelName);\n        const parentKey = embeddedSerializer.keyForRelationship(name, parentRecord.kind, 'deserialize');\n        if (parentKey) {\n          delete json[parentKey];\n        }\n      }\n    } /*else if (relationship.kind === 'hasMany') {\n      return;\n      }*/\n  },\n  // checks config for attrs option to embedded (always) - serialize and deserialize\n  hasEmbeddedAlwaysOption(attr) {\n    const option = this.attrsOption(attr);\n    return option && option.embedded === 'always';\n  },\n  // checks config for attrs option to serialize ids\n  hasSerializeRecordsOption(attr) {\n    const alwaysEmbed = this.hasEmbeddedAlwaysOption(attr);\n    const option = this.attrsOption(attr);\n    return alwaysEmbed || option && option.serialize === 'records';\n  },\n  // checks config for attrs option to serialize records\n  hasSerializeIdsOption(attr) {\n    const option = this.attrsOption(attr);\n    return option && (option.serialize === 'ids' || option.serialize === 'id');\n  },\n  // checks config for attrs option to serialize records as objects containing id and types\n  hasSerializeIdsAndTypesOption(attr) {\n    const option = this.attrsOption(attr);\n    return option && (option.serialize === 'ids-and-types' || option.serialize === 'id-and-type');\n  },\n  // checks config for attrs option to serialize records\n  noSerializeOptionSpecified(attr) {\n    const option = this.attrsOption(attr);\n    return !(option && (option.serialize || option.embedded));\n  },\n  // checks config for attrs option to deserialize records\n  // a defined option object for a resource is treated the same as\n  // `deserialize: 'records'`\n  hasDeserializeRecordsOption(attr) {\n    const alwaysEmbed = this.hasEmbeddedAlwaysOption(attr);\n    const option = this.attrsOption(attr);\n    return alwaysEmbed || option && option.deserialize === 'records';\n  },\n  attrsOption(attr) {\n    const attrs = this.attrs;\n    return attrs && (attrs[(0,_ember_string__WEBPACK_IMPORTED_MODULE_2__.camelize)(attr)] || attrs[attr]);\n  },\n  /**\n   @method _extractEmbeddedRecords\n   @private\n  */\n  _extractEmbeddedRecords(serializer, store, typeClass, partial) {\n    typeClass.eachRelationship((key, relationship) => {\n      if (serializer.hasDeserializeRecordsOption(key)) {\n        if (relationship.kind === 'hasMany') {\n          this._extractEmbeddedHasMany(store, key, partial, relationship);\n        }\n        if (relationship.kind === 'belongsTo') {\n          this._extractEmbeddedBelongsTo(store, key, partial, relationship);\n        }\n      }\n    });\n    return partial;\n  },\n  /**\n   @method _extractEmbeddedHasMany\n   @private\n  */\n  _extractEmbeddedHasMany(store, key, hash, relationshipMeta) {\n    const relationshipHash = hash.data?.relationships?.[key]?.data;\n    if (!relationshipHash) {\n      return;\n    }\n    const hasMany = new Array(relationshipHash.length);\n    for (let i = 0; i < relationshipHash.length; i++) {\n      const item = relationshipHash[i];\n      const {\n        data,\n        included\n      } = this._normalizeEmbeddedRelationship(store, relationshipMeta, item);\n      hash.included = hash.included || [];\n      hash.included.push(data);\n      if (included) {\n        hash.included = hash.included.concat(included);\n      }\n      hasMany[i] = {\n        id: data.id,\n        type: data.type\n      };\n    }\n    const relationship = {\n      data: hasMany\n    };\n    hash.data.relationships[key] = relationship;\n  },\n  /**\n   @method _extractEmbeddedBelongsTo\n   @private\n  */\n  _extractEmbeddedBelongsTo(store, key, hash, relationshipMeta) {\n    const relationshipHash = hash.data?.relationships?.[key]?.data;\n    if (!relationshipHash) {\n      return;\n    }\n    const {\n      data,\n      included\n    } = this._normalizeEmbeddedRelationship(store, relationshipMeta, relationshipHash);\n    hash.included = hash.included || [];\n    hash.included.push(data);\n    if (included) {\n      hash.included = hash.included.concat(included);\n    }\n    const belongsTo = {\n      id: data.id,\n      type: data.type\n    };\n    const relationship = {\n      data: belongsTo\n    };\n    hash.data.relationships[key] = relationship;\n  },\n  /**\n   @method _normalizeEmbeddedRelationship\n   @private\n  */\n  _normalizeEmbeddedRelationship(store, relationshipMeta, relationshipHash) {\n    let modelName = relationshipMeta.type;\n    if (relationshipMeta.options.polymorphic) {\n      modelName = relationshipHash.type;\n    }\n    const modelClass = store.modelFor(modelName);\n    const serializer = store.serializerFor(modelName);\n    return serializer.normalize(modelClass, relationshipHash, null);\n  },\n  isEmbeddedRecordsMixin: true\n});\n\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@ember-data/serializer.677d83bc/node_modules/@ember-data/serializer/embedded-records-mixin-HTw8JJT1.js?");

/***/ }),

/***/ "../rewritten-packages/@ember-data/serializer.677d83bc/node_modules/@ember-data/serializer/index.js":
/*!**********************************************************************************************************!*\
  !*** ../rewritten-packages/@ember-data/serializer.677d83bc/node_modules/@ember-data/serializer/index.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ _class)\n/* harmony export */ });\n/* harmony import */ var _ember_object__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/object */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fobject&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_object__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_object__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _ember_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember/service */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fservice&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_service__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_ember_service__WEBPACK_IMPORTED_MODULE_1__);\n\n\nfunction _initializerDefineProperty(target, property, descriptor, context) {\n  if (!descriptor) return;\n  Object.defineProperty(target, property, {\n    enumerable: descriptor.enumerable,\n    configurable: descriptor.configurable,\n    writable: descriptor.writable,\n    value: descriptor.initializer ? descriptor.initializer.call(context) : void 0\n  });\n}\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object.keys(descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n  if (desc.initializer === void 0) {\n    Object.defineProperty(target, property, desc);\n    desc = null;\n  }\n  return desc;\n}\nvar _class2, _descriptor;\n/**\n  > ⚠️ CAUTION you likely want the docs for [<Interface> Serializer](/ember-data/release/classes/%3CInterface%3E%20Serializer)\n  > as extending this abstract class is unnecessary.\n\n  `Serializer` is an abstract base class that you may override in your\n  application to customize it for your backend. The minimum set of methods\n  that you should implement is:\n\n    * `normalizeResponse()`\n    * `serialize()`\n\n  And you can optionally override the following methods:\n\n    * `normalize()`\n\n  For an example implementation, see\n  [JSONSerializer](JSONSerializer), the included JSON serializer.\n\n  @class Serializer\n  @public\n  @extends Ember.EmberObject\n*/\nlet _class = (_class2 = class _class2 extends (_ember_object__WEBPACK_IMPORTED_MODULE_0___default()) {\n  constructor(...args) {\n    super(...args);\n    _initializerDefineProperty(this, \"store\", _descriptor, this);\n  }\n  /**\n    The `store` property is the application's `store` that contains\n    all records. It can be used to look up serializers for other model\n    types that may be nested inside the payload response.\n     Example:\n     ```js\n    Serializer.extend({\n      extractRelationship(relationshipModelName, relationshipHash) {\n        let modelClass = this.store.modelFor(relationshipModelName);\n        let relationshipSerializer = this.store.serializerFor(relationshipModelName);\n        return relationshipSerializer.normalize(modelClass, relationshipHash);\n      }\n    });\n    ```\n     @property store\n    @type {Store}\n    @public\n  */\n\n  /**\n    The `normalizeResponse` method is used to normalize a payload from the\n    server to a JSON-API Document.\n     http://jsonapi.org/format/#document-structure\n     Example:\n     ```js\n    Serializer.extend({\n      normalizeResponse(store, primaryModelClass, payload, id, requestType) {\n        if (requestType === 'findRecord') {\n          return this.normalize(primaryModelClass, payload);\n        } else {\n          return payload.reduce(function(documentHash, item) {\n            let { data, included } = this.normalize(primaryModelClass, item);\n            documentHash.included.push(...included);\n            documentHash.data.push(data);\n            return documentHash;\n          }, { data: [], included: [] })\n        }\n      }\n    });\n    ```\n     @since 1.13.0\n    @method normalizeResponse\n    @public\n    @param {Store} store\n    @param {Model} primaryModelClass\n    @param {Object} payload\n    @param {String|Number} id\n    @param {String} requestType\n    @return {Object} JSON-API Document\n  */\n\n  /**\n    The `serialize` method is used when a record is saved in order to convert\n    the record into the form that your external data source expects.\n     `serialize` takes an optional `options` hash with a single option:\n     - `includeId`: If this is `true`, `serialize` should include the ID\n      in the serialized object it builds.\n     Example:\n     ```js\n    Serializer.extend({\n      serialize(snapshot, options) {\n        let json = {\n          id: snapshot.id\n        };\n         snapshot.eachAttribute((key, attribute) => {\n          json[key] = snapshot.attr(key);\n        });\n         snapshot.eachRelationship((key, relationship) => {\n          if (relationship.kind === 'belongsTo') {\n            json[key] = snapshot.belongsTo(key, { id: true });\n          } else if (relationship.kind === 'hasMany') {\n            json[key] = snapshot.hasMany(key, { ids: true });\n          }\n        });\n         return json;\n      },\n    });\n    ```\n     @method serialize\n    @public\n    @param {Snapshot} snapshot\n    @param {Object} [options]\n    @return {Object}\n  */\n\n  /**\n    The `normalize` method is used to convert a payload received from your\n    external data source into the normalized form `store.push()` expects. You\n    should override this method, munge the hash and return the normalized\n    payload.\n     Example:\n     ```js\n    Serializer.extend({\n      normalize(modelClass, resourceHash) {\n        let data = {\n          id:            resourceHash.id,\n          type:          modelClass.modelName,\n          attributes:    resourceHash\n        };\n        return { data: data };\n      }\n    })\n    ```\n     @method normalize\n    @public\n    @param {Model} typeClass\n    @param {Object} hash\n    @return {Object}\n  */\n  normalize(_typeClass, hash) {\n    return hash;\n  }\n}, _descriptor = _applyDecoratedDescriptor(_class2.prototype, \"store\", [_ember_service__WEBPACK_IMPORTED_MODULE_1__.inject], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _class2);\n\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@ember-data/serializer.677d83bc/node_modules/@ember-data/serializer/index.js?");

/***/ }),

/***/ "../rewritten-packages/@ember-data/serializer.677d83bc/node_modules/@ember-data/serializer/json-api.js":
/*!*************************************************************************************************************!*\
  !*** ../rewritten-packages/@ember-data/serializer.677d83bc/node_modules/@ember-data/serializer/json-api.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ JSONAPISerializer)\n/* harmony export */ });\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/debug */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fdebug&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_debug__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _ember_string__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember/string */ \"../rewritten-packages/@ember/string.5601e258/node_modules/@ember/string/index.js\");\n/* harmony import */ var ember_inflector__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ember-inflector */ \"../rewritten-packages/ember-inflector.73f9432a/node_modules/ember-inflector/index.js\");\n/* harmony import */ var _json__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./json */ \"../rewritten-packages/@ember-data/serializer.677d83bc/node_modules/@ember-data/serializer/json.js\");\n\n\n\n\n/**\n * @module @ember-data/serializer/json-api\n */\nconst JSONAPISerializer = _json__WEBPACK_IMPORTED_MODULE_3__[\"default\"].extend({\n  /**\n    @method _normalizeDocumentHelper\n    @param {Object} documentHash\n    @return {Object}\n    @private\n  */\n  _normalizeDocumentHelper(documentHash) {\n    if (Array.isArray(documentHash.data)) {\n      const ret = new Array(documentHash.data.length);\n      for (let i = 0; i < documentHash.data.length; i++) {\n        const data = documentHash.data[i];\n        ret[i] = this._normalizeResourceHelper(data);\n      }\n      documentHash.data = ret;\n    } else if (documentHash.data && typeof documentHash.data === 'object') {\n      documentHash.data = this._normalizeResourceHelper(documentHash.data);\n    }\n    if (Array.isArray(documentHash.included)) {\n      const ret = new Array();\n      for (let i = 0; i < documentHash.included.length; i++) {\n        const included = documentHash.included[i];\n        const normalized = this._normalizeResourceHelper(included);\n        if (normalized !== null) {\n          // can be null when unknown type is encountered\n          ret.push(normalized);\n        }\n      }\n      documentHash.included = ret;\n    }\n    return documentHash;\n  },\n  /**\n    @method _normalizeRelationshipDataHelper\n    @param {Object} relationshipDataHash\n    @return {Object}\n    @private\n  */\n  _normalizeRelationshipDataHelper(relationshipDataHash) {\n    relationshipDataHash.type = this.modelNameFromPayloadKey(relationshipDataHash.type);\n    return relationshipDataHash;\n  },\n  /**\n    @method _normalizeResourceHelper\n    @param {Object} resourceHash\n    @return {Object}\n    @private\n  */\n  _normalizeResourceHelper(resourceHash) {\n    ( true && !(resourceHash.type) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(this.warnMessageForUndefinedType(), resourceHash.type));\n    const modelName = this.modelNameFromPayloadKey(resourceHash.type);\n    if (!this.store.getSchemaDefinitionService().doesTypeExist(modelName)) {\n      ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.warn)(this.warnMessageNoModelForType(modelName, resourceHash.type, 'modelNameFromPayloadKey'), false, {\n        id: 'ds.serializer.model-for-type-missing'\n      }));\n      return null;\n    }\n    const modelClass = this.store.modelFor(modelName);\n    const serializer = this.store.serializerFor(modelName);\n    const {\n      data\n    } = serializer.normalize(modelClass, resourceHash);\n    return data;\n  },\n  /**\n    Normalize some data and push it into the store.\n     @method pushPayload\n    @public\n    @param {Store} store\n    @param {Object} payload\n  */\n  pushPayload(store, payload) {\n    const normalizedPayload = this._normalizeDocumentHelper(payload);\n    store.push(normalizedPayload);\n  },\n  /**\n    @method _normalizeResponse\n    @param {Store} store\n    @param {Model} primaryModelClass\n    @param {Object} payload\n    @param {String|Number} id\n    @param {String} requestType\n    @param {Boolean} isSingle\n    @return {Object} JSON-API Document\n    @private\n  */\n  _normalizeResponse(store, primaryModelClass, payload, id, requestType, isSingle) {\n    const normalizedPayload = this._normalizeDocumentHelper(payload);\n    return normalizedPayload;\n  },\n  normalizeQueryRecordResponse() {\n    const normalized = this._super(...arguments);\n    ( true && !(!Array.isArray(normalized.data)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)('Expected the primary data returned by the serializer for a `queryRecord` response to be a single object but instead it was an array.', !Array.isArray(normalized.data)));\n    return normalized;\n  },\n  extractAttributes(modelClass, resourceHash) {\n    const attributes = {};\n    if (resourceHash.attributes) {\n      modelClass.eachAttribute(key => {\n        const attributeKey = this.keyForAttribute(key, 'deserialize');\n        if (resourceHash.attributes[attributeKey] !== undefined) {\n          attributes[key] = resourceHash.attributes[attributeKey];\n        }\n        {\n          if (resourceHash.attributes[attributeKey] === undefined && resourceHash.attributes[key] !== undefined) {\n            ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Your payload for '${modelClass.modelName}' contains '${key}', but your serializer is setup to look for '${attributeKey}'. This is most likely because Ember Data's JSON API serializer dasherizes attribute keys by default. You should subclass JSONAPISerializer and implement 'keyForAttribute(key) { return key; }' to prevent Ember Data from customizing your attribute keys.`, false));\n          }\n        }\n      });\n    }\n    return attributes;\n  },\n  /**\n     Returns a relationship formatted as a JSON-API \"relationship object\".\n      http://jsonapi.org/format/#document-resource-object-relationships\n      @method extractRelationship\n    @public\n     @param {Object} relationshipHash\n     @return {Object}\n  */\n  extractRelationship(relationshipHash) {\n    if (Array.isArray(relationshipHash.data)) {\n      const ret = new Array(relationshipHash.data.length);\n      for (let i = 0; i < relationshipHash.data.length; i++) {\n        const data = relationshipHash.data[i];\n        ret[i] = this._normalizeRelationshipDataHelper(data);\n      }\n      relationshipHash.data = ret;\n    } else if (relationshipHash.data && typeof relationshipHash.data === 'object') {\n      relationshipHash.data = this._normalizeRelationshipDataHelper(relationshipHash.data);\n    }\n    return relationshipHash;\n  },\n  /**\n     Returns the resource's relationships formatted as a JSON-API \"relationships object\".\n      http://jsonapi.org/format/#document-resource-object-relationships\n      @method extractRelationships\n    @public\n     @param {Object} modelClass\n     @param {Object} resourceHash\n     @return {Object}\n  */\n  extractRelationships(modelClass, resourceHash) {\n    const relationships = {};\n    if (resourceHash.relationships) {\n      modelClass.eachRelationship((key, relationshipMeta) => {\n        const relationshipKey = this.keyForRelationship(key, relationshipMeta.kind, 'deserialize');\n        if (resourceHash.relationships[relationshipKey] !== undefined) {\n          const relationshipHash = resourceHash.relationships[relationshipKey];\n          relationships[key] = this.extractRelationship(relationshipHash);\n        }\n        {\n          if (resourceHash.relationships[relationshipKey] === undefined && resourceHash.relationships[key] !== undefined) {\n            ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Your payload for '${modelClass.modelName}' contains '${key}', but your serializer is setup to look for '${relationshipKey}'. This is most likely because Ember Data's JSON API serializer dasherizes relationship keys by default. You should subclass JSONAPISerializer and implement 'keyForRelationship(key) { return key; }' to prevent Ember Data from customizing your relationship keys.`, false));\n          }\n        }\n      });\n    }\n    return relationships;\n  },\n  /**\n    @method _extractType\n    @param {Model} modelClass\n    @param {Object} resourceHash\n    @return {String}\n    @private\n  */\n  _extractType(modelClass, resourceHash) {\n    return this.modelNameFromPayloadKey(resourceHash.type);\n  },\n  /**\n    Dasherizes and singularizes the model name in the payload to match\n    the format Ember Data uses internally for the model name.\n     For example the key `posts` would be converted to `post` and the\n    key `studentAssesments` would be converted to `student-assesment`.\n     @method modelNameFromPayloadKey\n    @public\n    @param {String} key\n    @return {String} the model's modelName\n  */\n  modelNameFromPayloadKey(key) {\n    return (0,_ember_string__WEBPACK_IMPORTED_MODULE_1__.dasherize)((0,ember_inflector__WEBPACK_IMPORTED_MODULE_2__.singularize)(key));\n  },\n  /**\n    Converts the model name to a pluralized version of the model name.\n     For example `post` would be converted to `posts` and\n    `student-assesment` would be converted to `student-assesments`.\n     @method payloadKeyFromModelName\n    @public\n    @param {String} modelName\n    @return {String}\n  */\n  payloadKeyFromModelName(modelName) {\n    return (0,ember_inflector__WEBPACK_IMPORTED_MODULE_2__.pluralize)(modelName);\n  },\n  normalize(modelClass, resourceHash) {\n    if (resourceHash.attributes) {\n      this.normalizeUsingDeclaredMapping(modelClass, resourceHash.attributes);\n    }\n    if (resourceHash.relationships) {\n      this.normalizeUsingDeclaredMapping(modelClass, resourceHash.relationships);\n    }\n    const data = {\n      id: this.extractId(modelClass, resourceHash),\n      type: this._extractType(modelClass, resourceHash),\n      attributes: this.extractAttributes(modelClass, resourceHash),\n      relationships: this.extractRelationships(modelClass, resourceHash)\n    };\n    this.applyTransforms(modelClass, data.attributes);\n    return {\n      data\n    };\n  },\n  /**\n    `keyForAttribute` can be used to define rules for how to convert an\n    attribute name in your model to a key in your JSON.\n    By default `JSONAPISerializer` follows the format used on the examples of\n    http://jsonapi.org/format and uses dashes as the word separator in the JSON\n    attribute keys.\n     This behaviour can be easily customized by extending this method.\n     Example\n     ```app/serializers/application.js\n    import JSONAPISerializer from '@ember-data/serializer/json-api';\n    import { dasherize } from '<app-name>/utils/string-utils';\n     export default class ApplicationSerializer extends JSONAPISerializer {\n      keyForAttribute(attr, method) {\n        return dasherize(attr).toUpperCase();\n      }\n    }\n    ```\n     @method keyForAttribute\n    @public\n    @param {String} key\n    @param {String} method\n    @return {String} normalized key\n  */\n  keyForAttribute(key, method) {\n    return (0,_ember_string__WEBPACK_IMPORTED_MODULE_1__.dasherize)(key);\n  },\n  /**\n   `keyForRelationship` can be used to define a custom key when\n   serializing and deserializing relationship properties.\n   By default `JSONAPISerializer` follows the format used on the examples of\n   http://jsonapi.org/format and uses dashes as word separators in\n   relationship properties.\n    This behaviour can be easily customized by extending this method.\n    Example\n     ```app/serializers/post.js\n    import JSONAPISerializer from '@ember-data/serializer/json-api';\n    import { underscore } from '<app-name>/utils/string-utils';\n     export default class ApplicationSerializer extends JSONAPISerializer {\n      keyForRelationship(key, relationship, method) {\n        return underscore(key);\n      }\n    }\n    ```\n   @method keyForRelationship\n    @public\n   @param {String} key\n   @param {String} typeClass\n   @param {String} method\n   @return {String} normalized key\n  */\n  keyForRelationship(key, typeClass, method) {\n    return (0,_ember_string__WEBPACK_IMPORTED_MODULE_1__.dasherize)(key);\n  },\n  /**\n    Called when a record is saved in order to convert the\n    record into JSON.\n     For example, consider this model:\n     ```app/models/comment.js\n    import Model, { attr, belongsTo } from '@ember-data/model';\n     export default class CommentModel extends Model {\n      @attr title;\n      @attr body;\n       @belongsTo('user', { async: false, inverse: null })\n      author;\n    }\n    ```\n     The default serialization would create a JSON-API resource object like:\n     ```javascript\n    {\n      \"data\": {\n        \"type\": \"comments\",\n        \"attributes\": {\n          \"title\": \"Rails is unagi\",\n          \"body\": \"Rails? Omakase? O_O\",\n        },\n        \"relationships\": {\n          \"author\": {\n            \"data\": {\n              \"id\": \"12\",\n              \"type\": \"users\"\n            }\n          }\n        }\n      }\n    }\n    ```\n     By default, attributes are passed through as-is, unless\n    you specified an attribute type (`attr('date')`). If\n    you specify a transform, the JavaScript value will be\n    serialized when inserted into the attributes hash.\n     Belongs-to relationships are converted into JSON-API\n    resource identifier objects.\n     ## IDs\n     `serialize` takes an options hash with a single option:\n    `includeId`. If this option is `true`, `serialize` will,\n    by default include the ID in the JSON object it builds.\n     The JSONAPIAdapter passes in `includeId: true` when serializing a record\n    for `createRecord` or `updateRecord`.\n     ## Customization\n     Your server may expect data in a different format than the\n    built-in serialization format.\n     In that case, you can implement `serialize` yourself and\n    return data formatted to match your API's expectations, or override\n    the invoked adapter method and do the serialization in the adapter directly\n    by using the provided snapshot.\n     If your API's format differs greatly from the JSON:API spec, you should\n    consider authoring your own adapter and serializer instead of extending\n    this class.\n     ```app/serializers/post.js\n    import JSONAPISerializer from '@ember-data/serializer/json-api';\n     export default class PostSerializer extends JSONAPISerializer {\n      serialize(snapshot, options) {\n        let json = {\n          POST_TTL: snapshot.attr('title'),\n          POST_BDY: snapshot.attr('body'),\n          POST_CMS: snapshot.hasMany('comments', { ids: true })\n        };\n         if (options.includeId) {\n          json.POST_ID_ = snapshot.id;\n        }\n         return json;\n      }\n    }\n    ```\n     ## Customizing an App-Wide Serializer\n     If you want to define a serializer for your entire\n    application, you'll probably want to use `eachAttribute`\n    and `eachRelationship` on the record.\n     ```app/serializers/application.js\n    import JSONAPISerializer from '@ember-data/serializer/json-api';\n    import { underscore, singularize } from '<app-name>/utils/string-utils';\n     export default class ApplicationSerializer extends JSONAPISerializer {\n      serialize(snapshot, options) {\n        let json = {};\n         snapshot.eachAttribute((name) => {\n          json[serverAttributeName(name)] = snapshot.attr(name);\n        });\n         snapshot.eachRelationship((name, relationship) => {\n          if (relationship.kind === 'hasMany') {\n            json[serverHasManyName(name)] = snapshot.hasMany(name, { ids: true });\n          }\n        });\n         if (options.includeId) {\n          json.ID_ = snapshot.id;\n        }\n         return json;\n      }\n    }\n     function serverAttributeName(attribute) {\n      return underscore(attribute).toUpperCase();\n    }\n     function serverHasManyName(name) {\n      return serverAttributeName(singularize(name)) + '_IDS';\n    }\n    ```\n     This serializer will generate JSON that looks like this:\n     ```javascript\n    {\n      \"TITLE\": \"Rails is omakase\",\n      \"BODY\": \"Yep. Omakase.\",\n      \"COMMENT_IDS\": [ \"1\", \"2\", \"3\" ]\n    }\n    ```\n     ## Tweaking the Default Formatting\n     If you just want to do some small tweaks on the default JSON:API formatted response,\n    you can call `super.serialize` first and make the tweaks\n    on the returned object.\n     ```app/serializers/post.js\n    import JSONAPISerializer from '@ember-data/serializer/json-api';\n     export default class PostSerializer extends JSONAPISerializer {\n      serialize(snapshot, options) {\n        let json = super.serialize(...arguments);\n         json.data.attributes.subject = json.data.attributes.title;\n        delete json.data.attributes.title;\n         return json;\n      }\n    }\n    ```\n     @method serialize\n    @public\n    @param {Snapshot} snapshot\n    @param {Object} options\n    @return {Object} json\n  */\n  serialize(snapshot, options) {\n    const data = this._super(...arguments);\n    data.type = this.payloadKeyFromModelName(snapshot.modelName);\n    return {\n      data\n    };\n  },\n  serializeAttribute(snapshot, json, key, attribute) {\n    const type = attribute.type;\n    if (this._canSerialize(key)) {\n      json.attributes = json.attributes || {};\n      let value = snapshot.attr(key);\n      if (type) {\n        const transform = this.transformFor(type);\n        value = transform.serialize(value, attribute.options);\n      }\n      const schema = this.store.modelFor(snapshot.modelName);\n      let payloadKey = this._getMappedKey(key, schema);\n      if (payloadKey === key) {\n        payloadKey = this.keyForAttribute(key, 'serialize');\n      }\n      json.attributes[payloadKey] = value;\n    }\n  },\n  serializeBelongsTo(snapshot, json, relationship) {\n    const name = relationship.name;\n    if (this._canSerialize(name)) {\n      const belongsTo = snapshot.belongsTo(name);\n      const belongsToIsNotNew = belongsTo && !belongsTo.isNew;\n      if (belongsTo === null || belongsToIsNotNew) {\n        json.relationships = json.relationships || {};\n        const schema = this.store.modelFor(snapshot.modelName);\n        let payloadKey = this._getMappedKey(name, schema);\n        if (payloadKey === name) {\n          payloadKey = this.keyForRelationship(name, 'belongsTo', 'serialize');\n        }\n        let data = null;\n        if (belongsTo) {\n          const payloadType = this.payloadKeyFromModelName(belongsTo.modelName);\n          data = {\n            type: payloadType,\n            id: belongsTo.id\n          };\n        }\n        json.relationships[payloadKey] = {\n          data\n        };\n      }\n    }\n  },\n  serializeHasMany(snapshot, json, relationship) {\n    const name = relationship.name;\n    if (this.shouldSerializeHasMany(snapshot, name, relationship)) {\n      const hasMany = snapshot.hasMany(name);\n      if (hasMany !== undefined) {\n        json.relationships = json.relationships || {};\n        const schema = this.store.modelFor(snapshot.modelName);\n        let payloadKey = this._getMappedKey(name, schema);\n        if (payloadKey === name && this.keyForRelationship) {\n          payloadKey = this.keyForRelationship(name, 'hasMany', 'serialize');\n        }\n\n        // only serialize has many relationships that are not new\n        const nonNewHasMany = hasMany.filter(item => !item.isNew);\n        const data = new Array(nonNewHasMany.length);\n        for (let i = 0; i < nonNewHasMany.length; i++) {\n          const item = hasMany[i];\n          const payloadType = this.payloadKeyFromModelName(item.modelName);\n          data[i] = {\n            type: payloadType,\n            id: item.id\n          };\n        }\n        json.relationships[payloadKey] = {\n          data\n        };\n      }\n    }\n  }\n});\n{\n  JSONAPISerializer.reopen({\n    init(...args) {\n      this._super(...args);\n      ( true && !(!this.isEmbeddedRecordsMixin || this.isEmbeddedRecordsMixinCompatible === true) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`You've used the EmbeddedRecordsMixin in ${this.toString()} which is not fully compatible with the JSON:API specification. Please confirm that this works for your specific API and add \\`this.isEmbeddedRecordsMixinCompatible = true\\` to your serializer.`, !this.isEmbeddedRecordsMixin || this.isEmbeddedRecordsMixinCompatible === true));\n      const constructor = this.constructor;\n      ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.warn)(`You've defined 'extractMeta' in ${constructor.toString()} which is not used for serializers extending JSONAPISerializer. Read more at https://api.emberjs.com/ember-data/release/classes/JSONAPISerializer on how to customize meta when using JSON API.`, this.extractMeta === _json__WEBPACK_IMPORTED_MODULE_3__[\"default\"].prototype.extractMeta, {\n        id: 'ds.serializer.json-api.extractMeta'\n      }));\n    },\n    warnMessageForUndefinedType() {\n      return 'Encountered a resource object with an undefined type (resolved resource using ' + this.constructor.toString() + ')';\n    },\n    warnMessageNoModelForType(modelName, originalType, usedLookup) {\n      return `Encountered a resource object with type \"${originalType}\", but no model was found for model name \"${modelName}\" (resolved model name using '${this.constructor.toString()}.${usedLookup}(\"${originalType}\")').`;\n    }\n  });\n}\n\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@ember-data/serializer.677d83bc/node_modules/@ember-data/serializer/json-api.js?");

/***/ }),

/***/ "../rewritten-packages/@ember-data/serializer.677d83bc/node_modules/@ember-data/serializer/json.js":
/*!*********************************************************************************************************!*\
  !*** ../rewritten-packages/@ember-data/serializer.677d83bc/node_modules/@ember-data/serializer/json.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ JSONSerializer)\n/* harmony export */ });\n/* harmony import */ var _ember_application__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/application */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fapplication&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_application__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_application__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember/debug */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fdebug&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_ember_debug__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _ember_string__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ember/string */ \"../rewritten-packages/@ember/string.5601e258/node_modules/@ember/string/index.js\");\n/* harmony import */ var ember_inflector__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ember-inflector */ \"../rewritten-packages/ember-inflector.73f9432a/node_modules/ember-inflector/index.js\");\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./index */ \"../rewritten-packages/@ember-data/serializer.677d83bc/node_modules/@ember-data/serializer/index.js\");\n/* harmony import */ var _utils_N1ERF6HN__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils-N1ERF6HN */ \"../rewritten-packages/@ember-data/serializer.677d83bc/node_modules/@ember-data/serializer/utils-N1ERF6HN.js\");\n\n\n\n\n\n\n\n/**\n * @module @ember-data/serializer/json\n */\nconst SOURCE_POINTER_REGEXP = /^\\/?data\\/(attributes|relationships)\\/(.*)/;\nconst SOURCE_POINTER_PRIMARY_REGEXP = /^\\/?data/;\nconst PRIMARY_ATTRIBUTE_KEY = 'base';\n\n/**\n * <blockquote style=\"margin: 1em; padding: .1em 1em .1em 1em; border-left: solid 1em #E34C32; background: #e0e0e0;\">\n  <p>\n    ⚠️ <strong>This is LEGACY documentation</strong> for a feature that is no longer encouraged to be used.\n    If starting a new app or thinking of implementing a new adapter, consider writing a\n    <a href=\"/ember-data/release/classes/%3CInterface%3E%20Handler\">Handler</a> instead to be used with the <a href=\"https://github.com/emberjs/data/tree/main/packages/request#readme\">RequestManager</a>\n  </p>\n  </blockquote>\n\n  In EmberData a Serializer is used to serialize and deserialize\n  records when they are transferred in and out of an external source.\n  This process involves normalizing property names, transforming\n  attribute values and serializing relationships.\n\n  By default, EmberData uses and recommends the `JSONAPISerializer`.\n\n  `JSONSerializer` is useful for simpler or legacy backends that may\n  not support the http://jsonapi.org/ spec.\n\n  For example, given the following `User` model and JSON payload:\n\n  ```app/models/user.js\n  import Model, { attr, belongsTo, hasMany } from '@ember-data/model';\n\n  export default class UserModel extends Model {\n    @hasMany('user') friends;\n    @belongsTo('location') house;\n\n    @attr('string') name;\n  }\n  ```\n\n  ```js\n  {\n    id: 1,\n    name: 'Sebastian',\n    friends: [3, 4],\n    links: {\n      house: '/houses/lefkada'\n    }\n  }\n  ```\n\n  `JSONSerializer` will normalize the JSON payload to the JSON API format that the\n  Ember Data store expects.\n\n  You can customize how JSONSerializer processes its payload by passing options in\n  the `attrs` hash or by subclassing the `JSONSerializer` and overriding hooks:\n\n    - To customize how a single record is normalized, use the `normalize` hook.\n    - To customize how `JSONSerializer` normalizes the whole server response, use the\n      `normalizeResponse` hook.\n    - To customize how `JSONSerializer` normalizes a specific response from the server,\n      use one of the many specific `normalizeResponse` hooks.\n    - To customize how `JSONSerializer` normalizes your id, attributes or relationships,\n      use the `extractId`, `extractAttributes` and `extractRelationships` hooks.\n\n  The `JSONSerializer` normalization process follows these steps:\n\n    1. `normalizeResponse`\n        - entry method to the serializer.\n    2. `normalizeCreateRecordResponse`\n        - a `normalizeResponse` for a specific operation is called.\n    3. `normalizeSingleResponse`|`normalizeArrayResponse`\n        - for methods like `createRecord` we expect a single record back, while for methods like `findAll` we expect multiple records back.\n    4. `normalize`\n        - `normalizeArrayResponse` iterates and calls `normalize` for each of its records while `normalizeSingle`\n          calls it once. This is the method you most likely want to subclass.\n    5. `extractId` | `extractAttributes` | `extractRelationships`\n        - `normalize` delegates to these methods to\n          turn the record payload into the JSON API format.\n\n  @main @ember-data/serializer/json\n  @class JSONSerializer\n  @public\n  @extends Serializer\n*/\nconst JSONSerializer = _index__WEBPACK_IMPORTED_MODULE_4__[\"default\"].extend({\n  /**\n    The `primaryKey` is used when serializing and deserializing\n    data. Ember Data always uses the `id` property to store the id of\n    the record. The external source may not always follow this\n    convention. In these cases it is useful to override the\n    `primaryKey` property to match the `primaryKey` of your external\n    store.\n     Example\n     ```app/serializers/application.js\n    import JSONSerializer from '@ember-data/serializer/json';\n     export default class ApplicationSerializer extends JSONSerializer {\n      primaryKey = '_id'\n    }\n    ```\n     @property primaryKey\n    @type {String}\n    @public\n    @default 'id'\n  */\n  primaryKey: 'id',\n  /**\n    The `attrs` object can be used to declare a simple mapping between\n    property names on `Model` records and payload keys in the\n    serialized JSON object representing the record. An object with the\n    property `key` can also be used to designate the attribute's key on\n    the response payload.\n     Example\n     ```app/models/person.js\n    import Model, { attr } from '@ember-data/model';\n     export default class PersonModel extends Model {\n      @attr('string') firstName;\n      @attr('string') lastName;\n      @attr('string') occupation;\n      @attr('boolean') admin;\n    }\n    ```\n     ```app/serializers/person.js\n    import JSONSerializer from '@ember-data/serializer/json';\n     export default class PersonSerializer extends JSONSerializer {\n      attrs = {\n        admin: 'is_admin',\n        occupation: { key: 'career' }\n      }\n    }\n    ```\n     You can also remove attributes and relationships by setting the `serialize`\n    key to `false` in your mapping object.\n     Example\n     ```app/serializers/person.js\n    import JSONSerializer from '@ember-data/serializer/json';\n     export default class PostSerializer extends JSONSerializer {\n      attrs = {\n        admin: { serialize: false },\n        occupation: { key: 'career' }\n      }\n    }\n    ```\n     When serialized:\n     ```javascript\n    {\n      \"firstName\": \"Harry\",\n      \"lastName\": \"Houdini\",\n      \"career\": \"magician\"\n    }\n    ```\n     Note that the `admin` is now not included in the payload.\n     Setting `serialize` to `true` enforces serialization for hasMany\n    relationships even if it's neither a many-to-many nor many-to-none\n    relationship.\n     @property attrs\n    @public\n    @type {Object}\n  */\n  mergedProperties: ['attrs'],\n  /**\n   Given a subclass of `Model` and a JSON object this method will\n   iterate through each attribute of the `Model` and invoke the\n   `Transform#deserialize` method on the matching property of the\n   JSON object.  This method is typically called after the\n   serializer's `normalize` method.\n    @method applyTransforms\n   @private\n   @param {Model} typeClass\n   @param {Object} data The data to transform\n   @return {Object} data The transformed data object\n  */\n  applyTransforms(typeClass, data) {\n    const attributes = typeClass.attributes;\n    typeClass.eachTransformedAttribute((key, typeClass) => {\n      if (data[key] === undefined) {\n        return;\n      }\n      const transform = this.transformFor(typeClass);\n      const transformMeta = attributes.get(key);\n      data[key] = transform.deserialize(data[key], transformMeta.options);\n    });\n    return data;\n  },\n  /**\n    The `normalizeResponse` method is used to normalize a payload from the\n    server to a JSON-API Document.\n     http://jsonapi.org/format/#document-structure\n     This method delegates to a more specific normalize method based on\n    the `requestType`.\n     To override this method with a custom one, make sure to call\n    `return super.normalizeResponse(store, primaryModelClass, payload, id, requestType)` with your\n    pre-processed data.\n     Here's an example of using `normalizeResponse` manually:\n     ```javascript\n    socket.on('message', function(message) {\n      let data = message.data;\n      let modelClass = store.modelFor(data.modelName);\n      let serializer = store.serializerFor(data.modelName);\n      let normalized = serializer.normalizeSingleResponse(store, modelClass, data, data.id);\n       store.push(normalized);\n    });\n    ```\n     @since 1.13.0\n    @method normalizeResponse\n    @public\n    @param {Store} store\n    @param {Model} primaryModelClass\n    @param {Object} payload\n    @param {String|Number} id\n    @param {String} requestType\n    @return {Object} JSON-API Document\n  */\n  normalizeResponse(store, primaryModelClass, payload, id, requestType) {\n    switch (requestType) {\n      case 'findRecord':\n        return this.normalizeFindRecordResponse(...arguments);\n      case 'queryRecord':\n        return this.normalizeQueryRecordResponse(...arguments);\n      case 'findAll':\n        return this.normalizeFindAllResponse(...arguments);\n      case 'findBelongsTo':\n        return this.normalizeFindBelongsToResponse(...arguments);\n      case 'findHasMany':\n        return this.normalizeFindHasManyResponse(...arguments);\n      case 'findMany':\n        return this.normalizeFindManyResponse(...arguments);\n      case 'query':\n        return this.normalizeQueryResponse(...arguments);\n      case 'createRecord':\n        return this.normalizeCreateRecordResponse(...arguments);\n      case 'deleteRecord':\n        return this.normalizeDeleteRecordResponse(...arguments);\n      case 'updateRecord':\n        return this.normalizeUpdateRecordResponse(...arguments);\n    }\n  },\n  /**\n    Called by the default normalizeResponse implementation when the\n    type of request is `findRecord`\n     @since 1.13.0\n    @method normalizeFindRecordResponse\n    @public\n    @param {Store} store\n    @param {Model} primaryModelClass\n    @param {Object} payload\n    @param {String|Number} id\n    @param {String} requestType\n    @return {Object} JSON-API Document\n  */\n  normalizeFindRecordResponse(store, primaryModelClass, payload, id, requestType) {\n    return this.normalizeSingleResponse(...arguments);\n  },\n  /**\n    Called by the default normalizeResponse implementation when the\n    type of request is `queryRecord`\n     @since 1.13.0\n    @method normalizeQueryRecordResponse\n    @public\n    @param {Store} store\n    @param {Model} primaryModelClass\n    @param {Object} payload\n    @param {String|Number} id\n    @param {String} requestType\n    @return {Object} JSON-API Document\n  */\n  normalizeQueryRecordResponse(store, primaryModelClass, payload, id, requestType) {\n    return this.normalizeSingleResponse(...arguments);\n  },\n  /**\n    Called by the default normalizeResponse implementation when the\n    type of request is `findAll`\n     @since 1.13.0\n    @method normalizeFindAllResponse\n    @public\n    @param {Store} store\n    @param {Model} primaryModelClass\n    @param {Object} payload\n    @param {String|Number} id\n    @param {String} requestType\n    @return {Object} JSON-API Document\n  */\n  normalizeFindAllResponse(store, primaryModelClass, payload, id, requestType) {\n    return this.normalizeArrayResponse(...arguments);\n  },\n  /**\n    Called by the default normalizeResponse implementation when the\n    type of request is `findBelongsTo`\n     @since 1.13.0\n    @method normalizeFindBelongsToResponse\n    @public\n    @param {Store} store\n    @param {Model} primaryModelClass\n    @param {Object} payload\n    @param {String|Number} id\n    @param {String} requestType\n    @return {Object} JSON-API Document\n  */\n  normalizeFindBelongsToResponse(store, primaryModelClass, payload, id, requestType) {\n    return this.normalizeSingleResponse(...arguments);\n  },\n  /**\n    Called by the default normalizeResponse implementation when the\n    type of request is `findHasMany`\n     @since 1.13.0\n    @method normalizeFindHasManyResponse\n    @public\n    @param {Store} store\n    @param {Model} primaryModelClass\n    @param {Object} payload\n    @param {String|Number} id\n    @param {String} requestType\n    @return {Object} JSON-API Document\n  */\n  normalizeFindHasManyResponse(store, primaryModelClass, payload, id, requestType) {\n    return this.normalizeArrayResponse(...arguments);\n  },\n  /**\n    Called by the default normalizeResponse implementation when the\n    type of request is `findMany`\n     @since 1.13.0\n    @method normalizeFindManyResponse\n    @public\n    @param {Store} store\n    @param {Model} primaryModelClass\n    @param {Object} payload\n    @param {String|Number} id\n    @param {String} requestType\n    @return {Object} JSON-API Document\n  */\n  normalizeFindManyResponse(store, primaryModelClass, payload, id, requestType) {\n    return this.normalizeArrayResponse(...arguments);\n  },\n  /**\n    Called by the default normalizeResponse implementation when the\n    type of request is `query`\n     @since 1.13.0\n    @method normalizeQueryResponse\n    @public\n    @param {Store} store\n    @param {Model} primaryModelClass\n    @param {Object} payload\n    @param {String|Number} id\n    @param {String} requestType\n    @return {Object} JSON-API Document\n  */\n  normalizeQueryResponse(store, primaryModelClass, payload, id, requestType) {\n    return this.normalizeArrayResponse(...arguments);\n  },\n  /**\n    Called by the default normalizeResponse implementation when the\n    type of request is `createRecord`\n     @since 1.13.0\n    @method normalizeCreateRecordResponse\n    @public\n    @param {Store} store\n    @param {Model} primaryModelClass\n    @param {Object} payload\n    @param {String|Number} id\n    @param {String} requestType\n    @return {Object} JSON-API Document\n  */\n  normalizeCreateRecordResponse(store, primaryModelClass, payload, id, requestType) {\n    return this.normalizeSaveResponse(...arguments);\n  },\n  /**\n    Called by the default normalizeResponse implementation when the\n    type of request is `deleteRecord`\n     @since 1.13.0\n    @method normalizeDeleteRecordResponse\n    @public\n    @param {Store} store\n    @param {Model} primaryModelClass\n    @param {Object} payload\n    @param {String|Number} id\n    @param {String} requestType\n    @return {Object} JSON-API Document\n  */\n  normalizeDeleteRecordResponse(store, primaryModelClass, payload, id, requestType) {\n    return this.normalizeSaveResponse(...arguments);\n  },\n  /**\n    Called by the default normalizeResponse implementation when the\n    type of request is `updateRecord`\n     @since 1.13.0\n    @method normalizeUpdateRecordResponse\n    @public\n    @param {Store} store\n    @param {Model} primaryModelClass\n    @param {Object} payload\n    @param {String|Number} id\n    @param {String} requestType\n    @return {Object} JSON-API Document\n  */\n  normalizeUpdateRecordResponse(store, primaryModelClass, payload, id, requestType) {\n    return this.normalizeSaveResponse(...arguments);\n  },\n  /**\n    normalizeUpdateRecordResponse, normalizeCreateRecordResponse and\n    normalizeDeleteRecordResponse delegate to this method by default.\n     @since 1.13.0\n    @method normalizeSaveResponse\n    @public\n    @param {Store} store\n    @param {Model} primaryModelClass\n    @param {Object} payload\n    @param {String|Number} id\n    @param {String} requestType\n    @return {Object} JSON-API Document\n  */\n  normalizeSaveResponse(store, primaryModelClass, payload, id, requestType) {\n    return this.normalizeSingleResponse(...arguments);\n  },\n  /**\n    normalizeQueryResponse and normalizeFindRecordResponse delegate to this\n    method by default.\n     @since 1.13.0\n    @method normalizeSingleResponse\n    @public\n    @param {Store} store\n    @param {Model} primaryModelClass\n    @param {Object} payload\n    @param {String|Number} id\n    @param {String} requestType\n    @return {Object} JSON-API Document\n  */\n  normalizeSingleResponse(store, primaryModelClass, payload, id, requestType) {\n    return this._normalizeResponse(store, primaryModelClass, payload, id, requestType, true);\n  },\n  /**\n    normalizeQueryResponse, normalizeFindManyResponse, and normalizeFindHasManyResponse delegate\n    to this method by default.\n     @since 1.13.0\n    @method normalizeArrayResponse\n    @public\n    @param {Store} store\n    @param {Model} primaryModelClass\n    @param {Object} payload\n    @param {String|Number} id\n    @param {String} requestType\n    @return {Object} JSON-API Document\n  */\n  normalizeArrayResponse(store, primaryModelClass, payload, id, requestType) {\n    return this._normalizeResponse(store, primaryModelClass, payload, id, requestType, false);\n  },\n  /**\n    @method _normalizeResponse\n    @param {Store} store\n    @param {Model} primaryModelClass\n    @param {Object} payload\n    @param {String|Number} id\n    @param {String} requestType\n    @param {Boolean} isSingle\n    @return {Object} JSON-API Document\n    @private\n  */\n  _normalizeResponse(store, primaryModelClass, payload, id, requestType, isSingle) {\n    const documentHash = {\n      data: null,\n      included: []\n    };\n    const meta = this.extractMeta(store, primaryModelClass, payload);\n    if (meta) {\n      ( true && !(typeof meta === 'object') && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)('The `meta` returned from `extractMeta` has to be an object, not \"' + typeof meta + '\".', typeof meta === 'object'));\n      documentHash.meta = meta;\n    }\n    if (isSingle) {\n      const {\n        data,\n        included\n      } = this.normalize(primaryModelClass, payload);\n      documentHash.data = data;\n      if (included) {\n        documentHash.included = included;\n      }\n    } else {\n      const ret = new Array(payload.length);\n      for (let i = 0, l = payload.length; i < l; i++) {\n        const item = payload[i];\n        const {\n          data,\n          included\n        } = this.normalize(primaryModelClass, item);\n        if (included) {\n          documentHash.included = documentHash.included.concat(included);\n        }\n        ret[i] = data;\n      }\n      documentHash.data = ret;\n    }\n    return documentHash;\n  },\n  /**\n    Normalizes a part of the JSON payload returned by\n    the server. You should override this method, munge the hash\n    and call super if you have generic normalization to do.\n     It takes the type of the record that is being normalized\n    (as a Model class), the property where the hash was\n    originally found, and the hash to normalize.\n     You can use this method, for example, to normalize underscored keys to camelized\n    or other general-purpose normalizations.\n     Example\n     ```app/serializers/application.js\n    import JSONSerializer from '@ember-data/serializer/json';\n    import { underscore } from '<app-name>/utils/string-utils';\n    import { get } from '@ember/object';\n     export default class ApplicationSerializer extends JSONSerializer {\n      normalize(typeClass, hash) {\n        let fields = typeClass.fields;\n         fields.forEach(function(type, field) {\n          let payloadField = underscore(field);\n          if (field === payloadField) { return; }\n           hash[field] = hash[payloadField];\n          delete hash[payloadField];\n        });\n         return super.normalize(...arguments);\n      }\n    }\n    ```\n     @method normalize\n    @public\n    @param {Model} typeClass\n    @param {Object} hash\n    @return {Object}\n  */\n  normalize(modelClass, resourceHash) {\n    let data = null;\n    if (resourceHash) {\n      this.normalizeUsingDeclaredMapping(modelClass, resourceHash);\n      if (typeof resourceHash.links === 'object') {\n        this.normalizeUsingDeclaredMapping(modelClass, resourceHash.links);\n      }\n      data = {\n        id: this.extractId(modelClass, resourceHash),\n        type: modelClass.modelName,\n        attributes: this.extractAttributes(modelClass, resourceHash),\n        relationships: this.extractRelationships(modelClass, resourceHash)\n      };\n      this.applyTransforms(modelClass, data.attributes);\n    }\n    return {\n      data\n    };\n  },\n  /**\n    Returns the resource's ID.\n     @method extractId\n    @public\n    @param {Object} modelClass\n    @param {Object} resourceHash\n    @return {String}\n  */\n  extractId(modelClass, resourceHash) {\n    const primaryKey = this.primaryKey;\n    const id = resourceHash[primaryKey];\n    return (0,_utils_N1ERF6HN__WEBPACK_IMPORTED_MODULE_5__.c)(id);\n  },\n  /**\n    Returns the resource's attributes formatted as a JSON-API \"attributes object\".\n     http://jsonapi.org/format/#document-resource-object-attributes\n     @method extractAttributes\n    @public\n    @param {Object} modelClass\n    @param {Object} resourceHash\n    @return {Object}\n  */\n  extractAttributes(modelClass, resourceHash) {\n    let attributeKey;\n    const attributes = {};\n    modelClass.eachAttribute(key => {\n      attributeKey = this.keyForAttribute(key, 'deserialize');\n      if (resourceHash[attributeKey] !== undefined) {\n        attributes[key] = resourceHash[attributeKey];\n      }\n    });\n    return attributes;\n  },\n  /**\n    Returns a relationship formatted as a JSON-API \"relationship object\".\n     http://jsonapi.org/format/#document-resource-object-relationships\n     @method extractRelationship\n    @public\n    @param {Object} relationshipModelName\n    @param {Object} relationshipHash\n    @return {Object}\n  */\n  extractRelationship(relationshipModelName, relationshipHash) {\n    if (!relationshipHash) {\n      return null;\n    }\n    /*\n      When `relationshipHash` is an object it usually means that the relationship\n      is polymorphic. It could however also be embedded resources that the\n      EmbeddedRecordsMixin has be able to process.\n    */\n    if (relationshipHash && typeof relationshipHash === 'object' && !Array.isArray(relationshipHash)) {\n      if (relationshipHash.id) {\n        relationshipHash.id = (0,_utils_N1ERF6HN__WEBPACK_IMPORTED_MODULE_5__.c)(relationshipHash.id);\n      }\n      const modelClass = this.store.modelFor(relationshipModelName);\n      if (relationshipHash.type && !modelClass.fields.has('type')) {\n        relationshipHash.type = this.modelNameFromPayloadKey(relationshipHash.type);\n      }\n      return relationshipHash;\n    }\n    return {\n      id: (0,_utils_N1ERF6HN__WEBPACK_IMPORTED_MODULE_5__.c)(relationshipHash),\n      type: (0,_ember_string__WEBPACK_IMPORTED_MODULE_2__.dasherize)((0,ember_inflector__WEBPACK_IMPORTED_MODULE_3__.singularize)(relationshipModelName))\n    };\n  },\n  /**\n    Returns a polymorphic relationship formatted as a JSON-API \"relationship object\".\n     http://jsonapi.org/format/#document-resource-object-relationships\n     `relationshipOptions` is a hash which contains more information about the\n    polymorphic relationship which should be extracted:\n      - `resourceHash` complete hash of the resource the relationship should be\n        extracted from\n      - `relationshipKey` key under which the value for the relationship is\n        extracted from the resourceHash\n      - `relationshipMeta` meta information about the relationship\n     @method extractPolymorphicRelationship\n    @public\n    @param {Object} relationshipModelName\n    @param {Object} relationshipHash\n    @param {Object} relationshipOptions\n    @return {Object}\n  */\n  extractPolymorphicRelationship(relationshipModelName, relationshipHash, relationshipOptions) {\n    return this.extractRelationship(relationshipModelName, relationshipHash);\n  },\n  /**\n    Returns the resource's relationships formatted as a JSON-API \"relationships object\".\n     http://jsonapi.org/format/#document-resource-object-relationships\n     @method extractRelationships\n    @public\n    @param {Object} modelClass\n    @param {Object} resourceHash\n    @return {Object}\n  */\n  extractRelationships(modelClass, resourceHash) {\n    const relationships = {};\n    modelClass.eachRelationship((key, relationshipMeta) => {\n      let relationship = null;\n      const relationshipKey = this.keyForRelationship(key, relationshipMeta.kind, 'deserialize');\n      if (resourceHash[relationshipKey] !== undefined) {\n        let data = null;\n        const relationshipHash = resourceHash[relationshipKey];\n        if (relationshipMeta.kind === 'belongsTo') {\n          if (relationshipMeta.options.polymorphic) {\n            // extracting a polymorphic belongsTo may need more information\n            // than the type and the hash (which might only be an id) for the\n            // relationship, hence we pass the key, resource and\n            // relationshipMeta too\n            data = this.extractPolymorphicRelationship(relationshipMeta.type, relationshipHash, {\n              key,\n              resourceHash,\n              relationshipMeta\n            });\n          } else {\n            data = this.extractRelationship(relationshipMeta.type, relationshipHash);\n          }\n        } else if (relationshipMeta.kind === 'hasMany') {\n          if (relationshipHash) {\n            data = new Array(relationshipHash.length);\n            if (relationshipMeta.options.polymorphic) {\n              for (let i = 0, l = relationshipHash.length; i < l; i++) {\n                const item = relationshipHash[i];\n                data[i] = this.extractPolymorphicRelationship(relationshipMeta.type, item, {\n                  key,\n                  resourceHash,\n                  relationshipMeta\n                });\n              }\n            } else {\n              for (let i = 0, l = relationshipHash.length; i < l; i++) {\n                const item = relationshipHash[i];\n                data[i] = this.extractRelationship(relationshipMeta.type, item);\n              }\n            }\n          }\n        }\n        relationship = {\n          data\n        };\n      }\n      const linkKey = this.keyForLink(key, relationshipMeta.kind);\n      if (resourceHash.links && resourceHash.links[linkKey] !== undefined) {\n        const related = resourceHash.links[linkKey];\n        relationship = relationship || {};\n        relationship.links = {\n          related\n        };\n      }\n      if (relationship) {\n        relationships[key] = relationship;\n      }\n    });\n    return relationships;\n  },\n  /**\n    Dasherizes the model name in the payload\n     @method modelNameFromPayloadKey\n    @public\n    @param {String} key\n    @return {String} the model's modelName\n  */\n  modelNameFromPayloadKey(key) {\n    return (0,_ember_string__WEBPACK_IMPORTED_MODULE_2__.dasherize)((0,ember_inflector__WEBPACK_IMPORTED_MODULE_3__.singularize)(key));\n  },\n  /**\n    @method normalizeRelationships\n    @private\n  */\n  normalizeRelationships(typeClass, hash) {\n    let payloadKey;\n    if (this.keyForRelationship) {\n      typeClass.eachRelationship((key, relationship) => {\n        payloadKey = this.keyForRelationship(key, relationship.kind, 'deserialize');\n        if (key === payloadKey) {\n          return;\n        }\n        if (hash[payloadKey] === undefined) {\n          return;\n        }\n        hash[key] = hash[payloadKey];\n        delete hash[payloadKey];\n      });\n    }\n  },\n  /**\n    @method normalizeUsingDeclaredMapping\n    @private\n  */\n  normalizeUsingDeclaredMapping(modelClass, hash) {\n    const attrs = this.attrs;\n    let normalizedKey;\n    let payloadKey;\n    if (attrs) {\n      for (const key in attrs) {\n        normalizedKey = payloadKey = this._getMappedKey(key, modelClass);\n        if (hash[payloadKey] === undefined) {\n          continue;\n        }\n        if (modelClass.attributes.has(key)) {\n          normalizedKey = this.keyForAttribute(key, 'deserialize');\n        }\n        if (modelClass.relationshipsByName.has(key)) {\n          normalizedKey = this.keyForRelationship(key, modelClass, 'deserialize');\n        }\n        if (payloadKey !== normalizedKey) {\n          hash[normalizedKey] = hash[payloadKey];\n          delete hash[payloadKey];\n        }\n      }\n    }\n  },\n  /**\n    Looks up the property key that was set by the custom `attr` mapping\n    passed to the serializer.\n     @method _getMappedKey\n    @private\n    @param {String} key\n    @return {String} key\n  */\n  _getMappedKey(key, modelClass) {\n    ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.warn)('There is no attribute or relationship with the name `' + key + '` on `' + modelClass.modelName + '`. Check your serializers attrs hash.', modelClass.attributes.has(key) || modelClass.relationshipsByName.has(key), {\n      id: 'ds.serializer.no-mapped-attrs-key'\n    }));\n    const attrs = this.attrs;\n    let mappedKey;\n    if (attrs && attrs[key]) {\n      mappedKey = attrs[key];\n      //We need to account for both the { title: 'post_title' } and\n      //{ title: { key: 'post_title' }} forms\n      if (mappedKey.key) {\n        mappedKey = mappedKey.key;\n      }\n      if (typeof mappedKey === 'string') {\n        key = mappedKey;\n      }\n    }\n    return key;\n  },\n  /**\n    Check attrs.key.serialize property to inform if the `key`\n    can be serialized\n     @method _canSerialize\n    @private\n    @param {String} key\n    @return {boolean} true if the key can be serialized\n  */\n  _canSerialize(key) {\n    const attrs = this.attrs;\n    return !attrs || !attrs[key] || attrs[key].serialize !== false;\n  },\n  /**\n    When attrs.key.serialize is set to true then\n    it takes priority over the other checks and the related\n    attribute/relationship will be serialized\n     @method _mustSerialize\n    @private\n    @param {String} key\n    @return {boolean} true if the key must be serialized\n  */\n  _mustSerialize(key) {\n    const attrs = this.attrs;\n    return attrs && attrs[key] && attrs[key].serialize === true;\n  },\n  /**\n    Check if the given hasMany relationship should be serialized\n     By default only many-to-many and many-to-none relationships are serialized.\n    This could be configured per relationship by Serializer's `attrs` object.\n     @method shouldSerializeHasMany\n    @public\n    @param {Snapshot} snapshot\n    @param {String} key\n    @param {RelationshipSchema} relationship\n    @return {boolean} true if the hasMany relationship should be serialized\n  */\n  shouldSerializeHasMany(snapshot, key, relationship) {\n    const schema = this.store.modelFor(snapshot.modelName);\n    const relationshipType = schema.determineRelationshipType(relationship, this.store);\n    if (this._mustSerialize(key)) {\n      return true;\n    }\n    return this._canSerialize(key) && (relationshipType === 'manyToNone' || relationshipType === 'manyToMany');\n  },\n  // SERIALIZE\n  /**\n    Called when a record is saved in order to convert the\n    record into JSON.\n     By default, it creates a JSON object with a key for\n    each attribute and belongsTo relationship.\n     For example, consider this model:\n     ```app/models/comment.js\n    import Model, { attr, belongsTo } from '@ember-data/model';\n     export default class CommentModel extends Model {\n      @attr title;\n      @attr body;\n       @belongsTo('user') author;\n    }\n    ```\n     The default serialization would create a JSON object like:\n     ```javascript\n    {\n      \"title\": \"Rails is unagi\",\n      \"body\": \"Rails? Omakase? O_O\",\n      \"author\": 12\n    }\n    ```\n     By default, attributes are passed through as-is, unless\n    you specified an attribute type (`attr('date')`). If\n    you specify a transform, the JavaScript value will be\n    serialized when inserted into the JSON hash.\n     By default, belongs-to relationships are converted into\n    IDs when inserted into the JSON hash.\n     ## IDs\n     `serialize` takes an options hash with a single option:\n    `includeId`. If this option is `true`, `serialize` will,\n    by default include the ID in the JSON object it builds.\n     The adapter passes in `includeId: true` when serializing\n    a record for `createRecord`, but not for `updateRecord`.\n     ## Customization\n     Your server may expect a different JSON format than the\n    built-in serialization format.\n     In that case, you can implement `serialize` yourself and\n    return a JSON hash of your choosing.\n     ```app/serializers/post.js\n    import JSONSerializer from '@ember-data/serializer/json';\n     export default class PostSerializer extends JSONSerializer {\n      serialize(snapshot, options) {\n        let json = {\n          POST_TTL: snapshot.attr('title'),\n          POST_BDY: snapshot.attr('body'),\n          POST_CMS: snapshot.hasMany('comments', { ids: true })\n        };\n         if (options.includeId) {\n          json.POST_ID_ = snapshot.id;\n        }\n         return json;\n      }\n    }\n    ```\n     ## Customizing an App-Wide Serializer\n     If you want to define a serializer for your entire\n    application, you'll probably want to use `eachAttribute`\n    and `eachRelationship` on the record.\n     ```app/serializers/application.js\n    import JSONSerializer from '@ember-data/serializer/json';\n    import { singularize } from '<app-name>/utils/string-utils';\n     export default class ApplicationSerializer extends JSONSerializer {\n      serialize(snapshot, options) {\n        let json = {};\n         snapshot.eachAttribute((name) => {\n          json[serverAttributeName(name)] = snapshot.attr(name);\n        });\n         snapshot.eachRelationship((name, relationship) => {\n          if (relationship.kind === 'hasMany') {\n            json[serverHasManyName(name)] = snapshot.hasMany(name, { ids: true });\n          }\n        });\n         if (options.includeId) {\n          json.ID_ = snapshot.id;\n        }\n         return json;\n      }\n    }\n     function serverAttributeName(attribute) {\n      return attribute.underscore().toUpperCase();\n    }\n     function serverHasManyName(name) {\n      return serverAttributeName(singularize(name)) + \"_IDS\";\n    }\n    ```\n     This serializer will generate JSON that looks like this:\n     ```javascript\n    {\n      \"TITLE\": \"Rails is omakase\",\n      \"BODY\": \"Yep. Omakase.\",\n      \"COMMENT_IDS\": [ \"1\", \"2\", \"3\" ]\n    }\n    ```\n     ## Tweaking the Default JSON\n     If you just want to do some small tweaks on the default JSON,\n    you can call `super.serialize` first and make the tweaks on\n    the returned JSON.\n     ```app/serializers/post.js\n    import JSONSerializer from '@ember-data/serializer/json';\n     export default class PostSerializer extends JSONSerializer {\n      serialize(snapshot, options) {\n        let json = super.serialize(...arguments);\n         json.subject = json.title;\n        delete json.title;\n         return json;\n      }\n    }\n    ```\n     @method serialize\n    @public\n    @param {Snapshot} snapshot\n    @param {Object} options\n    @return {Object} json\n  */\n  serialize(snapshot, options) {\n    const json = {};\n    if (options && options.includeId) {\n      const id = snapshot.id;\n      if (id) {\n        json[this.primaryKey] = id;\n      }\n    }\n    snapshot.eachAttribute((key, attribute) => {\n      this.serializeAttribute(snapshot, json, key, attribute);\n    });\n    snapshot.eachRelationship((key, relationship) => {\n      if (relationship.kind === 'belongsTo') {\n        this.serializeBelongsTo(snapshot, json, relationship);\n      } else if (relationship.kind === 'hasMany') {\n        this.serializeHasMany(snapshot, json, relationship);\n      }\n    });\n    return json;\n  },\n  /**\n    You can use this method to customize how a serialized record is added to the complete\n    JSON hash to be sent to the server. By default the JSON Serializer does not namespace\n    the payload and just sends the raw serialized JSON object.\n    If your server expects namespaced keys, you should consider using the RESTSerializer.\n    Otherwise you can override this method to customize how the record is added to the hash.\n    The hash property should be modified by reference.\n     For example, your server may expect underscored root objects.\n     ```app/serializers/application.js\n    import RESTSerializer from '@ember-data/serializer/rest';\n    import { decamelize } from '<app-name>/utils/string-utils';\n     export default class ApplicationSerializer extends RESTSerializer {\n      serializeIntoHash(data, type, snapshot, options) {\n        let root = decamelize(type.modelName);\n        data[root] = this.serialize(snapshot, options);\n      }\n    }\n    ```\n     @method serializeIntoHash\n    @public\n    @param {Object} hash\n    @param {Model} typeClass\n    @param {Snapshot} snapshot\n    @param {Object} options\n  */\n  serializeIntoHash(hash, typeClass, snapshot, options) {\n    Object.assign(hash, this.serialize(snapshot, options));\n  },\n  /**\n    `serializeAttribute` can be used to customize how `attr`\n    properties are serialized\n     For example if you wanted to ensure all your attributes were always\n    serialized as properties on an `attributes` object you could\n    write:\n     ```app/serializers/application.js\n    import JSONSerializer from '@ember-data/serializer/json';\n     export default class ApplicationSerializer extends JSONSerializer {\n      serializeAttribute(snapshot, json, key, attributes) {\n        json.attributes = json.attributes || {};\n        super.serializeAttribute(snapshot, json.attributes, key, attributes);\n      }\n    }\n    ```\n     @method serializeAttribute\n    @public\n    @param {Snapshot} snapshot\n    @param {Object} json\n    @param {String} key\n    @param {Object} attribute\n  */\n  serializeAttribute(snapshot, json, key, attribute) {\n    if (this._canSerialize(key)) {\n      const type = attribute.type;\n      let value = snapshot.attr(key);\n      if (type) {\n        const transform = this.transformFor(type);\n        value = transform.serialize(value, attribute.options);\n      }\n\n      // if provided, use the mapping provided by `attrs` in\n      // the serializer\n      const schema = this.store.modelFor(snapshot.modelName);\n      let payloadKey = this._getMappedKey(key, schema);\n      if (payloadKey === key && this.keyForAttribute) {\n        payloadKey = this.keyForAttribute(key, 'serialize');\n      }\n      json[payloadKey] = value;\n    }\n  },\n  /**\n    `serializeBelongsTo` can be used to customize how `belongsTo`\n    properties are serialized.\n     Example\n     ```app/serializers/post.js\n    import JSONSerializer from '@ember-data/serializer/json';\n     export default class PostSerializer extends JSONSerializer {\n      serializeBelongsTo(snapshot, json, relationship) {\n        let key = relationship.name;\n        let belongsTo = snapshot.belongsTo(key);\n         key = this.keyForRelationship ? this.keyForRelationship(key, \"belongsTo\", \"serialize\") : key;\n         json[key] = !belongsTo ? null : belongsTo.record.toJSON();\n      }\n    }\n    ```\n     @method serializeBelongsTo\n    @public\n    @param {Snapshot} snapshot\n    @param {Object} json\n    @param {Object} relationship\n  */\n  serializeBelongsTo(snapshot, json, relationship) {\n    const name = relationship.name;\n    if (this._canSerialize(name)) {\n      const belongsToId = snapshot.belongsTo(name, {\n        id: true\n      });\n\n      // if provided, use the mapping provided by `attrs` in\n      // the serializer\n      const schema = this.store.modelFor(snapshot.modelName);\n      let payloadKey = this._getMappedKey(name, schema);\n      if (payloadKey === name && this.keyForRelationship) {\n        payloadKey = this.keyForRelationship(name, 'belongsTo', 'serialize');\n      }\n\n      //Need to check whether the id is there for new&async records\n      if (!belongsToId) {\n        json[payloadKey] = null;\n      } else {\n        json[payloadKey] = belongsToId;\n      }\n      if (relationship.options.polymorphic) {\n        this.serializePolymorphicType(snapshot, json, relationship);\n      }\n    }\n  },\n  /**\n   `serializeHasMany` can be used to customize how `hasMany`\n   properties are serialized.\n    Example\n    ```app/serializers/post.js\n   import JSONSerializer from '@ember-data/serializer/json';\n    export default class PostSerializer extends JSONSerializer {\n     serializeHasMany(snapshot, json, relationship) {\n       let key = relationship.name;\n       if (key === 'comments') {\n         return;\n       } else {\n         super.serializeHasMany(...arguments);\n       }\n     }\n   }\n   ```\n    @method serializeHasMany\n    @public\n   @param {Snapshot} snapshot\n   @param {Object} json\n   @param {Object} relationship\n  */\n  serializeHasMany(snapshot, json, relationship) {\n    const name = relationship.name;\n    if (this.shouldSerializeHasMany(snapshot, name, relationship)) {\n      const hasMany = snapshot.hasMany(name, {\n        ids: true\n      });\n      if (hasMany !== undefined) {\n        // if provided, use the mapping provided by `attrs` in\n        // the serializer\n        const schema = this.store.modelFor(snapshot.modelName);\n        let payloadKey = this._getMappedKey(name, schema);\n        if (payloadKey === name && this.keyForRelationship) {\n          payloadKey = this.keyForRelationship(name, 'hasMany', 'serialize');\n        }\n        json[payloadKey] = hasMany;\n        // TODO support for polymorphic manyToNone and manyToMany relationships\n      }\n    }\n  },\n  /**\n    You can use this method to customize how polymorphic objects are\n    serialized. Objects are considered to be polymorphic if\n    `{ polymorphic: true }` is pass as the second argument to the\n    `belongsTo` function.\n     Example\n     ```app/serializers/comment.js\n    import JSONSerializer from '@ember-data/serializer/json';\n     export default class CommentSerializer extends JSONSerializer {\n      serializePolymorphicType(snapshot, json, relationship) {\n        let key = relationship.name;\n        let belongsTo = snapshot.belongsTo(key);\n         key = this.keyForAttribute ? this.keyForAttribute(key, 'serialize') : key;\n         if (!belongsTo) {\n          json[key + '_type'] = null;\n        } else {\n          json[key + '_type'] = belongsTo.modelName;\n        }\n      }\n    }\n    ```\n     @method serializePolymorphicType\n    @public\n    @param {Snapshot} snapshot\n    @param {Object} json\n    @param {Object} relationship\n  */\n  serializePolymorphicType() {},\n  /**\n    `extractMeta` is used to deserialize any meta information in the\n    adapter payload. By default Ember Data expects meta information to\n    be located on the `meta` property of the payload object.\n     Example\n     ```app/serializers/post.js\n    import JSONSerializer from '@ember-data/serializer/json';\n     export default class PostSerializer extends JSONSerializer {\n      extractMeta(store, typeClass, payload) {\n        if (payload && payload.hasOwnProperty('_pagination')) {\n          let meta = payload._pagination;\n          delete payload._pagination;\n          return meta;\n        }\n      }\n    }\n    ```\n     @method extractMeta\n    @public\n    @param {Store} store\n    @param {Model} modelClass\n    @param {Object} payload\n  */\n  extractMeta(store, modelClass, payload) {\n    if (payload && payload['meta'] !== undefined) {\n      const meta = payload.meta;\n      delete payload.meta;\n      return meta;\n    }\n  },\n  /**\n    `extractErrors` is used to extract model errors when a call\n    to `Model#save` fails with an `InvalidError`. By default\n    Ember Data expects error information to be located on the `errors`\n    property of the payload object.\n     This serializer expects this `errors` object to be an Array similar\n    to the following, compliant with the https://jsonapi.org/format/#errors specification:\n     ```js\n    {\n      \"errors\": [\n        {\n          \"detail\": \"This username is already taken!\",\n          \"source\": {\n            \"pointer\": \"data/attributes/username\"\n          }\n        }, {\n          \"detail\": \"Doesn't look like a valid email.\",\n          \"source\": {\n            \"pointer\": \"data/attributes/email\"\n          }\n        }\n      ]\n    }\n    ```\n     The key `detail` provides a textual description of the problem.\n    Alternatively, the key `title` can be used for the same purpose.\n     The nested keys `source.pointer` detail which specific element\n    of the request data was invalid.\n     Note that JSON-API also allows for object-level errors to be placed\n    in an object with pointer `data`, signifying that the problem\n    cannot be traced to a specific attribute:\n     ```javascript\n    {\n      \"errors\": [\n        {\n          \"detail\": \"Some generic non property error message\",\n          \"source\": {\n            \"pointer\": \"data\"\n          }\n        }\n      ]\n    }\n    ```\n     When turn into a `Errors` object, you can read these errors\n    through the property `base`:\n     ```handlebars\n    {{#each @model.errors.base as |error|}}\n      <div class=\"error\">\n        {{error.message}}\n      </div>\n    {{/each}}\n    ```\n     Example of alternative implementation, overriding the default\n    behavior to deal with a different format of errors:\n     ```app/serializers/post.js\n    import JSONSerializer from '@ember-data/serializer/json';\n     export default class PostSerializer extends JSONSerializer {\n      extractErrors(store, typeClass, payload, id) {\n        if (payload && typeof payload === 'object' && payload._problems) {\n          payload = payload._problems;\n          this.normalizeErrors(typeClass, payload);\n        }\n        return payload;\n      }\n    }\n    ```\n     @method extractErrors\n    @public\n    @param {Store} store\n    @param {Model} typeClass\n    @param {Object} payload\n    @param {(String|Number)} id\n    @return {Object} json The deserialized errors\n  */\n  extractErrors(store, typeClass, payload, id) {\n    if (payload && typeof payload === 'object' && payload.errors) {\n      // the default assumption is that errors is already in JSON:API format\n      const extracted = {};\n      payload.errors.forEach(error => {\n        if (error.source && error.source.pointer) {\n          let key = error.source.pointer.match(SOURCE_POINTER_REGEXP);\n          if (key) {\n            key = key[2];\n          } else if (error.source.pointer.search(SOURCE_POINTER_PRIMARY_REGEXP) !== -1) {\n            key = PRIMARY_ATTRIBUTE_KEY;\n          }\n          if (key) {\n            extracted[key] = extracted[key] || [];\n            extracted[key].push(error.detail || error.title);\n          }\n        }\n      });\n\n      // if the user has an attrs hash, convert keys using it\n      this.normalizeUsingDeclaredMapping(typeClass, extracted);\n\n      // for each attr and relationship, make sure that we use\n      // the normalized key\n      typeClass.eachAttribute(name => {\n        const key = this.keyForAttribute(name, 'deserialize');\n        if (key !== name && extracted[key] !== undefined) {\n          extracted[name] = extracted[key];\n          delete extracted[key];\n        }\n      });\n      typeClass.eachRelationship(name => {\n        const key = this.keyForRelationship(name, 'deserialize');\n        if (key !== name && extracted[key] !== undefined) {\n          extracted[name] = extracted[key];\n          delete extracted[key];\n        }\n      });\n      return extracted;\n    }\n    return payload;\n  },\n  /**\n    `keyForAttribute` can be used to define rules for how to convert an\n    attribute name in your model to a key in your JSON.\n     Example\n     ```app/serializers/application.js\n    import JSONSerializer from '@ember-data/serializer/json';\n    import { underscore } from '<app-name>/utils/string-utils';\n     export default class ApplicationSerializer extends JSONSerializer {\n      keyForAttribute(attr, method) {\n        return underscore(attr).toUpperCase();\n      }\n    }\n    ```\n     @method keyForAttribute\n    @public\n    @param {String} key\n    @param {String} method\n    @return {String} normalized key\n  */\n  keyForAttribute(key, method) {\n    return key;\n  },\n  /**\n    `keyForRelationship` can be used to define a custom key when\n    serializing and deserializing relationship properties. By default\n    `JSONSerializer` does not provide an implementation of this method.\n     Example\n       ```app/serializers/post.js\n      import JSONSerializer from '@ember-data/serializer/json';\n      import { underscore } from '<app-name>/utils/string-utils';\n       export default class PostSerializer extends JSONSerializer {\n        keyForRelationship(key, relationship, method) {\n          return `rel_${underscore(key)}`;\n        }\n      }\n      ```\n     @method keyForRelationship\n    @public\n    @param {String} key\n    @param {String} typeClass\n    @param {String} method\n    @return {String} normalized key\n  */\n  keyForRelationship(key, typeClass, method) {\n    return key;\n  },\n  /**\n   `keyForLink` can be used to define a custom key when deserializing link\n   properties.\n    @method keyForLink\n    @public\n   @param {String} key\n   @param {String} kind `belongsTo` or `hasMany`\n   @return {String} normalized key\n  */\n  keyForLink(key, kind) {\n    return key;\n  },\n  // HELPERS\n\n  /**\n   @method transformFor\n   @private\n   @param {String} attributeType\n   @param {Boolean} skipAssertion\n   @return {Transform} transform\n  */\n  transformFor(attributeType, skipAssertion) {\n    const transform = (0,_ember_application__WEBPACK_IMPORTED_MODULE_0__.getOwner)(this).lookup('transform:' + attributeType);\n    ( true && !(skipAssertion || !!transform) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)(`Unable to find the transform for \\`attr('${attributeType}')\\``, skipAssertion || !!transform));\n    return transform;\n  }\n});\n\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@ember-data/serializer.677d83bc/node_modules/@ember-data/serializer/json.js?");

/***/ }),

/***/ "../rewritten-packages/@ember-data/serializer.677d83bc/node_modules/@ember-data/serializer/rest.js":
/*!*********************************************************************************************************!*\
  !*** ../rewritten-packages/@ember-data/serializer.677d83bc/node_modules/@ember-data/serializer/rest.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EmbeddedRecordsMixin: () => (/* reexport safe */ _embedded_records_mixin_HTw8JJT1__WEBPACK_IMPORTED_MODULE_3__.e),\n/* harmony export */   \"default\": () => (/* binding */ RESTSerializer)\n/* harmony export */ });\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/debug */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fdebug&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_debug__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _ember_string__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember/string */ \"../rewritten-packages/@ember/string.5601e258/node_modules/@ember/string/index.js\");\n/* harmony import */ var ember_inflector__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ember-inflector */ \"../rewritten-packages/ember-inflector.73f9432a/node_modules/ember-inflector/index.js\");\n/* harmony import */ var _embedded_records_mixin_HTw8JJT1__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./embedded-records-mixin-HTw8JJT1 */ \"../rewritten-packages/@ember-data/serializer.677d83bc/node_modules/@ember-data/serializer/embedded-records-mixin-HTw8JJT1.js\");\n/* harmony import */ var _utils_N1ERF6HN__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils-N1ERF6HN */ \"../rewritten-packages/@ember-data/serializer.677d83bc/node_modules/@ember-data/serializer/utils-N1ERF6HN.js\");\n/* harmony import */ var _json__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./json */ \"../rewritten-packages/@ember-data/serializer.677d83bc/node_modules/@ember-data/serializer/json.js\");\n\n\n\n\n\n\n/**\n * @module @ember-data/serializer/rest\n */\nfunction makeArray(value) {\n  return Array.isArray(value) ? value : [value];\n}\n\n/**\n * <blockquote style=\"margin: 1em; padding: .1em 1em .1em 1em; border-left: solid 1em #E34C32; background: #e0e0e0;\">\n  <p>\n    ⚠️ <strong>This is LEGACY documentation</strong> for a feature that is no longer encouraged to be used.\n    If starting a new app or thinking of implementing a new adapter, consider writing a\n    <a href=\"/ember-data/release/classes/%3CInterface%3E%20Handler\">Handler</a> instead to be used with the <a href=\"https://github.com/emberjs/data/tree/main/packages/request#readme\">RequestManager</a>\n  </p>\n  </blockquote>\n\n  Normally, applications will use the `RESTSerializer` by implementing\n  the `normalize` method.\n\n  This allows you to do whatever kind of munging you need and is\n  especially useful if your server is inconsistent and you need to\n  do munging differently for many different kinds of responses.\n\n  See the `normalize` documentation for more information.\n\n  ## Across the Board Normalization\n\n  There are also a number of hooks that you might find useful to define\n  across-the-board rules for your payload. These rules will be useful\n  if your server is consistent, or if you're building an adapter for\n  an infrastructure service, like Firebase, and want to encode service\n  conventions.\n\n  For example, if all of your keys are underscored and all-caps, but\n  otherwise consistent with the names you use in your models, you\n  can implement across-the-board rules for how to convert an attribute\n  name in your model to a key in your JSON.\n\n  ```app/serializers/application.js\n  import RESTSerializer from '@ember-data/serializer/rest';\n  import { underscore } from '<app-name>/utils/string-utils';\n\n  export default class ApplicationSerializer extends RESTSerializer {\n    keyForAttribute(attr, method) {\n      return underscore(attr).toUpperCase();\n    }\n  }\n  ```\n\n  You can also implement `keyForRelationship`, which takes the name\n  of the relationship as the first parameter, the kind of\n  relationship (`hasMany` or `belongsTo`) as the second parameter, and\n  the method (`serialize` or `deserialize`) as the third parameter.\n\n  @class RESTSerializer\n  @main @ember-data/serializer/rest\n  @public\n  @extends JSONSerializer\n*/\nconst RESTSerializer = _json__WEBPACK_IMPORTED_MODULE_5__[\"default\"].extend({\n  /**\n   `keyForPolymorphicType` can be used to define a custom key when\n   serializing and deserializing a polymorphic type. By default, the\n   returned key is `${key}Type`.\n    Example\n     ```app/serializers/post.js\n    import RESTSerializer from '@ember-data/serializer/rest';\n     export default class ApplicationSerializer extends RESTSerializer {\n      keyForPolymorphicType(key, relationship) {\n        let relationshipKey = this.keyForRelationship(key);\n         return 'type-' + relationshipKey;\n      }\n    }\n    ```\n    @method keyForPolymorphicType\n    @public\n   @param {String} key\n   @param {String} typeClass\n   @param {String} method\n   @return {String} normalized key\n  */\n  keyForPolymorphicType(key, typeClass, method) {\n    const relationshipKey = this.keyForRelationship(key);\n    return `${relationshipKey}Type`;\n  },\n  /**\n    Normalizes a part of the JSON payload returned by\n    the server. You should override this method, munge the hash\n    and call super if you have generic normalization to do.\n     It takes the type of the record that is being normalized\n    (as a Model class), the property where the hash was\n    originally found, and the hash to normalize.\n     For example, if you have a payload that looks like this:\n     ```js\n    {\n      \"post\": {\n        \"id\": 1,\n        \"title\": \"Rails is omakase\",\n        \"comments\": [ 1, 2 ]\n      },\n      \"comments\": [{\n        \"id\": 1,\n        \"body\": \"FIRST\"\n      }, {\n        \"id\": 2,\n        \"body\": \"Rails is unagi\"\n      }]\n    }\n    ```\n     The `normalize` method will be called three times:\n     * With `App.Post`, `\"posts\"` and `{ id: 1, title: \"Rails is omakase\", ... }`\n    * With `App.Comment`, `\"comments\"` and `{ id: 1, body: \"FIRST\" }`\n    * With `App.Comment`, `\"comments\"` and `{ id: 2, body: \"Rails is unagi\" }`\n     You can use this method, for example, to normalize underscored keys to camelized\n    or other general-purpose normalizations. You will only need to implement\n    `normalize` and manipulate the payload as desired.\n     For example, if the `IDs` under `\"comments\"` are provided as `_id` instead of\n    `id`, you can specify how to normalize just the comments:\n     ```app/serializers/post.js\n    import RESTSerializer from '@ember-data/serializer/rest';\n     export default class ApplicationSerializer extends RESTSerializer {\n      normalize(model, hash, prop) {\n        if (prop === 'comments') {\n          hash.id = hash._id;\n          delete hash._id;\n        }\n         return super.normalize(...arguments);\n      }\n    }\n    ```\n     On each call to the `normalize` method, the third parameter (`prop`) is always\n    one of the keys that were in the original payload or in the result of another\n    normalization as `normalizeResponse`.\n     @method normalize\n    @public\n    @param {Model} modelClass\n    @param {Object} resourceHash\n    @param {String} prop\n    @return {Object}\n  */\n\n  /**\n    Normalizes an array of resource payloads and returns a JSON-API Document\n    with primary data and, if any, included data as `{ data, included }`.\n     @method _normalizeArray\n    @param {Store} store\n    @param {String} modelName\n    @param {Object} arrayHash\n    @param {String} prop\n    @return {Object}\n    @private\n  */\n  _normalizeArray(store, modelName, arrayHash, prop) {\n    const documentHash = {\n      data: [],\n      included: []\n    };\n    const modelClass = store.modelFor(modelName);\n    const serializer = store.serializerFor(modelName);\n    makeArray(arrayHash).forEach(hash => {\n      const {\n        data,\n        included\n      } = this._normalizePolymorphicRecord(store, hash, prop, modelClass, serializer);\n      documentHash.data.push(data);\n      if (included) {\n        documentHash.included = documentHash.included.concat(included);\n      }\n    });\n    return documentHash;\n  },\n  _normalizePolymorphicRecord(store, hash, prop, primaryModelClass, primarySerializer) {\n    let serializer = primarySerializer;\n    let modelClass = primaryModelClass;\n    const primaryHasTypeAttribute = primaryModelClass.fields.has('type');\n    if (!primaryHasTypeAttribute && hash.type) {\n      // Support polymorphic records in async relationships\n      const modelName = this.modelNameFromPayloadKey(hash.type);\n      if (store.getSchemaDefinitionService().doesTypeExist(modelName)) {\n        serializer = store.serializerFor(modelName);\n        modelClass = store.modelFor(modelName);\n      }\n    }\n    return serializer.normalize(modelClass, hash, prop);\n  },\n  /**\n    @method _normalizeResponse\n    @param {Store} store\n    @param {Model} primaryModelClass\n    @param {Object} payload\n    @param {String|Number} id\n    @param {String} requestType\n    @param {Boolean} isSingle\n    @return {Object} JSON-API Document\n    @private\n  */\n  _normalizeResponse(store, primaryModelClass, payload, id, requestType, isSingle) {\n    const documentHash = {\n      data: null,\n      included: []\n    };\n    const meta = this.extractMeta(store, primaryModelClass, payload);\n    if (meta) {\n      ( true && !(typeof meta === 'object') && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)('The `meta` returned from `extractMeta` has to be an object, not \"' + typeof meta + '\".', typeof meta === 'object'));\n      documentHash.meta = meta;\n    }\n    const keys = Object.keys(payload);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      var prop = keys[i];\n      var modelName = prop;\n      var forcedSecondary = false;\n\n      /*\n        If you want to provide sideloaded records of the same type that the\n        primary data you can do that by prefixing the key with `_`.\n         Example\n         ```\n        {\n          users: [\n            { id: 1, title: 'Tom', manager: 3 },\n            { id: 2, title: 'Yehuda', manager: 3 }\n          ],\n          _users: [\n            { id: 3, title: 'Tomster' }\n          ]\n        }\n        ```\n         This forces `_users` to be added to `included` instead of `data`.\n       */\n      if (prop.charAt(0) === '_') {\n        forcedSecondary = true;\n        modelName = prop.substr(1);\n      }\n      var typeName = this.modelNameFromPayloadKey(modelName);\n      if (!store.getSchemaDefinitionService().doesTypeExist(typeName)) {\n        ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.warn)(this.warnMessageNoModelForKey(modelName, typeName), false, {\n          id: 'ds.serializer.model-for-key-missing'\n        }));\n        continue;\n      }\n      var isPrimary = !forcedSecondary && this.isPrimaryType(store, typeName, primaryModelClass);\n      var value = payload[prop];\n      if (value === null) {\n        continue;\n      }\n      ( true && !(!(requestType === 'queryRecord' && isPrimary && Array.isArray(value))) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)('The adapter returned an array for the primary data of a `queryRecord` response. `queryRecord` should return a single record.', !(requestType === 'queryRecord' && isPrimary && Array.isArray(value))));\n      /*\n        Support primary data as an object instead of an array.\n         Example\n         ```\n        {\n          user: { id: 1, title: 'Tom', manager: 3 }\n        }\n        ```\n       */\n      if (isPrimary && !Array.isArray(value)) {\n        const {\n          data,\n          included\n        } = this._normalizePolymorphicRecord(store, value, prop, primaryModelClass, this);\n        documentHash.data = data;\n        if (included) {\n          documentHash.included = documentHash.included.concat(included);\n        }\n        continue;\n      }\n      const {\n        data,\n        included\n      } = this._normalizeArray(store, typeName, value, prop);\n      if (included) {\n        documentHash.included = documentHash.included.concat(included);\n      }\n      if (isSingle) {\n        data.forEach(resource => {\n          /*\n            Figures out if this is the primary record or not.\n             It's either:\n             1. The record with the same ID as the original request\n            2. If it's a newly created record without an ID, the first record\n               in the array\n           */\n          const isUpdatedRecord = isPrimary && (0,_utils_N1ERF6HN__WEBPACK_IMPORTED_MODULE_4__.c)(resource.id) === id;\n          const isFirstCreatedRecord = isPrimary && !id && !documentHash.data;\n          if (isFirstCreatedRecord || isUpdatedRecord) {\n            documentHash.data = resource;\n          } else {\n            documentHash.included.push(resource);\n          }\n        });\n      } else {\n        if (isPrimary) {\n          documentHash.data = data;\n        } else {\n          if (data) {\n            documentHash.included = documentHash.included.concat(data);\n          }\n        }\n      }\n    }\n    return documentHash;\n  },\n  isPrimaryType(store, modelName, primaryModelClass) {\n    return (0,_ember_string__WEBPACK_IMPORTED_MODULE_1__.dasherize)(modelName) === primaryModelClass.modelName;\n  },\n  /**\n    This method allows you to push a payload containing top-level\n    collections of records organized per type.\n     ```js\n    {\n      \"posts\": [{\n        \"id\": \"1\",\n        \"title\": \"Rails is omakase\",\n        \"author\", \"1\",\n        \"comments\": [ \"1\" ]\n      }],\n      \"comments\": [{\n        \"id\": \"1\",\n        \"body\": \"FIRST\"\n      }],\n      \"users\": [{\n        \"id\": \"1\",\n        \"name\": \"@d2h\"\n      }]\n    }\n    ```\n     It will first normalize the payload, so you can use this to push\n    in data streaming in from your server structured the same way\n    that fetches and saves are structured.\n     @method pushPayload\n    @public\n    @param {Store} store\n    @param {Object} payload\n  */\n  pushPayload(store, payload) {\n    const documentHash = {\n      data: [],\n      included: []\n    };\n    for (var prop in payload) {\n      var modelName = this.modelNameFromPayloadKey(prop);\n      if (!store.getSchemaDefinitionService().doesTypeExist(modelName)) {\n        ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.warn)(this.warnMessageNoModelForKey(prop, modelName), false, {\n          id: 'ds.serializer.model-for-key-missing'\n        }));\n        continue;\n      }\n      var type = store.modelFor(modelName);\n      var typeSerializer = store.serializerFor(type.modelName);\n      makeArray(payload[prop]).forEach(hash => {\n        const {\n          data,\n          included\n        } = typeSerializer.normalize(type, hash, prop);\n        documentHash.data.push(data);\n        if (included) {\n          documentHash.included = documentHash.included.concat(included);\n        }\n      });\n    }\n    store.push(documentHash);\n  },\n  /**\n    This method is used to convert each JSON root key in the payload\n    into a modelName that it can use to look up the appropriate model for\n    that part of the payload.\n     For example, your server may send a model name that does not correspond with\n    the name of the model in your app. Let's take a look at an example model,\n    and an example payload:\n     ```app/models/post.js\n    import Model from '@ember-data/model';\n     export default class Post extends Model {}\n    ```\n     ```javascript\n      {\n        \"blog/post\": {\n          \"id\": \"1\n        }\n      }\n    ```\n     Ember Data is going to normalize the payload's root key for the modelName. As a result,\n    it will try to look up the \"blog/post\" model. Since we don't have a model called \"blog/post\"\n    (or a file called app/models/blog/post.js in ember-cli), Ember Data will throw an error\n    because it cannot find the \"blog/post\" model.\n     Since we want to remove this namespace, we can define a serializer for the application that will\n    remove \"blog/\" from the payload key whenver it's encountered by Ember Data:\n     ```app/serializers/application.js\n    import RESTSerializer from '@ember-data/serializer/rest';\n     export default class ApplicationSerializer extends RESTSerializer {\n      modelNameFromPayloadKey(payloadKey) {\n        if (payloadKey === 'blog/post') {\n          return super.modelNameFromPayloadKey(payloadKey.replace('blog/', ''));\n        } else {\n         return super.modelNameFromPayloadKey(payloadKey);\n        }\n      }\n    }\n    ```\n     After refreshing, Ember Data will appropriately look up the \"post\" model.\n     By default the modelName for a model is its\n    name in dasherized form. This means that a payload key like \"blogPost\" would be\n    normalized to \"blog-post\" when Ember Data looks up the model. Usually, Ember Data\n    can use the correct inflection to do this for you. Most of the time, you won't\n    need to override `modelNameFromPayloadKey` for this purpose.\n     @method modelNameFromPayloadKey\n    @public\n    @param {String} key\n    @return {String} the model's modelName\n  */\n  modelNameFromPayloadKey(key) {\n    return (0,_ember_string__WEBPACK_IMPORTED_MODULE_1__.dasherize)((0,ember_inflector__WEBPACK_IMPORTED_MODULE_2__.singularize)(key));\n  },\n  // SERIALIZE\n\n  /**\n    Called when a record is saved in order to convert the\n    record into JSON.\n     By default, it creates a JSON object with a key for\n    each attribute and belongsTo relationship.\n     For example, consider this model:\n     ```app/models/comment.js\n    import Model, { attr, belongsTo } from '@ember-data/model';\n     export default class Comment extends Model {\n      @attr title\n      @attr body\n       @belongsTo('user') author\n    }\n    ```\n     The default serialization would create a JSON object like:\n     ```js\n    {\n      \"title\": \"Rails is unagi\",\n      \"body\": \"Rails? Omakase? O_O\",\n      \"author\": 12\n    }\n    ```\n     By default, attributes are passed through as-is, unless\n    you specified an attribute type (`attr('date')`). If\n    you specify a transform, the JavaScript value will be\n    serialized when inserted into the JSON hash.\n     By default, belongs-to relationships are converted into\n    IDs when inserted into the JSON hash.\n     ## IDs\n     `serialize` takes an options hash with a single option:\n    `includeId`. If this option is `true`, `serialize` will,\n    by default include the ID in the JSON object it builds.\n     The adapter passes in `includeId: true` when serializing\n    a record for `createRecord`, but not for `updateRecord`.\n     ## Customization\n     Your server may expect a different JSON format than the\n    built-in serialization format.\n     In that case, you can implement `serialize` yourself and\n    return a JSON hash of your choosing.\n     ```app/serializers/post.js\n    import RESTSerializer from '@ember-data/serializer/rest';\n     export default class ApplicationSerializer extends RESTSerializer {\n      serialize(snapshot, options) {\n        let json = {\n          POST_TTL: snapshot.attr('title'),\n          POST_BDY: snapshot.attr('body'),\n          POST_CMS: snapshot.hasMany('comments', { ids: true })\n        };\n         if (options.includeId) {\n          json.POST_ID_ = snapshot.id;\n        }\n         return json;\n      }\n    }\n    ```\n     ## Customizing an App-Wide Serializer\n     If you want to define a serializer for your entire\n    application, you'll probably want to use `eachAttribute`\n    and `eachRelationship` on the record.\n     ```app/serializers/application.js\n    import RESTSerializer from '@ember-data/serializer/rest';\n    import { pluralize } from '<app-name>/utils/string-utils';\n     export default class ApplicationSerializer extends RESTSerializer {\n      serialize(snapshot, options) {\n        let json = {};\n         snapshot.eachAttribute(function(name) {\n          json[serverAttributeName(name)] = snapshot.attr(name);\n        });\n         snapshot.eachRelationship(function(name, relationship) {\n          if (relationship.kind === 'hasMany') {\n            json[serverHasManyName(name)] = snapshot.hasMany(name, { ids: true });\n          }\n        });\n         if (options.includeId) {\n          json.ID_ = snapshot.id;\n        }\n         return json;\n      }\n    }\n     function serverAttributeName(attribute) {\n      return attribute.underscore().toUpperCase();\n    }\n     function serverHasManyName(name) {\n      return serverAttributeName(singularize(name)) + \"_IDS\";\n    }\n    ```\n     This serializer will generate JSON that looks like this:\n     ```js\n    {\n      \"TITLE\": \"Rails is omakase\",\n      \"BODY\": \"Yep. Omakase.\",\n      \"COMMENT_IDS\": [ 1, 2, 3 ]\n    }\n    ```\n     ## Tweaking the Default JSON\n     If you just want to do some small tweaks on the default JSON,\n    you can call super first and make the tweaks on the returned\n    JSON.\n     ```app/serializers/post.js\n    import RESTSerializer from '@ember-data/serializer/rest';\n     export default class ApplicationSerializer extends RESTSerializer {\n      serialize(snapshot, options) {\n        let json = super.serialize(snapshot, options);\n         json.subject = json.title;\n        delete json.title;\n         return json;\n      }\n    }\n    ```\n     @method serialize\n    @public\n    @param {Snapshot} snapshot\n    @param {Object} options\n    @return {Object} json\n  */\n  serialize(snapshot, options) {\n    return this._super(...arguments);\n  },\n  /**\n    You can use this method to customize the root keys serialized into the JSON.\n    The hash property should be modified by reference (possibly using something like _.extend)\n    By default the REST Serializer sends the modelName of a model, which is a camelized\n    version of the name.\n     For example, your server may expect underscored root objects.\n     ```app/serializers/application.js\n    import RESTSerializer from '@ember-data/serializer/rest';\n    import { decamelize } from '<app-name>/utils/string-utils';\n     export default class ApplicationSerializer extends RESTSerializer {\n      serializeIntoHash(data, type, record, options) {\n        let root = decamelize(type.modelName);\n        data[root] = this.serialize(record, options);\n      }\n    }\n    ```\n     @method serializeIntoHash\n    @public\n    @param {Object} hash\n    @param {Model} typeClass\n    @param {Snapshot} snapshot\n    @param {Object} options\n  */\n  serializeIntoHash(hash, typeClass, snapshot, options) {\n    const normalizedRootKey = this.payloadKeyFromModelName(typeClass.modelName);\n    hash[normalizedRootKey] = this.serialize(snapshot, options);\n  },\n  /**\n    You can use `payloadKeyFromModelName` to override the root key for an outgoing\n    request. By default, the RESTSerializer returns a camelized version of the\n    model's name.\n     For a model called TacoParty, its `modelName` would be the string `taco-party`. The RESTSerializer\n    will send it to the server with `tacoParty` as the root key in the JSON payload:\n     ```js\n    {\n      \"tacoParty\": {\n        \"id\": \"1\",\n        \"location\": \"Matthew Beale's House\"\n      }\n    }\n    ```\n     For example, your server may expect dasherized root objects:\n     ```app/serializers/application.js\n    import RESTSerializer from '@ember-data/serializer/rest';\n    import { dasherize } from '<app-name>/utils/string-utils';\n     export default class ApplicationSerializer extends RESTSerializer {\n      payloadKeyFromModelName(modelName) {\n        return dasherize(modelName);\n      }\n    }\n    ```\n     Given a `TacoParty` model, calling `save` on it would produce an outgoing\n    request like:\n     ```js\n    {\n      \"taco-party\": {\n        \"id\": \"1\",\n        \"location\": \"Matthew Beale's House\"\n      }\n    }\n    ```\n     @method payloadKeyFromModelName\n    @public\n    @param {String} modelName\n    @return {String}\n  */\n  payloadKeyFromModelName(modelName) {\n    return (0,_ember_string__WEBPACK_IMPORTED_MODULE_1__.camelize)(modelName);\n  },\n  /**\n    You can use this method to customize how polymorphic objects are serialized.\n    By default the REST Serializer creates the key by appending `Type` to\n    the attribute and value from the model's camelcased model name.\n     @method serializePolymorphicType\n    @public\n    @param {Snapshot} snapshot\n    @param {Object} json\n    @param {Object} relationship\n  */\n  serializePolymorphicType(snapshot, json, relationship) {\n    const name = relationship.name;\n    const typeKey = this.keyForPolymorphicType(name, relationship.type, 'serialize');\n    const belongsTo = snapshot.belongsTo(name);\n    if (!belongsTo) {\n      json[typeKey] = null;\n    } else {\n      json[typeKey] = (0,_ember_string__WEBPACK_IMPORTED_MODULE_1__.camelize)(belongsTo.modelName);\n    }\n  },\n  /**\n    You can use this method to customize how a polymorphic relationship should\n    be extracted.\n     @method extractPolymorphicRelationship\n    @public\n    @param {Object} relationshipType\n    @param {Object} relationshipHash\n    @param {Object} relationshipOptions\n    @return {Object}\n   */\n  extractPolymorphicRelationship(relationshipType, relationshipHash, relationshipOptions) {\n    const {\n      key,\n      resourceHash,\n      relationshipMeta\n    } = relationshipOptions;\n\n    // A polymorphic belongsTo relationship can be present in the payload\n    // either in the form where the `id` and the `type` are given:\n    //\n    //   {\n    //     message: { id: 1, type: 'post' }\n    //   }\n    //\n    // or by the `id` and a `<relationship>Type` attribute:\n    //\n    //   {\n    //     message: 1,\n    //     messageType: 'post'\n    //   }\n    //\n    // The next code checks if the latter case is present and returns the\n    // corresponding JSON-API representation. The former case is handled within\n    // the base class JSONSerializer.\n    const isPolymorphic = relationshipMeta.options.polymorphic;\n    const typeProperty = this.keyForPolymorphicType(key, relationshipType, 'deserialize');\n    if (isPolymorphic && resourceHash[typeProperty] !== undefined && typeof relationshipHash !== 'object') {\n      const type = this.modelNameFromPayloadKey(resourceHash[typeProperty]);\n      return {\n        id: (0,_utils_N1ERF6HN__WEBPACK_IMPORTED_MODULE_4__.c)(relationshipHash),\n        type: type\n      };\n    }\n    return this._super(...arguments);\n  }\n});\n{\n  RESTSerializer.reopen({\n    warnMessageNoModelForKey(prop, typeKey) {\n      return 'Encountered \"' + prop + '\" in payload, but no model was found for model name \"' + typeKey + '\" (resolved model name using ' + this.constructor.toString() + '.modelNameFromPayloadKey(\"' + prop + '\"))';\n    }\n  });\n}\n\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@ember-data/serializer.677d83bc/node_modules/@ember-data/serializer/rest.js?");

/***/ }),

/***/ "../rewritten-packages/@ember-data/serializer.677d83bc/node_modules/@ember-data/serializer/string-A02hFTMo.js":
/*!********************************************************************************************************************!*\
  !*** ../rewritten-packages/@ember-data/serializer.677d83bc/node_modules/@ember-data/serializer/string-A02hFTMo.js ***!
  \********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   B: () => (/* binding */ BooleanTransform),\n/* harmony export */   D: () => (/* binding */ DateTransform),\n/* harmony export */   N: () => (/* binding */ NumberTransform),\n/* harmony export */   S: () => (/* binding */ StringTransform),\n/* harmony export */   T: () => (/* binding */ Transform)\n/* harmony export */ });\n/* harmony import */ var _ember_object__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/object */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fobject&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_object__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_object__WEBPACK_IMPORTED_MODULE_0__);\n\n\n/**\n  @module @ember-data/serializer\n*/\n\n/**\n  The `Transform` class is used to serialize and deserialize model\n  attributes when they are saved or loaded from an\n  adapter. Subclassing `Transform` is useful for creating custom\n  attributes. All subclasses of `Transform` must implement a\n  `serialize` and a `deserialize` method.\n\n  Example\n\n  ```app/transforms/temperature.js\n\n  // Converts centigrade in the JSON to fahrenheit in the app\n  export default class TemperatureTransform {\n    deserialize(serialized, options) {\n      return (serialized *  1.8) + 32;\n    }\n\n    serialize(deserialized, options) {\n      return (deserialized - 32) / 1.8;\n    }\n\n    static create() {\n      return new this();\n    }\n  }\n  ```\n\n  Usage\n\n  ```app/models/requirement.js\n  import Model, { attr } from '@ember-data/model';\n\n  export default class RequirementModel extends Model {\n    @attr('string') name;\n    @attr('temperature') temperature;\n  }\n  ```\n\n  The options passed into the `attr` function when the attribute is\n  declared on the model is also available in the transform.\n\n  ```app/models/post.js\n  import Model, { attr } from '@ember-data/model';\n\n  export default class PostModel extends Model {\n    @attr('string') title;\n    @attr('markdown', {\n      markdown: {\n        gfm: false,\n        sanitize: true\n      }\n    })\n    markdown;\n  }\n  ```\n\n  ```app/transforms/markdown.js\n  export default class MarkdownTransform {\n    serialize(deserialized, options) {\n      return deserialized.raw;\n    }\n\n    deserialize(serialized, options) {\n      let markdownOptions = options.markdown || {};\n\n      return marked(serialized, markdownOptions);\n    }\n\n    static create() {\n      return new this();\n    }\n  }\n  ```\n\n  @class Transform\n  @public\n */\n/**\n  When given a deserialized value from a record attribute this\n  method must return the serialized value.\n\n  Example\n\n  ```javascript\n  serialize(deserialized, options) {\n    return deserialized ? null : Number(deserialized);\n  }\n  ```\n\n  @method serialize\n  @public\n  @param deserialized The deserialized value\n  @param options hash of options passed to `attr`\n  @return The serialized value\n*/\n/**\n  When given a serialized value from a JSON object this method must\n  return the deserialized value for the record attribute.\n\n  Example\n\n  ```javascript\n  deserialize(serialized, options) {\n    return empty(serialized) ? null : Number(serialized);\n  }\n  ```\n\n  @method deserialize\n  @public\n  @param serialized The serialized value\n  @param options hash of options passed to `attr`\n  @return The deserialized value\n*/\n\nconst Transform = (_ember_object__WEBPACK_IMPORTED_MODULE_0___default());\n\n/**\n  @module @ember-data/serializer\n*/\n\n/**\n  The `BooleanTransform` class is used to serialize and deserialize\n  boolean attributes on Ember Data record objects. This transform is\n  used when `boolean` is passed as the type parameter to the\n  [attr](/ember-data/release/functions/@ember-data%2Fmodel/attr) function.\n\n  Usage\n\n  ```app/models/user.js\n  import Model, { attr } from '@ember-data/model';\n\n  export default class UserModel extends Model {\n    @attr('boolean') isAdmin;\n    @attr('string') name;\n    @attr('string') email;\n  }\n  ```\n\n  By default, the boolean transform only allows for values of `true` or\n  `false`. You can opt into allowing `null` values for\n  boolean attributes via `attr('boolean', { allowNull: true })`\n\n  ```app/models/user.js\n  import Model, { attr } from '@ember-data/model';\n\n  export default class UserModel extends Model {\n    @attr('string') email;\n    @attr('string') username;\n    @attr('boolean', { allowNull: true }) wantsWeeklyEmail;\n  }\n  ```\n\n  @class BooleanTransform\n  @public\n */\nclass BooleanTransform {\n  deserialize(serialized, options) {\n    if ((serialized === null || serialized === undefined) && options?.allowNull === true) {\n      return null;\n    }\n    if (typeof serialized === 'boolean') {\n      return serialized;\n    } else if (typeof serialized === 'string') {\n      return /^(true|t|1)$/i.test(serialized);\n    } else if (typeof serialized === 'number') {\n      return serialized === 1;\n    } else {\n      return false;\n    }\n  }\n  serialize(deserialized, options) {\n    if ((deserialized === null || deserialized === undefined) && options?.allowNull === true) {\n      return null;\n    }\n    return Boolean(deserialized);\n  }\n  static create() {\n    return new this();\n  }\n}\n\n/**\n  @module @ember-data/serializer\n*/\n\n/**\n The `DateTransform` class is used to serialize and deserialize\n date attributes on Ember Data record objects. This transform is used\n when `date` is passed as the type parameter to the\n [attr](/ember-data/release/functions/@ember-data%2Fmodel/attr) function. It uses the [`ISO 8601`](https://en.wikipedia.org/wiki/ISO_8601)\n standard.\n\n ```app/models/score.js\n import Model, { attr, belongsTo } from '@ember-data/model';\n\n export default class ScoreModel extends Model {\n    @attr('number') value;\n    @belongsTo('player') player;\n    @attr('date') date;\n  }\n ```\n\n @class DateTransform\n  @public\n */\n\nclass DateTransform {\n  deserialize(serialized, _options) {\n    if (typeof serialized === 'string') {\n      let offset = serialized.indexOf('+');\n      if (offset !== -1 && serialized.length - 5 === offset) {\n        offset += 3;\n        return new Date(serialized.slice(0, offset) + ':' + serialized.slice(offset));\n      }\n      return new Date(serialized);\n    } else if (typeof serialized === 'number') {\n      return new Date(serialized);\n    } else if (serialized === null || serialized === undefined) {\n      // if the value is null return null\n      // if the value is not present in the data return undefined\n      return serialized;\n    } else {\n      return null;\n    }\n  }\n  serialize(date, _options) {\n    // @ts-expect-error isNaN accepts date as it is coercible\n    if (date instanceof Date && !isNaN(date)) {\n      return date.toISOString();\n    } else {\n      return null;\n    }\n  }\n  static create() {\n    return new this();\n  }\n}\n\n/**\n  @module @ember-data/serializer\n*/\n\nfunction isNumber(value) {\n  return value === value && value !== Infinity && value !== -Infinity;\n}\n\n/**\n  The `NumberTransform` class is used to serialize and deserialize\n  numeric attributes on Ember Data record objects. This transform is\n  used when `number` is passed as the type parameter to the\n  [attr](/ember-data/release/functions/@ember-data%2Fmodel/attr) function.\n\n  Usage\n\n  ```app/models/score.js\n  import Model, { attr, belongsTo } from '@ember-data/model';\n\n  export default class ScoreModel extends Model {\n    @attr('number') value;\n    @belongsTo('player') player;\n    @attr('date') date;\n  }\n  ```\n\n  @class NumberTransform\n  @public\n */\nclass NumberTransform {\n  deserialize(serialized, _options) {\n    if (serialized === '' || serialized === null || serialized === undefined) {\n      return null;\n    } else {\n      const transformed = Number(serialized);\n      return isNumber(transformed) ? transformed : null;\n    }\n  }\n  serialize(deserialized, _options) {\n    if (deserialized === '' || deserialized === null || deserialized === undefined) {\n      return null;\n    } else {\n      const transformed = Number(deserialized);\n      return isNumber(transformed) ? transformed : null;\n    }\n  }\n  static create() {\n    return new this();\n  }\n}\n\n/**\n  @module @ember-data/serializer\n*/\n\n/**\n  The `StringTransform` class is used to serialize and deserialize\n  string attributes on Ember Data record objects. This transform is\n  used when `string` is passed as the type parameter to the\n  [attr](/ember-data/release/functions/@ember-data%2Fmodel/attr) function.\n\n  Usage\n\n  ```app/models/user.js\n  import Model, { attr, belongsTo } from '@ember-data/model';\n\n  export default class UserModel extends Model {\n    @attr('boolean') isAdmin;\n    @attr('string') name;\n    @attr('string') email;\n  }\n  ```\n\n  @class StringTransform\n  @public\n */\nclass StringTransform {\n  deserialize(serialized, _options) {\n    return !serialized && serialized !== '' ? null : String(serialized);\n  }\n  serialize(deserialized, _options) {\n    return !deserialized && deserialized !== '' ? null : String(deserialized);\n  }\n  static create() {\n    return new this();\n  }\n}\n\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@ember-data/serializer.677d83bc/node_modules/@ember-data/serializer/string-A02hFTMo.js?");

/***/ }),

/***/ "../rewritten-packages/@ember-data/serializer.677d83bc/node_modules/@ember-data/serializer/transform.js":
/*!**************************************************************************************************************!*\
  !*** ../rewritten-packages/@ember-data/serializer.677d83bc/node_modules/@ember-data/serializer/transform.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BooleanTransform: () => (/* reexport safe */ _string_A02hFTMo__WEBPACK_IMPORTED_MODULE_0__.B),\n/* harmony export */   DateTransform: () => (/* reexport safe */ _string_A02hFTMo__WEBPACK_IMPORTED_MODULE_0__.D),\n/* harmony export */   NumberTransform: () => (/* reexport safe */ _string_A02hFTMo__WEBPACK_IMPORTED_MODULE_0__.N),\n/* harmony export */   StringTransform: () => (/* reexport safe */ _string_A02hFTMo__WEBPACK_IMPORTED_MODULE_0__.S),\n/* harmony export */   \"default\": () => (/* reexport safe */ _string_A02hFTMo__WEBPACK_IMPORTED_MODULE_0__.T)\n/* harmony export */ });\n/* harmony import */ var _string_A02hFTMo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./string-A02hFTMo */ \"../rewritten-packages/@ember-data/serializer.677d83bc/node_modules/@ember-data/serializer/string-A02hFTMo.js\");\n\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@ember-data/serializer.677d83bc/node_modules/@ember-data/serializer/transform.js?");

/***/ }),

/***/ "../rewritten-packages/@ember-data/serializer.677d83bc/node_modules/@ember-data/serializer/utils-N1ERF6HN.js":
/*!*******************************************************************************************************************!*\
  !*** ../rewritten-packages/@ember-data/serializer.677d83bc/node_modules/@ember-data/serializer/utils-N1ERF6HN.js ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   c: () => (/* binding */ coerceId)\n/* harmony export */ });\nfunction coerceId(id) {\n  if (id === null || id === undefined || id === '') {\n    return null;\n  } else if (typeof id === 'string') {\n    return id;\n  } else if (typeof id === 'symbol') {\n    return id.toString();\n  } else {\n    return String(id);\n  }\n}\n\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@ember-data/serializer.677d83bc/node_modules/@ember-data/serializer/utils-N1ERF6HN.js?");

/***/ }),

/***/ "../rewritten-packages/@ember-data/store.a4360448/node_modules/@ember-data/store/-private.js":
/*!***************************************************************************************************!*\
  !*** ../rewritten-packages/@ember-data/store.a4360448/node_modules/@ember-data/store/-private.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ARRAY_SIGNAL: () => (/* reexport safe */ _cache_handler_XLbbNJdo__WEBPACK_IMPORTED_MODULE_0__.A),\n/* harmony export */   AdapterPopulatedRecordArray: () => (/* reexport safe */ _cache_handler_XLbbNJdo__WEBPACK_IMPORTED_MODULE_0__.f),\n/* harmony export */   CacheHandler: () => (/* reexport safe */ _cache_handler_XLbbNJdo__WEBPACK_IMPORTED_MODULE_0__.C),\n/* harmony export */   IdentifierArray: () => (/* reexport safe */ _cache_handler_XLbbNJdo__WEBPACK_IMPORTED_MODULE_0__.I),\n/* harmony export */   MUTATE: () => (/* reexport safe */ _cache_handler_XLbbNJdo__WEBPACK_IMPORTED_MODULE_0__.M),\n/* harmony export */   RecordArray: () => (/* reexport safe */ _cache_handler_XLbbNJdo__WEBPACK_IMPORTED_MODULE_0__.I),\n/* harmony export */   RecordArrayManager: () => (/* reexport safe */ _cache_handler_XLbbNJdo__WEBPACK_IMPORTED_MODULE_0__.R),\n/* harmony export */   SOURCE: () => (/* reexport safe */ _cache_handler_XLbbNJdo__WEBPACK_IMPORTED_MODULE_0__.g),\n/* harmony export */   Store: () => (/* reexport safe */ _cache_handler_XLbbNJdo__WEBPACK_IMPORTED_MODULE_0__.S),\n/* harmony export */   StoreMap: () => (/* reexport safe */ _cache_handler_XLbbNJdo__WEBPACK_IMPORTED_MODULE_0__.l),\n/* harmony export */   _clearCaches: () => (/* reexport safe */ _cache_handler_XLbbNJdo__WEBPACK_IMPORTED_MODULE_0__._),\n/* harmony export */   _deprecatingNormalize: () => (/* reexport safe */ _cache_handler_XLbbNJdo__WEBPACK_IMPORTED_MODULE_0__.o),\n/* harmony export */   coerceId: () => (/* reexport safe */ _cache_handler_XLbbNJdo__WEBPACK_IMPORTED_MODULE_0__.e),\n/* harmony export */   fastPush: () => (/* reexport safe */ _cache_handler_XLbbNJdo__WEBPACK_IMPORTED_MODULE_0__.h),\n/* harmony export */   isStableIdentifier: () => (/* reexport safe */ _cache_handler_XLbbNJdo__WEBPACK_IMPORTED_MODULE_0__.i),\n/* harmony export */   notifyArray: () => (/* reexport safe */ _cache_handler_XLbbNJdo__WEBPACK_IMPORTED_MODULE_0__.n),\n/* harmony export */   peekCache: () => (/* reexport safe */ _cache_handler_XLbbNJdo__WEBPACK_IMPORTED_MODULE_0__.p),\n/* harmony export */   recordIdentifierFor: () => (/* reexport safe */ _cache_handler_XLbbNJdo__WEBPACK_IMPORTED_MODULE_0__.r),\n/* harmony export */   removeRecordDataFor: () => (/* reexport safe */ _cache_handler_XLbbNJdo__WEBPACK_IMPORTED_MODULE_0__.j),\n/* harmony export */   setCacheFor: () => (/* reexport safe */ _cache_handler_XLbbNJdo__WEBPACK_IMPORTED_MODULE_0__.m),\n/* harmony export */   setIdentifierForgetMethod: () => (/* reexport safe */ _cache_handler_XLbbNJdo__WEBPACK_IMPORTED_MODULE_0__.c),\n/* harmony export */   setIdentifierGenerationMethod: () => (/* reexport safe */ _cache_handler_XLbbNJdo__WEBPACK_IMPORTED_MODULE_0__.a),\n/* harmony export */   setIdentifierResetMethod: () => (/* reexport safe */ _cache_handler_XLbbNJdo__WEBPACK_IMPORTED_MODULE_0__.d),\n/* harmony export */   setIdentifierUpdateMethod: () => (/* reexport safe */ _cache_handler_XLbbNJdo__WEBPACK_IMPORTED_MODULE_0__.b),\n/* harmony export */   setRecordIdentifier: () => (/* reexport safe */ _cache_handler_XLbbNJdo__WEBPACK_IMPORTED_MODULE_0__.k),\n/* harmony export */   storeFor: () => (/* reexport safe */ _cache_handler_XLbbNJdo__WEBPACK_IMPORTED_MODULE_0__.s)\n/* harmony export */ });\n/* harmony import */ var _cache_handler_XLbbNJdo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cache-handler-XLbbNJdo */ \"../rewritten-packages/@ember-data/store.a4360448/node_modules/@ember-data/store/cache-handler-XLbbNJdo.js\");\n\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@ember-data/store.a4360448/node_modules/@ember-data/store/-private.js?");

/***/ }),

/***/ "../rewritten-packages/@ember-data/store.a4360448/node_modules/@ember-data/store/cache-handler-XLbbNJdo.js":
/*!*****************************************************************************************************************!*\
  !*** ../rewritten-packages/@ember-data/store.a4360448/node_modules/@ember-data/store/cache-handler-XLbbNJdo.js ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   A: () => (/* binding */ ARRAY_SIGNAL),\n/* harmony export */   C: () => (/* binding */ CacheHandler),\n/* harmony export */   I: () => (/* binding */ IdentifierArray),\n/* harmony export */   M: () => (/* binding */ MUTATE),\n/* harmony export */   R: () => (/* binding */ RecordArrayManager),\n/* harmony export */   S: () => (/* binding */ Store),\n/* harmony export */   _: () => (/* binding */ _clearCaches),\n/* harmony export */   a: () => (/* binding */ setIdentifierGenerationMethod),\n/* harmony export */   b: () => (/* binding */ setIdentifierUpdateMethod),\n/* harmony export */   c: () => (/* binding */ setIdentifierForgetMethod),\n/* harmony export */   d: () => (/* binding */ setIdentifierResetMethod),\n/* harmony export */   e: () => (/* binding */ coerceId),\n/* harmony export */   f: () => (/* binding */ Collection),\n/* harmony export */   g: () => (/* binding */ SOURCE),\n/* harmony export */   h: () => (/* binding */ fastPush),\n/* harmony export */   i: () => (/* binding */ isStableIdentifier),\n/* harmony export */   j: () => (/* binding */ removeRecordDataFor),\n/* harmony export */   k: () => (/* binding */ setRecordIdentifier),\n/* harmony export */   l: () => (/* binding */ StoreMap),\n/* harmony export */   m: () => (/* binding */ setCacheFor),\n/* harmony export */   n: () => (/* binding */ notifyArray),\n/* harmony export */   o: () => (/* binding */ normalizeModelName),\n/* harmony export */   p: () => (/* binding */ peekCache),\n/* harmony export */   r: () => (/* binding */ recordIdentifierFor),\n/* harmony export */   s: () => (/* binding */ storeFor)\n/* harmony export */ });\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/debug */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fdebug&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_debug__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _ember_object__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember/object */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fobject&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_object__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_ember_object__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _warp_drive_core_types_request__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @warp-drive/core-types/request */ \"../rewritten-packages/@warp-drive/core-types.f90747f3/node_modules/@warp-drive/core-types/request.js\");\n/* harmony import */ var _warp_drive_core_types_identifier__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @warp-drive/core-types/identifier */ \"../rewritten-packages/@warp-drive/core-types.f90747f3/node_modules/@warp-drive/core-types/identifier.js\");\n/* harmony import */ var _ember_string__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ember/string */ \"../rewritten-packages/@ember/string.5601e258/node_modules/@ember/string/index.js\");\n/* harmony import */ var _ember_data_tracking_private__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ember-data/tracking/-private */ \"../rewritten-packages/@ember-data/tracking.bbb05d16/node_modules/@ember-data/tracking/-private.js\");\n/* harmony import */ var _ember_runloop__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ember/runloop */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Frunloop&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_runloop__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_ember_runloop__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _ember_data_tracking__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @ember-data/tracking */ \"../rewritten-packages/@ember-data/tracking.bbb05d16/node_modules/@ember-data/tracking/index.js\");\n\n\n\n\n\n\n\n\n\n/**\n  @module @ember-data/store\n*/\n\nfunction coerceId(id) {\n  {\n    let normalized;\n    if (id === null || id === undefined || id === '') {\n      normalized = null;\n    } else {\n      normalized = String(id);\n    }\n    ( true && !(normalized === id) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.deprecate)(`The resource id '<${typeof id}> ${String(id)} ' is not normalized. Update your application code to use '${JSON.stringify(normalized)}' instead.`, normalized === id, {\n      id: 'ember-data:deprecate-non-strict-id',\n      until: '6.0',\n      for: 'ember-data',\n      since: {\n        available: '5.3',\n        enabled: '5.3'\n      }\n    }));\n    return normalized;\n  }\n  ( true && !(id === null || typeof id === 'string' && id.length > 0) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Resource IDs must be a non-empty string or null. Received '${String(id)}'.`, id === null || typeof id === 'string' && id.length > 0));\n  return id;\n}\nfunction ensureStringId(id) {\n  let normalized = null;\n  if (typeof id === 'string') {\n    normalized = id.length > 0 ? id : null;\n  } else if (typeof id === 'number' && !isNaN(id)) {\n    normalized = String(id);\n  }\n  ( true && !(normalized !== null) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Expected id to be a string or number, received ${String(id)}`, normalized !== null));\n  return normalized;\n}\nfunction normalizeModelName(type) {\n  {\n    const result = (0,_ember_string__WEBPACK_IMPORTED_MODULE_4__.dasherize)(type);\n    ( true && !(result === type) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.deprecate)(`The resource type '${type}' is not normalized. Update your application code to use '${result}' instead of '${type}'.`, result === type, {\n      id: 'ember-data:deprecate-non-strict-types',\n      until: '6.0',\n      for: 'ember-data',\n      since: {\n        available: '5.3',\n        enabled: '5.3'\n      }\n    }));\n    return result;\n  }\n  return type;\n}\n\n/**\n  @module @ember-data/store\n*/\n\nfunction installPolyfill() {\n  const isFastBoot = typeof FastBoot !== 'undefined';\n  const CRYPTO = isFastBoot ? FastBoot.require('crypto') : window.crypto;\n  if (!CRYPTO.randomUUID) {\n    // we might be able to optimize this by requesting more bytes than we need at a time\n    const rng = function () {\n      // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n      const rnds8 = new Uint8Array(16);\n      if (!CRYPTO.getRandomValues && !isFastBoot) {\n        throw new Error(`Unable to generate bytes for UUID`);\n      }\n      return CRYPTO.getRandomValues ? CRYPTO.getRandomValues(rnds8) : CRYPTO.randomFillSync(rnds8);\n    };\n\n    /*\n     * Convert array of 16 byte values to UUID string format of the form:\n     * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n     */\n    const byteToHex = [];\n    for (let i = 0; i < 256; ++i) {\n      byteToHex[i] = (i + 0x100).toString(16).substr(1);\n    }\n    const bytesToUuid = function (buf) {\n      const bth = byteToHex;\n      // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n      return [bth[buf[0]], bth[buf[1]], bth[buf[2]], bth[buf[3]], '-', bth[buf[4]], bth[buf[5]], '-', bth[buf[6]], bth[buf[7]], '-', bth[buf[8]], bth[buf[9]], '-', bth[buf[10]], bth[buf[11]], bth[buf[12]], bth[buf[13]], bth[buf[14]], bth[buf[15]]].join('');\n    };\n    CRYPTO.randomUUID = function uuidv4() {\n      const rnds = rng();\n\n      // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n      rnds[6] = rnds[6] & 0x0f | 0x40;\n      rnds[8] = rnds[8] & 0x3f | 0x80;\n      return bytesToUuid(rnds);\n    };\n  }\n}\nfunction isResource(resource) {\n  return Boolean(resource && typeof resource === 'object');\n}\nfunction hasProp(resource, prop) {\n  return Boolean(isResource(resource) && prop in resource && typeof resource[prop] === 'string' && resource[prop].length);\n}\nfunction hasLid(resource) {\n  return hasProp(resource, 'lid');\n}\nfunction hasId(resource) {\n  return hasProp(resource, 'id') || Boolean(isResource(resource) && 'id' in resource && typeof resource.id === 'number');\n}\nfunction hasType(resource) {\n  return hasProp(resource, 'type');\n}\n\n/**\n  @module @ember-data/store\n*/\nconst IDENTIFIERS = new Set();\nconst DOCUMENTS = new Set();\nfunction isStableIdentifier(identifier) {\n  return identifier[_warp_drive_core_types_identifier__WEBPACK_IMPORTED_MODULE_3__.CACHE_OWNER] !== undefined || IDENTIFIERS.has(identifier);\n}\nfunction isDocumentIdentifier(identifier) {\n  return DOCUMENTS.has(identifier);\n}\nconst isFastBoot = typeof FastBoot !== 'undefined';\nconst _crypto = isFastBoot ? FastBoot.require('crypto') : window.crypto;\nfunction uuidv4() {\n  ( true && !(typeof _crypto.randomUUID === 'function') && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)('crypto.randomUUID needs to be avaliable. Some browsers incorrectly disallow it in insecure contexts. You maybe want to enable the polyfill: https://github.com/emberjs/data#randomuuid-polyfill', typeof _crypto.randomUUID === 'function'));\n  return _crypto.randomUUID();\n}\nfunction freeze(obj) {\n  if (typeof Object.freeze === 'function') {\n    return Object.freeze(obj);\n  }\n  return obj;\n}\n\n// type IdentifierTypeLookup = { all: Set<StableRecordIdentifier>; id: Map<string, StableRecordIdentifier> };\n// type IdentifiersByType = Map<string, IdentifierTypeLookup>;\n\nlet configuredForgetMethod;\nlet configuredGenerationMethod;\nlet configuredResetMethod;\nlet configuredUpdateMethod;\nfunction setIdentifierGenerationMethod(method) {\n  configuredGenerationMethod = method;\n}\nfunction setIdentifierUpdateMethod(method) {\n  configuredUpdateMethod = method;\n}\nfunction setIdentifierForgetMethod(method) {\n  configuredForgetMethod = method;\n}\nfunction setIdentifierResetMethod(method) {\n  configuredResetMethod = method;\n}\n\n// Map<type, Map<id, lid>>\n\nconst NEW_IDENTIFIERS = new Map();\nlet IDENTIFIER_CACHE_ID = 0;\nfunction updateTypeIdMapping(typeMap, identifier, id) {\n  let idMap = typeMap.get(identifier.type);\n  if (!idMap) {\n    idMap = new Map();\n    typeMap.set(identifier.type, idMap);\n  }\n  idMap.set(id, identifier.lid);\n}\nfunction defaultUpdateMethod(identifier, data, bucket) {\n  if (bucket === 'record') {\n    ( true && !(isStableIdentifier(identifier)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Expected identifier to be a StableRecordIdentifier`, isStableIdentifier(identifier)));\n    if (!identifier.id && hasId(data)) {\n      updateTypeIdMapping(NEW_IDENTIFIERS, identifier, data.id);\n    }\n  }\n}\nfunction defaultKeyInfoMethod(resource, known) {\n  // TODO RFC something to make this configurable\n  const id = hasId(resource) ? coerceId(resource.id) : null;\n  const type = hasType(resource) ? normalizeModelName(resource.type) : known ? known.type : null;\n  ( true && !(type) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Expected keyInfoForResource to provide a type for the resource`, type));\n  return {\n    type,\n    id\n  };\n}\nfunction defaultGenerationMethod(data, bucket) {\n  if (bucket === 'record') {\n    if (hasLid(data)) {\n      return data.lid;\n    }\n    ( true && !(hasType(data)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Cannot generate an identifier for a resource without a type`, hasType(data)));\n    if (hasId(data)) {\n      const type = normalizeModelName(data.type);\n      const lid = NEW_IDENTIFIERS.get(type)?.get(data.id);\n      return lid || `@lid:${type}-${data.id}`;\n    }\n    return uuidv4();\n  } else if (bucket === 'document') {\n    if (!data.url) {\n      return null;\n    }\n    if (!data.method || data.method.toUpperCase() === 'GET') {\n      return data.url;\n    }\n    return null;\n  }\n  ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Unknown bucket ${bucket}`, false));\n}\nfunction defaultEmptyCallback(...args) {}\nfunction defaultMergeMethod(a, _b, _c) {\n  return a;\n}\nlet DEBUG_MAP;\n{\n  DEBUG_MAP = new WeakMap();\n}\n\n/**\n * Each instance of {Store} receives a unique instance of a IdentifierCache.\n *\n * This cache is responsible for assigning or retrieving the unique identify\n * for arbitrary resource data encountered by the store. Data representing\n * a unique resource or record should always be represented by the same\n * identifier.\n *\n * It can be configured by consuming applications.\n *\n * @class IdentifierCache\n   @public\n */\nclass IdentifierCache {\n  constructor() {\n    // we cache the user configuredGenerationMethod at init because it must\n    // be configured prior and is not allowed to be changed\n    this._generate = configuredGenerationMethod || defaultGenerationMethod;\n    this._update = configuredUpdateMethod || defaultUpdateMethod;\n    this._forget = configuredForgetMethod || defaultEmptyCallback;\n    this._reset = configuredResetMethod || defaultEmptyCallback;\n    this._merge = defaultMergeMethod;\n    this._keyInfoForResource = defaultKeyInfoMethod;\n    this._isDefaultConfig = !configuredGenerationMethod;\n    this._id = IDENTIFIER_CACHE_ID++;\n    this._cache = {\n      resources: new Map(),\n      resourcesByType: Object.create(null),\n      documents: new Map(),\n      polymorphicLidBackMap: new Map()\n    };\n  }\n\n  /**\n   * Internal hook to allow management of merge conflicts with identifiers.\n   *\n   * we allow late binding of this private internal merge so that\n   * the cache can insert itself here to handle elimination of duplicates\n   *\n   * @method __configureMerge\n   * @private\n   */\n  __configureMerge(method) {\n    this._merge = method || defaultMergeMethod;\n  }\n  upgradeIdentifier(resource) {\n    return this._getRecordIdentifier(resource, 2);\n  }\n\n  /**\n   * @method _getRecordIdentifier\n   * @private\n   */\n\n  _getRecordIdentifier(resource, shouldGenerate) {\n    // short circuit if we're already the stable version\n    if (isStableIdentifier(resource)) {\n      {\n        // TODO should we instead just treat this case as a new generation skipping the short circuit?\n        if (!this._cache.resources.has(resource.lid) || this._cache.resources.get(resource.lid) !== resource) {\n          throw new Error(`The supplied identifier ${JSON.stringify(resource)} does not belong to this store instance`);\n        }\n      }\n      return resource;\n    }\n\n    // the resource is unknown, ask the application to identify this data for us\n    const lid = this._generate(resource, 'record');\n    let identifier = /*#__NOINLINE__*/getIdentifierFromLid(this._cache, lid, resource);\n    if (identifier !== null) {\n      return identifier;\n    }\n    if (shouldGenerate === 0) {\n      return;\n    }\n\n    // if we still don't have an identifier, time to generate one\n    if (shouldGenerate === 2) {\n      resource.lid = lid;\n      resource[_warp_drive_core_types_identifier__WEBPACK_IMPORTED_MODULE_3__.CACHE_OWNER] = this._id;\n      identifier = /*#__NOINLINE__*/makeStableRecordIdentifier(resource, 'record', false);\n    } else {\n      // we lie a bit here as a memory optimization\n      const keyInfo = this._keyInfoForResource(resource, null);\n      keyInfo.lid = lid;\n      keyInfo[_warp_drive_core_types_identifier__WEBPACK_IMPORTED_MODULE_3__.CACHE_OWNER] = this._id;\n      identifier = /*#__NOINLINE__*/makeStableRecordIdentifier(keyInfo, 'record', false);\n    }\n    addResourceToCache(this._cache, identifier);\n    return identifier;\n  }\n\n  /**\n   * allows us to peek without generating when needed\n   * useful for the \"create\" case when we need to see if\n   * we are accidentally overwritting something\n   *\n   * @method peekRecordIdentifier\n   * @param resource\n   * @return {StableRecordIdentifier | undefined}\n   * @private\n   */\n  peekRecordIdentifier(resource) {\n    return this._getRecordIdentifier(resource, 0);\n  }\n\n  /**\n    Returns the DocumentIdentifier for the given Request, creates one if it does not yet exist.\n    Returns `null` if the request does not have a `cacheKey` or `url`.\n     @method getOrCreateDocumentIdentifier\n    @param request\n    @return {StableDocumentIdentifier | null}\n    @public\n  */\n  getOrCreateDocumentIdentifier(request) {\n    let cacheKey = request.cacheOptions?.key;\n    if (!cacheKey) {\n      cacheKey = this._generate(request, 'document');\n    }\n    if (!cacheKey) {\n      return null;\n    }\n    let identifier = this._cache.documents.get(cacheKey);\n    if (identifier === undefined) {\n      identifier = {\n        lid: cacheKey\n      };\n      {\n        Object.freeze(identifier);\n      }\n      DOCUMENTS.add(identifier);\n      this._cache.documents.set(cacheKey, identifier);\n    }\n    return identifier;\n  }\n\n  /**\n    Returns the Identifier for the given Resource, creates one if it does not yet exist.\n     Specifically this means that we:\n     - validate the `id` `type` and `lid` combo against known identifiers\n    - return an object with an `lid` that is stable (repeated calls with the same\n      `id` + `type` or `lid` will return the same `lid` value)\n    - this referential stability of the object itself is guaranteed\n     @method getOrCreateRecordIdentifier\n    @param resource\n    @return {StableRecordIdentifier}\n    @public\n  */\n  getOrCreateRecordIdentifier(resource) {\n    return this._getRecordIdentifier(resource, 1);\n  }\n\n  /**\n   Returns a new Identifier for the supplied data. Call this method to generate\n   an identifier when a new resource is being created local to the client and\n   potentially does not have an `id`.\n    Delegates generation to the user supplied `GenerateMethod` if one has been provided\n   with the signature `generateMethod({ type }, 'record')`.\n    @method createIdentifierForNewRecord\n   @param data\n   @return {StableRecordIdentifier}\n   @public\n  */\n  createIdentifierForNewRecord(data) {\n    const newLid = this._generate(data, 'record');\n    const identifier = /*#__NOINLINE__*/makeStableRecordIdentifier({\n      id: data.id || null,\n      type: data.type,\n      lid: newLid,\n      [_warp_drive_core_types_identifier__WEBPACK_IMPORTED_MODULE_3__.CACHE_OWNER]: this._id\n    }, 'record', true);\n\n    // populate our unique table\n    {\n      if (this._cache.resources.has(identifier.lid)) {\n        throw new Error(`The lid generated for the new record is not unique as it matches an existing identifier`);\n      }\n    }\n\n    /*#__NOINLINE__*/\n    addResourceToCache(this._cache, identifier);\n    return identifier;\n  }\n\n  /**\n   Provides the opportunity to update secondary lookup tables for existing identifiers\n   Called after an identifier created with `createIdentifierForNewRecord` has been\n   committed.\n    Assigned `id` to an `Identifier` if `id` has not previously existed; however,\n   attempting to change the `id` or calling update without providing an `id` when\n   one is missing will throw an error.\n     - sets `id` (if `id` was previously `null`)\n    - `lid` and `type` MUST NOT be altered post creation\n     If a merge occurs, it is possible the returned identifier does not match the originally\n    provided identifier. In this case the abandoned identifier will go through the usual\n    `forgetRecordIdentifier` codepaths.\n     @method updateRecordIdentifier\n    @param identifierObject\n    @param data\n    @return {StableRecordIdentifier}\n    @public\n  */\n  updateRecordIdentifier(identifierObject, data) {\n    let identifier = this.getOrCreateRecordIdentifier(identifierObject);\n    const keyInfo = this._keyInfoForResource(data, identifier);\n    let existingIdentifier = /*#__NOINLINE__*/detectMerge(this._cache, keyInfo, identifier, data);\n    const hadLid = hasLid(data);\n    if (!existingIdentifier) {\n      // If the incoming type does not match the identifier type, we need to create an identifier for the incoming\n      // data so we can merge the incoming data with the existing identifier, see #7325 and #7363\n      if (identifier.type !== keyInfo.type) {\n        if (hadLid) {\n          // Strip the lid to ensure we force a new identifier creation\n          delete data.lid;\n        }\n        existingIdentifier = this.getOrCreateRecordIdentifier(data);\n      }\n    }\n    if (existingIdentifier) {\n      const generatedIdentifier = identifier;\n      identifier = this._mergeRecordIdentifiers(keyInfo, generatedIdentifier, existingIdentifier, data);\n\n      // make sure that the `lid` on the data we are processing matches the lid we kept\n      if (hadLid) {\n        data.lid = identifier.lid;\n      }\n    }\n    const id = identifier.id;\n    /*#__NOINLINE__*/\n    performRecordIdentifierUpdate(identifier, keyInfo, data, this._update);\n    const newId = identifier.id;\n\n    // add to our own secondary lookup table\n    if (id !== newId && newId !== null) {\n      const typeSet = this._cache.resourcesByType[identifier.type];\n      ( true && !(typeSet) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Expected to find a typeSet for ${identifier.type}`, typeSet));\n      typeSet.id.set(newId, identifier);\n      if (id !== null) {\n        typeSet.id.delete(id);\n      }\n    }\n    return identifier;\n  }\n\n  /**\n   * @method _mergeRecordIdentifiers\n   * @private\n   */\n  _mergeRecordIdentifiers(keyInfo, identifier, existingIdentifier, data) {\n    ( true && !(hasId(keyInfo)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Expected keyInfo to contain an id`, hasId(keyInfo))); // delegate determining which identifier to keep to the configured MergeMethod\n    const kept = this._merge(identifier, existingIdentifier, data);\n    const abandoned = kept === identifier ? existingIdentifier : identifier;\n\n    // get any backreferences before forgetting this identifier, as it will be removed from the cache\n    // and we will no longer be able to find them\n    const abandonedBackReferences = this._cache.polymorphicLidBackMap.get(abandoned.lid);\n    // delete the backreferences for the abandoned identifier so that forgetRecordIdentifier\n    // does not try to remove them.\n    if (abandonedBackReferences) this._cache.polymorphicLidBackMap.delete(abandoned.lid);\n\n    // cleanup the identifier we no longer need\n    this.forgetRecordIdentifier(abandoned);\n\n    // ensure a secondary cache entry for the original lid for the abandoned identifier\n    this._cache.resources.set(abandoned.lid, kept);\n\n    // backReferences let us know which other identifiers are pointing at this identifier\n    // so we can delete them later if we forget this identifier\n    const keptBackReferences = this._cache.polymorphicLidBackMap.get(kept.lid) ?? [];\n    keptBackReferences.push(abandoned.lid);\n\n    // update the backreferences from the abandoned identifier to be for the kept identifier\n    if (abandonedBackReferences) {\n      abandonedBackReferences.forEach(lid => {\n        keptBackReferences.push(lid);\n        this._cache.resources.set(lid, kept);\n      });\n    }\n    this._cache.polymorphicLidBackMap.set(kept.lid, keptBackReferences);\n    return kept;\n  }\n\n  /**\n   Provides the opportunity to eliminate an identifier from secondary lookup tables\n   as well as eliminates it from ember-data's own lookup tables and book keeping.\n    Useful when a record has been deleted and the deletion has been persisted and\n   we do not care about the record anymore. Especially useful when an `id` of a\n   deleted record might be reused later for a new record.\n    @method forgetRecordIdentifier\n   @param identifierObject\n   @public\n  */\n  forgetRecordIdentifier(identifierObject) {\n    const identifier = this.getOrCreateRecordIdentifier(identifierObject);\n    const typeSet = this._cache.resourcesByType[identifier.type];\n    ( true && !(typeSet) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Expected to find a typeSet for ${identifier.type}`, typeSet));\n    if (identifier.id !== null) {\n      typeSet.id.delete(identifier.id);\n    }\n    this._cache.resources.delete(identifier.lid);\n    typeSet.lid.delete(identifier.lid);\n    const backReferences = this._cache.polymorphicLidBackMap.get(identifier.lid);\n    if (backReferences) {\n      backReferences.forEach(lid => {\n        this._cache.resources.delete(lid);\n      });\n      this._cache.polymorphicLidBackMap.delete(identifier.lid);\n    }\n    {\n      identifier[_warp_drive_core_types_identifier__WEBPACK_IMPORTED_MODULE_3__.DEBUG_STALE_CACHE_OWNER] = identifier[_warp_drive_core_types_identifier__WEBPACK_IMPORTED_MODULE_3__.CACHE_OWNER];\n    }\n    identifier[_warp_drive_core_types_identifier__WEBPACK_IMPORTED_MODULE_3__.CACHE_OWNER] = undefined;\n    IDENTIFIERS.delete(identifier);\n    this._forget(identifier, 'record');\n  }\n  destroy() {\n    NEW_IDENTIFIERS.clear();\n    this._cache.documents.forEach(identifier => {\n      DOCUMENTS.delete(identifier);\n    });\n    this._reset();\n  }\n}\nfunction makeStableRecordIdentifier(recordIdentifier, bucket, clientOriginated) {\n  IDENTIFIERS.add(recordIdentifier);\n  {\n    // we enforce immutability in dev\n    //  but preserve our ability to do controlled updates to the reference\n    let wrapper = {\n      get lid() {\n        return recordIdentifier.lid;\n      },\n      get id() {\n        return recordIdentifier.id;\n      },\n      get type() {\n        return recordIdentifier.type;\n      },\n      get [_warp_drive_core_types_identifier__WEBPACK_IMPORTED_MODULE_3__.CACHE_OWNER]() {\n        return recordIdentifier[_warp_drive_core_types_identifier__WEBPACK_IMPORTED_MODULE_3__.CACHE_OWNER];\n      },\n      set [_warp_drive_core_types_identifier__WEBPACK_IMPORTED_MODULE_3__.CACHE_OWNER](value) {\n        recordIdentifier[_warp_drive_core_types_identifier__WEBPACK_IMPORTED_MODULE_3__.CACHE_OWNER] = value;\n      },\n      get [_warp_drive_core_types_identifier__WEBPACK_IMPORTED_MODULE_3__.DEBUG_STALE_CACHE_OWNER]() {\n        return recordIdentifier[_warp_drive_core_types_identifier__WEBPACK_IMPORTED_MODULE_3__.DEBUG_STALE_CACHE_OWNER];\n      },\n      set [_warp_drive_core_types_identifier__WEBPACK_IMPORTED_MODULE_3__.DEBUG_STALE_CACHE_OWNER](value) {\n        recordIdentifier[_warp_drive_core_types_identifier__WEBPACK_IMPORTED_MODULE_3__.DEBUG_STALE_CACHE_OWNER] = value;\n      }\n    };\n    Object.defineProperty(wrapper, 'toString', {\n      enumerable: false,\n      value: () => {\n        const {\n          type,\n          id,\n          lid\n        } = recordIdentifier;\n        return `${clientOriginated ? '[CLIENT_ORIGINATED] ' : ''}${String(type)}:${String(id)} (${lid})`;\n      }\n    });\n    Object.defineProperty(wrapper, 'toJSON', {\n      enumerable: false,\n      value: () => {\n        const {\n          type,\n          id,\n          lid\n        } = recordIdentifier;\n        return {\n          type,\n          id,\n          lid\n        };\n      }\n    });\n    wrapper[_warp_drive_core_types_identifier__WEBPACK_IMPORTED_MODULE_3__.DEBUG_CLIENT_ORIGINATED] = clientOriginated;\n    wrapper[_warp_drive_core_types_identifier__WEBPACK_IMPORTED_MODULE_3__.DEBUG_IDENTIFIER_BUCKET] = bucket;\n    IDENTIFIERS.add(wrapper);\n    DEBUG_MAP.set(wrapper, recordIdentifier);\n    wrapper = freeze(wrapper);\n    return wrapper;\n  }\n  return recordIdentifier;\n}\nfunction performRecordIdentifierUpdate(identifier, keyInfo, data, updateFn) {\n  {\n    const {\n      id,\n      type\n    } = keyInfo;\n\n    // get the mutable instance behind our proxy wrapper\n    const wrapper = identifier;\n    identifier = DEBUG_MAP.get(wrapper);\n    if (hasLid(data)) {\n      const lid = data.lid;\n      if (lid !== identifier.lid) {\n        throw new Error(`The 'lid' for a RecordIdentifier cannot be updated once it has been created. Attempted to set lid for '${wrapper.lid}' to '${lid}'.`);\n      }\n    }\n    if (id && identifier.id !== null && identifier.id !== id) {\n      // here we warn and ignore, as this may be a mistake, but we allow the user\n      // to have multiple cache-keys pointing at a single lid so we cannot error\n      ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.warn)(`The 'id' for a RecordIdentifier should not be updated once it has been set. Attempted to set id for '${wrapper.lid}' to '${id}'.`, false, {\n        id: 'ember-data:multiple-ids-for-identifier'\n      }));\n    }\n\n    // TODO consider just ignoring here to allow flexible polymorphic support\n    if (type && type !== identifier.type) {\n      throw new Error(`The 'type' for a RecordIdentifier cannot be updated once it has been set. Attempted to set type for '${wrapper.lid}' to '${type}'.`);\n    }\n    updateFn(wrapper, data, 'record');\n  }\n\n  // upgrade the ID, this is a \"one time only\" ability\n  // for the multiple-cache-key scenario we \"could\"\n  // use a heuristic to guess the best id for display\n  // (usually when `data.id` is available and `data.attributes` is not)\n  if (data.id !== undefined) {\n    identifier.id = coerceId(data.id);\n  }\n}\nfunction detectMerge(cache, keyInfo, identifier, data) {\n  const newId = keyInfo.id;\n  const {\n    id,\n    type,\n    lid\n  } = identifier;\n  const typeSet = cache.resourcesByType[identifier.type];\n\n  // if the IDs are present but do not match\n  // then check if we have an existing identifier\n  // for the newer ID.\n  if (id !== null && id !== newId && newId !== null) {\n    const existingIdentifier = typeSet && typeSet.id.get(newId);\n    return existingIdentifier !== undefined ? existingIdentifier : false;\n  } else {\n    const newType = keyInfo.type;\n\n    // If the ids and type are the same but lid is not the same, we should trigger a merge of the identifiers\n    // we trigger a merge of the identifiers\n    // though probably we should just throw an error here\n    if (id !== null && id === newId && newType === type && hasLid(data) && data.lid !== lid) {\n      return getIdentifierFromLid(cache, data.lid, data) || false;\n\n      // If the lids are the same, and ids are the same, but types are different we should trigger a merge of the identifiers\n    } else if (id !== null && id === newId && newType && newType !== type && hasLid(data) && data.lid === lid) {\n      const newTypeSet = cache.resourcesByType[newType];\n      const existingIdentifier = newTypeSet && newTypeSet.id.get(newId);\n      return existingIdentifier !== undefined ? existingIdentifier : false;\n    }\n  }\n  return false;\n}\nfunction getIdentifierFromLid(cache, lid, resource) {\n  const identifier = cache.resources.get(lid);\n  return identifier || null;\n}\nfunction addResourceToCache(cache, identifier) {\n  cache.resources.set(identifier.lid, identifier);\n  let typeSet = cache.resourcesByType[identifier.type];\n  if (!typeSet) {\n    typeSet = {\n      lid: new Map(),\n      id: new Map()\n    };\n    cache.resourcesByType[identifier.type] = typeSet;\n  }\n  typeSet.lid.set(identifier.lid, identifier);\n  if (identifier.id) {\n    typeSet.id.set(identifier.id, identifier);\n  }\n}\n\n/**\n  @module @ember-data/store\n*/\n\n/**\n  @module @ember-data/store\n*/\n\n/**\n   A `RecordReference` is a low-level API that allows users and\n   addon authors to perform meta-operations on a record.\n\n   @class RecordReference\n   @public\n*/\nclass RecordReference {\n  constructor(store, identifier) {\n    // unsubscribe token given to us by the notification manager\n    this.___token = void 0;\n    this.___identifier = void 0;\n    this.store = store;\n    this.___identifier = identifier;\n    this.___token = store.notifications.subscribe(identifier, (_, bucket, notifiedKey) => {\n      if (bucket === 'identity' || bucket === 'attributes' && notifiedKey === 'id') {\n        this._ref++;\n      }\n    });\n  }\n  destroy() {\n    this.store.notifications.unsubscribe(this.___token);\n  }\n  get type() {\n    return this.identifier().type;\n  }\n\n  /**\n     The `id` of the record that this reference refers to.\n      Together, the `type` and `id` properties form a composite key for\n     the identity map.\n      Example\n      ```javascript\n     let userRef = store.getReference('user', 1);\n      userRef.id(); // '1'\n     ```\n      @method id\n    @public\n     @return {String} The id of the record.\n  */\n  id() {\n    this._ref; // consume the tracked prop\n    return this.___identifier.id;\n  }\n\n  /**\n     The `identifier` of the record that this reference refers to.\n      Together, the `type` and `id` properties form a composite key for\n     the identity map.\n      Example\n      ```javascript\n     let userRef = store.getReference('user', 1);\n      userRef.identifier(); // '1'\n     ```\n      @method identifier\n    @public\n     @return {String} The identifier of the record.\n  */\n  identifier() {\n    return this.___identifier;\n  }\n\n  /**\n     How the reference will be looked up when it is loaded. Currently\n     this always returns `identity` to signify that a record will be\n     loaded by its `type` and `id`.\n      Example\n      ```javascript\n     const userRef = store.getReference('user', 1);\n      userRef.remoteType(); // 'identity'\n     ```\n      @method remoteType\n     @public\n     @return {String} 'identity'\n  */\n  remoteType() {\n    return 'identity';\n  }\n\n  /**\n    This API allows you to provide a reference with new data. The\n    simplest usage of this API is similar to `store.push`: you provide a\n    normalized hash of data and the object represented by the reference\n    will update.\n     If you pass a promise to `push`, Ember Data will not ask the adapter\n    for the data if another attempt to fetch it is made in the\n    interim. When the promise resolves, the underlying object is updated\n    with the new data, and the promise returned by *this function* is resolved\n    with that object.\n     For example, `recordReference.push(promise)` will be resolved with a\n    record.\n      Example\n      ```javascript\n     let userRef = store.getReference('user', 1);\n      // provide data for reference\n     userRef.push({\n       data: {\n         id: \"1\",\n         type: \"user\",\n         attributes: {\n           username: \"@user\"\n         }\n       }\n     }).then(function(user) {\n       userRef.value() === user;\n     });\n     ```\n     @method push\n    @public\n    @param objectOrPromise a JSON:API ResourceDocument or a promise resolving to one\n    @return a promise for the value (record or relationship)\n  */\n  push(objectOrPromise) {\n    // TODO @deprecate pushing unresolved payloads\n    return Promise.resolve(objectOrPromise).then(data => {\n      return this.store.push(data);\n    });\n  }\n\n  /**\n    If the entity referred to by the reference is already loaded, it is\n    present as `reference.value`. Otherwise the value returned by this function\n    is `null`.\n      Example\n      ```javascript\n     let userRef = store.getReference('user', 1);\n      userRef.value(); // user\n     ```\n      @method value\n    @public\n     @return {Model} the record for this RecordReference\n  */\n  value() {\n    return this.store.peekRecord(this.___identifier);\n  }\n\n  /**\n     Triggers a fetch for the backing entity based on its `remoteType`\n     (see `remoteType` definitions per reference type).\n      Example\n      ```javascript\n     let userRef = store.getReference('user', 1);\n      // load user (via store.find)\n     userRef.load().then(...)\n     ```\n      @method load\n    @public\n     @return {Promise<record>} the record for this RecordReference\n  */\n  load() {\n    const id = this.id();\n    if (id !== null) {\n      return this.store.findRecord(this.type, id);\n    }\n    ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Unable to fetch record of type ${this.type} without an id`));\n  }\n\n  /**\n     Reloads the record if it is already loaded. If the record is not\n     loaded it will load the record via `store.findRecord`\n      Example\n      ```javascript\n     let userRef = store.getReference('user', 1);\n      // or trigger a reload\n     userRef.reload().then(...)\n     ```\n      @method reload\n    @public\n     @return {Promise<record>} the record for this RecordReference\n  */\n  reload() {\n    const id = this.id();\n    if (id !== null) {\n      return this.store.findRecord(this.type, id, {\n        reload: true\n      });\n    }\n    ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Unable to fetch record of type ${this.type} without an id`));\n  }\n}\n(0,_ember_data_tracking_private__WEBPACK_IMPORTED_MODULE_5__.defineSignal)(RecordReference.prototype, '_ref');\n\n/**\n  @module @ember-data/store\n*/\n\nclass CacheCapabilitiesManager {\n  constructor(_store) {\n    this._store = _store;\n    this._willNotify = false;\n    this._pendingNotifies = new Map();\n  }\n  get identifierCache() {\n    return this._store.identifierCache;\n  }\n  _scheduleNotification(identifier, key) {\n    let pending = this._pendingNotifies.get(identifier);\n    if (!pending) {\n      pending = new Set();\n      this._pendingNotifies.set(identifier, pending);\n    }\n    pending.add(key);\n    if (this._willNotify === true) {\n      return;\n    }\n    this._willNotify = true;\n    // it's possible a cache adhoc notifies us,\n    // in which case we sync flush\n    if (this._store._cbs) {\n      this._store._schedule('notify', () => this._flushNotifications());\n    } else {\n      // TODO @runspired determine if relationship mutations should schedule\n      // into join/run vs immediate flush\n      this._flushNotifications();\n    }\n  }\n  _flushNotifications() {\n    if (this._willNotify === false) {\n      return;\n    }\n    const pending = this._pendingNotifies;\n    this._pendingNotifies = new Map();\n    this._willNotify = false;\n    pending.forEach((set, identifier) => {\n      set.forEach(key => {\n        this._store.notifications.notify(identifier, 'relationships', key);\n      });\n    });\n  }\n  notifyChange(identifier, namespace, key) {\n    ( true && !(isStableIdentifier(identifier) || isDocumentIdentifier(identifier)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Expected a stable identifier`, isStableIdentifier(identifier) || isDocumentIdentifier(identifier))); // TODO do we still get value from this?\n    if (namespace === 'relationships' && key) {\n      this._scheduleNotification(identifier, key);\n      return;\n    }\n\n    // @ts-expect-error\n    this._store.notifications.notify(identifier, namespace, key);\n  }\n  getSchemaDefinitionService() {\n    return this._store.getSchemaDefinitionService();\n  }\n  get schema() {\n    return this._store.schema;\n  }\n  setRecordId(identifier, id) {\n    ( true && !(isStableIdentifier(identifier)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Expected a stable identifier`, isStableIdentifier(identifier)));\n    this._store._instanceCache.setRecordId(identifier, id);\n  }\n  hasRecord(identifier) {\n    return Boolean(this._store._instanceCache.peek(identifier));\n  }\n  disconnectRecord(identifier) {\n    ( true && !(isStableIdentifier(identifier)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Expected a stable identifier`, isStableIdentifier(identifier)));\n    this._store._instanceCache.disconnect(identifier);\n    this._pendingNotifies.delete(identifier);\n  }\n}\n\n/*\n * Returns the Cache instance associated with a given\n * Model or Identifier\n */\n\nconst CacheForIdentifierCache = new Map();\nfunction setCacheFor(identifier, cache) {\n  ( true && !(!CacheForIdentifierCache.has(identifier) || CacheForIdentifierCache.get(identifier) === cache) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Illegal set of identifier`, !CacheForIdentifierCache.has(identifier) || CacheForIdentifierCache.get(identifier) === cache));\n  CacheForIdentifierCache.set(identifier, cache);\n}\nfunction removeRecordDataFor(identifier) {\n  CacheForIdentifierCache.delete(identifier);\n}\nfunction peekCache(instance) {\n  if (CacheForIdentifierCache.has(instance)) {\n    return CacheForIdentifierCache.get(instance);\n  }\n  return null;\n}\nfunction isDestroyable(record) {\n  return Boolean(record && typeof record === 'object' && typeof record.destroy === 'function');\n}\n\n/**\n  @module @ember-data/store\n*/\n\nconst RecordCache = new Map();\nfunction peekRecordIdentifier(record) {\n  return RecordCache.get(record);\n}\n\n/**\n  Retrieves the unique referentially-stable [RecordIdentifier](/ember-data/release/classes/StableRecordIdentifier)\n  assigned to the given record instance.\n  ```js\n  import { recordIdentifierFor } from \"@ember-data/store\";\n  // ... gain access to a record, for instance with peekRecord or findRecord\n  const record = store.peekRecord(\"user\", \"1\");\n  // get the identifier for the record (see docs for StableRecordIdentifier)\n  const identifier = recordIdentifierFor(record);\n  // access the identifier's properties.\n  const { id, type, lid } = identifier;\n  ```\n  @method recordIdentifierFor\n  @public\n  @static\n  @for @ember-data/store\n  @param {Object} record a record instance previously obstained from the store.\n  @return {StableRecordIdentifier}\n */\nfunction recordIdentifierFor(record) {\n  ( true && !(RecordCache.has(record)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`${String(record)} is not a record instantiated by @ember-data/store`, RecordCache.has(record)));\n  return RecordCache.get(record);\n}\nfunction setRecordIdentifier(record, identifier) {\n  {\n    if (RecordCache.has(record) && RecordCache.get(record) !== identifier) {\n      throw new Error(`${String(record)} was already assigned an identifier`);\n    }\n  }\n\n  /*\n  It would be nice to do a reverse check here that an identifier has not\n  previously been assigned a record; however, unload + rematerialization\n  prevents us from having a great way of doing so when CustomRecordClasses\n  don't necessarily give us access to a `isDestroyed` for dematerialized\n  instance.\n  */\n\n  RecordCache.set(record, identifier);\n}\nconst StoreMap = new Map();\nfunction storeFor(record) {\n  const store = StoreMap.get(record);\n  ( true && !(store) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`A record in a disconnected state cannot utilize the store. This typically means the record has been destroyed, most commonly by unloading it.`, store));\n  return store;\n}\nclass InstanceCache {\n  constructor(store) {\n    this.__instances = {\n      record: new Map(),\n      reference: new WeakMap()\n    };\n    this.store = store;\n    this._storeWrapper = new CacheCapabilitiesManager(this.store);\n    store.identifierCache.__configureMerge((identifier, matchedIdentifier, resourceData) => {\n      let keptIdentifier = identifier;\n      if (identifier.id !== matchedIdentifier.id) {\n        // @ts-expect-error TODO this needs to be fixed\n        keptIdentifier = 'id' in resourceData && identifier.id === resourceData.id ? identifier : matchedIdentifier;\n      } else if (identifier.type !== matchedIdentifier.type) {\n        keptIdentifier =\n        // @ts-expect-error TODO this needs to be fixed\n        'type' in resourceData && identifier.type === resourceData.type ? identifier : matchedIdentifier;\n      }\n      const staleIdentifier = identifier === keptIdentifier ? matchedIdentifier : identifier;\n\n      // check for duplicate entities\n      const keptHasRecord = this.__instances.record.has(keptIdentifier);\n      const staleHasRecord = this.__instances.record.has(staleIdentifier);\n\n      // we cannot merge entities when both have records\n      // (this may not be strictly true, we could probably swap the cache data the record points at)\n      if (keptHasRecord && staleHasRecord) {\n        // TODO we probably don't need to throw these errors anymore\n        // we can probably just \"swap\" what data source the abandoned\n        // record points at so long as\n        // it itself is not retained by the store in any way.\n        // @ts-expect-error TODO this needs to be fixed\n        if ('id' in resourceData) {\n          throw new Error(`Failed to update the 'id' for the RecordIdentifier '${identifier.type}:${String(identifier.id)} (${identifier.lid})' to '${String(resourceData.id)}', because that id is already in use by '${matchedIdentifier.type}:${String(matchedIdentifier.id)} (${matchedIdentifier.lid})'`);\n        }\n        ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Failed to update the RecordIdentifier '${identifier.type}:${String(identifier.id)} (${identifier.lid})' to merge with the detected duplicate identifier '${matchedIdentifier.type}:${String(matchedIdentifier.id)} (${String(matchedIdentifier.lid)})'`));\n      }\n      this.store.cache.patch({\n        op: 'mergeIdentifiers',\n        record: staleIdentifier,\n        value: keptIdentifier\n      });\n\n      /*\n      TODO @runspired consider adding this to make polymorphism even nicer\n      if (identifier.type !== matchedIdentifier.type) {\n      this.store._graph?.registerPolymorphicType(identifier.type, matchedIdentifier.type);\n      }\n      */\n\n      this.unloadRecord(staleIdentifier);\n      return keptIdentifier;\n    });\n  }\n  peek(identifier) {\n    return this.__instances.record.get(identifier);\n  }\n  getRecord(identifier, properties) {\n    let record = this.__instances.record.get(identifier);\n    if (!record) {\n      ( true && !(!this.store.isDestroying && !this.store.isDestroyed) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Cannot create a new record instance while the store is being destroyed`, !this.store.isDestroying && !this.store.isDestroyed));\n      const cache = this.store.cache;\n      setCacheFor(identifier, cache);\n      record = this.store.instantiateRecord(identifier, properties || {});\n      setRecordIdentifier(record, identifier);\n      setCacheFor(record, cache);\n      StoreMap.set(record, this.store);\n      this.__instances.record.set(identifier, record);\n    }\n    return record;\n  }\n  getReference(identifier) {\n    const cache = this.__instances.reference;\n    let reference = cache.get(identifier);\n    if (!reference) {\n      reference = new RecordReference(this.store, identifier);\n      cache.set(identifier, reference);\n    }\n    return reference;\n  }\n  recordIsLoaded(identifier, filterDeleted = false) {\n    const cache = this.cache;\n    if (!cache) {\n      return false;\n    }\n    const isNew = cache.isNew(identifier);\n    const isEmpty = cache.isEmpty(identifier);\n\n    // if we are new we must consider ourselves loaded\n    if (isNew) {\n      return !cache.isDeleted(identifier);\n    }\n    // even if we have a past request, if we are now empty we are not loaded\n    // typically this is true after an unloadRecord call\n\n    // if we are not empty, not new && we have a fulfilled request then we are loaded\n    // we should consider allowing for something to be loaded that is simply \"not empty\".\n    // which is how RecordState currently handles this case; however, RecordState is buggy\n    // in that it does not account for unloading.\n    return filterDeleted && cache.isDeletionCommitted(identifier) ? false : !isEmpty;\n  }\n  disconnect(identifier) {\n    const record = this.__instances.record.get(identifier);\n    ( true && !(!isDestroyable(record) || record.isDestroyed || record.isDestroying) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)('Cannot destroy record while it is still materialized', !isDestroyable(record) || record.isDestroyed || record.isDestroying));\n    this.store._graph?.remove(identifier);\n    this.store.identifierCache.forgetRecordIdentifier(identifier);\n    removeRecordDataFor(identifier);\n    this.store._requestCache._clearEntries(identifier);\n  }\n  unloadRecord(identifier) {\n    {\n      const requests = this.store.getRequestStateService().getPendingRequestsForRecord(identifier);\n      if (requests.some(req => {\n        return req.type === 'mutation';\n      })) {\n        ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`You can only unload a record which is not inFlight. '${String(identifier)}'`));\n      }\n    }\n    // TODO is this join still necessary?\n    this.store._join(() => {\n      const record = this.__instances.record.get(identifier);\n      const cache = this.cache;\n      if (record) {\n        this.store.teardownRecord(record);\n        this.__instances.record.delete(identifier);\n        StoreMap.delete(record);\n        RecordCache.delete(record);\n        removeRecordDataFor(record);\n      }\n      if (cache) {\n        cache.unloadRecord(identifier);\n        removeRecordDataFor(identifier);\n      } else {\n        this.disconnect(identifier);\n      }\n      this.store._requestCache._clearEntries(identifier);\n    });\n  }\n  clear(type) {\n    const cache = this.store.identifierCache._cache;\n    if (type === undefined) {\n      // it would be cool if we could just de-ref cache here\n      // but probably would require WeakRef models to do so.\n      cache.resources.forEach(identifier => {\n        this.unloadRecord(identifier);\n      });\n    } else {\n      const typeCache = cache.resourcesByType;\n      const identifiers = typeCache[type]?.lid;\n      if (identifiers) {\n        identifiers.forEach(identifier => {\n          // if (rds.has(identifier)) {\n          this.unloadRecord(identifier);\n          // }\n          // TODO we don't remove the identifier, should we?\n        });\n      }\n    }\n  }\n\n  // TODO this should move into something coordinating operations\n  setRecordId(identifier, id) {\n    const {\n      type,\n      lid\n    } = identifier;\n    const oldId = identifier.id;\n\n    // ID absolutely can't be missing if the oldID is empty (missing Id in response for a new record)\n    ( true && !(!(id === null && oldId === null)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`'${type}' was saved to the server, but the response does not have an id and your record does not either.`, !(id === null && oldId === null))); // ID absolutely can't be different than oldID if oldID is not null\n    // TODO this assertion and restriction may not strictly be needed in the identifiers world\n    ( true && !(!(oldId !== null && id !== oldId)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Cannot update the id for '${type}:${lid}' from '${String(oldId)}' to '${id}'.`, !(oldId !== null && id !== oldId))); // ID can be null if oldID is not null (altered ID in response for a record)\n    // however, this is more than likely a developer error.\n    if (oldId !== null && id === null) {\n      ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.warn)(`Your ${type} record was saved to the server, but the response does not have an id.`, !(oldId !== null && id === null)));\n      return;\n    }\n    const existingIdentifier = this.store.identifierCache.peekRecordIdentifier({\n      type,\n      id\n    });\n    ( true && !(!existingIdentifier || existingIdentifier === identifier) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`'${type}' was saved to the server, but the response returned the new id '${id}', which has already been used with another record.'`, !existingIdentifier || existingIdentifier === identifier));\n    if (identifier.id === null) {\n      // TODO potentially this needs to handle merged result\n      this.store.identifierCache.updateRecordIdentifier(identifier, {\n        type,\n        id\n      });\n    }\n\n    // TODO update resource cache if needed ?\n    // TODO handle consequences of identifier merge for notifications\n    this.store.notifications.notify(identifier, 'identity');\n  }\n}\nfunction _resourceIsFullDeleted(identifier, cache) {\n  return cache.isDeletionCommitted(identifier) || cache.isNew(identifier) && cache.isDeleted(identifier);\n}\nfunction resourceIsFullyDeleted(instanceCache, identifier) {\n  const cache = instanceCache.cache;\n  return !cache || _resourceIsFullDeleted(identifier, cache);\n}\n\n/*\n    When a find request is triggered on the store, the user can optionally pass in\n    attributes and relationships to be preloaded. These are meant to behave as if they\n    came back from the server, except the user obtained them out of band and is informing\n    the store of their existence. The most common use case is for supporting client side\n    nested URLs, such as `/posts/1/comments/2` so the user can do\n    `store.findRecord('comment', 2, { preload: { post: 1 } })` without having to fetch the post.\n\n    Preloaded data can be attributes and relationships passed in either as IDs or as actual\n    models.\n  */\n\nfunction preloadData(store, identifier, preload) {\n  const jsonPayload = {};\n  //TODO(Igor) consider the polymorphic case\n  const schemas = store.getSchemaDefinitionService();\n  const relationships = schemas.relationshipsDefinitionFor(identifier);\n  Object.keys(preload).forEach(key => {\n    const preloadValue = preload[key];\n    const relationshipMeta = relationships[key];\n    if (relationshipMeta) {\n      if (!jsonPayload.relationships) {\n        jsonPayload.relationships = {};\n      }\n      jsonPayload.relationships[key] = preloadRelationship(relationshipMeta, preloadValue);\n    } else {\n      if (!jsonPayload.attributes) {\n        jsonPayload.attributes = {};\n      }\n      jsonPayload.attributes[key] = preloadValue;\n    }\n  });\n  const cache = store.cache;\n  const hasRecord = Boolean(store._instanceCache.peek(identifier));\n  cache.upsert(identifier, jsonPayload, hasRecord);\n}\nfunction preloadRelationship(schema, preloadValue) {\n  const relatedType = schema.type;\n  if (schema.kind === 'hasMany') {\n    ( true && !(Array.isArray(preloadValue)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)('You need to pass in an array to set a hasMany property on a record', Array.isArray(preloadValue)));\n    return {\n      data: preloadValue.map(value => _convertPreloadRelationshipToJSON(value, relatedType))\n    };\n  }\n  ( true && !(!Array.isArray(preloadValue)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)('You should not pass in an array to set a belongsTo property on a record', !Array.isArray(preloadValue)));\n  return {\n    data: preloadValue ? _convertPreloadRelationshipToJSON(preloadValue, relatedType) : null\n  };\n}\n\n/*\n  findRecord('user', '1', { preload: { friends: ['1'] }});\n  findRecord('user', '1', { preload: { friends: [record] }});\n*/\nfunction _convertPreloadRelationshipToJSON(value, type) {\n  if (typeof value === 'string' || typeof value === 'number') {\n    return {\n      type,\n      id: ensureStringId(value)\n    };\n  }\n  // TODO if not a record instance assert it's an identifier\n  // and allow identifiers to be used\n  return recordIdentifierFor(value);\n}\nfunction _clearCaches() {\n  RecordCache.clear();\n  StoreMap.clear();\n  CacheForIdentifierCache.clear();\n}\n\n// if modelFor turns out to be a bottleneck we should replace with a Map\n// and clear it during store teardown.\nconst AvailableShims = new WeakMap();\nfunction getShimClass(store, modelName) {\n  let shims = AvailableShims.get(store);\n  if (!shims) {\n    shims = Object.create(null);\n    AvailableShims.set(store, shims);\n  }\n  let shim = shims[modelName];\n  if (shim === undefined) {\n    shim = shims[modelName] = new ShimModelClass(store, modelName);\n  }\n  return shim;\n}\nfunction mapFromHash(hash) {\n  const map = new Map();\n  for (const i in hash) {\n    if (Object.prototype.hasOwnProperty.call(hash, i)) {\n      map.set(i, hash[i]);\n    }\n  }\n  return map;\n}\n\n// Mimics the static apis of @ember-data/model\nclass ShimModelClass {\n  constructor(store, modelName) {\n    this.__store = store;\n    this.modelName = modelName;\n  }\n  get fields() {\n    const attrs = this.__store.getSchemaDefinitionService().attributesDefinitionFor({\n      type: this.modelName\n    });\n    const relationships = this.__store.getSchemaDefinitionService().relationshipsDefinitionFor({\n      type: this.modelName\n    });\n    const fields = new Map();\n    Object.keys(attrs).forEach(key => fields.set(key, 'attribute'));\n    Object.keys(relationships).forEach(key => fields.set(key, relationships[key].kind));\n    return fields;\n  }\n  get attributes() {\n    const attrs = this.__store.getSchemaDefinitionService().attributesDefinitionFor({\n      type: this.modelName\n    });\n    return mapFromHash(attrs);\n  }\n  get relationshipsByName() {\n    const relationships = this.__store.getSchemaDefinitionService().relationshipsDefinitionFor({\n      type: this.modelName\n    });\n    return mapFromHash(relationships);\n  }\n  eachAttribute(callback, binding) {\n    const attrDefs = this.__store.getSchemaDefinitionService().attributesDefinitionFor({\n      type: this.modelName\n    });\n    Object.keys(attrDefs).forEach(key => {\n      callback.call(binding, key, attrDefs[key]);\n    });\n  }\n  eachRelationship(callback, binding) {\n    const relationshipDefs = this.__store.getSchemaDefinitionService().relationshipsDefinitionFor({\n      type: this.modelName\n    });\n    Object.keys(relationshipDefs).forEach(key => {\n      callback.call(binding, key, relationshipDefs[key]);\n    });\n  }\n  eachTransformedAttribute(callback, binding) {\n    const attrDefs = this.__store.getSchemaDefinitionService().attributesDefinitionFor({\n      type: this.modelName\n    });\n    Object.keys(attrDefs).forEach(key => {\n      if (attrDefs[key].type) {\n        callback.call(binding, key, attrDefs[key].type);\n      }\n    });\n  }\n}\nfunction _classPrivateFieldBase(receiver, privateKey) {\n  if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) {\n    throw new TypeError(\"attempted to use private field on non-instance\");\n  }\n  return receiver;\n}\nvar id = 0;\nfunction _classPrivateFieldKey(name) {\n  return \"__private_\" + id++ + \"_\" + name;\n}\nvar _cache = /*#__PURE__*/_classPrivateFieldKey(\"cache\");\n/**\n * The CacheManager wraps a Cache enforcing that only\n * the public API surface area is exposed.\n *\n * Hence, it is the value of `Store.cache`, wrapping\n * the cache instance returned by `Store.createCache`.\n *\n * It handles translating between cache versions when\n * necessary, for instance when a Store is configured\n * to use both a v1 and a v2 cache depending on some\n * heuristic.\n *\n * Starting with the v2 spec, the cache is designed such\n * that it must be implemented as a singleton.\n *\n * @class CacheManager\n * @public\n */\nclass CacheManager {\n  constructor(cache) {\n    this.version = '2';\n    Object.defineProperty(this, _cache, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldBase(this, _cache)[_cache] = cache;\n  }\n\n  // Cache Management\n  // ================\n\n  /**\n   * Cache the response to a request\n   *\n   * Unlike `store.push` which has UPSERT\n   * semantics, `put` has `replace` semantics similar to\n   * the `http` method `PUT`\n   *\n   * the individually cacheable\n   * e resource data it may contain\n   * should upsert, but the document data surrounding it should\n   * fully replace any existing information\n   *\n   * Note that in order to support inserting arbitrary data\n   * to the cache that did not originate from a request `put`\n   * should expect to sometimes encounter a document with only\n   * a `content` member and therefor must not assume the existence\n   * of `request` and `response` on the document.\n   *\n   * @method put\n   * @param {StructuredDocument} doc\n   * @return {ResourceDocument}\n   * @public\n   */\n  put(doc) {\n    return _classPrivateFieldBase(this, _cache)[_cache].put(doc);\n  }\n\n  /**\n   * Perform an operation on the cache to update the remote state.\n   *\n   * Note: currently the only valid operation is a MergeOperation\n   * which occurs when a collision of identifiers is detected.\n   *\n   * @method patch\n   * @public\n   * @param op the operation to perform\n   * @return {void}\n   */\n  patch(op) {\n    _classPrivateFieldBase(this, _cache)[_cache].patch(op);\n  }\n\n  /**\n   * Update resource data with a local mutation. Currently supports operations\n   * on relationships only.\n   *\n   * @method mutate\n   * @public\n   * @param mutation\n   */\n  mutate(mutation) {\n    _classPrivateFieldBase(this, _cache)[_cache].mutate(mutation);\n  }\n\n  /**\n   * Peek resource data from the Cache.\n   *\n   * In development, if the return value\n   * is JSON the return value\n   * will be deep-cloned and deep-frozen\n   * to prevent mutation thereby enforcing cache\n   * Immutability.\n   *\n   * This form of peek is useful for implementations\n   * that want to feed raw-data from cache to the UI\n   * or which want to interact with a blob of data\n   * directly from the presentation cache.\n   *\n   * An implementation might want to do this because\n   * de-referencing records which read from their own\n   * blob is generally safer because the record does\n   * not require retaining connections to the Store\n   * and Cache to present data on a per-field basis.\n   *\n   * This generally takes the place of `getAttr` as\n   * an API and may even take the place of `getRelationship`\n   * depending on implementation specifics, though this\n   * latter usage is less recommended due to the advantages\n   * of the Graph handling necessary entanglements and\n   * notifications for relational data.\n   *\n   * @method peek\n   * @public\n   * @param {StableRecordIdentifier | StableDocumentIdentifier} identifier\n   * @return {ResourceDocument | ResourceBlob | null} the known resource data\n   */\n\n  peek(identifier) {\n    return _classPrivateFieldBase(this, _cache)[_cache].peek(identifier);\n  }\n\n  /**\n   * Peek the Cache for the existing request data associated with\n   * a cacheable request\n   *\n   * @method peekRequest\n   * @param {StableDocumentIdentifier}\n   * @return {StableDocumentIdentifier | null}\n   * @public\n   */\n  peekRequest(identifier) {\n    return _classPrivateFieldBase(this, _cache)[_cache].peekRequest(identifier);\n  }\n\n  /**\n   * Push resource data from a remote source into the cache for this identifier\n   *\n   * @method upsert\n   * @public\n   * @param identifier\n   * @param data\n   * @param hasRecord\n   * @return {void | string[]} if `hasRecord` is true then calculated key changes should be returned\n   */\n  upsert(identifier, data, hasRecord) {\n    return _classPrivateFieldBase(this, _cache)[_cache].upsert(identifier, data, hasRecord);\n  }\n\n  // Cache Forking Support\n  // =====================\n\n  /**\n   * Create a fork of the cache from the current state.\n   *\n   * Applications should typically not call this method themselves,\n   * preferring instead to fork at the Store level, which will\n   * utilize this method to fork the cache.\n   *\n   * @method fork\n   * @public\n   * @return Promise<Cache>\n   */\n  fork() {\n    return _classPrivateFieldBase(this, _cache)[_cache].fork();\n  }\n\n  /**\n   * Merge a fork back into a parent Cache.\n   *\n   * Applications should typically not call this method themselves,\n   * preferring instead to merge at the Store level, which will\n   * utilize this method to merge the caches.\n   *\n   * @method merge\n   * @param {Cache} cache\n   * @public\n   * @return Promise<void>\n   */\n  merge(cache) {\n    return _classPrivateFieldBase(this, _cache)[_cache].merge(cache);\n  }\n\n  /**\n   * Generate the list of changes applied to all\n   * record in the store.\n   *\n   * Each individual resource or document that has\n   * been mutated should be described as an individual\n   * `Change` entry in the returned array.\n   *\n   * A `Change` is described by an object containing up to\n   * three properties: (1) the `identifier` of the entity that\n   * changed; (2) the `op` code of that change being one of\n   * `upsert` or `remove`, and if the op is `upsert` a `patch`\n   * containing the data to merge into the cache for the given\n   * entity.\n   *\n   * This `patch` is opaque to the Store but should be understood\n   * by the Cache and may expect to be utilized by an Adapter\n   * when generating data during a `save` operation.\n   *\n   * It is generally recommended that the `patch` contain only\n   * the updated state, ignoring fields that are unchanged\n   *\n   * ```ts\n   * interface Change {\n   *  identifier: StableRecordIdentifier | StableDocumentIdentifier;\n   *  op: 'upsert' | 'remove';\n   *  patch?: unknown;\n   * }\n   * ```\n   *\n   * @method diff\n   * @public\n   */\n  diff() {\n    return _classPrivateFieldBase(this, _cache)[_cache].diff();\n  }\n\n  // SSR Support\n  // ===========\n\n  /**\n   * Serialize the entire contents of the Cache into a Stream\n   * which may be fed back into a new instance of the same Cache\n   * via `cache.hydrate`.\n   *\n   * @method dump\n   * @return {Promise<ReadableStream>}\n   * @public\n   */\n  dump() {\n    return _classPrivateFieldBase(this, _cache)[_cache].dump();\n  }\n\n  /**\n   * hydrate a Cache from a Stream with content previously serialized\n   * from another instance of the same Cache, resolving when hydration\n   * is complete.\n   *\n   * This method should expect to be called both in the context of restoring\n   * the Cache during application rehydration after SSR **AND** at unknown\n   * times during the lifetime of an already booted application when it is\n   * desired to bulk-load additional information into the cache. This latter\n   * behavior supports optimizing pre/fetching of data for route transitions\n   * via data-only SSR modes.\n   *\n   * @method hydrate\n   * @param {ReadableStream} stream\n   * @return {Promise<void>}\n   * @public\n   */\n  hydrate(stream) {\n    return _classPrivateFieldBase(this, _cache)[_cache].hydrate(stream);\n  }\n\n  // Cache\n  // =====\n\n  // Resource Support\n  // ================\n\n  /**\n   * [LIFECYCLE] Signal to the cache that a new record has been instantiated on the client\n   *\n   * It returns properties from options that should be set on the record during the create\n   * process. This return value behavior is deprecated.\n   *\n   * @method clientDidCreate\n   * @public\n   * @param identifier\n   * @param options\n   */\n  clientDidCreate(identifier, options) {\n    return _classPrivateFieldBase(this, _cache)[_cache].clientDidCreate(identifier, options);\n  }\n\n  /**\n   * [LIFECYCLE] Signals to the cache that a resource\n   * will be part of a save transaction.\n   *\n   * @method willCommit\n   * @public\n   * @param identifier\n   */\n  willCommit(identifier, context) {\n    _classPrivateFieldBase(this, _cache)[_cache].willCommit(identifier, context);\n  }\n\n  /**\n   * [LIFECYCLE] Signals to the cache that a resource\n   * was successfully updated as part of a save transaction.\n   *\n   * @method didCommit\n   * @public\n   * @param identifier\n   * @param data\n   */\n  didCommit(identifier, result) {\n    return _classPrivateFieldBase(this, _cache)[_cache].didCommit(identifier, result);\n  }\n\n  /**\n   * [LIFECYCLE] Signals to the cache that a resource\n   * was update via a save transaction failed.\n   *\n   * @method commitWasRejected\n   * @public\n   * @param identifier\n   * @param errors\n   */\n  commitWasRejected(identifier, errors) {\n    _classPrivateFieldBase(this, _cache)[_cache].commitWasRejected(identifier, errors);\n  }\n\n  /**\n   * [LIFECYCLE] Signals to the cache that all data for a resource\n   * should be cleared.\n   *\n   * @method unloadRecord\n   * @public\n   * @param identifier\n   */\n  unloadRecord(identifier) {\n    _classPrivateFieldBase(this, _cache)[_cache].unloadRecord(identifier);\n  }\n\n  // Granular Resource Data APIs\n  // ===========================\n\n  /**\n   * Retrieve the data for an attribute from the cache\n   *\n   * @method getAttr\n   * @public\n   * @param identifier\n   * @param propertyName\n   * @return {unknown}\n   */\n  getAttr(identifier, propertyName) {\n    return _classPrivateFieldBase(this, _cache)[_cache].getAttr(identifier, propertyName);\n  }\n\n  /**\n   * Mutate the data for an attribute in the cache\n   *\n   * @method setAttr\n   * @public\n   * @param identifier\n   * @param propertyName\n   * @param value\n   */\n  setAttr(identifier, propertyName, value) {\n    _classPrivateFieldBase(this, _cache)[_cache].setAttr(identifier, propertyName, value);\n  }\n\n  /**\n   * Query the cache for the changed attributes of a resource.\n   *\n   * @method changedAttrs\n   * @public\n   * @param identifier\n   * @return\n   */\n  changedAttrs(identifier) {\n    return _classPrivateFieldBase(this, _cache)[_cache].changedAttrs(identifier);\n  }\n\n  /**\n   * Query the cache for whether any mutated attributes exist\n   *\n   * @method hasChangedAttrs\n   * @public\n   * @param identifier\n   * @return {boolean}\n   */\n  hasChangedAttrs(identifier) {\n    return _classPrivateFieldBase(this, _cache)[_cache].hasChangedAttrs(identifier);\n  }\n\n  /**\n   * Tell the cache to discard any uncommitted mutations to attributes\n   *\n   * @method rollbackAttrs\n   * @public\n   * @param identifier\n   * @return the names of attributes that were restored\n   */\n  rollbackAttrs(identifier) {\n    return _classPrivateFieldBase(this, _cache)[_cache].rollbackAttrs(identifier);\n  }\n\n  // Relationships\n  // =============\n\n  /**\n   * Query the cache for the changes to relationships of a resource.\n   *\n   * Returns a map of relationship names to RelationshipDiff objects.\n   *\n   * ```ts\n   * type RelationshipDiff =\n  | {\n      kind: 'collection';\n      remoteState: StableRecordIdentifier[];\n      additions: Set<StableRecordIdentifier>;\n      removals: Set<StableRecordIdentifier>;\n      localState: StableRecordIdentifier[];\n      reordered: boolean;\n    }\n  | {\n      kind: 'resource';\n      remoteState: StableRecordIdentifier | null;\n      localState: StableRecordIdentifier | null;\n    };\n    ```\n   *\n   * @method changedRelationships\n   * @public\n   * @param {StableRecordIdentifier} identifier\n   * @return {Map<string, RelationshipDiff>}\n   */\n  changedRelationships(identifier) {\n    return _classPrivateFieldBase(this, _cache)[_cache].changedRelationships(identifier);\n  }\n\n  /**\n   * Query the cache for whether any mutated attributes exist\n   *\n   * @method hasChangedRelationships\n   * @public\n   * @param {StableRecordIdentifier} identifier\n   * @return {boolean}\n   */\n  hasChangedRelationships(identifier) {\n    return _classPrivateFieldBase(this, _cache)[_cache].hasChangedRelationships(identifier);\n  }\n\n  /**\n   * Tell the cache to discard any uncommitted mutations to relationships.\n   *\n   * This will also discard the change on any appropriate inverses.\n   *\n   * This method is a candidate to become a mutation\n   *\n   * @method rollbackRelationships\n   * @public\n   * @param {StableRecordIdentifier} identifier\n   * @return {string[]} the names of relationships that were restored\n   */\n  rollbackRelationships(identifier) {\n    return _classPrivateFieldBase(this, _cache)[_cache].rollbackRelationships(identifier);\n  }\n\n  /**\n   * Query the cache for the current state of a relationship property\n   *\n   * @method getRelationship\n   * @public\n   * @param identifier\n   * @param propertyName\n   * @return resource relationship object\n   */\n  getRelationship(identifier, propertyName) {\n    return _classPrivateFieldBase(this, _cache)[_cache].getRelationship(identifier, propertyName);\n  }\n\n  // Resource State\n  // ===============\n\n  /**\n   * Update the cache state for the given resource to be marked as locally deleted,\n   * or remove such a mark.\n   *\n   * @method setIsDeleted\n   * @public\n   * @param identifier\n   * @param isDeleted\n   */\n  setIsDeleted(identifier, isDeleted) {\n    _classPrivateFieldBase(this, _cache)[_cache].setIsDeleted(identifier, isDeleted);\n  }\n\n  /**\n   * Query the cache for any validation errors applicable to the given resource.\n   *\n   * @method getErrors\n   * @public\n   * @param identifier\n   * @return\n   */\n  getErrors(identifier) {\n    return _classPrivateFieldBase(this, _cache)[_cache].getErrors(identifier);\n  }\n\n  /**\n   * Query the cache for whether a given resource has any available data\n   *\n   * @method isEmpty\n   * @public\n   * @param identifier\n   * @return {boolean}\n   */\n  isEmpty(identifier) {\n    return _classPrivateFieldBase(this, _cache)[_cache].isEmpty(identifier);\n  }\n\n  /**\n   * Query the cache for whether a given resource was created locally and not\n   * yet persisted.\n   *\n   * @method isNew\n   * @public\n   * @param identifier\n   * @return {boolean}\n   */\n  isNew(identifier) {\n    return _classPrivateFieldBase(this, _cache)[_cache].isNew(identifier);\n  }\n\n  /**\n   * Query the cache for whether a given resource is marked as deleted (but not\n   * necessarily persisted yet).\n   *\n   * @method isDeleted\n   * @public\n   * @param identifier\n   * @return {boolean}\n   */\n  isDeleted(identifier) {\n    return _classPrivateFieldBase(this, _cache)[_cache].isDeleted(identifier);\n  }\n\n  /**\n   * Query the cache for whether a given resource has been deleted and that deletion\n   * has also been persisted.\n   *\n   * @method isDeletionCommitted\n   * @public\n   * @param identifier\n   * @return {boolean}\n   */\n  isDeletionCommitted(identifier) {\n    return _classPrivateFieldBase(this, _cache)[_cache].isDeletionCommitted(identifier);\n  }\n}\n\n/**\n * @module @ember-data/store\n */\nlet tokenId = 0;\nconst CacheOperations = new Set(['added', 'removed', 'state', 'updated']);\nfunction isCacheOperationValue(value) {\n  return CacheOperations.has(value);\n}\nfunction runLoopIsFlushing() {\n  //@ts-expect-error\n  return !!_ember_runloop__WEBPACK_IMPORTED_MODULE_6__._backburner.currentInstance && _ember_runloop__WEBPACK_IMPORTED_MODULE_6__._backburner._autorun !== true;\n}\nfunction _unsubscribe(tokens, token, cache) {\n  const identifier = tokens.get(token);\n  if (identifier) {\n    tokens.delete(token);\n    const map = cache.get(identifier);\n    map?.delete(token);\n  }\n}\n\n/**\n * The NotificationManager provides the ability to subscribe to\n * changes to Cache state.\n *\n * This Feature is what allows EmberData to create subscriptions that\n * work with any framework or change-notification system.\n *\n * @class NotificationManager\n * @public\n */\nclass NotificationManager {\n  constructor(store) {\n    this.store = store;\n    this.isDestroyed = false;\n    this._buffered = new Map();\n    this._hasFlush = false;\n    this._cache = new Map();\n    this._tokens = new Map();\n  }\n\n  /**\n   * Subscribe to changes for a given resource identifier, resource addition/removal, or document addition/removal.\n   *\n   * ```ts\n   * export type CacheOperation = 'added' | 'removed' | 'updated' | 'state';\n   *\n   * export interface NotificationCallback {\n   *   (identifier: StableRecordIdentifier, notificationType: 'attributes' | 'relationships', key?: string): void;\n   *   (identifier: StableRecordIdentifier, notificationType: 'errors' | 'meta' | 'identity' | 'state'): void;\n   *   (identifier: StableRecordIdentifier, notificationType: NotificationType, key?: string): void;\n   * }\n   * export interface ResourceOperationCallback {\n   *   // resource updates\n   *   (identifier: StableRecordIdentifier, notificationType: CacheOperation): void;\n   * }\n   * export interface DocumentOperationCallback {\n   *   // document updates\n   *   (identifier: StableDocumentIdentifier, notificationType: CacheOperation): void;\n   * }\n   * ```\n   *\n   * @method subscribe\n   * @public\n   * @param {StableDocumentIdentifier | StableRecordIdentifier | 'resource' | 'document'} identifier\n   * @param {NotificationCallback | ResourceOperationCallback | DocumentOperationCallback} callback\n   * @return {UnsubscribeToken} an opaque token to be used with unsubscribe\n   */\n\n  subscribe(identifier, callback) {\n    ( true && !(identifier === 'resource' || identifier === 'document' || isStableIdentifier(identifier) || isDocumentIdentifier(identifier)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Expected to receive a stable Identifier to subscribe to`, identifier === 'resource' || identifier === 'document' || isStableIdentifier(identifier) || isDocumentIdentifier(identifier)));\n    let map = this._cache.get(identifier);\n    if (!map) {\n      map = new Map();\n      this._cache.set(identifier, map);\n    }\n    const unsubToken = {\n      _tokenRef: tokenId++\n    };\n    map.set(unsubToken, callback);\n    this._tokens.set(unsubToken, identifier);\n    return unsubToken;\n  }\n\n  /**\n   * remove a previous subscription\n   *\n   * @method unsubscribe\n   * @public\n   * @param {UnsubscribeToken} token\n   */\n  unsubscribe(token) {\n    if (!this.isDestroyed) {\n      _unsubscribe(this._tokens, token, this._cache);\n    }\n  }\n\n  /**\n   * Custom Caches and Application Code should not call this method directly.\n   *\n   * @method notify\n   * @param identifier\n   * @param value\n   * @param key\n   * @return {Boolean} whether a notification was delivered to any subscribers\n   * @private\n   */\n\n  notify(identifier, value, key) {\n    ( true && !(!key || value === 'attributes' || value === 'relationships') && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Notify does not accept a key argument for the namespace '${value}'. Received key '${key || ''}'.`, !key || value === 'attributes' || value === 'relationships'));\n    if (!isStableIdentifier(identifier) && !isDocumentIdentifier(identifier)) {\n      return false;\n    }\n    const hasSubscribers = Boolean(this._cache.get(identifier)?.size);\n    if (isCacheOperationValue(value) || hasSubscribers) {\n      let buffer = this._buffered.get(identifier);\n      if (!buffer) {\n        buffer = [];\n        this._buffered.set(identifier, buffer);\n      }\n      buffer.push([value, key]);\n      this._scheduleNotify();\n    }\n    return hasSubscribers;\n  }\n  _onNextFlush(cb) {\n    this._onFlushCB = cb;\n  }\n  _scheduleNotify() {\n    const asyncFlush = this.store._enableAsyncFlush;\n    if (this._hasFlush) {\n      if (asyncFlush !== false && !runLoopIsFlushing()) {\n        return;\n      }\n    }\n    if (asyncFlush && !runLoopIsFlushing()) {\n      this._hasFlush = true;\n      return;\n    }\n    this._flush();\n  }\n  _flush() {\n    if (this._buffered.size) {\n      this._buffered.forEach((states, identifier) => {\n        states.forEach(args => {\n          // @ts-expect-error\n          this._flushNotification(identifier, args[0], args[1]);\n        });\n      });\n      this._buffered = new Map();\n    }\n    this._hasFlush = false;\n    this._onFlushCB?.();\n    this._onFlushCB = undefined;\n  }\n  _flushNotification(identifier, value, key) {\n    // TODO for documents this will need to switch based on Identifier kind\n    if (isCacheOperationValue(value)) {\n      const callbackMap = this._cache.get(isDocumentIdentifier(identifier) ? 'document' : 'resource');\n      if (callbackMap) {\n        callbackMap.forEach(cb => {\n          cb(identifier, value);\n        });\n      }\n    }\n    const callbackMap = this._cache.get(identifier);\n    if (!callbackMap || !callbackMap.size) {\n      return false;\n    }\n    callbackMap.forEach(cb => {\n      // @ts-expect-error overload doesn't narrow within body\n      cb(identifier, value, key);\n    });\n    return true;\n  }\n  destroy() {\n    this.isDestroyed = true;\n    this._tokens.clear();\n    this._cache.clear();\n  }\n}\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object.keys(descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n  if (desc.initializer === void 0) {\n    Object.defineProperty(target, property, desc);\n    desc = null;\n  }\n  return desc;\n}\nvar _class;\nconst ARRAY_GETTER_METHODS = new Set([Symbol.iterator, 'concat', 'entries', 'every', 'fill', 'filter', 'find', 'findIndex', 'flat', 'flatMap', 'forEach', 'includes', 'indexOf', 'join', 'keys', 'lastIndexOf', 'map', 'reduce', 'reduceRight', 'slice', 'some', 'values']);\nconst ARRAY_SETTER_METHODS = new Set(['push', 'pop', 'unshift', 'shift', 'splice', 'sort']);\nconst SYNC_PROPS = new Set(['[]', 'length', 'links', 'meta']);\nfunction isArrayGetter(prop) {\n  return ARRAY_GETTER_METHODS.has(prop);\n}\nfunction isArraySetter(prop) {\n  return ARRAY_SETTER_METHODS.has(prop);\n}\nfunction isSelfProp(self, prop) {\n  return prop in self;\n}\nconst ARRAY_SIGNAL = Symbol('#signal');\nconst SOURCE = Symbol('#source');\nconst MUTATE = Symbol('#update');\nconst NOTIFY = Symbol('#notify');\nconst IS_COLLECTION = Symbol.for('Collection');\nfunction notifyArray(arr) {\n  (0,_ember_data_tracking_private__WEBPACK_IMPORTED_MODULE_5__.addToTransaction)(arr[ARRAY_SIGNAL]);\n}\nfunction convertToInt(prop) {\n  if (typeof prop === 'symbol') return null;\n  const num = Number(prop);\n  if (isNaN(num)) return null;\n  return num % 1 === 0 ? num : null;\n}\nfunction safeForEach(instance, arr, store, callback, target) {\n  if (target === undefined) {\n    target = null;\n  }\n  // clone to prevent mutation\n  arr = arr.slice();\n  ( true && !(typeof callback === 'function') && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)('`forEach` expects a function as first argument.', typeof callback === 'function')); // because we retrieveLatest above we need not worry if array is mutated during iteration\n  // by unloadRecord/rollbackAttributes\n  // push/add/removeObject may still be problematic\n  // but this is a more traditionally expected forEach bug.\n  const length = arr.length; // we need to access length to ensure we are consumed\n\n  for (let index = 0; index < length; index++) {\n    callback.call(target, store._instanceCache.getRecord(arr[index]), index, instance);\n  }\n  return instance;\n}\n\n/**\n  A record array is an array that contains records of a certain type (or modelName).\n  The record array materializes records as needed when they are retrieved for the first\n  time. You should not create record arrays yourself. Instead, an instance of\n  `RecordArray` or its subclasses will be returned by your application's store\n  in response to queries.\n\n  This class should not be imported and instantiated by consuming applications.\n\n  @class RecordArray\n  @public\n*/\nlet IdentifierArray = (_class = class IdentifierArray {\n  [NOTIFY]() {\n    notifyArray(this);\n  }\n\n  /**\n    The store that created this record array.\n     @property store\n    @private\n    @type Store\n    */\n\n  destroy(clear) {\n    this.isDestroying = !clear;\n    // changing the reference breaks the Proxy\n    // this[SOURCE] = [];\n    this[SOURCE].length = 0;\n    this[NOTIFY]();\n    this.isDestroyed = !clear;\n  }\n\n  // length must be on self for proxied methods to work properly\n  get length() {\n    return this[SOURCE].length;\n  }\n  set length(value) {\n    this[SOURCE].length = value;\n  }\n  constructor(options) {\n    /**\n      The flag to signal a `RecordArray` is currently loading data.\n      Example\n      ```javascript\n      let people = store.peekAll('person');\n      people.isUpdating; // false\n      people.update();\n      people.isUpdating; // true\n      ```\n      @property isUpdating\n      @public\n      @type Boolean\n    */\n    this.isLoaded = true;\n    this.isDestroying = false;\n    this.isDestroyed = false;\n    this._updatingPromise = null;\n    this[IS_COLLECTION] = true;\n    this[SOURCE] = void 0;\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const self = this;\n    this.modelName = options.type;\n    this.store = options.store;\n    this._manager = options.manager;\n    this[SOURCE] = options.identifiers;\n    this[ARRAY_SIGNAL] = (0,_ember_data_tracking_private__WEBPACK_IMPORTED_MODULE_5__.createSignal)(this, 'length');\n    const store = options.store;\n    const boundFns = new Map();\n    const _SIGNAL = this[ARRAY_SIGNAL];\n    const PrivateState = {\n      links: options.links || null,\n      meta: options.meta || null\n    };\n    let transaction = false;\n\n    // when a mutation occurs\n    // we track all mutations within the call\n    // and forward them as one\n\n    const proxy = new Proxy(this[SOURCE], {\n      get(target, prop, receiver) {\n        const index = convertToInt(prop);\n        if (_SIGNAL.shouldReset && (index !== null || SYNC_PROPS.has(prop) || isArrayGetter(prop))) {\n          options.manager._syncArray(receiver);\n          _SIGNAL.t = false;\n          _SIGNAL.shouldReset = false;\n        }\n        if (index !== null) {\n          const identifier = target[index];\n          if (!transaction) {\n            (0,_ember_data_tracking_private__WEBPACK_IMPORTED_MODULE_5__.subscribe)(_SIGNAL);\n          }\n          return identifier && store._instanceCache.getRecord(identifier);\n        }\n        if (prop === 'meta') return (0,_ember_data_tracking_private__WEBPACK_IMPORTED_MODULE_5__.subscribe)(_SIGNAL), PrivateState.meta;\n        if (prop === 'links') return (0,_ember_data_tracking_private__WEBPACK_IMPORTED_MODULE_5__.subscribe)(_SIGNAL), PrivateState.links;\n        if (prop === '[]') return (0,_ember_data_tracking_private__WEBPACK_IMPORTED_MODULE_5__.subscribe)(_SIGNAL), receiver;\n        if (isArrayGetter(prop)) {\n          let fn = boundFns.get(prop);\n          if (fn === undefined) {\n            if (prop === 'forEach') {\n              fn = function () {\n                (0,_ember_data_tracking_private__WEBPACK_IMPORTED_MODULE_5__.subscribe)(_SIGNAL);\n                transaction = true;\n                const result = safeForEach(receiver, target, store, arguments[0], arguments[1]);\n                transaction = false;\n                return result;\n              };\n            } else {\n              fn = function () {\n                (0,_ember_data_tracking_private__WEBPACK_IMPORTED_MODULE_5__.subscribe)(_SIGNAL);\n                // array functions must run through Reflect to work properly\n                // binding via other means will not work.\n                transaction = true;\n                const result = Reflect.apply(target[prop], receiver, arguments);\n                transaction = false;\n                return result;\n              };\n            }\n            boundFns.set(prop, fn);\n          }\n          return fn;\n        }\n        if (isArraySetter(prop)) {\n          let fn = boundFns.get(prop);\n          if (fn === undefined) {\n            fn = function () {\n              // array functions must run through Reflect to work properly\n              // binding via other means will not work.\n              if (!options.allowMutation) {\n                ( true && !(options.allowMutation) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Mutating this array of records via ${String(prop)} is not allowed.`, options.allowMutation));\n                return;\n              }\n              const args = Array.prototype.slice.call(arguments);\n              ( true && !(!transaction) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Cannot start a new array transaction while a previous transaction is underway`, !transaction));\n              transaction = true;\n              const result = self[MUTATE](target, receiver, prop, args, _SIGNAL);\n              transaction = false;\n              return result;\n            };\n            boundFns.set(prop, fn);\n          }\n          return fn;\n        }\n        if (isSelfProp(self, prop)) {\n          if (prop === NOTIFY || prop === ARRAY_SIGNAL || prop === SOURCE) {\n            return self[prop];\n          }\n          let fn = boundFns.get(prop);\n          if (fn) return fn;\n          const outcome = self[prop];\n          if (typeof outcome === 'function') {\n            fn = function () {\n              (0,_ember_data_tracking_private__WEBPACK_IMPORTED_MODULE_5__.subscribe)(_SIGNAL);\n              // array functions must run through Reflect to work properly\n              // binding via other means will not work.\n              return Reflect.apply(outcome, receiver, arguments);\n            };\n            boundFns.set(prop, fn);\n            return fn;\n          }\n          return (0,_ember_data_tracking_private__WEBPACK_IMPORTED_MODULE_5__.subscribe)(_SIGNAL), outcome;\n        }\n        return target[prop];\n      },\n      // FIXME: Should this get a generic like get above?\n      set(target, prop, value, receiver) {\n        if (prop === 'length') {\n          if (!transaction && value === 0) {\n            transaction = true;\n            self[MUTATE](target, receiver, 'length 0', [], _SIGNAL);\n            transaction = false;\n            return true;\n          } else if (transaction) {\n            return Reflect.set(target, prop, value);\n          } else {\n            ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`unexpected length set`));\n          }\n        }\n        if (prop === 'links') {\n          PrivateState.links = value || null;\n          return true;\n        }\n        if (prop === 'meta') {\n          PrivateState.meta = value || null;\n          return true;\n        }\n        const index = convertToInt(prop);\n\n        // we do not allow \"holey\" arrays and so if the index is\n        // greater than length then we will disallow setting it.\n        // however, there is a special case for \"unshift\" with more than\n        // one item being inserted since current items will be moved to the\n        // new indices first.\n        // we \"loosely\" detect this by just checking whether we are in\n        // a transaction.\n        if (index === null || index > target.length) {\n          if (index !== null && transaction) {\n            const identifier = recordIdentifierFor(value);\n            ( true && !(isStableIdentifier(identifier)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Cannot set index ${index} past the end of the array.`, isStableIdentifier(identifier)));\n            target[index] = identifier;\n            return true;\n          } else if (isSelfProp(self, prop)) {\n            self[prop] = value;\n            return true;\n          }\n          return false;\n        }\n        if (!options.allowMutation) {\n          ( true && !(options.allowMutation) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Mutating ${String(prop)} on this RecordArray is not allowed.`, options.allowMutation));\n          return false;\n        }\n        const original = target[index];\n        const newIdentifier = extractIdentifierFromRecord$1(value);\n        target[index] = newIdentifier;\n        ( true && !(isStableIdentifier(newIdentifier)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Expected a record`, isStableIdentifier(newIdentifier))); // We generate \"transactions\" whenever a setter method on the array\n        // is called and might bulk update multiple array cells. Fundamentally,\n        // all array operations decompose into individual cell replacements.\n        // e.g. a push is really a \"replace cell at next index with new value\"\n        // or a splice is \"shift all values left/right by X and set out of new\n        // bounds cells to undefined\"\n        //\n        // so, if we are in a transaction, then this is not a user generated change\n        // but one generated by a setter method. In this case we want to only apply\n        // the change to the target array and not call the MUTATE method.\n        // If there is no transaction though, then this means the user themselves has\n        // directly changed the value of a specific index and we need to thus generate\n        // a mutation for that change.\n        // e.g. \"arr.push(newVal)\" is handled by a \"addToRelatedRecords\" mutation within\n        // a transaction.\n        // while \"arr[arr.length] = newVal;\" is handled by this replace cell code path.\n        if (!transaction) {\n          self[MUTATE](target, receiver, 'replace cell', [index, original, newIdentifier], _SIGNAL);\n        } else {\n          target[index] = newIdentifier;\n        }\n        return true;\n      },\n      deleteProperty(target, prop) {\n        ( true && !(transaction) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Deleting keys on managed arrays is disallowed`, transaction));\n        if (!transaction) {\n          return false;\n        }\n        return Reflect.deleteProperty(target, prop);\n      },\n      getPrototypeOf() {\n        return IdentifierArray.prototype;\n      }\n    });\n    (0,_ember_data_tracking_private__WEBPACK_IMPORTED_MODULE_5__.createArrayTags)(proxy, _SIGNAL);\n    this[NOTIFY] = this[NOTIFY].bind(proxy);\n    return proxy;\n  }\n\n  /**\n    Used to get the latest version of all of the records in this array\n    from the adapter.\n     Example\n     ```javascript\n    let people = store.peekAll('person');\n    people.isUpdating; // false\n     people.update().then(function() {\n      people.isUpdating; // false\n    });\n     people.isUpdating; // true\n    ```\n     @method update\n    @public\n  */\n  update() {\n    if (this.isUpdating) {\n      return this._updatingPromise;\n    }\n    this.isUpdating = true;\n    const updatingPromise = this._update();\n    void updatingPromise.finally(() => {\n      this._updatingPromise = null;\n      if (this.isDestroying || this.isDestroyed) {\n        return;\n      }\n      this.isUpdating = false;\n    });\n    this._updatingPromise = updatingPromise;\n    return updatingPromise;\n  }\n\n  /*\n    Update this RecordArray and return a promise which resolves once the update\n    is finished.\n   */\n  _update() {\n    ( true && !(this.modelName) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`_update cannot be used with this array`, this.modelName));\n    return this.store.findAll(this.modelName, {\n      reload: true\n    });\n  }\n\n  // TODO deprecate\n  /**\n    Saves all of the records in the `RecordArray`.\n     Example\n     ```javascript\n    let messages = store.peekAll('message');\n    messages.forEach(function(message) {\n      message.hasBeenSeen = true;\n    });\n    messages.save();\n    ```\n     @method save\n    @public\n    @return {Promise<IdentifierArray>} promise\n  */\n  save() {\n    const promise = Promise.all(this.map(record => this.store.saveRecord(record))).then(() => this);\n    return promise;\n  }\n}, _applyDecoratedDescriptor(_class.prototype, \"length\", [_ember_data_tracking__WEBPACK_IMPORTED_MODULE_7__.compat], Object.getOwnPropertyDescriptor(_class.prototype, \"length\"), _class.prototype), _class); // this will error if someone tries to call\n// A(identifierArray) since it is not configurable\n// which is preferable to the `meta` override we used\n// before which required importing all of Ember\nconst desc = {\n  enumerable: true,\n  configurable: false,\n  get: function () {\n    return this;\n  }\n};\n(0,_ember_data_tracking__WEBPACK_IMPORTED_MODULE_7__.compat)(desc);\nObject.defineProperty(IdentifierArray.prototype, '[]', desc);\n(0,_ember_data_tracking_private__WEBPACK_IMPORTED_MODULE_5__.defineSignal)(IdentifierArray.prototype, 'isUpdating', false);\nclass Collection extends IdentifierArray {\n  constructor(options) {\n    super(options);\n    this.query = null;\n    this.query = options.query || null;\n    this.isLoaded = options.isLoaded || false;\n  }\n  _update() {\n    const {\n      store,\n      query\n    } = this;\n\n    // TODO save options from initial request?\n    ( true && !(this.modelName) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`update cannot be used with this array`, this.modelName));\n    ( true && !(query) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`update cannot be used with no query`, query));\n    const promise = store.query(this.modelName, query, {\n      _recordArray: this\n    });\n    return promise;\n  }\n  destroy(clear) {\n    super.destroy(clear);\n    this._manager._managed.delete(this);\n    this._manager._pending.delete(this);\n  }\n}\n// trick the proxy \"in\" check\nCollection.prototype.query = null;\n\n// Ensure instanceof works correctly\n// Object.setPrototypeOf(IdentifierArray.prototype, Array.prototype);\n\nfunction assertRecordPassedToHasMany(record) {\n  ( true && !(function () {\n    try {\n      recordIdentifierFor(record);\n      return true;\n    } catch {\n      return false;\n    }\n  }()) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`All elements of a hasMany relationship must be instances of Model, you passed $${typeof record}`, function () {\n    try {\n      recordIdentifierFor(record);\n      return true;\n    } catch {\n      return false;\n    }\n  }()));\n}\nfunction extractIdentifierFromRecord$1(record) {\n  if (!record) {\n    return null;\n  }\n  assertRecordPassedToHasMany(record);\n  return recordIdentifierFor(record);\n}\n\n/**\n  @module @ember-data/store\n*/\nconst FAKE_ARR = {};\nconst SLICE_BATCH_SIZE = 1200;\n/**\n * This is a clever optimization.\n *\n * clever optimizations rarely stand the test of time, so if you're\n * ever curious or think something better is possible please benchmark\n * and discuss. The benchmark for this at the time of writing is in\n * `scripts/benchmark-push.js`\n *\n * This approach turns out to be 150x faster in Chrome and node than\n * simply using push or concat. It's highly susceptible to the specifics\n * of the batch size, and may require tuning.\n *\n * Clever optimizations should always come with a `why`. This optimization\n * exists for two reasons.\n *\n * 1) array.push(...objects) and Array.prototype.push.apply(arr, objects)\n *   are susceptible to stack overflows. The size of objects at which this\n *   occurs varies by environment, browser, and current stack depth and memory\n *   pressure; however, it occurs in all browsers in fairly pristine conditions\n *   somewhere around 125k to 200k elements. Since EmberData regularly encounters\n *   arrays larger than this in size, we cannot use push.\n *\n * 2) `array.concat` or simply setting the array to a new reference is often an\n *   easier approach; however, native Proxy to an array cannot swap it's target array\n *   and attempts at juggling multiple array sources have proven to be victim to a number\n *   of browser implementation bugs. Should these bugs be addressed then we could\n *   simplify to using `concat`, however, do note this is currently 150x faster\n *   than concat, and due to the overloaded signature of concat will likely always\n *   be faster.\n *\n * Sincerely,\n *   - runspired (Chris Thoburn) 08/21/2022\n *\n * @function fastPush\n * @internal\n * @param target the array to push into\n * @param source the items to push into target\n */\nfunction fastPush(target, source) {\n  let startLength = 0;\n  const newLength = source.length;\n  while (newLength - startLength > SLICE_BATCH_SIZE) {\n    // eslint-disable-next-line prefer-spread\n    target.push.apply(target, source.slice(startLength, startLength + SLICE_BATCH_SIZE));\n    startLength += SLICE_BATCH_SIZE;\n  }\n  // eslint-disable-next-line prefer-spread\n  target.push.apply(target, source.slice(startLength));\n}\n/**\n  @class RecordArrayManager\n  @internal\n*/\nclass RecordArrayManager {\n  constructor(options) {\n    this.store = options.store;\n    this.isDestroying = false;\n    this.isDestroyed = false;\n    this._live = new Map();\n    this._managed = new Set();\n    this._pending = new Map();\n    this._staged = new Map();\n    this._keyedArrays = new Map();\n    this._identifiers = new Map();\n    this._set = new Map();\n    this._visibilitySet = new Map();\n    this._subscription = this.store.notifications.subscribe('resource', (identifier, type) => {\n      if (type === 'added') {\n        this._visibilitySet.set(identifier, true);\n        this.identifierAdded(identifier);\n      } else if (type === 'removed') {\n        this._visibilitySet.set(identifier, false);\n        this.identifierRemoved(identifier);\n      } else if (type === 'state') {\n        this.identifierChanged(identifier);\n      }\n    });\n  }\n  _syncArray(array) {\n    const pending = this._pending.get(array);\n    if (!pending || this.isDestroying || this.isDestroyed) {\n      return;\n    }\n    sync(array, pending, this._set.get(array));\n    this._pending.delete(array);\n  }\n\n  /**\n    Get the `RecordArray` for a modelName, which contains all loaded records of\n    given modelName.\n     @method liveArrayFor\n    @internal\n    @param {String} modelName\n    @return {RecordArray}\n  */\n  liveArrayFor(type) {\n    let array = this._live.get(type);\n    const identifiers = [];\n    const staged = this._staged.get(type);\n    if (staged) {\n      staged.forEach((value, key) => {\n        if (value === 'add') {\n          identifiers.push(key);\n        }\n      });\n      this._staged.delete(type);\n    }\n    if (!array) {\n      array = new IdentifierArray({\n        type,\n        identifiers,\n        store: this.store,\n        allowMutation: false,\n        manager: this\n      });\n      this._live.set(type, array);\n      this._set.set(array, new Set(identifiers));\n    }\n    return array;\n  }\n  createArray(config) {\n    const options = {\n      type: config.type,\n      links: config.doc?.links || null,\n      meta: config.doc?.meta || null,\n      query: config.query || null,\n      identifiers: config.identifiers || [],\n      isLoaded: !!config.identifiers?.length,\n      allowMutation: false,\n      store: this.store,\n      manager: this\n    };\n    const array = new Collection(options);\n    this._managed.add(array);\n    this._set.set(array, new Set(options.identifiers || []));\n    if (config.identifiers) {\n      associate(this._identifiers, array, config.identifiers);\n    }\n    return array;\n  }\n  dirtyArray(array, delta) {\n    if (array === FAKE_ARR) {\n      return;\n    }\n    const tag = array[ARRAY_SIGNAL];\n    if (!tag.shouldReset) {\n      tag.shouldReset = true;\n      (0,_ember_data_tracking_private__WEBPACK_IMPORTED_MODULE_5__.addTransactionCB)(array[NOTIFY]);\n    } else if (delta > 0 && !tag.t) {\n      (0,_ember_data_tracking_private__WEBPACK_IMPORTED_MODULE_5__.addTransactionCB)(array[NOTIFY]);\n    }\n  }\n  _getPendingFor(identifier, includeManaged, isRemove) {\n    if (this.isDestroying || this.isDestroyed) {\n      return;\n    }\n    const liveArray = this._live.get(identifier.type);\n    const allPending = this._pending;\n    const pending = new Map();\n    if (includeManaged) {\n      const managed = this._identifiers.get(identifier);\n      if (managed) {\n        managed.forEach(arr => {\n          let changes = allPending.get(arr);\n          if (!changes) {\n            changes = new Map();\n            allPending.set(arr, changes);\n          }\n          pending.set(arr, changes);\n        });\n      }\n    }\n\n    // during unloadAll we can ignore removes since we've already\n    // cleared the array.\n    if (liveArray && liveArray[SOURCE].length === 0 && isRemove) {\n      const pendingLive = allPending.get(liveArray);\n      if (!pendingLive || pendingLive.size === 0) {\n        return pending;\n      }\n    }\n    if (!liveArray) {\n      // start building a changeset for when we eventually\n      // do have a live array\n      let changes = this._staged.get(identifier.type);\n      if (!changes) {\n        changes = new Map();\n        this._staged.set(identifier.type, changes);\n      }\n      pending.set(FAKE_ARR, changes);\n    } else {\n      let changes = allPending.get(liveArray);\n      if (!changes) {\n        changes = new Map();\n        allPending.set(liveArray, changes);\n      }\n      pending.set(liveArray, changes);\n    }\n    return pending;\n  }\n  populateManagedArray(array, identifiers, payload) {\n    this._pending.delete(array);\n    const source = array[SOURCE];\n    const old = source.slice();\n    source.length = 0;\n    fastPush(source, identifiers);\n    this._set.set(array, new Set(identifiers));\n    notifyArray(array);\n    array.meta = payload.meta || null;\n    array.links = payload.links || null;\n    array.isLoaded = true;\n    disassociate(this._identifiers, array, old);\n    associate(this._identifiers, array, identifiers);\n  }\n  identifierAdded(identifier) {\n    const changeSets = this._getPendingFor(identifier, false);\n    if (changeSets) {\n      changeSets.forEach((changes, array) => {\n        const existing = changes.get(identifier);\n        if (existing === 'del') {\n          changes.delete(identifier);\n        } else {\n          changes.set(identifier, 'add');\n          this.dirtyArray(array, changes.size);\n        }\n      });\n    }\n  }\n  identifierRemoved(identifier) {\n    const changeSets = this._getPendingFor(identifier, true, true);\n    if (changeSets) {\n      changeSets.forEach((changes, array) => {\n        const existing = changes.get(identifier);\n        if (existing === 'add') {\n          changes.delete(identifier);\n        } else {\n          changes.set(identifier, 'del');\n          this.dirtyArray(array, changes.size);\n        }\n      });\n    }\n  }\n  identifierChanged(identifier) {\n    const newState = this.store._instanceCache.recordIsLoaded(identifier, true);\n\n    // if the change matches the most recent direct added/removed\n    // state, then we can ignore it\n    if (this._visibilitySet.get(identifier) === newState) {\n      return;\n    }\n    if (newState) {\n      this.identifierAdded(identifier);\n    } else {\n      this.identifierRemoved(identifier);\n    }\n  }\n  clear(isClear = true) {\n    this._live.forEach(array => array.destroy(isClear));\n    this._managed.forEach(array => array.destroy(isClear));\n    this._managed.clear();\n    this._identifiers.clear();\n    this._pending.clear();\n    this._set.forEach(set => set.clear());\n    this._visibilitySet.clear();\n  }\n  destroy() {\n    this.isDestroying = true;\n    this.clear(false);\n    this._live.clear();\n    this.isDestroyed = true;\n    this.store.notifications.unsubscribe(this._subscription);\n  }\n}\nfunction associate(ArraysCache, array, identifiers) {\n  for (let i = 0; i < identifiers.length; i++) {\n    const identifier = identifiers[i];\n    let cache = ArraysCache.get(identifier);\n    if (!cache) {\n      cache = new Set();\n      ArraysCache.set(identifier, cache);\n    }\n    cache.add(array);\n  }\n}\nfunction disassociate(ArraysCache, array, identifiers) {\n  for (let i = 0; i < identifiers.length; i++) {\n    disassociateIdentifier(ArraysCache, array, identifiers[i]);\n  }\n}\nfunction disassociateIdentifier(ArraysCache, array, identifier) {\n  const cache = ArraysCache.get(identifier);\n  if (cache) {\n    cache.delete(array);\n  }\n}\nfunction sync(array, changes, arraySet) {\n  const state = array[SOURCE];\n  const adds = [];\n  const removes = [];\n  changes.forEach((value, key) => {\n    if (value === 'add') {\n      // likely we want to keep a Set along-side\n      if (arraySet.has(key)) {\n        return;\n      }\n      adds.push(key);\n      arraySet.add(key);\n    } else {\n      if (arraySet.has(key)) {\n        removes.push(key);\n        arraySet.delete(key);\n      }\n    }\n  });\n  if (removes.length) {\n    if (removes.length === state.length) {\n      state.length = 0;\n      // changing the reference breaks the Proxy\n      // state = array[SOURCE] = [];\n    } else {\n      removes.forEach(i => {\n        const index = state.indexOf(i);\n        if (index !== -1) {\n          state.splice(index, 1);\n          arraySet.delete(i);\n        }\n      });\n    }\n  }\n  if (adds.length) {\n    fastPush(state, adds);\n    // changing the reference breaks the Proxy\n    // else we could do this\n    /*\n    if (state.length === 0) {\n      array[SOURCE] = adds;\n    } else {\n      array[SOURCE] = state.concat(adds);\n    }\n    */\n  }\n}\n\n/**\n * @module @ember-data/store\n */\nconst Touching = Symbol('touching');\nconst RequestPromise = Symbol('promise');\nconst EMPTY_ARR = Object.freeze([]);\nfunction hasRecordIdentifier(op) {\n  return 'recordIdentifier' in op;\n}\n\n/**\n * The RequestStateService is used to track the state of requests\n * for fetching or updating known resource identifies that are inflight.\n *\n * @class RequestStateService\n * @public\n */\nclass RequestStateService {\n  constructor(store) {\n    this._pending = new Map();\n    this._done = new Map();\n    this._subscriptions = new Map();\n    this._toFlush = [];\n    this._store = void 0;\n    this._store = store;\n  }\n  _clearEntries(identifier) {\n    this._done.delete(identifier);\n  }\n  _enqueue(promise, queryRequest) {\n    const query = queryRequest.data[0];\n    if (hasRecordIdentifier(query)) {\n      const identifier = query.recordIdentifier;\n      const type = query.op === 'saveRecord' ? 'mutation' : 'query';\n      if (!this._pending.has(identifier)) {\n        this._pending.set(identifier, []);\n      }\n      const request = {\n        state: 'pending',\n        request: queryRequest,\n        type\n      };\n      request[Touching] = [query.recordIdentifier];\n      request[RequestPromise] = promise;\n      this._pending.get(identifier).push(request);\n      this._triggerSubscriptions(request);\n      return promise.then(result => {\n        this._dequeue(identifier, request);\n        const finalizedRequest = {\n          state: 'fulfilled',\n          request: queryRequest,\n          type,\n          response: {\n            data: result\n          }\n        };\n        finalizedRequest[Touching] = request[Touching];\n        this._addDone(finalizedRequest);\n        this._triggerSubscriptions(finalizedRequest);\n        return result;\n      }, error => {\n        this._dequeue(identifier, request);\n        const finalizedRequest = {\n          state: 'rejected',\n          request: queryRequest,\n          type,\n          response: {\n            data: error\n          }\n        };\n        finalizedRequest[Touching] = request[Touching];\n        this._addDone(finalizedRequest);\n        this._triggerSubscriptions(finalizedRequest);\n        throw error;\n      });\n    }\n    ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Expected a well formed  query`));\n  }\n  _triggerSubscriptions(req) {\n    if (req.state === 'pending') {\n      this._flushRequest(req);\n      return;\n    }\n    this._toFlush.push(req);\n    if (this._toFlush.length === 1) {\n      this._store.notifications._onNextFlush(() => {\n        this._flush();\n      });\n    }\n  }\n  _flush() {\n    this._toFlush.forEach(req => {\n      this._flushRequest(req);\n    });\n    this._toFlush = [];\n  }\n  _flushRequest(req) {\n    req[Touching].forEach(identifier => {\n      const subscriptions = this._subscriptions.get(identifier);\n      if (subscriptions) {\n        subscriptions.forEach(callback => callback(req));\n      }\n    });\n  }\n  _dequeue(identifier, request) {\n    const pending = this._pending.get(identifier);\n    this._pending.set(identifier, pending.filter(req => req !== request));\n  }\n  _addDone(request) {\n    request[Touching].forEach(identifier => {\n      // TODO add support for multiple\n      const requestDataOp = request.request.data[0].op;\n      let requests = this._done.get(identifier);\n      if (requests) {\n        requests = requests.filter(req => {\n          // TODO add support for multiple\n          let data;\n          if (Array.isArray(req.request.data)) {\n            data = req.request.data[0];\n          } else {\n            data = req.request.data;\n          }\n          return data.op !== requestDataOp;\n        });\n      }\n      requests = requests || [];\n      requests.push(request);\n      this._done.set(identifier, requests);\n    });\n  }\n\n  /**\n   * Subscribe to requests for a given resource identity.\n   *\n   * The callback will receive the current state of the request.\n   *\n   * ```ts\n   * interface RequestState {\n   *   state: 'pending' | 'fulfilled' | 'rejected';\n   *   type: 'query' | 'mutation';\n   *   request: Request;\n   *   response?: { data: unknown };\n   * }\n   * ```\n   *\n   * Note: It should be considered dangerous to use this API for more than simple\n   * state derivation or debugging. The `request` and `response` properties are poorly\n   * spec'd and may change unexpectedly when shifting what Handlers are in use or how\n   * requests are issued from the Store.\n   *\n   * We expect to revisit this API in the near future as we continue to refine the\n   * RequestManager ergonomics, as a simpler but more powerful direct integration\n   * with the RequestManager for these purposes is likely to be a better long-term\n   * design.\n   *\n   * @method subscribeForRecord\n   * @public\n   * @param {StableRecordIdentifier} identifier\n   * @param {(state: RequestState) => void} callback\n   */\n  subscribeForRecord(identifier, callback) {\n    let subscriptions = this._subscriptions.get(identifier);\n    if (!subscriptions) {\n      subscriptions = [];\n      this._subscriptions.set(identifier, subscriptions);\n    }\n    subscriptions.push(callback);\n  }\n\n  /**\n   * Retrieve all active requests for a given resource identity.\n   *\n   * @method getPendingRequestsForRecord\n   * @public\n   * @param {StableRecordIdentifier} identifier\n   * @return {RequestState[]} an array of request states for any pending requests for the given identifier\n   */\n  getPendingRequestsForRecord(identifier) {\n    return this._pending.get(identifier) || EMPTY_ARR;\n  }\n\n  /**\n   * Retrieve the last completed request for a given resource identity.\n   *\n   * @method getLastRequestForRecord\n   * @public\n   * @param {StableRecordIdentifier} identifier\n   * @return {RequestState | null} the state of the most recent request for the given identifier\n   */\n  getLastRequestForRecord(identifier) {\n    const requests = this._done.get(identifier);\n    if (requests) {\n      return requests[requests.length - 1];\n    }\n    return null;\n  }\n}\nfunction isNonEmptyString(str) {\n  return Boolean(str && typeof str === 'string');\n}\nfunction constructResource(type, id, lid) {\n  if (typeof type === 'object' && type !== null) {\n    const resource = type;\n    if (isStableIdentifier(resource)) {\n      return resource;\n    }\n    if ('id' in resource) {\n      resource.id = coerceId(resource.id);\n    }\n    ( true && !('id' in resource && isNonEmptyString(resource.id) || isNonEmptyString(resource.lid)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)('Expected either id or lid to be a valid string', 'id' in resource && isNonEmptyString(resource.id) || isNonEmptyString(resource.lid)));\n    ( true && !(!('id' in resource) || typeof resource.type === 'string') && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)('if id is present, the type must be a string', !('id' in resource) || typeof resource.type === 'string'));\n    return resource;\n  } else {\n    const trueId = coerceId(id);\n    if (!isNonEmptyString(trueId)) {\n      if (isNonEmptyString(lid)) {\n        return {\n          lid\n        };\n      }\n      throw new Error('Expected either id or lid to be a valid string');\n    }\n    ( true && !(typeof type === 'string') && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)('type must be a string', typeof type === 'string'));\n    if (isNonEmptyString(lid)) {\n      return {\n        type,\n        id: trueId,\n        lid\n      };\n    }\n    return {\n      type,\n      id: trueId\n    };\n  }\n}\n\n/**\n  @module @ember-data/store\n */\n// this import location is deprecated but breaks in 4.8 and older\n\n/**\n * A Store coordinates interaction between your application, a [Cache](https://api.emberjs.com/ember-data/release/classes/%3CInterface%3E%20Cache),\n * and sources of data (such as your API or a local persistence layer)\n * accessed via a [RequestManager](https://github.com/emberjs/data/tree/main/packages/request).\n *\n * ```app/services/store.js\n * import Store from '@ember-data/store';\n *\n * export default class extends Store {}\n * ```\n *\n * Most Ember applications will only have a single `Store` configured as a Service\n * in this manner. However, setting up multiple stores is possible, including using\n * each as a unique service.\n *\n\n  @class Store\n  @public\n*/\n\n// @ts-expect-error\n\nclass Store extends (_ember_object__WEBPACK_IMPORTED_MODULE_1___default()) {\n  /**\n   * Provides access to the NotificationManager associated\n   * with this Store instance.\n   *\n   * The NotificationManager can be used to subscribe to\n   * changes to the cache.\n   *\n   * @property {NotificationManager} notifications\n   * @public\n   */\n\n  /**\n   * Provides access to the SchemaService instance\n   * for this Store instance.\n   *\n   * The SchemaService can be used to query for\n   * information about the schema of a resource.\n   *\n   * @property {SchemaService} schema\n   * @public\n   */\n  get schema() {\n    return this.getSchemaDefinitionService();\n  }\n\n  /**\n   * Provides access to the IdentifierCache instance\n   * for this store.\n   *\n   * The IdentifierCache can be used to generate or\n   * retrieve a stable unique identifier for any resource.\n   *\n   * @property {IdentifierCache} identifierCache\n   * @public\n   */\n\n  /**\n   * Provides access to the requestManager instance associated\n   * with this Store instance.\n   *\n   * When using `ember-data` this property is automatically\n   * set to an instance of `RequestManager`. When not using `ember-data`\n   * you must configure this property yourself, either by declaring\n   * it as a service or by initializing it.\n   *\n   * ```ts\n   * import Store, { CacheHandler } from '@ember-data/store';\n   * import RequestManager from '@ember-data/request';\n   * import Fetch from '@ember/data/request/fetch';\n   *\n   * class extends Store {\n   *   constructor() {\n   *     super(...arguments);\n   *     this.requestManager = new RequestManager();\n   *     this.requestManager.use([Fetch]);\n   *     this.requestManager.useCache(CacheHandler);\n   *   }\n   * }\n   * ```\n   *\n   * @public\n   * @property {RequestManager} requestManager\n   */\n\n  /**\n   * A Property which an App may set to provide a Lifetimes Service\n   * to control when a cached request becomes stale.\n   *\n   * Note, when defined, these methods will only be invoked if a\n   * cache key exists for the request, either because the request\n   * contains `cacheOptions.key` or because the [IdentifierCache](/ember-data/release/classes/IdentifierCache)\n   * was able to generate a key for the request using the configured\n   * [generation method](/ember-data/release/functions/@ember-data%2Fstore/setIdentifierGenerationMethod).\n   *\n   * `isSoftExpired` will only be invoked if `isHardExpired` returns `false`.\n   *\n   * ```ts\n   * store.lifetimes = {\n   *   // make the request and ignore the current cache state\n   *   isHardExpired(identifier: StableDocumentIdentifier): boolean {\n   *     return false;\n   *   }\n   *\n   *   // make the request in the background if true, return cache state\n   *   isSoftExpired(identifier: StableDocumentIdentifier): boolean {\n   *     return false;\n   *   }\n   * }\n   * ```\n   *\n   * @public\n   * @property {LivetimesService|undefined} lifetimes\n   */\n\n  // Private\n\n  // DEBUG-only properties\n\n  get isDestroying() {\n    return this._isDestroying;\n  }\n  set isDestroying(value) {\n    this._isDestroying = value;\n  }\n  get isDestroyed() {\n    return this._isDestroyed;\n  }\n  set isDestroyed(value) {\n    this._isDestroyed = value;\n  }\n\n  /**\n    @method init\n    @private\n  */\n  constructor(createArgs) {\n    // @ts-expect-error ember-source types improperly expect createArgs to be `Owner`\n    super(createArgs);\n    Object.assign(this, createArgs);\n    this.identifierCache = new IdentifierCache();\n    this.notifications = new NotificationManager(this);\n\n    // private but maybe useful to be here, somewhat intimate\n    this.recordArrayManager = new RecordArrayManager({\n      store: this\n    });\n\n    // private\n    this._requestCache = new RequestStateService(this);\n    this._instanceCache = new InstanceCache(this);\n    this._documentCache = new Map();\n    this.isDestroying = false;\n    this.isDestroyed = false;\n  }\n  _run(cb) {\n    ( true && !(!this._cbs) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`EmberData should never encounter a nested run`, !this._cbs));\n    const _cbs = this._cbs = {};\n    {\n      try {\n        cb();\n        if (_cbs.coalesce) {\n          _cbs.coalesce();\n        }\n        if (_cbs.sync) {\n          _cbs.sync();\n        }\n        if (_cbs.notify) {\n          _cbs.notify();\n        }\n      } finally {\n        this._cbs = null;\n      }\n    }\n  }\n  _join(cb) {\n    if (this._cbs) {\n      cb();\n    } else {\n      this._run(cb);\n    }\n  }\n  _schedule(name, cb) {\n    ( true && !(!!this._cbs) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`EmberData expects to schedule only when there is an active run`, !!this._cbs));\n    ( true && !(!this._cbs[name]) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`EmberData expects only one flush per queue name, cannot schedule ${name}`, !this._cbs[name]));\n    this._cbs[name] = cb;\n  }\n\n  /**\n   * Retrieve the RequestStateService instance\n   * associated with this Store.\n   *\n   * This can be used to query the status of requests\n   * that have been initiated for a given identifier.\n   *\n   * @method getRequestStateService\n   * @return {RequestStateService}\n   * @public\n   */\n  getRequestStateService() {\n    return this._requestCache;\n  }\n  _getAllPending() {\n    {\n      const all = [];\n      const pending = this._requestCache._pending;\n      pending.forEach(requests => {\n        all.push(...requests.map(v => v[RequestPromise]));\n      });\n      this.requestManager._pending.forEach(v => all.push(v));\n      const promise = Promise.allSettled(all);\n      promise.length = all.length;\n      return promise;\n    }\n  }\n\n  /**\n   * Issue a request via the configured RequestManager,\n   * inserting the response into the cache and handing\n   * back a Future which resolves to a ResponseDocument\n   *\n   * ## Cache Keys\n   *\n   * Only GET requests with a url or requests with an explicit\n   * cache key (`cacheOptions.key`) will have the request result\n   * and document cached.\n   *\n   * The cache key used is `requestConfig.cacheOptions.key`\n   * if present, falling back to `requestconfig.url`.\n   *\n   * Params are not serialized as part of the cache-key, so\n   * either ensure they are already in the url or utilize\n   * `requestConfig.cacheOptions.key`. For queries issued\n   * via the `POST` method `requestConfig.cacheOptions.key`\n   * MUST be supplied for the document to be cached.\n   *\n   * ## Requesting Without a Cache Key\n   *\n   * Resource data within the request is always updated in the cache,\n   * regardless of whether a cache key is present for the request.\n   *\n   * ## Fulfilling From Cache\n   *\n   * When a cache-key is determined, the request may fulfill\n   * from cache provided the cache is not stale.\n   *\n   * Cache staleness is determined by the configured LifetimesService\n   * with priority given to the `cacheOptions.reload` and\n   * `cacheOptions.backgroundReload` on the request if present.\n   *\n   * If the cache data has soft expired or the request asks for a background\n   * reload, the request will fulfill from cache if possible and\n   * make a non-blocking request in the background to update the cache.\n   *\n   * If the cache data has hard expired or the request asks for a reload,\n   * the request will not fulfill from cache and will make a blocking\n   * request to update the cache.\n   *\n   * ## The Response\n   *\n   * The primary difference between `requestManager.request` and `store.request`\n   * is that `store.request` will attempt to hydrate the response content into\n   * a response Document containing RecordInstances.\n   *\n   * @method request\n   * @param {StoreRequestInput} requestConfig\n   * @return {Future}\n   * @public\n   */\n  request(requestConfig) {\n    // we lazily set the cache handler when we issue the first request\n    // because constructor doesn't allow for this to run after\n    // the user has had the chance to set the prop.\n    const opts = {\n      store: this,\n      [_warp_drive_core_types_request__WEBPACK_IMPORTED_MODULE_2__.EnableHydration]: true\n    };\n    if (requestConfig.records) {\n      const identifierCache = this.identifierCache;\n      opts.records = requestConfig.records.map(r => identifierCache.getOrCreateRecordIdentifier(r));\n    }\n    {\n      if (this.DISABLE_WAITER) {\n        opts.disableTestWaiter = typeof requestConfig.disableTestWaiter === 'boolean' ? requestConfig.disableTestWaiter : true;\n      }\n    }\n    const future = this.requestManager.request(Object.assign(requestConfig, opts));\n    future.onFinalize(() => {\n      // skip flush for legacy belongsTo\n      if (requestConfig.op === 'findBelongsTo' && !requestConfig.url) {\n        return;\n      }\n      this.notifications._flush();\n    });\n    return future;\n  }\n\n  /**\n   * A hook which an app or addon may implement. Called when\n   * the Store is attempting to create a Record Instance for\n   * a resource.\n   *\n   * This hook can be used to select or instantiate any desired\n   * mechanism of presentating cache data to the ui for access\n   * mutation, and interaction.\n   *\n   * @method instantiateRecord (hook)\n   * @param identifier\n   * @param createRecordArgs\n   * @param recordDataFor deprecated use this.cache\n   * @param notificationManager deprecated use this.notifications\n   * @return A record instance\n   * @public\n   */\n\n  /**\n   * A hook which an app or addon may implement. Called when\n   * the Store is destroying a Record Instance. This hook should\n   * be used to teardown any custom record instances instantiated\n   * with `instantiateRecord`.\n   *\n   * @method teardownRecord (hook)\n   * @public\n   * @param record\n   */\n\n  /**\n   * Provides access to the SchemaDefinitionService instance\n   * for this Store instance.\n   *\n   * The SchemaDefinitionService can be used to query for\n   * information about the schema of a resource.\n   *\n   * @method getSchemaDefinitionService\n   * @public\n   */\n  getSchemaDefinitionService() {\n    ( true && !(this._schema) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`You must registerSchemaDefinitionService with the store to use custom model classes`, this._schema));\n    return this._schema;\n  }\n\n  /**\n   * DEPRECATED - Use `registerSchema` instead.\n   *\n   * Allows an app to register a custom SchemaService\n   * for use when information about a resource's schema needs\n   * to be queried.\n   *\n   * This method can only be called more than once, but only one schema\n   * definition service may exist. Therefore if you wish to chain services\n   * you must lookup the existing service and close over it with the new\n   * service by accessing `store.schema` prior to registration.\n   *\n   * For Example:\n   *\n   * ```ts\n   * import Store from '@ember-data/store';\n   *\n   * class SchemaDelegator {\n   *   constructor(schema) {\n   *     this._schema = schema;\n   *   }\n   *\n   *   doesTypeExist(type: string): boolean {\n   *     if (AbstractSchemas.has(type)) {\n   *       return true;\n   *     }\n   *     return this._schema.doesTypeExist(type);\n   *   }\n   *\n   *   attributesDefinitionFor(identifier: RecordIdentifier | { type: string }): AttributesSchema {\n   *     return this._schema.attributesDefinitionFor(identifier);\n   *   }\n   *\n   *   relationshipsDefinitionFor(identifier: RecordIdentifier | { type: string }): RelationshipsSchema {\n   *     const schema = AbstractSchemas.get(identifier.type);\n   *     return schema || this._schema.relationshipsDefinitionFor(identifier);\n   *   }\n   * }\n   *\n   * export default class extends Store {\n   *   constructor(...args) {\n   *     super(...args);\n   *\n   *     const schema = this.schema;\n   *     this.registerSchemaDefinitionService(new SchemaDelegator(schema));\n   *   }\n   * }\n   * ```\n   *\n   * @method registerSchemaDefinitionService\n   * @param {SchemaService} schema\n   * @deprecated\n   * @public\n   */\n  registerSchemaDefinitionService(schema) {\n    this._schema = schema;\n  }\n  /**\n   * Allows an app to register a custom SchemaService\n   * for use when information about a resource's schema needs\n   * to be queried.\n   *\n   * This method can only be called more than once, but only one schema\n   * definition service may exist. Therefore if you wish to chain services\n   * you must lookup the existing service and close over it with the new\n   * service by accessing `store.schema` prior to registration.\n   *\n   * For Example:\n   *\n   * ```ts\n   * import Store from '@ember-data/store';\n   *\n   * class SchemaDelegator {\n   *   constructor(schema) {\n   *     this._schema = schema;\n   *   }\n   *\n   *   doesTypeExist(type: string): boolean {\n   *     if (AbstractSchemas.has(type)) {\n   *       return true;\n   *     }\n   *     return this._schema.doesTypeExist(type);\n   *   }\n   *\n   *   attributesDefinitionFor(identifier: RecordIdentifier | { type: string }): AttributesSchema {\n   *     return this._schema.attributesDefinitionFor(identifier);\n   *   }\n   *\n   *   relationshipsDefinitionFor(identifier: RecordIdentifier | { type: string }): RelationshipsSchema {\n   *     const schema = AbstractSchemas.get(identifier.type);\n   *     return schema || this._schema.relationshipsDefinitionFor(identifier);\n   *   }\n   * }\n   *\n   * export default class extends Store {\n   *   constructor(...args) {\n   *     super(...args);\n   *\n   *     const schema = this.schema;\n   *     this.registerSchema(new SchemaDelegator(schema));\n   *   }\n   * }\n   * ```\n   *\n   * @method registerSchema\n   * @param {SchemaService} schema\n   * @public\n   */\n  registerSchema(schema) {\n    this._schema = schema;\n  }\n\n  /**\n    Returns the schema for a particular `modelName`.\n     When used with Model from @ember-data/model the return is the model class,\n    but this is not guaranteed.\n     If looking to query attribute or relationship information it is\n    recommended to use `getSchemaDefinitionService` instead. This method\n    should be considered legacy and exists primarily to continue to support\n    Adapter/Serializer APIs which expect it's return value in their method\n    signatures.\n     The class of a model might be useful if you want to get a list of all the\n    relationship names of the model, see\n    [`relationshipNames`](/ember-data/release/classes/Model?anchor=relationshipNames)\n    for example.\n     @method modelFor\n    @public\n    @param {String} type\n    @return {ModelSchema}\n    */\n  // TODO @deprecate in favor of schema APIs, requires adapter/serializer overhaul or replacement\n\n  modelFor(type) {\n    {\n      assertDestroyedStoreOnly(this, 'modelFor');\n    }\n    ( true && !(typeof type === 'string' && type.length) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`You need to pass <type> to the store's modelFor method`, typeof type === 'string' && type.length));\n    ( true && !(this.getSchemaDefinitionService().doesTypeExist(type)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`No model was found for '${type}' and no schema handles the type`, this.getSchemaDefinitionService().doesTypeExist(type)));\n    return getShimClass(this, type);\n  }\n\n  /**\n    Create a new record in the current store. The properties passed\n    to this method are set on the newly created record.\n     To create a new instance of a `Post`:\n     ```js\n    store.createRecord('post', {\n      title: 'Ember is awesome!'\n    });\n    ```\n     To create a new instance of a `Post` that has a relationship with a `User` record:\n     ```js\n    let user = this.store.peekRecord('user', 1);\n    store.createRecord('post', {\n      title: 'Ember is awesome!',\n      user: user\n    });\n    ```\n     @method createRecord\n    @public\n    @param {String} modelName\n    @param {Object} inputProperties a hash of properties to set on the\n      newly created record.\n    @return {Model} record\n  */\n  createRecord(modelName, inputProperties) {\n    {\n      assertDestroyingStore(this, 'createRecord');\n    }\n    ( true && !(modelName) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`You need to pass a model name to the store's createRecord method`, modelName));\n    ( true && !(typeof modelName === 'string') && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Passing classes to store methods has been removed. Please pass a dasherized string instead of ${modelName}`, typeof modelName === 'string')); // This is wrapped in a `run.join` so that in test environments users do not need to manually wrap\n    //   calls to `createRecord`. The run loop usage here is because we batch the joining and updating\n    //   of record-arrays via ember's run loop, not our own.\n    //\n    //   to remove this, we would need to move to a new `async` API.\n    let record;\n    this._join(() => {\n      const normalizedModelName = normalizeModelName(modelName);\n      const properties = {\n        ...inputProperties\n      };\n\n      // If the passed properties do not include a primary key,\n      // give the adapter an opportunity to generate one. Typically,\n      // client-side ID generators will use something like uuid.js\n      // to avoid conflicts.\n\n      if (properties.id === null || properties.id === undefined) {\n        const adapter = this.adapterFor?.(modelName, true);\n        if (adapter && adapter.generateIdForRecord) {\n          properties.id = adapter.generateIdForRecord(this, modelName, properties);\n        } else {\n          properties.id = null;\n        }\n      }\n\n      // Coerce ID to a string\n      properties.id = coerceId(properties.id);\n      const resource = {\n        type: normalizedModelName,\n        id: properties.id\n      };\n      if (resource.id) {\n        const identifier = this.identifierCache.peekRecordIdentifier(resource);\n        ( true && !(!identifier) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`The id ${String(properties.id)} has already been used with another '${normalizedModelName}' record.`, !identifier));\n      }\n      const identifier = this.identifierCache.createIdentifierForNewRecord(resource);\n      const cache = this.cache;\n      const createOptions = normalizeProperties(this, identifier, properties);\n      const resultProps = cache.clientDidCreate(identifier, createOptions);\n      record = this._instanceCache.getRecord(identifier, resultProps);\n    });\n    return record;\n  }\n\n  /**\n    For symmetry, a record can be deleted via the store.\n     Example\n     ```javascript\n    let post = store.createRecord('post', {\n      title: 'Ember is awesome!'\n    });\n     store.deleteRecord(post);\n    ```\n     @method deleteRecord\n    @public\n    @param {Model} record\n  */\n  deleteRecord(record) {\n    {\n      assertDestroyingStore(this, 'deleteRecord');\n    }\n    const identifier = peekRecordIdentifier(record);\n    const cache = this.cache;\n    ( true && !(identifier) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`expected the record to be connected to a cache`, identifier));\n    this._join(() => {\n      cache.setIsDeleted(identifier, true);\n      if (cache.isNew(identifier)) {\n        this._instanceCache.unloadRecord(identifier);\n      }\n    });\n  }\n\n  /**\n    For symmetry, a record can be unloaded via the store.\n    This will cause the record to be destroyed and freed up for garbage collection.\n     Example\n     ```javascript\n    store.findRecord('post', 1).then(function(post) {\n      store.unloadRecord(post);\n    });\n    ```\n     @method unloadRecord\n    @public\n    @param {Model} record\n  */\n  unloadRecord(record) {\n    {\n      assertDestroyingStore(this, 'unloadRecord');\n    }\n    const identifier = peekRecordIdentifier(record);\n    if (identifier) {\n      this._instanceCache.unloadRecord(identifier);\n    }\n  }\n\n  /**\n    This method returns a record for a given identifier or type and id combination.\n     The `findRecord` method will always resolve its promise with the same\n    object for a given identifier or type and `id`.\n     The `findRecord` method will always return a **promise** that will be\n    resolved with the record.\n     **Example 1**\n     ```app/routes/post.js\n    import Route from '@ember/routing/route';\n     export default class PostRoute extends Route {\n      model({ post_id }) {\n        return this.store.findRecord('post', post_id);\n      }\n    }\n    ```\n     **Example 2**\n     `findRecord` can be called with a single identifier argument instead of the combination\n    of `type` (modelName) and `id` as separate arguments. You may recognize this combo as\n    the typical pairing from [JSON:API](https://jsonapi.org/format/#document-resource-object-identification)\n     ```app/routes/post.js\n    import Route from '@ember/routing/route';\n     export default class PostRoute extends Route {\n      model({ post_id: id }) {\n        return this.store.findRecord({ type: 'post', id });\n      }\n    }\n    ```\n     **Example 3**\n     If you have previously received an lid via an Identifier for this record, and the record\n    has already been assigned an id, you can find the record again using just the lid.\n     ```app/routes/post.js\n    store.findRecord({ lid });\n    ```\n     If the record is not yet available, the store will ask the adapter's `findRecord`\n    method to retrieve and supply the necessary data. If the record is already present\n    in the store, it depends on the reload behavior _when_ the returned promise\n    resolves.\n     ### Preloading\n     You can optionally `preload` specific attributes and relationships that you know of\n    by passing them via the passed `options`.\n     For example, if your Ember route looks like `/posts/1/comments/2` and your API route\n    for the comment also looks like `/posts/1/comments/2` if you want to fetch the comment\n    without also fetching the post you can pass in the post to the `findRecord` call:\n     ```app/routes/post-comments.js\n    import Route from '@ember/routing/route';\n     export default class PostRoute extends Route {\n      model({ post_id, comment_id: id }) {\n        return this.store.findRecord({ type: 'comment', id, { preload: { post: post_id }} });\n      }\n    }\n    ```\n     In your adapter you can then access this id without triggering a network request via the\n    snapshot:\n     ```app/adapters/application.js\n    export default class Adapter {\n       findRecord(store, schema, id, snapshot) {\n        let type = schema.modelName;\n         if (type === 'comment')\n          let postId = snapshot.belongsTo('post', { id: true });\n           return fetch(`./posts/${postId}/comments/${id}`)\n            .then(response => response.json())\n        }\n      }\n       static create() {\n        return new this();\n      }\n    }\n    ```\n     This could also be achieved by supplying the post id to the adapter via the adapterOptions\n    property on the options hash.\n     ```app/routes/post-comments.js\n    import Route from '@ember/routing/route';\n     export default class PostRoute extends Route {\n      model({ post_id, comment_id: id }) {\n        return this.store.findRecord({ type: 'comment', id, { adapterOptions: { post: post_id }} });\n      }\n    }\n    ```\n     ```app/adapters/application.js\n    export default class Adapter {\n      findRecord(store, schema, id, snapshot) {\n        let type = schema.modelName;\n         if (type === 'comment')\n          let postId = snapshot.adapterOptions.post;\n           return fetch(`./posts/${postId}/comments/${id}`)\n            .then(response => response.json())\n        }\n      }\n       static create() {\n        return new this();\n      }\n    }\n    ```\n     If you have access to the post model you can also pass the model itself to preload:\n     ```javascript\n    let post = await store.findRecord('post', 1);\n    let comment = await store.findRecord('comment', 2, { post: myPostModel });\n    ```\n     ### Reloading\n     The reload behavior is configured either via the passed `options` hash or\n    the result of the adapter's `shouldReloadRecord`.\n     If `{ reload: true }` is passed or `adapter.shouldReloadRecord` evaluates\n    to `true`, then the returned promise resolves once the adapter returns\n    data, regardless if the requested record is already in the store:\n     ```js\n    store.push({\n      data: {\n        id: 1,\n        type: 'post',\n        revision: 1\n      }\n    });\n     // adapter#findRecord resolves with\n    // [\n    //   {\n    //     id: 1,\n    //     type: 'post',\n    //     revision: 2\n    //   }\n    // ]\n    store.findRecord('post', 1, { reload: true }).then(function(post) {\n      post.revision; // 2\n    });\n    ```\n     If no reload is indicated via the above mentioned ways, then the promise\n    immediately resolves with the cached version in the store.\n     ### Background Reloading\n     Optionally, if `adapter.shouldBackgroundReloadRecord` evaluates to `true`,\n    then a background reload is started, which updates the records' data, once\n    it is available:\n     ```js\n    // app/adapters/post.js\n    import ApplicationAdapter from \"./application\";\n     export default class PostAdapter extends ApplicationAdapter {\n      shouldReloadRecord(store, snapshot) {\n        return false;\n      },\n       shouldBackgroundReloadRecord(store, snapshot) {\n        return true;\n      }\n    });\n     // ...\n     store.push({\n      data: {\n        id: 1,\n        type: 'post',\n        revision: 1\n      }\n    });\n     let blogPost = store.findRecord('post', 1).then(function(post) {\n      post.revision; // 1\n    });\n     // later, once adapter#findRecord resolved with\n    // [\n    //   {\n    //     id: 1,\n    //     type: 'post',\n    //     revision: 2\n    //   }\n    // ]\n     blogPost.revision; // 2\n    ```\n     If you would like to force or prevent background reloading, you can set a\n    boolean value for `backgroundReload` in the options object for\n    `findRecord`.\n     ```app/routes/post/edit.js\n    import Route from '@ember/routing/route';\n     export default class PostEditRoute extends Route {\n      model(params) {\n        return this.store.findRecord('post', params.post_id, { backgroundReload: false });\n      }\n    }\n    ```\n     If you pass an object on the `adapterOptions` property of the options\n    argument it will be passed to your adapter via the snapshot\n     ```app/routes/post/edit.js\n    import Route from '@ember/routing/route';\n     export default class PostEditRoute extends Route {\n      model(params) {\n        return this.store.findRecord('post', params.post_id, {\n          adapterOptions: { subscribe: false }\n        });\n      }\n    }\n    ```\n     ```app/adapters/post.js\n    import MyCustomAdapter from './custom-adapter';\n     export default class PostAdapter extends MyCustomAdapter {\n      findRecord(store, type, id, snapshot) {\n        if (snapshot.adapterOptions.subscribe) {\n          // ...\n        }\n        // ...\n      }\n    }\n    ```\n     See [peekRecord](../methods/peekRecord?anchor=peekRecord) to get the cached version of a record.\n     ### Retrieving Related Model Records\n     If you use an adapter such as Ember's default\n    [`JSONAPIAdapter`](/ember-data/release/classes/JSONAPIAdapter)\n    that supports the [JSON API specification](http://jsonapi.org/) and if your server\n    endpoint supports the use of an\n    ['include' query parameter](http://jsonapi.org/format/#fetching-includes),\n    you can use `findRecord()` or `findAll()` to automatically retrieve additional records related to\n    the one you request by supplying an `include` parameter in the `options` object.\n     For example, given a `post` model that has a `hasMany` relationship with a `comment`\n    model, when we retrieve a specific post we can have the server also return that post's\n    comments in the same request:\n     ```app/routes/post.js\n    import Route from '@ember/routing/route';\n     export default class PostRoute extends Route {\n      model(params) {\n        return this.store.findRecord('post', params.post_id, { include: 'comments' });\n      }\n    }\n    ```\n     ```app/adapters/application.js\n    export default class Adapter {\n      findRecord(store, schema, id, snapshot) {\n        let type = schema.modelName;\n         if (type === 'post')\n          let includes = snapshot.adapterOptions.include;\n           return fetch(`./posts/${postId}?include=${includes}`)\n            .then(response => response.json())\n        }\n      }\n       static create() {\n        return new this();\n      }\n    }\n    ```\n     In this case, the post's comments would then be available in your template as\n    `model.comments`.\n     Multiple relationships can be requested using an `include` parameter consisting of a\n    comma-separated list (without white-space) while nested relationships can be specified\n    using a dot-separated sequence of relationship names. So to request both the post's\n    comments and the authors of those comments the request would look like this:\n     ```app/routes/post.js\n    import Route from '@ember/routing/route';\n     export default class PostRoute extends Route {\n      model(params) {\n        return this.store.findRecord('post', params.post_id, { include: 'comments,comments.author' });\n      }\n    }\n    ```\n     ### Retrieving Specific Fields by Type\n     If your server endpoint supports the use of a ['fields' query parameter](https://jsonapi.org/format/#fetching-sparse-fieldsets),\n    you can use pass those fields through to your server.  At this point in time, this requires a few manual steps on your part.\n     1. Implement `buildQuery` in your adapter.\n     ```app/adapters/application.js\n    buildQuery(snapshot) {\n      let query = super.buildQuery(...arguments);\n       let { fields } = snapshot.adapterOptions;\n       if (fields) {\n        query.fields = fields;\n      }\n       return query;\n    }\n    ```\n     2. Then pass through the applicable fields to your `findRecord` request.\n     Given a `post` model with attributes body, title, publishDate and meta, you can retrieve a filtered list of attributes.\n     ```app/routes/post.js\n    import Route from '@ember/routing/route';\n    export default Route.extend({\n      model(params) {\n        return this.store.findRecord('post', params.post_id, { adapterOptions: { fields: { post: 'body,title' } });\n      }\n    });\n    ```\n     Moreover, you can filter attributes on related models as well. If a `post` has a `belongsTo` relationship to a user,\n    just include the relationship key and attributes.\n     ```app/routes/post.js\n    import Route from '@ember/routing/route';\n    export default Route.extend({\n      model(params) {\n        return this.store.findRecord('post', params.post_id, { adapterOptions: { fields: { post: 'body,title', user: 'name,email' } });\n      }\n    });\n    ```\n     @since 1.13.0\n    @method findRecord\n    @public\n    @param {String|object} modelName - either a string representing the modelName or a ResourceIdentifier object containing both the type (a string) and the id (a string) for the record or an lid (a string) of an existing record\n    @param {(String|Integer|Object)} id - optional object with options for the request only if the first param is a ResourceIdentifier, else the string id of the record to be retrieved\n    @param {Object} [options] - if the first param is a string this will be the optional options for the request. See examples for available options.\n    @return {Promise} promise\n  */\n\n  findRecord(resource, id, options) {\n    {\n      assertDestroyingStore(this, 'findRecord');\n    }\n    ( true && !(resource) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`You need to pass a modelName or resource identifier as the first argument to the store's findRecord method`, resource));\n    if (isMaybeIdentifier(resource)) {\n      options = id;\n    } else {\n      ( true && !(typeof resource === 'string') && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Passing classes to store methods has been removed. Please pass a dasherized string instead of ${resource}`, typeof resource === 'string'));\n      const type = normalizeModelName(resource);\n      const normalizedId = ensureStringId(id);\n      resource = constructResource(type, normalizedId);\n    }\n    const identifier = this.identifierCache.getOrCreateRecordIdentifier(resource);\n    options = options || {};\n    if (options.preload) {\n      // force reload if we preload to ensure we don't resolve the promise\n      // until we are complete, else we will end up background-reloading\n      // even for initial load.\n      if (!this._instanceCache.recordIsLoaded(identifier)) {\n        options.reload = true;\n      }\n      this._join(() => {\n        preloadData(this, identifier, options.preload);\n      });\n    }\n    const promise = this.request({\n      op: 'findRecord',\n      data: {\n        record: identifier,\n        options\n      },\n      cacheOptions: {\n        [_warp_drive_core_types_request__WEBPACK_IMPORTED_MODULE_2__.SkipCache]: true\n      }\n    });\n    return promise.then(document => {\n      return document.content;\n    });\n  }\n\n  /**\n    Get the reference for the specified record.\n     Example\n     ```javascript\n    let userRef = store.getReference('user', 1);\n     // check if the user is loaded\n    let isLoaded = userRef.value() !== null;\n     // get the record of the reference (null if not yet available)\n    let user = userRef.value();\n     // get the identifier of the reference\n    if (userRef.remoteType() === 'id') {\n    let id = userRef.id();\n    }\n     // load user (via store.find)\n    userRef.load().then(...)\n     // or trigger a reload\n    userRef.reload().then(...)\n     // provide data for reference\n    userRef.push({ id: 1, username: '@user' }).then(function(user) {\n      userRef.value() === user;\n    });\n    ```\n     @method getReference\n    @public\n    @param {String|object} resource - modelName (string) or Identifier (object)\n    @param {String|Integer} id\n    @since 2.5.0\n    @return {RecordReference}\n  */\n  // TODO @deprecate getReference (and references generally)\n  getReference(resource, id) {\n    {\n      assertDestroyingStore(this, 'getReference');\n    }\n    let resourceIdentifier;\n    if (arguments.length === 1 && isMaybeIdentifier(resource)) {\n      resourceIdentifier = resource;\n    } else {\n      const type = normalizeModelName(resource);\n      const normalizedId = ensureStringId(id);\n      resourceIdentifier = constructResource(type, normalizedId);\n    }\n    ( true && !(isMaybeIdentifier(resourceIdentifier)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)('getReference expected to receive either a resource identifier or type and id as arguments', isMaybeIdentifier(resourceIdentifier)));\n    const identifier = this.identifierCache.getOrCreateRecordIdentifier(resourceIdentifier);\n    return this._instanceCache.getReference(identifier);\n  }\n\n  /**\n    Get a record by a given type and ID without triggering a fetch.\n     This method will synchronously return the record if it is available in the store,\n    otherwise it will return `null`. A record is available if it has been fetched earlier, or\n    pushed manually into the store.\n     See [findRecord](../methods/findRecord?anchor=findRecord) if you would like to request this record from the backend.\n     _Note: This is a synchronous method and does not return a promise._\n     **Example 1**\n     ```js\n    let post = store.peekRecord('post', 1);\n     post.id; // 1\n    ```\n     `peekRecord` can be called with a single identifier argument instead of the combination\n    of `type` (modelName) and `id` as separate arguments. You may recognize this combo as\n    the typical pairing from [JSON:API](https://jsonapi.org/format/#document-resource-object-identification)\n     **Example 2**\n     ```js\n    let post = store.peekRecord({ type: 'post', id });\n    post.id; // 1\n    ```\n     If you have previously received an lid from an Identifier for this record, you can lookup the record again using\n    just the lid.\n     **Example 3**\n     ```js\n    let post = store.peekRecord({ lid });\n    post.id; // 1\n    ```\n      @since 1.13.0\n    @method peekRecord\n    @public\n    @param {String|object} modelName - either a string representing the modelName or a ResourceIdentifier object containing both the type (a string) and the id (a string) for the record or an lid (a string) of an existing record\n    @param {String|Integer} id - optional only if the first param is a ResourceIdentifier, else the string id of the record to be retrieved.\n    @return {Model|null} record\n  */\n\n  peekRecord(identifier, id) {\n    if (arguments.length === 1 && isMaybeIdentifier(identifier)) {\n      const stableIdentifier = this.identifierCache.peekRecordIdentifier(identifier);\n      const isLoaded = stableIdentifier && this._instanceCache.recordIsLoaded(stableIdentifier);\n      // TODO come up with a better mechanism for determining if we have data and could peek.\n      // this is basically an \"are we not empty\" query.\n      return isLoaded ? this._instanceCache.getRecord(stableIdentifier) : null;\n    }\n    {\n      assertDestroyingStore(this, 'peekRecord');\n    }\n    ( true && !(identifier) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`You need to pass a model name to the store's peekRecord method`, identifier));\n    ( true && !(typeof identifier === 'string') && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Passing classes to store methods has been removed. Please pass a dasherized string instead of ${String(identifier)}`, typeof identifier === 'string'));\n    const type = normalizeModelName(identifier);\n    const normalizedId = ensureStringId(id);\n    const resource = {\n      type,\n      id: normalizedId\n    };\n    const stableIdentifier = this.identifierCache.peekRecordIdentifier(resource);\n    const isLoaded = stableIdentifier && this._instanceCache.recordIsLoaded(stableIdentifier);\n    return isLoaded ? this._instanceCache.getRecord(stableIdentifier) : null;\n  }\n\n  /**\n    This method delegates a query to the adapter. This is the one place where\n    adapter-level semantics are exposed to the application.\n     Each time this method is called a new request is made through the adapter.\n     Exposing queries this way seems preferable to creating an abstract query\n    language for all server-side queries, and then require all adapters to\n    implement them.\n     ---\n     If you do something like this:\n     ```javascript\n    store.query('person', { page: 1 });\n    ```\n     The request made to the server will look something like this:\n     ```\n    GET \"/api/v1/person?page=1\"\n    ```\n     ---\n     If you do something like this:\n     ```javascript\n    store.query('person', { ids: [1, 2, 3] });\n    ```\n     The request made to the server will look something like this:\n     ```\n    GET \"/api/v1/person?ids%5B%5D=1&ids%5B%5D=2&ids%5B%5D=3\"\n    decoded: \"/api/v1/person?ids[]=1&ids[]=2&ids[]=3\"\n    ```\n     This method returns a promise, which is resolved with a\n    [`Collection`](/ember-data/release/classes/Collection)\n    once the server returns.\n     @since 1.13.0\n    @method query\n    @public\n    @param {String} modelName\n    @param {any} query an opaque query to be used by the adapter\n    @param {Object} options optional, may include `adapterOptions` hash which will be passed to adapter.query\n    @return {Promise} promise\n  */\n  query(modelName, query, options) {\n    {\n      assertDestroyingStore(this, 'query');\n    }\n    ( true && !(modelName) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`You need to pass a model name to the store's query method`, modelName));\n    ( true && !(query) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`You need to pass a query hash to the store's query method`, query));\n    ( true && !(typeof modelName === 'string') && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Passing classes to store methods has been removed. Please pass a dasherized string instead of ${modelName}`, typeof modelName === 'string'));\n    const promise = this.request({\n      op: 'query',\n      data: {\n        type: normalizeModelName(modelName),\n        query,\n        options: options || {}\n      },\n      cacheOptions: {\n        [_warp_drive_core_types_request__WEBPACK_IMPORTED_MODULE_2__.SkipCache]: true\n      }\n    });\n    return promise.then(document => document.content);\n  }\n\n  /**\n    This method makes a request for one record, where the `id` is not known\n    beforehand (if the `id` is known, use [`findRecord`](../methods/findRecord?anchor=findRecord)\n    instead).\n     This method can be used when it is certain that the server will return a\n    single object for the primary data.\n     Each time this method is called a new request is made through the adapter.\n     Let's assume our API provides an endpoint for the currently logged in user\n    via:\n     ```\n    // GET /api/current_user\n    {\n      user: {\n        id: 1234,\n        username: 'admin'\n      }\n    }\n    ```\n     Since the specific `id` of the `user` is not known beforehand, we can use\n    `queryRecord` to get the user:\n     ```javascript\n    store.queryRecord('user', {}).then(function(user) {\n      let username = user.username;\n      // do thing\n    });\n    ```\n     The request is made through the adapters' `queryRecord`:\n     ```app/adapters/user.js\n    import Adapter from '@ember-data/adapter';\n    import $ from 'jquery';\n     export default class UserAdapter extends Adapter {\n      queryRecord(modelName, query) {\n        return $.getJSON('/api/current_user');\n      }\n    }\n    ```\n     Note: the primary use case for `store.queryRecord` is when a single record\n    is queried and the `id` is not known beforehand. In all other cases\n    `store.query` and using the first item of the array is likely the preferred\n    way:\n     ```\n    // GET /users?username=unique\n    {\n      data: [{\n        id: 1234,\n        type: 'user',\n        attributes: {\n          username: \"unique\"\n        }\n      }]\n    }\n    ```\n     ```javascript\n    store.query('user', { username: 'unique' }).then(function(users) {\n      return users.firstObject;\n    }).then(function(user) {\n      let id = user.id;\n    });\n    ```\n     This method returns a promise, which resolves with the found record.\n     If the adapter returns no data for the primary data of the payload, then\n    `queryRecord` resolves with `null`:\n     ```\n    // GET /users?username=unique\n    {\n      data: null\n    }\n    ```\n     ```javascript\n    store.queryRecord('user', { username: 'unique' }).then(function(user) {\n       // user is null\n    });\n    ```\n     @since 1.13.0\n    @method queryRecord\n    @public\n    @param {String} modelName\n    @param {any} query an opaque query to be used by the adapter\n    @param {Object} options optional, may include `adapterOptions` hash which will be passed to adapter.queryRecord\n    @return {Promise} promise which resolves with the found record or `null`\n  */\n  queryRecord(modelName, query, options) {\n    {\n      assertDestroyingStore(this, 'queryRecord');\n    }\n    ( true && !(modelName) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`You need to pass a model name to the store's queryRecord method`, modelName));\n    ( true && !(query) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`You need to pass a query hash to the store's queryRecord method`, query));\n    ( true && !(typeof modelName === 'string') && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Passing classes to store methods has been removed. Please pass a dasherized string instead of ${modelName}`, typeof modelName === 'string'));\n    const promise = this.request({\n      op: 'queryRecord',\n      data: {\n        type: normalizeModelName(modelName),\n        query,\n        options: options || {}\n      },\n      cacheOptions: {\n        [_warp_drive_core_types_request__WEBPACK_IMPORTED_MODULE_2__.SkipCache]: true\n      }\n    });\n    return promise.then(document => document.content);\n  }\n\n  /**\n    `findAll` asks the adapter's `findAll` method to find the records for the\n    given type, and returns a promise which will resolve with all records of\n    this type present in the store, even if the adapter only returns a subset\n    of them.\n     ```app/routes/authors.js\n    import Route from '@ember/routing/route';\n     export default class AuthorsRoute extends Route {\n      model(params) {\n        return this.store.findAll('author');\n      }\n    }\n    ```\n     _When_ the returned promise resolves depends on the reload behavior,\n    configured via the passed `options` hash and the result of the adapter's\n    `shouldReloadAll` method.\n     ### Reloading\n     If `{ reload: true }` is passed or `adapter.shouldReloadAll` evaluates to\n    `true`, then the returned promise resolves once the adapter returns data,\n    regardless if there are already records in the store:\n     ```js\n    store.push({\n      data: {\n        id: 'first',\n        type: 'author'\n      }\n    });\n     // adapter#findAll resolves with\n    // [\n    //   {\n    //     id: 'second',\n    //     type: 'author'\n    //   }\n    // ]\n    store.findAll('author', { reload: true }).then(function(authors) {\n      authors.getEach('id'); // ['first', 'second']\n    });\n    ```\n     If no reload is indicated via the above mentioned ways, then the promise\n    immediately resolves with all the records currently loaded in the store.\n     ### Background Reloading\n     Optionally, if `adapter.shouldBackgroundReloadAll` evaluates to `true`,\n    then a background reload is started. Once this resolves, the array with\n    which the promise resolves, is updated automatically so it contains all the\n    records in the store:\n     ```app/adapters/application.js\n    import Adapter from '@ember-data/adapter';\n     export default class ApplicationAdapter extends Adapter {\n      shouldReloadAll(store, snapshotsArray) {\n        return false;\n      },\n       shouldBackgroundReloadAll(store, snapshotsArray) {\n        return true;\n      }\n    });\n     // ...\n     store.push({\n      data: {\n        id: 'first',\n        type: 'author'\n      }\n    });\n     let allAuthors;\n    store.findAll('author').then(function(authors) {\n      authors.getEach('id'); // ['first']\n       allAuthors = authors;\n    });\n     // later, once adapter#findAll resolved with\n    // [\n    //   {\n    //     id: 'second',\n    //     type: 'author'\n    //   }\n    // ]\n     allAuthors.getEach('id'); // ['first', 'second']\n    ```\n     If you would like to force or prevent background reloading, you can set a\n    boolean value for `backgroundReload` in the options object for\n    `findAll`.\n     ```app/routes/post/edit.js\n    import Route from '@ember/routing/route';\n     export default class PostEditRoute extends Route {\n      model() {\n        return this.store.findAll('post', { backgroundReload: false });\n      }\n    }\n    ```\n     If you pass an object on the `adapterOptions` property of the options\n    argument it will be passed to you adapter via the `snapshotRecordArray`\n     ```app/routes/posts.js\n    import Route from '@ember/routing/route';\n     export default class PostsRoute extends Route {\n      model(params) {\n        return this.store.findAll('post', {\n          adapterOptions: { subscribe: false }\n        });\n      }\n    }\n    ```\n     ```app/adapters/post.js\n    import MyCustomAdapter from './custom-adapter';\n     export default class UserAdapter extends MyCustomAdapter {\n      findAll(store, type, sinceToken, snapshotRecordArray) {\n        if (snapshotRecordArray.adapterOptions.subscribe) {\n          // ...\n        }\n        // ...\n      }\n    }\n    ```\n     See [peekAll](../methods/peekAll?anchor=peekAll) to get an array of current records in the\n    store, without waiting until a reload is finished.\n     ### Retrieving Related Model Records\n     If you use an adapter such as Ember's default\n    [`JSONAPIAdapter`](/ember-data/release/classes/JSONAPIAdapter)\n    that supports the [JSON API specification](http://jsonapi.org/) and if your server\n    endpoint supports the use of an\n    ['include' query parameter](http://jsonapi.org/format/#fetching-includes),\n    you can use `findAll()` to automatically retrieve additional records related to\n    those requested by supplying an `include` parameter in the `options` object.\n     For example, given a `post` model that has a `hasMany` relationship with a `comment`\n    model, when we retrieve all of the post records we can have the server also return\n    all of the posts' comments in the same request:\n     ```app/routes/posts.js\n    import Route from '@ember/routing/route';\n     export default class PostsRoute extends Route {\n      model() {\n        return this.store.findAll('post', { include: 'comments' });\n      }\n    }\n    ```\n    Multiple relationships can be requested using an `include` parameter consisting of a\n    comma-separated list (without white-space) while nested relationships can be specified\n    using a dot-separated sequence of relationship names. So to request both the posts'\n    comments and the authors of those comments the request would look like this:\n     ```app/routes/posts.js\n    import Route from '@ember/routing/route';\n     export default class PostsRoute extends Route {\n      model() {\n        return this.store.findAll('post', { include: 'comments,comments.author' });\n      }\n    }\n    ```\n     See [query](../methods/query?anchor=query) to only get a subset of records from the server.\n     @since 1.13.0\n    @method findAll\n    @public\n    @param {String} modelName\n    @param {Object} options\n    @return {Promise} promise\n  */\n  findAll(modelName, options = {}) {\n    {\n      assertDestroyingStore(this, 'findAll');\n    }\n    ( true && !(modelName) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`You need to pass a model name to the store's findAll method`, modelName));\n    ( true && !(typeof modelName === 'string') && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Passing classes to store methods has been removed. Please pass a dasherized string instead of ${modelName}`, typeof modelName === 'string'));\n    const promise = this.request({\n      op: 'findAll',\n      data: {\n        type: normalizeModelName(modelName),\n        options: options || {}\n      },\n      cacheOptions: {\n        [_warp_drive_core_types_request__WEBPACK_IMPORTED_MODULE_2__.SkipCache]: true\n      }\n    });\n    return promise.then(document => document.content);\n  }\n\n  /**\n    This method returns a filtered array that contains all of the\n    known records for a given type in the store.\n     Note that because it's just a filter, the result will contain any\n    locally created records of the type, however, it will not make a\n    request to the backend to retrieve additional records. If you\n    would like to request all the records from the backend please use\n    [store.findAll](../methods/findAll?anchor=findAll).\n     Also note that multiple calls to `peekAll` for a given type will always\n    return the same `RecordArray`.\n     Example\n     ```javascript\n    let localPosts = store.peekAll('post');\n    ```\n     @since 1.13.0\n    @method peekAll\n    @public\n    @param {String} modelName\n    @return {RecordArray}\n  */\n  peekAll(modelName) {\n    {\n      assertDestroyingStore(this, 'peekAll');\n    }\n    ( true && !(modelName) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`You need to pass a model name to the store's peekAll method`, modelName));\n    ( true && !(typeof modelName === 'string') && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Passing classes to store methods has been removed. Please pass a dasherized string instead of ${modelName}`, typeof modelName === 'string'));\n    const type = normalizeModelName(modelName);\n    return this.recordArrayManager.liveArrayFor(type);\n  }\n\n  /**\n    This method unloads all records in the store.\n    It schedules unloading to happen during the next run loop.\n     Optionally you can pass a type which unload all records for a given type.\n     ```javascript\n    store.unloadAll();\n    store.unloadAll('post');\n    ```\n     @method unloadAll\n    @public\n    @param {String} modelName\n  */\n  unloadAll(modelName) {\n    {\n      assertDestroyedStoreOnly(this, 'unloadAll');\n    }\n    ( true && !(!modelName || typeof modelName === 'string') && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Passing classes to store methods has been removed. Please pass a dasherized string instead of ${String(modelName)}`, !modelName || typeof modelName === 'string'));\n    this._join(() => {\n      if (modelName === undefined) {\n        // destroy the graph before unloadAll\n        // since then we avoid churning relationships\n        // during unload\n        this._graph?.identifiers.clear();\n        this.recordArrayManager.clear();\n        this._instanceCache.clear();\n      } else {\n        const normalizedModelName = normalizeModelName(modelName);\n        this._instanceCache.clear(normalizedModelName);\n      }\n    });\n  }\n\n  /**\n    Push some data for a given type into the store.\n     This method expects normalized [JSON API](http://jsonapi.org/) document. This means you have to follow [JSON API specification](http://jsonapi.org/format/) with few minor adjustments:\n    - record's `type` should always be in singular, dasherized form\n    - members (properties) should be camelCased\n     [Your primary data should be wrapped inside `data` property](http://jsonapi.org/format/#document-top-level):\n     ```js\n    store.push({\n      data: {\n        // primary data for single record of type `Person`\n        id: '1',\n        type: 'person',\n        attributes: {\n          firstName: 'Daniel',\n          lastName: 'Kmak'\n        }\n      }\n    });\n    ```\n     [Demo.](http://ember-twiddle.com/fb99f18cd3b4d3e2a4c7)\n     `data` property can also hold an array (of records):\n     ```js\n    store.push({\n      data: [\n        // an array of records\n        {\n          id: '1',\n          type: 'person',\n          attributes: {\n            firstName: 'Daniel',\n            lastName: 'Kmak'\n          }\n        },\n        {\n          id: '2',\n          type: 'person',\n          attributes: {\n            firstName: 'Tom',\n            lastName: 'Dale'\n          }\n        }\n      ]\n    });\n    ```\n     [Demo.](http://ember-twiddle.com/69cdbeaa3702159dc355)\n     There are some typical properties for `JSONAPI` payload:\n    * `id` - mandatory, unique record's key\n    * `type` - mandatory string which matches `model`'s dasherized name in singular form\n    * `attributes` - object which holds data for record attributes - `attr`'s declared in model\n    * `relationships` - object which must contain any of the following properties under each relationships' respective key (example path is `relationships.achievements.data`):\n      - [`links`](http://jsonapi.org/format/#document-links)\n      - [`data`](http://jsonapi.org/format/#document-resource-object-linkage) - place for primary data\n      - [`meta`](http://jsonapi.org/format/#document-meta) - object which contains meta-information about relationship\n     For this model:\n     ```app/models/person.js\n    import Model, { attr, hasMany } from '@ember-data/model';\n     export default class PersonRoute extends Route {\n      @attr('string') firstName;\n      @attr('string') lastName;\n       @hasMany('person') children;\n    }\n    ```\n     To represent the children as IDs:\n     ```js\n    {\n      data: {\n        id: '1',\n        type: 'person',\n        attributes: {\n          firstName: 'Tom',\n          lastName: 'Dale'\n        },\n        relationships: {\n          children: {\n            data: [\n              {\n                id: '2',\n                type: 'person'\n              },\n              {\n                id: '3',\n                type: 'person'\n              },\n              {\n                id: '4',\n                type: 'person'\n              }\n            ]\n          }\n        }\n      }\n    }\n    ```\n     [Demo.](http://ember-twiddle.com/343e1735e034091f5bde)\n     To represent the children relationship as a URL:\n     ```js\n    {\n      data: {\n        id: '1',\n        type: 'person',\n        attributes: {\n          firstName: 'Tom',\n          lastName: 'Dale'\n        },\n        relationships: {\n          children: {\n            links: {\n              related: '/people/1/children'\n            }\n          }\n        }\n      }\n    }\n    ```\n     If you're streaming data or implementing an adapter, make sure\n    that you have converted the incoming data into this form. The\n    store's [normalize](../methods/normalize?anchor=normalize) method is a convenience\n    helper for converting a json payload into the form Ember Data\n    expects.\n     ```js\n    store.push(store.normalize('person', data));\n    ```\n     This method can be used both to push in brand new\n    records, as well as to update existing records.\n     @method push\n    @public\n    @param {Object} data\n    @return the record(s) that was created or\n      updated.\n  */\n\n  push(data) {\n    {\n      assertDestroyingStore(this, 'push');\n    }\n    const pushed = this._push(data, false);\n    if (Array.isArray(pushed)) {\n      return pushed.map(identifier => this._instanceCache.getRecord(identifier));\n    }\n    if (pushed === null) {\n      return null;\n    }\n    return this._instanceCache.getRecord(pushed);\n  }\n\n  /**\n    Push some data in the form of a json-api document into the store,\n    without creating materialized records.\n     @method _push\n    @private\n    @param {Object} jsonApiDoc\n    @return {StableRecordIdentifier|Array<StableRecordIdentifier>|null} identifiers for the primary records that had data loaded\n  */\n  _push(jsonApiDoc, asyncFlush) {\n    {\n      assertDestroyingStore(this, '_push');\n    }\n    if (asyncFlush) {\n      this._enableAsyncFlush = true;\n    }\n    let ret;\n    this._join(() => {\n      ret = this.cache.put({\n        content: jsonApiDoc\n      });\n    });\n    this._enableAsyncFlush = null;\n    return 'data' in ret ? ret.data : null;\n  }\n\n  /**\n   * Trigger a save for a Record.\n   *\n   * @method saveRecord\n   * @public\n   * @param {RecordInstance} record\n   * @param options\n   * @return {Promise<RecordInstance>}\n   */\n  saveRecord(record, options = {}) {\n    {\n      assertDestroyingStore(this, 'saveRecord');\n    }\n    ( true && !(storeFor(record)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Unable to initate save for a record in a disconnected state`, storeFor(record)));\n    const identifier = recordIdentifierFor(record);\n    const cache = this.cache;\n    if (!identifier) {\n      // this commonly means we're disconnected\n      // but just in case we reject here to prevent bad things.\n      return Promise.reject(new Error(`Record Is Disconnected`));\n    }\n    // TODO we used to check if the record was destroyed here\n    ( true && !(this._instanceCache.recordIsLoaded(identifier)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Cannot initiate a save request for an unloaded record: ${identifier.lid}`, this._instanceCache.recordIsLoaded(identifier)));\n    if (resourceIsFullyDeleted(this._instanceCache, identifier)) {\n      return Promise.resolve(record);\n    }\n    if (!options) {\n      options = {};\n    }\n    let operation = 'updateRecord';\n    if (cache.isNew(identifier)) {\n      operation = 'createRecord';\n    } else if (cache.isDeleted(identifier)) {\n      operation = 'deleteRecord';\n    }\n    const request = {\n      op: operation,\n      data: {\n        options,\n        record: identifier\n      },\n      records: [identifier],\n      cacheOptions: {\n        [_warp_drive_core_types_request__WEBPACK_IMPORTED_MODULE_2__.SkipCache]: true\n      }\n    };\n\n    // we lie here on the type because legacy doesn't have enough context\n    cache.willCommit(identifier, {\n      request\n    });\n    return this.request(request).then(document => document.content);\n  }\n\n  /**\n   * Instantiation hook allowing applications or addons to configure the store\n   * to utilize a custom Cache implementation.\n   *\n   * This hook should not be called directly by consuming applications or libraries.\n   * Use `Store.cache` to access the Cache instance.\n   *\n   * @method createCache (hook)\n   * @public\n   * @param storeWrapper\n   * @return {Cache}\n   */\n\n  /**\n   * Returns the cache instance associated to this Store, instantiates the Cache\n   * if necessary via `Store.createCache`\n   *\n   * @property {Cache} cache\n   * @public\n   */\n  get cache() {\n    let {\n      cache\n    } = this._instanceCache;\n    if (!cache) {\n      cache = this._instanceCache.cache = this.createCache(this._instanceCache._storeWrapper);\n      {\n        cache = new CacheManager(cache);\n      }\n    }\n    return cache;\n  }\n\n  // @ts-expect-error\n  destroy() {\n    if (this.isDestroyed) {\n      // @ember/test-helpers will call destroy multiple times\n      return;\n    }\n    this.isDestroying = true;\n    this._graph?.destroy();\n    this._graph = undefined;\n    this.notifications.destroy();\n    this.recordArrayManager.destroy();\n    this.identifierCache.destroy();\n    this.unloadAll();\n    this.isDestroyed = true;\n  }\n  static create(args) {\n    return new this(args);\n  }\n}\nlet assertDestroyingStore;\nlet assertDestroyedStoreOnly;\n{\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  assertDestroyingStore = function assertDestroyingStore(store, method) {\n    ( true && !(!(store.isDestroying || store.isDestroyed)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Attempted to call store.${method}(), but the store instance has already been destroyed.`, !(store.isDestroying || store.isDestroyed)));\n  };\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  assertDestroyedStoreOnly = function assertDestroyedStoreOnly(store, method) {\n    ( true && !(!store.isDestroyed) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Attempted to call store.${method}(), but the store instance has already been destroyed.`, !store.isDestroyed));\n  };\n}\nfunction isMaybeIdentifier(maybeIdentifier) {\n  return Boolean(maybeIdentifier !== null && typeof maybeIdentifier === 'object' && ('id' in maybeIdentifier && 'type' in maybeIdentifier && maybeIdentifier.id && maybeIdentifier.type || maybeIdentifier.lid));\n}\nfunction normalizeProperties(store, identifier, properties) {\n  // assert here\n  if (properties !== undefined) {\n    if ('id' in properties) {\n      ( true && !(properties.id !== undefined) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`expected id to be a string or null`, properties.id !== undefined));\n    }\n    ( true && !(typeof properties === 'object' && properties !== null) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`You passed '${typeof properties}' as properties for record creation instead of an object.`, typeof properties === 'object' && properties !== null));\n    const {\n      type\n    } = identifier;\n\n    // convert relationship Records to RecordDatas before passing to RecordData\n    const defs = store.getSchemaDefinitionService().relationshipsDefinitionFor({\n      type\n    });\n    if (defs !== null) {\n      const keys = Object.keys(properties);\n      let relationshipValue;\n      for (let i = 0; i < keys.length; i++) {\n        const prop = keys[i];\n        const def = defs[prop];\n        if (def !== undefined) {\n          if (def.kind === 'hasMany') {\n            {\n              assertRecordsPassedToHasMany(properties[prop]);\n            }\n            relationshipValue = extractIdentifiersFromRecords(properties[prop]);\n          } else {\n            relationshipValue = extractIdentifierFromRecord(properties[prop]);\n          }\n          properties[prop] = relationshipValue;\n        }\n      }\n    }\n  }\n  return properties;\n}\nfunction assertRecordsPassedToHasMany(records) {\n  ( true && !(Array.isArray(records)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`You must pass an array of records to set a hasMany relationship`, Array.isArray(records)));\n  ( true && !(function () {\n    return records.every(record => {\n      try {\n        recordIdentifierFor(record);\n        return true;\n      } catch {\n        return false;\n      }\n    });\n  }()) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`All elements of a hasMany relationship must be instances of Model, you passed ${records.map(r => `${typeof r}`).join(', ')}`, function () {\n    return records.every(record => {\n      try {\n        recordIdentifierFor(record);\n        return true;\n      } catch {\n        return false;\n      }\n    });\n  }()));\n}\nfunction extractIdentifiersFromRecords(records) {\n  return records.map(record => extractIdentifierFromRecord(record));\n}\nfunction extractIdentifierFromRecord(recordOrPromiseRecord) {\n  if (!recordOrPromiseRecord) {\n    return null;\n  }\n  const extract = recordIdentifierFor;\n  return extract(recordOrPromiseRecord);\n}\nfunction urlFromLink(link) {\n  if (typeof link === 'string') return link;\n  return link.href;\n}\n\n/**\n * A Document is a class that wraps the response content from a request to the API\n * returned by `Cache.put` or `Cache.peek`, converting resource-identifiers into\n * record instances.\n *\n * It is not directly instantiated by the user, and its properties should not\n * be directly modified. Whether individual properties are mutable or not is\n * determined by the record instance itself.\n *\n * @public\n * @class Document\n */\nvar _store = /*#__PURE__*/_classPrivateFieldKey(\"store\");\nvar _request = /*#__PURE__*/_classPrivateFieldKey(\"request\");\nclass Document {\n  constructor(store, identifier) {\n    Object.defineProperty(this, _request, {\n      value: _request2\n    });\n    /**\n     * The links object for this document, if any\n     *\n     * e.g.\n     *\n     * ```\n     * {\n     *   self: '/articles?page[number]=3',\n     * }\n     * ```\n     *\n     * @property links\n     * @type {object|undefined} - a links object\n     * @public\n     */\n    /**\n     * The primary data for this document, if any.\n     *\n     * If this document has no primary data (e.g. because it is an error document)\n     * this property will be `undefined`.\n     *\n     * For collections this will be an array of record instances,\n     * for single resource requests it will be a single record instance or null.\n     *\n     * @property data\n     * @public\n     * @type {object|Array<object>|null|undefined} - a data object\n     */\n    /**\n     * The errors returned by the API for this request, if any\n     *\n     * @property errors\n     * @public\n     * @type {object|undefined} - an errors object\n     */\n    /**\n     * The meta object for this document, if any\n     *\n     * @property meta\n     * @public\n     * @type {object|undefined} - a meta object\n     */\n    /**\n     * The identifier associated with this document, if any\n     *\n     * @property identifier\n     * @public\n     * @type {StableDocumentIdentifier|null}\n     */\n    Object.defineProperty(this, _store, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldBase(this, _store)[_store] = store;\n    this.identifier = identifier;\n  }\n  /**\n   * Fetches the related link for this document, returning a promise that resolves\n   * with the document when the request completes. If no related link is present,\n   * will fallback to the self link if present\n   *\n   * @method fetch\n   * @public\n   * @param {object} options\n   * @return Promise<Document>\n   */\n  fetch(options = {}) {\n    ( true && !(this.links?.related || this.links?.self) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`No self or related link`, this.links?.related || this.links?.self));\n    options.cacheOptions = options.cacheOptions || {};\n    options.cacheOptions.key = this.identifier?.lid;\n    return _classPrivateFieldBase(this, _request)[_request](this.links.related ? 'related' : 'self', options);\n  }\n\n  /**\n   * Fetches the next link for this document, returning a promise that resolves\n   * with the new document when the request completes, or null  if there is no\n   * next link.\n   *\n   * @method next\n   * @public\n   * @param {object} options\n   * @return Promise<Document | null>\n   */\n  next(options = {}) {\n    return _classPrivateFieldBase(this, _request)[_request]('next', options);\n  }\n\n  /**\n   * Fetches the prev link for this document, returning a promise that resolves\n   * with the new document when the request completes, or null if there is no\n   * prev link.\n   *\n   * @method prev\n   * @public\n   * @param {object} options\n   * @return Promise<Document | null>\n   */\n  prev(options = {}) {\n    return _classPrivateFieldBase(this, _request)[_request]('prev', options);\n  }\n\n  /**\n   * Fetches the first link for this document, returning a promise that resolves\n   * with the new document when the request completes, or null if there is no\n   * first link.\n   *\n   * @method first\n   * @public\n   * @param {object} options\n   * @return Promise<Document | null>\n   */\n  first(options = {}) {\n    return _classPrivateFieldBase(this, _request)[_request]('first', options);\n  }\n\n  /**\n   * Fetches the last link for this document, returning a promise that resolves\n   * with the new document when the request completes, or null if there is no\n   * last link.\n   *\n   * @method last\n   * @public\n   * @param {object} options\n   * @return Promise<Document | null>\n   */\n  last(options = {}) {\n    return _classPrivateFieldBase(this, _request)[_request]('last', options);\n  }\n\n  /**\n   * Implemented for `JSON.stringify` support.\n   *\n   * Returns the JSON representation of the document wrapper.\n   *\n   * This is a shallow serialization, it does not deeply serialize\n   * the document's contents, leaving that to the individual record\n   * instances to determine how to do, if at all.\n   *\n   * @method toJSON\n   * @public\n   * @return\n   */\n  toJSON() {\n    const data = {};\n    data.identifier = this.identifier;\n    if (this.data !== undefined) {\n      data.data = this.data;\n    }\n    if (this.links !== undefined) {\n      data.links = this.links;\n    }\n    if (this.errors !== undefined) {\n      data.errors = this.errors;\n    }\n    if (this.meta !== undefined) {\n      data.meta = this.meta;\n    }\n    return data;\n  }\n}\nasync function _request2(link, options) {\n  const href = this.links?.[link];\n  if (!href) {\n    return null;\n  }\n  options.method = options.method || 'GET';\n  const response = await _classPrivateFieldBase(this, _store)[_store].request(Object.assign(options, {\n    url: urlFromLink(href)\n  }));\n  return response.content;\n}\n(0,_ember_data_tracking_private__WEBPACK_IMPORTED_MODULE_5__.defineSignal)(Document.prototype, 'data');\n(0,_ember_data_tracking_private__WEBPACK_IMPORTED_MODULE_5__.defineSignal)(Document.prototype, 'links');\n(0,_ember_data_tracking_private__WEBPACK_IMPORTED_MODULE_5__.defineSignal)(Document.prototype, 'errors');\n(0,_ember_data_tracking_private__WEBPACK_IMPORTED_MODULE_5__.defineSignal)(Document.prototype, 'meta');\n\n/**\n * @module @ember-data/store\n */\n\n/**\n * A service which an application may provide to the store via\n * the store's `lifetimes` property to configure the behavior\n * of the CacheHandler.\n *\n * The default behavior for request lifetimes is to never expire\n * unless manually refreshed via `cacheOptions.reload` or `cacheOptions.backgroundReload`.\n *\n * Implementing this service allows you to programatically define\n * when a request should be considered expired.\n *\n * @class <Interface> LifetimesService\n * @public\n */\n\nconst MUTATION_OPS = new Set(['createRecord', 'updateRecord', 'deleteRecord']);\nfunction isErrorDocument(document) {\n  return 'errors' in document;\n}\nfunction maybeUpdateUiObjects(store, request, options, document, isFromCache) {\n  const {\n    identifier\n  } = options;\n  if (isErrorDocument(document)) {\n    if (!identifier && !options.shouldHydrate) {\n      return document;\n    }\n    let doc;\n    if (identifier) {\n      doc = store._documentCache.get(identifier);\n    }\n    if (!doc) {\n      doc = new Document(store, identifier);\n      copyDocumentProperties(doc, document);\n      if (identifier) {\n        store._documentCache.set(identifier, doc);\n      }\n    } else if (!isFromCache) {\n      doc.data = undefined;\n      copyDocumentProperties(doc, document);\n    }\n    return options.shouldHydrate ? doc : document;\n  }\n  if (Array.isArray(document.data)) {\n    const {\n      recordArrayManager\n    } = store;\n    if (!identifier) {\n      if (!options.shouldHydrate) {\n        return document;\n      }\n      const data = recordArrayManager.createArray({\n        type: request.url,\n        identifiers: document.data,\n        doc: document,\n        query: request\n      });\n      const doc = new Document(store, null);\n      doc.data = data;\n      doc.meta = document.meta;\n      doc.links = document.links;\n      return doc;\n    }\n    let managed = recordArrayManager._keyedArrays.get(identifier.lid);\n    if (!managed) {\n      managed = recordArrayManager.createArray({\n        type: identifier.lid,\n        identifiers: document.data,\n        doc: document\n      });\n      recordArrayManager._keyedArrays.set(identifier.lid, managed);\n      const doc = new Document(store, identifier);\n      doc.data = managed;\n      doc.meta = document.meta;\n      doc.links = document.links;\n      store._documentCache.set(identifier, doc);\n      return options.shouldHydrate ? doc : document;\n    } else {\n      const doc = store._documentCache.get(identifier);\n      if (!isFromCache) {\n        recordArrayManager.populateManagedArray(managed, document.data, document);\n        doc.data = managed;\n        doc.meta = document.meta;\n        doc.links = document.links;\n      }\n      return options.shouldHydrate ? doc : document;\n    }\n  } else {\n    if (!identifier && !options.shouldHydrate) {\n      return document;\n    }\n    const data = document.data ? store.peekRecord(document.data) : null;\n    let doc;\n    if (identifier) {\n      doc = store._documentCache.get(identifier);\n    }\n    if (!doc) {\n      doc = new Document(store, identifier);\n      doc.data = data;\n      copyDocumentProperties(doc, document);\n      if (identifier) {\n        store._documentCache.set(identifier, doc);\n      }\n    } else if (!isFromCache) {\n      doc.data = data;\n      copyDocumentProperties(doc, document);\n    }\n    return options.shouldHydrate ? doc : document;\n  }\n}\nfunction calcShouldFetch(store, request, hasCachedValue, identifier) {\n  const {\n    cacheOptions\n  } = request;\n  return request.op && MUTATION_OPS.has(request.op) || cacheOptions?.reload || !hasCachedValue || (store.lifetimes && identifier ? store.lifetimes.isHardExpired(identifier, store) : false);\n}\nfunction calcShouldBackgroundFetch(store, request, willFetch, identifier) {\n  const {\n    cacheOptions\n  } = request;\n  return !willFetch && (cacheOptions?.backgroundReload || (store.lifetimes && identifier ? store.lifetimes.isSoftExpired(identifier, store) : false));\n}\nfunction isMutation(request) {\n  return Boolean(request.op && MUTATION_OPS.has(request.op));\n}\nfunction fetchContentAndHydrate(next, context, identifier, shouldFetch, shouldBackgroundFetch) {\n  const {\n    store\n  } = context.request;\n  const shouldHydrate = context.request[_warp_drive_core_types_request__WEBPACK_IMPORTED_MODULE_2__.EnableHydration] || false;\n  let isMut = false;\n  if (isMutation(context.request)) {\n    isMut = true;\n    // TODO should we handle multiple records in request.records by iteratively calling willCommit for each\n    const record = context.request.data?.record || context.request.records?.[0];\n    ( true && !(record) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Expected to receive a list of records included in the ${context.request.op} request`, record));\n    store.cache.willCommit(record, context);\n  }\n  if (store.lifetimes?.willRequest) {\n    store.lifetimes.willRequest(context.request, identifier, store);\n  }\n  const promise = next(context.request).then(document => {\n    store.requestManager._pending.delete(context.id);\n    store._enableAsyncFlush = true;\n    let response;\n    store._join(() => {\n      if (isMutation(context.request)) {\n        const record = context.request.data?.record || context.request.records?.[0];\n        response = store.cache.didCommit(record, document);\n      } else {\n        response = store.cache.put(document);\n      }\n      response = maybeUpdateUiObjects(store, context.request, {\n        shouldHydrate,\n        shouldFetch,\n        shouldBackgroundFetch,\n        identifier\n      }, response, false);\n    });\n    store._enableAsyncFlush = null;\n    if (store.lifetimes?.didRequest) {\n      store.lifetimes.didRequest(context.request, document.response, identifier, store);\n    }\n    if (shouldFetch) {\n      return response;\n    } else if (shouldBackgroundFetch) {\n      store.notifications._flush();\n    }\n  }, error => {\n    store.requestManager._pending.delete(context.id);\n    if (context.request.signal?.aborted) {\n      throw error;\n    }\n    store.requestManager._pending.delete(context.id);\n    store._enableAsyncFlush = true;\n    let response;\n    store._join(() => {\n      if (isMutation(context.request)) {\n        // TODO similar to didCommit we should spec this to be similar to cache.put for handling full response\n        // currently we let the response remain undefiend.\n        const errors = error && error.content && typeof error.content === 'object' && 'errors' in error.content && Array.isArray(error.content.errors) ? error.content.errors : undefined;\n        const record = context.request.data?.record || context.request.records?.[0];\n        store.cache.commitWasRejected(record, errors);\n        // re-throw the original error to preserve `errors` property.\n        throw error;\n      } else {\n        response = store.cache.put(error);\n        response = maybeUpdateUiObjects(store, context.request, {\n          shouldHydrate,\n          shouldFetch,\n          shouldBackgroundFetch,\n          identifier\n        }, response, false);\n      }\n    });\n    store._enableAsyncFlush = null;\n    if (identifier && store.lifetimes?.didRequest) {\n      store.lifetimes.didRequest(context.request, error.response, identifier, store);\n    }\n    if (!shouldBackgroundFetch) {\n      const newError = cloneError(error);\n      newError.content = response;\n      throw newError;\n    } else {\n      store.notifications._flush();\n    }\n  });\n  if (!isMut) {\n    return promise;\n  }\n  ( true && !(isMutation(context.request)) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`Expected a mutation`, isMutation(context.request))); // for mutations we need to enqueue the promise with the requestStateService\n  // TODO should we enque a request per record in records?\n  const record = context.request.data?.record || context.request.records?.[0];\n  return store._requestCache._enqueue(promise, {\n    data: [{\n      op: 'saveRecord',\n      recordIdentifier: record,\n      options: undefined\n    }]\n  });\n}\nfunction cloneError(error) {\n  const cloned = new Error(error.message);\n  cloned.stack = error.stack;\n  cloned.error = error.error;\n  return cloned;\n}\nconst CacheHandler = {\n  request(context, next) {\n    // if we have no cache or no cache-key skip cache handling\n    if (!context.request.store || context.request.cacheOptions?.[_warp_drive_core_types_request__WEBPACK_IMPORTED_MODULE_2__.SkipCache]) {\n      return next(context.request);\n    }\n    const {\n      store\n    } = context.request;\n    const identifier = store.identifierCache.getOrCreateDocumentIdentifier(context.request);\n    const peeked = identifier ? store.cache.peekRequest(identifier) : null;\n\n    // determine if we should skip cache\n    if (calcShouldFetch(store, context.request, !!peeked, identifier)) {\n      return fetchContentAndHydrate(next, context, identifier, true, false);\n    }\n\n    // if we have not skipped cache, determine if we should update behind the scenes\n    if (calcShouldBackgroundFetch(store, context.request, false, identifier)) {\n      const promise = fetchContentAndHydrate(next, context, identifier, false, true);\n      store.requestManager._pending.set(context.id, promise);\n    }\n    const shouldHydrate = context.request[_warp_drive_core_types_request__WEBPACK_IMPORTED_MODULE_2__.EnableHydration] || false;\n    if ('error' in peeked) {\n      const content = shouldHydrate ? maybeUpdateUiObjects(store, context.request, {\n        shouldHydrate,\n        identifier\n      }, peeked.content, true) : peeked.content;\n      const newError = cloneError(peeked);\n      newError.content = content;\n      throw newError;\n    }\n    return Promise.resolve(shouldHydrate ? maybeUpdateUiObjects(store, context.request, {\n      shouldHydrate,\n      identifier\n    }, peeked.content, true) : peeked.content);\n  }\n};\nfunction copyDocumentProperties(target, source) {\n  if ('links' in source) {\n    target.links = source.links;\n  }\n  if ('meta' in source) {\n    target.meta = source.meta;\n  }\n  if ('errors' in source) {\n    target.errors = source.errors;\n  }\n}\n\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@ember-data/store.a4360448/node_modules/@ember-data/store/cache-handler-XLbbNJdo.js?");

/***/ }),

/***/ "../rewritten-packages/@ember-data/store.a4360448/node_modules/@ember-data/store/index.js":
/*!************************************************************************************************!*\
  !*** ../rewritten-packages/@ember-data/store.a4360448/node_modules/@ember-data/store/index.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CacheHandler: () => (/* reexport safe */ _cache_handler_XLbbNJdo__WEBPACK_IMPORTED_MODULE_0__.C),\n/* harmony export */   \"default\": () => (/* reexport safe */ _cache_handler_XLbbNJdo__WEBPACK_IMPORTED_MODULE_0__.S),\n/* harmony export */   recordIdentifierFor: () => (/* reexport safe */ _cache_handler_XLbbNJdo__WEBPACK_IMPORTED_MODULE_0__.r),\n/* harmony export */   setIdentifierForgetMethod: () => (/* reexport safe */ _cache_handler_XLbbNJdo__WEBPACK_IMPORTED_MODULE_0__.c),\n/* harmony export */   setIdentifierGenerationMethod: () => (/* reexport safe */ _cache_handler_XLbbNJdo__WEBPACK_IMPORTED_MODULE_0__.a),\n/* harmony export */   setIdentifierResetMethod: () => (/* reexport safe */ _cache_handler_XLbbNJdo__WEBPACK_IMPORTED_MODULE_0__.d),\n/* harmony export */   setIdentifierUpdateMethod: () => (/* reexport safe */ _cache_handler_XLbbNJdo__WEBPACK_IMPORTED_MODULE_0__.b),\n/* harmony export */   storeFor: () => (/* reexport safe */ _cache_handler_XLbbNJdo__WEBPACK_IMPORTED_MODULE_0__.s)\n/* harmony export */ });\n/* harmony import */ var _cache_handler_XLbbNJdo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cache-handler-XLbbNJdo */ \"../rewritten-packages/@ember-data/store.a4360448/node_modules/@ember-data/store/cache-handler-XLbbNJdo.js\");\n\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@ember-data/store.a4360448/node_modules/@ember-data/store/index.js?");

/***/ }),

/***/ "../rewritten-packages/@ember-data/tracking.bbb05d16/node_modules/@ember-data/tracking/-private.js":
/*!*********************************************************************************************************!*\
  !*** ../rewritten-packages/@ember-data/tracking.bbb05d16/node_modules/@ember-data/tracking/-private.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Signals: () => (/* binding */ Signals),\n/* harmony export */   addToTransaction: () => (/* binding */ addToTransaction),\n/* harmony export */   addTransactionCB: () => (/* binding */ addTransactionCB),\n/* harmony export */   createArrayTags: () => (/* binding */ createArrayTags),\n/* harmony export */   createSignal: () => (/* binding */ createSignal),\n/* harmony export */   defineSignal: () => (/* binding */ defineSignal),\n/* harmony export */   entangleSignal: () => (/* binding */ entangleSignal),\n/* harmony export */   getSignal: () => (/* binding */ getSignal),\n/* harmony export */   memoTransact: () => (/* binding */ memoTransact),\n/* harmony export */   peekSignal: () => (/* binding */ peekSignal),\n/* harmony export */   subscribe: () => (/* binding */ subscribe),\n/* harmony export */   transact: () => (/* binding */ transact),\n/* harmony export */   untracked: () => (/* binding */ untracked)\n/* harmony export */ });\n/* harmony import */ var _ember_internals_metal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/-internals/metal */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2F-internals%2Fmetal&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_internals_metal__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_internals_metal__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _glimmer_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @glimmer/validator */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40glimmer%2Fvalidator&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _glimmer_validator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_glimmer_validator__WEBPACK_IMPORTED_MODULE_1__);\n\n\nlet TRANSACTION = null;\nfunction createTransaction() {\n  const transaction = {\n    cbs: new Set(),\n    props: new Set(),\n    sub: new Set(),\n    parent: null\n  };\n  if (TRANSACTION) {\n    transaction.parent = TRANSACTION;\n  }\n  TRANSACTION = transaction;\n}\nfunction maybeConsume(tag) {\n  if (tag) {\n    (0,_glimmer_validator__WEBPACK_IMPORTED_MODULE_1__.consumeTag)(tag);\n  }\n}\nfunction maybeDirty(tag) {\n  if (tag) {\n    // @ts-expect-error - we are using Ember's Tag not Glimmer's\n    (0,_glimmer_validator__WEBPACK_IMPORTED_MODULE_1__.dirtyTag)(tag);\n  }\n}\n\n/**\n * If there is a current transaction, ensures that the relevant tag (and any\n * array computed chains symbols, if applicable) will be consumed during the\n * transaction.\n *\n * If there is no current transaction, will consume the tag(s) immediately.\n *\n * @internal\n * @param obj\n */\nfunction subscribe(obj) {\n  if (TRANSACTION) {\n    TRANSACTION.sub.add(obj);\n  } else if ('tag' in obj) {\n    {\n      maybeConsume(obj['[]']);\n      maybeConsume(obj['@length']);\n    }\n    (0,_glimmer_validator__WEBPACK_IMPORTED_MODULE_1__.consumeTag)(obj.tag);\n  } else {\n    obj.ref;\n  }\n}\nfunction updateRef(obj) {\n  {\n    try {\n      if ('tag' in obj) {\n        {\n          maybeDirty(obj['[]']);\n          maybeDirty(obj['@length']);\n        }\n        // @ts-expect-error - we are using Ember's Tag not Glimmer's\n        (0,_glimmer_validator__WEBPACK_IMPORTED_MODULE_1__.dirtyTag)(obj.tag);\n      } else {\n        obj.ref = null;\n      }\n    } catch (e) {\n      if (e instanceof Error) {\n        if (e.message.includes('You attempted to update `undefined`')) {\n          // @ts-expect-error\n          const key = `<${obj._debug_base}>.${obj.key}`;\n          e.message = e.message.replace('You attempted to update `undefined`', `You attempted to update ${key}`);\n          e.stack = e.stack?.replace('You attempted to update `undefined`', `You attempted to update ${key}`);\n          const lines = e.stack?.split(`\\n`);\n          const finalLines = [];\n          let lastFile = null;\n          lines?.forEach(line => {\n            if (line.trim().startsWith('at ')) {\n              // get the last string in the line which contains the code source location\n              const location = line.split(' ').at(-1);\n              // remove the line and char offset info\n\n              if (location.includes(':')) {\n                const parts = location.split(':');\n                parts.pop();\n                parts.pop();\n                const file = parts.join(':');\n                if (file !== lastFile) {\n                  lastFile = file;\n                  finalLines.push('');\n                }\n              }\n              finalLines.push(line);\n            }\n          });\n          const splitstr = '`undefined` was first used:';\n          const parts = e.message.split(splitstr);\n          parts.splice(1, 0, `Original Stack\\n=============\\n${finalLines.join(`\\n`)}\\n\\n\\`${key}\\` was first used:`);\n          e.message = parts.join('');\n        }\n      }\n      throw e;\n    }\n  }\n}\nfunction flushTransaction() {\n  const transaction = TRANSACTION;\n  TRANSACTION = transaction.parent;\n  transaction.cbs.forEach(cb => {\n    cb();\n  });\n  transaction.props.forEach(obj => {\n    // mark this mutation as part of a transaction\n    obj.t = true;\n    updateRef(obj);\n  });\n  transaction.sub.forEach(obj => {\n    if ('tag' in obj) {\n      {\n        maybeConsume(obj['[]']);\n        maybeConsume(obj['@length']);\n      }\n      (0,_glimmer_validator__WEBPACK_IMPORTED_MODULE_1__.consumeTag)(obj.tag);\n    } else {\n      obj.ref;\n    }\n  });\n}\nasync function untrack() {\n  const transaction = TRANSACTION;\n  TRANSACTION = transaction.parent;\n\n  // defer writes\n  await Promise.resolve();\n  transaction.cbs.forEach(cb => {\n    cb();\n  });\n  transaction.props.forEach(obj => {\n    // mark this mutation as part of a transaction\n    obj.t = true;\n    updateRef(obj);\n  });\n}\nfunction addToTransaction(obj) {\n  if (TRANSACTION) {\n    TRANSACTION.props.add(obj);\n  } else {\n    updateRef(obj);\n  }\n}\nfunction addTransactionCB(method) {\n  if (TRANSACTION) {\n    TRANSACTION.cbs.add(method);\n  } else {\n    method();\n  }\n}\n\n/**\n * Run `method` without subscribing to any tracked properties\n * controlled by EmberData.\n *\n * This should rarely be used except by libraries that really\n * know what they are doing. It is most useful for wrapping\n * certain kinds of fetch/query logic from within a `Resource`\n * `hook` or other similar pattern.\n *\n * @function untracked\n * @public\n * @static\n * @for @ember-data/tracking\n * @param method\n * @return result of invoking method\n */\nfunction untracked(method) {\n  createTransaction();\n  const ret = method();\n  void untrack();\n  return ret;\n}\n\n/**\n * Run the method, subscribing to any tracked properties\n * managed by EmberData that were accessed or written during\n * the method's execution as per-normal but while allowing\n * interleaving of reads and writes.\n *\n * This is useful when for instance you want to perform\n * a mutation based on existing state that must be read first.\n *\n * @function transact\n * @public\n * @static\n * @for @ember-data/tracking\n * @param method\n * @return result of invoking method\n */\nfunction transact(method) {\n  createTransaction();\n  const ret = method();\n  flushTransaction();\n  return ret;\n}\n\n/**\n * A helpful utility for creating a new function that\n * always runs in a transaction. E.G. this \"memoizes\"\n * calling `transact(fn)`, currying args as necessary.\n *\n * @method memoTransact\n * @public\n * @static\n * @for @ember-data/tracking\n * @param method\n * @return a function that will invoke method in a transaction with any provided args and return its result\n */\nfunction memoTransact(method) {\n  return function (...args) {\n    createTransaction();\n    const ret = method(...args);\n    flushTransaction();\n    return ret;\n  };\n}\nconst Signals = Symbol('Signals');\n\n/**\n *  use to add a signal property to the prototype of something.\n *\n *  First arg is the thing to define on\n *  Second arg is the property name\n *  Third agg is the initial value of the property if any.\n *\n *  for instance\n *\n *  ```ts\n *  class Model {}\n *  defineSignal(Model.prototype, 'isLoading', false);\n *  ```\n *\n *  This is sort of like using a stage-3 decorator but works today\n *  while we are still on legacy decorators.\n *\n *  e.g. it is equivalent to\n *\n *  ```ts\n *  class Model {\n *    @signal accessor isLoading = false;\n *  }\n *  ```\n *\n *  @internal\n */\nfunction defineSignal(obj, key, v) {\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: false,\n    get() {\n      const signals = this[Signals] = this[Signals] || new Map();\n      const existing = signals.has(key);\n      const _signal = entangleSignal(signals, this, key);\n      if (!existing && v !== undefined) {\n        _signal.lastValue = v;\n      }\n      return _signal.lastValue;\n    },\n    set(value) {\n      const signals = this[Signals] = this[Signals] || new Map();\n      let _signal = signals.get(key);\n      if (!_signal) {\n        _signal = createSignal(this, key);\n        signals.set(key, _signal);\n      }\n      if (_signal.lastValue !== value) {\n        _signal.lastValue = value;\n        addToTransaction(_signal);\n      }\n    }\n  });\n}\nfunction createArrayTags(obj, signal) {\n  {\n    signal['[]'] = (0,_ember_internals_metal__WEBPACK_IMPORTED_MODULE_0__.tagForProperty)(obj, '[]');\n    signal['@length'] = (0,_ember_internals_metal__WEBPACK_IMPORTED_MODULE_0__.tagForProperty)(obj, 'length');\n  }\n}\n\n/**\n * Create a signal for the key/object pairing.\n *\n * @internal\n * @param obj Object we're creating the signal on\n * @param key Key to create the signal for\n * @return the signal\n */\nfunction createSignal(obj, key) {\n  const _signal = {\n    key,\n    tag: (0,_ember_internals_metal__WEBPACK_IMPORTED_MODULE_0__.tagForProperty)(obj, key),\n    t: false,\n    shouldReset: false,\n    '[]': null,\n    '@length': null,\n    lastValue: undefined\n  };\n  {\n    // eslint-disable-next-line no-inner-declarations\n    function tryGet(prop) {\n      try {\n        return obj[prop];\n      } catch {\n        return;\n      }\n    }\n    const modelName = tryGet('$type') ?? tryGet('modelName') ?? tryGet('constructor')?.modelName ?? '';\n    // eslint-disable-next-line @typescript-eslint/no-base-to-string\n    const className = obj.constructor?.name ?? obj.toString?.() ?? 'unknown';\n    _signal._debug_base = `${className}${modelName && !className.startsWith('SchemaRecord') ? `:${modelName}` : ''}`;\n  }\n  return _signal;\n}\n\n/**\n * Create a signal for the key/object pairing and subscribes to the signal.\n *\n * Use when you need to ensure a signal exists and is subscribed to.\n *\n * @internal\n * @param signals Map of signals\n * @param obj Object we're creating the signal on\n * @param key Key to create the signal for\n * @return the signal\n */\nfunction entangleSignal(signals, obj, key) {\n  let _signal = signals.get(key);\n  if (!_signal) {\n    _signal = createSignal(obj, key);\n    signals.set(key, _signal);\n  }\n  subscribe(_signal);\n  return _signal;\n}\nfunction getSignal(obj, key, initialState) {\n  let signals = obj[Signals];\n  if (!signals) {\n    signals = new Map();\n    obj[Signals] = signals;\n  }\n  let _signal = signals.get(key);\n  if (!_signal) {\n    _signal = createSignal(obj, key);\n    _signal.shouldReset = initialState;\n    signals.set(key, _signal);\n  }\n  return _signal;\n}\nfunction peekSignal(obj, key) {\n  const signals = obj[Signals];\n  if (signals) {\n    return signals.get(key);\n  }\n}\n\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@ember-data/tracking.bbb05d16/node_modules/@ember-data/tracking/-private.js?");

/***/ }),

/***/ "../rewritten-packages/@ember-data/tracking.bbb05d16/node_modules/@ember-data/tracking/index.js":
/*!******************************************************************************************************!*\
  !*** ../rewritten-packages/@ember-data/tracking.bbb05d16/node_modules/@ember-data/tracking/index.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cached: () => (/* binding */ cached),\n/* harmony export */   compat: () => (/* reexport safe */ _ember_object_compat__WEBPACK_IMPORTED_MODULE_3__.dependentKeyCompat),\n/* harmony export */   createCache: () => (/* reexport safe */ _glimmer_tracking_primitives_cache__WEBPACK_IMPORTED_MODULE_1__.createCache),\n/* harmony export */   getValue: () => (/* reexport safe */ _glimmer_tracking_primitives_cache__WEBPACK_IMPORTED_MODULE_1__.getValue),\n/* harmony export */   memoTransact: () => (/* reexport safe */ _private__WEBPACK_IMPORTED_MODULE_2__.memoTransact),\n/* harmony export */   transact: () => (/* reexport safe */ _private__WEBPACK_IMPORTED_MODULE_2__.transact),\n/* harmony export */   untracked: () => (/* reexport safe */ _private__WEBPACK_IMPORTED_MODULE_2__.untracked)\n/* harmony export */ });\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/debug */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fdebug&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_debug__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _glimmer_tracking_primitives_cache__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @glimmer/tracking/primitives/cache */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40glimmer%2Ftracking%2Fprimitives%2Fcache&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _glimmer_tracking_primitives_cache__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_glimmer_tracking_primitives_cache__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _private__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./-private */ \"../rewritten-packages/@ember-data/tracking.bbb05d16/node_modules/@ember-data/tracking/-private.js\");\n/* harmony import */ var _ember_object_compat__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ember/object/compat */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fobject%2Fcompat&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_object_compat__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_ember_object_compat__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\n\nfunction cached(target, key, descriptor) {\n  // Error on `@cached()`, `@cached(...args)`, and `@cached propName = value;`\n  ( true && !(target !== undefined) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)('You attempted to use @cached(), which is not necessary nor supported. Remove the parentheses and you will be good to go!', target !== undefined));\n  ( true && !(typeof target === 'object' && typeof key === 'string' && typeof descriptor === 'object' && arguments.length === 3) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`You attempted to use @cached on with ${arguments.length > 1 ? 'arguments' : 'an argument'} ( @cached(${Array.from(arguments).map(d => `'${d}'`).join(', ')}), which is not supported. Dependencies are automatically tracked, so you can just use ${'`@cached`'}`, typeof target === 'object' && typeof key === 'string' && typeof descriptor === 'object' && arguments.length === 3));\n  ( true && !(typeof descriptor.get === 'function') && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.assert)(`The @cached decorator must be applied to getters. '${key}' is not a getter.`, typeof descriptor.get === 'function'));\n  const caches = new WeakMap();\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  const getter = descriptor.get;\n  descriptor.get = function () {\n    if (!caches.has(this)) caches.set(this, (0,_glimmer_tracking_primitives_cache__WEBPACK_IMPORTED_MODULE_1__.createCache)(getter.bind(this)));\n    return (0,_glimmer_tracking_primitives_cache__WEBPACK_IMPORTED_MODULE_1__.getValue)(caches.get(this));\n  };\n}\n\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@ember-data/tracking.bbb05d16/node_modules/@ember-data/tracking/index.js?");

/***/ }),

/***/ "../rewritten-packages/@ember/render-modifiers.da4f7ec0/node_modules/@ember/render-modifiers/_app_/modifiers/did-insert.js":
/*!*********************************************************************************************************************************!*\
  !*** ../rewritten-packages/@ember/render-modifiers.da4f7ec0/node_modules/@ember/render-modifiers/_app_/modifiers/did-insert.js ***!
  \*********************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* reexport safe */ _ember_render_modifiers_modifiers_did_insert__WEBPACK_IMPORTED_MODULE_0__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _ember_render_modifiers_modifiers_did_insert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/render-modifiers/modifiers/did-insert */ \"../rewritten-packages/@ember/render-modifiers.da4f7ec0/node_modules/@ember/render-modifiers/modifiers/did-insert.js\");\n\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@ember/render-modifiers.da4f7ec0/node_modules/@ember/render-modifiers/_app_/modifiers/did-insert.js?");

/***/ }),

/***/ "../rewritten-packages/@ember/render-modifiers.da4f7ec0/node_modules/@ember/render-modifiers/_app_/modifiers/did-update.js":
/*!*********************************************************************************************************************************!*\
  !*** ../rewritten-packages/@ember/render-modifiers.da4f7ec0/node_modules/@ember/render-modifiers/_app_/modifiers/did-update.js ***!
  \*********************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* reexport safe */ _ember_render_modifiers_modifiers_did_update__WEBPACK_IMPORTED_MODULE_0__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _ember_render_modifiers_modifiers_did_update__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/render-modifiers/modifiers/did-update */ \"../rewritten-packages/@ember/render-modifiers.da4f7ec0/node_modules/@ember/render-modifiers/modifiers/did-update.js\");\n\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@ember/render-modifiers.da4f7ec0/node_modules/@ember/render-modifiers/_app_/modifiers/did-update.js?");

/***/ }),

/***/ "../rewritten-packages/@ember/render-modifiers.da4f7ec0/node_modules/@ember/render-modifiers/_app_/modifiers/will-destroy.js":
/*!***********************************************************************************************************************************!*\
  !*** ../rewritten-packages/@ember/render-modifiers.da4f7ec0/node_modules/@ember/render-modifiers/_app_/modifiers/will-destroy.js ***!
  \***********************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* reexport safe */ _ember_render_modifiers_modifiers_will_destroy__WEBPACK_IMPORTED_MODULE_0__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _ember_render_modifiers_modifiers_will_destroy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/render-modifiers/modifiers/will-destroy */ \"../rewritten-packages/@ember/render-modifiers.da4f7ec0/node_modules/@ember/render-modifiers/modifiers/will-destroy.js\");\n\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@ember/render-modifiers.da4f7ec0/node_modules/@ember/render-modifiers/_app_/modifiers/will-destroy.js?");

/***/ }),

/***/ "../rewritten-packages/@ember/render-modifiers.da4f7ec0/node_modules/@ember/render-modifiers/modifiers/did-insert.js":
/*!***************************************************************************************************************************!*\
  !*** ../rewritten-packages/@ember/render-modifiers.da4f7ec0/node_modules/@ember/render-modifiers/modifiers/did-insert.js ***!
  \***************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _ember_modifier__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/modifier */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fmodifier&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_modifier__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_modifier__WEBPACK_IMPORTED_MODULE_0__);\n\n/**\n  The `{{did-insert}}` element modifier is activated when an element is\n  inserted into the DOM.\n\n  In this example, the `fadeIn` function receives the `div` DOM element as its\n  first argument and is executed after the element is inserted into the DOM.\n\n  ```handlebars\n  <div {{did-insert this.fadeIn}} class=\"alert\">\n    {{yield}}\n  </div>\n  ```\n\n  ```js\n  export default Component.extend({\n    fadeIn(element) {\n      element.classList.add('fade-in');\n    }\n  });\n  ```\n\n  By default, the executed function will be unbound. If you would like to access\n  the component context in your function, use the `action` decorator as follows:\n\n  ```handlebars\n  <div {{did-insert this.incrementCount}}>first</div>\n  <div {{did-insert this.incrementCount}}>second</div>\n\n  <p>{{this.count}} elements were rendered</p>\n  ```\n\n  ```js\n  export default Component.extend({\n    count: tracked({ value: 0 }),\n\n    incrementCount: action(function() {\n      this.count++;\n    })\n  });\n  ```\n\n  @method did-insert\n  @public\n*/\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_ember_modifier__WEBPACK_IMPORTED_MODULE_0__.setModifierManager)(() => ({\n  capabilities: (0,_ember_modifier__WEBPACK_IMPORTED_MODULE_0__.capabilities)('3.22', {\n    disableAutoTracking: true\n  }),\n  createModifier() {},\n  installModifier(_state, element, {\n    positional: [fn, ...args],\n    named\n  }) {\n    fn(element, args, named);\n  },\n  updateModifier() {},\n  destroyModifier() {}\n}), class DidInsertModifier {}));\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@ember/render-modifiers.da4f7ec0/node_modules/@ember/render-modifiers/modifiers/did-insert.js?");

/***/ }),

/***/ "../rewritten-packages/@ember/render-modifiers.da4f7ec0/node_modules/@ember/render-modifiers/modifiers/did-update.js":
/*!***************************************************************************************************************************!*\
  !*** ../rewritten-packages/@ember/render-modifiers.da4f7ec0/node_modules/@ember/render-modifiers/modifiers/did-update.js ***!
  \***************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _ember_modifier__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/modifier */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fmodifier&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_modifier__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_modifier__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../../../../@embroider/macros/src/addon/es-compat2 */ \"../../@embroider/macros/src/addon/es-compat2.js\");\n\n\nconst untrack = function () {\n  {\n    // ember-source@3.27 shipped \"real modules\" by default, so we can just use\n    // importSync to get @glimmer/validator directly\n    return (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(__webpack_require__(/*! @glimmer/validator */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40glimmer%2Fvalidator&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\")).untrack;\n  }\n}();\n\n/**\n  The `{{did-update}}` element modifier is activated when any of its arguments\n  are updated. It does not run on initial render.\n\n  In this example, the `resize` function receives the `textarea` DOM element as its\n  first argument and is executed anytime the `@text` argument changes.\n\n  ```handlebars\n  <textarea {{did-update this.resize @text}} readonly style=\"padding: 0px;\">\n    {{@text}}\n  </textarea>\n  ```\n\n  ```js\n  export default Component.extend({\n    resize(element) {\n      element.style.height = `${element.scrollHeight}px`;\n    }\n  });\n  ```\n\n  In addition to the `element`, both named and positional arguments are passed to the\n  executed function:\n\n  ```handlebars\n  <div {{did-update this.logArguments @first @second third=@third}} />\n  ```\n\n  ```js\n  export default Component.extend({\n    logArguments(element, [first, second], { third }) {\n      console.log('element', element);\n      console.log('positional args', first, second);\n      console.log('names args', third);\n    }\n  });\n  ```\n\n  By default, the executed function will be unbound. If you would like to access\n  the component context in your function, use the `action` decorator as follows:\n\n  ```handlebars\n  <div {{did-update this.someFunction @someArg} />\n  ```\n\n  ```js\n  export default Component.extend({\n    someFunction: action(function(element, [someArg]) {\n      // the `this` context will be the component instance\n    })\n  });\n  ```\n\n  @method did-update\n  @public\n*/\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_ember_modifier__WEBPACK_IMPORTED_MODULE_0__.setModifierManager)(() => ({\n  capabilities: (0,_ember_modifier__WEBPACK_IMPORTED_MODULE_0__.capabilities)('3.22', {\n    disableAutoTracking: false\n  }),\n  createModifier() {\n    return {\n      element: null\n    };\n  },\n  installModifier(state, element, args) {\n    // save element into state bucket\n    state.element = element;\n    {\n      // Consume individual properties to entangle tracking.\n      // https://github.com/emberjs/ember.js/issues/19277\n      // https://github.com/ember-modifier/ember-modifier/pull/63#issuecomment-815908201\n      args.positional.forEach(() => {});\n      args.named && Object.values(args.named);\n    }\n  },\n  updateModifier({\n    element\n  }, args) {\n    let [fn, ...positional] = args.positional;\n    {\n      // Consume individual properties to entangle tracking.\n      // https://github.com/emberjs/ember.js/issues/19277\n      // https://github.com/ember-modifier/ember-modifier/pull/63#issuecomment-815908201\n      args.positional.forEach(() => {});\n      args.named && Object.values(args.named);\n      untrack(() => {\n        fn(element, positional, args.named);\n      });\n    }\n  },\n  destroyModifier() {}\n}), class DidUpdateModifier {}));\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@ember/render-modifiers.da4f7ec0/node_modules/@ember/render-modifiers/modifiers/did-update.js?");

/***/ }),

/***/ "../rewritten-packages/@ember/render-modifiers.da4f7ec0/node_modules/@ember/render-modifiers/modifiers/will-destroy.js":
/*!*****************************************************************************************************************************!*\
  !*** ../rewritten-packages/@ember/render-modifiers.da4f7ec0/node_modules/@ember/render-modifiers/modifiers/will-destroy.js ***!
  \*****************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _ember_modifier__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/modifier */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fmodifier&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_modifier__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_modifier__WEBPACK_IMPORTED_MODULE_0__);\n\n/**\n  The `{{will-destroy}}` element modifier is activated immediately before the element\n  is removed from the DOM.\n\n  ```handlebars\n  <div {{will-destroy this.teardownPlugin}}>\n    {{yield}}\n  </div>\n  ```\n\n  ```js\n  export default Component.extend({\n    teardownPlugin(element) {\n      // teardown logic here\n    }\n  });\n  ```\n\n  By default, the executed function will be unbound. If you would like to access\n  the component context in your function, use the `action` decorator as follows:\n\n  ```handlebars\n  <div {{will-destroy this.teardownPlugin}}>\n    {{yield}}\n  </div>\n  ```\n\n  ```js\n  export default Component.extend({\n    teardownPlugin: action(function(element) {\n      // the `this` context will be the component instance\n    })\n  });\n  ```\n\n  @method will-destroy\n  @public\n*/\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_ember_modifier__WEBPACK_IMPORTED_MODULE_0__.setModifierManager)(() => ({\n  capabilities: (0,_ember_modifier__WEBPACK_IMPORTED_MODULE_0__.capabilities)('3.22', {\n    disableAutoTracking: true\n  }),\n  createModifier() {\n    return {\n      element: null\n    };\n  },\n  installModifier(state, element) {\n    state.element = element;\n  },\n  updateModifier() {},\n  destroyModifier({\n    element\n  }, args) {\n    let [fn, ...positional] = args.positional;\n    fn(element, positional, args.named);\n  }\n}), class WillDestroyModifier {}));\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@ember/render-modifiers.da4f7ec0/node_modules/@ember/render-modifiers/modifiers/will-destroy.js?");

/***/ }),

/***/ "../rewritten-packages/@ember/string.5601e258/node_modules/@ember/string/cache.js":
/*!****************************************************************************************!*\
  !*** ../rewritten-packages/@ember/string.5601e258/node_modules/@ember/string/cache.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Cache)\n/* harmony export */ });\n/* harmony import */ var _Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../@babel/runtime/helpers/esm/defineProperty.js */ \"../../@babel/runtime/helpers/esm/defineProperty.js\");\n\nclass Cache {\n  constructor(limit, func, store) {\n    (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"size\", 0);\n    (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"misses\", 0);\n    (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"hits\", 0);\n    this.limit = limit;\n    this.func = func;\n    this.store = store;\n    this.store = store || new Map();\n  }\n  get(key) {\n    let value = this.store.get(key);\n    if (this.store.has(key)) {\n      this.hits++;\n      return this.store.get(key);\n    } else {\n      this.misses++;\n      value = this.set(key, this.func(key));\n    }\n    return value;\n  }\n  set(key, value) {\n    if (this.limit > this.size) {\n      this.size++;\n      this.store.set(key, value);\n    }\n    return value;\n  }\n  purge() {\n    this.store.clear();\n    this.size = 0;\n    this.hits = 0;\n    this.misses = 0;\n  }\n}\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@ember/string.5601e258/node_modules/@ember/string/cache.js?");

/***/ }),

/***/ "../rewritten-packages/@ember/string.5601e258/node_modules/@ember/string/index.js":
/*!****************************************************************************************!*\
  !*** ../rewritten-packages/@ember/string.5601e258/node_modules/@ember/string/index.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   camelize: () => (/* binding */ camelize),\n/* harmony export */   capitalize: () => (/* binding */ capitalize),\n/* harmony export */   classify: () => (/* binding */ classify),\n/* harmony export */   dasherize: () => (/* binding */ dasherize),\n/* harmony export */   decamelize: () => (/* binding */ decamelize),\n/* harmony export */   getString: () => (/* binding */ getString),\n/* harmony export */   getStrings: () => (/* binding */ getStrings),\n/* harmony export */   htmlSafe: () => (/* binding */ htmlSafe),\n/* harmony export */   isHTMLSafe: () => (/* binding */ isHTMLSafe),\n/* harmony export */   setStrings: () => (/* binding */ setStrings),\n/* harmony export */   underscore: () => (/* binding */ underscore),\n/* harmony export */   w: () => (/* binding */ w)\n/* harmony export */ });\n/* harmony import */ var _cache__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cache */ \"../rewritten-packages/@ember/string.5601e258/node_modules/@ember/string/cache.js\");\n/* eslint-disable no-useless-escape */\n\n/**\n @module @ember/string\n */\n\n// STATE within a module is frowned upon, this exists\n// to support Ember.STRINGS but shield ember internals from this legacy global\n// API.\nlet STRINGS = {};\nfunction setStrings(strings) {\n  STRINGS = strings;\n}\nfunction getStrings() {\n  return STRINGS;\n}\nfunction getString(name) {\n  return STRINGS[name];\n}\nconst STRING_DASHERIZE_REGEXP = /[ _]/g;\nconst STRING_DASHERIZE_CACHE = new _cache__WEBPACK_IMPORTED_MODULE_0__[\"default\"](1000, key => decamelize(key).replace(STRING_DASHERIZE_REGEXP, '-'));\nconst STRING_CAMELIZE_REGEXP_1 = /(\\-|\\_|\\.|\\s)+(.)?/g;\nconst STRING_CAMELIZE_REGEXP_2 = /(^|\\/)([A-Z])/g;\nconst CAMELIZE_CACHE = new _cache__WEBPACK_IMPORTED_MODULE_0__[\"default\"](1000, key => key.replace(STRING_CAMELIZE_REGEXP_1, (_match, _separator, chr) => chr ? chr.toUpperCase() : '').replace(STRING_CAMELIZE_REGEXP_2, (match\n/*, separator, chr */) => match.toLowerCase()));\nconst STRING_CLASSIFY_REGEXP_1 = /^(\\-|_)+(.)?/;\nconst STRING_CLASSIFY_REGEXP_2 = /(.)(\\-|\\_|\\.|\\s)+(.)?/g;\nconst STRING_CLASSIFY_REGEXP_3 = /(^|\\/|\\.)([a-z])/g;\nconst CLASSIFY_CACHE = new _cache__WEBPACK_IMPORTED_MODULE_0__[\"default\"](1000, str => {\n  const replace1 = (_match, _separator, chr) => chr ? `_${chr.toUpperCase()}` : '';\n  const replace2 = (_match, initialChar, _separator, chr) => initialChar + (chr ? chr.toUpperCase() : '');\n  const parts = str.split('/');\n  for (let i = 0; i < parts.length; i++) {\n    parts[i] = parts[i].replace(STRING_CLASSIFY_REGEXP_1, replace1).replace(STRING_CLASSIFY_REGEXP_2, replace2);\n  }\n  return parts.join('/').replace(STRING_CLASSIFY_REGEXP_3, (match\n  /*, separator, chr */) => match.toUpperCase());\n});\nconst STRING_UNDERSCORE_REGEXP_1 = /([a-z\\d])([A-Z]+)/g;\nconst STRING_UNDERSCORE_REGEXP_2 = /\\-|\\s+/g;\nconst UNDERSCORE_CACHE = new _cache__WEBPACK_IMPORTED_MODULE_0__[\"default\"](1000, str => str.replace(STRING_UNDERSCORE_REGEXP_1, '$1_$2').replace(STRING_UNDERSCORE_REGEXP_2, '_').toLowerCase());\nconst STRING_CAPITALIZE_REGEXP = /(^|\\/)([a-z\\u00C0-\\u024F])/g;\nconst CAPITALIZE_CACHE = new _cache__WEBPACK_IMPORTED_MODULE_0__[\"default\"](1000, str => str.replace(STRING_CAPITALIZE_REGEXP, (match\n/*, separator, chr */) => match.toUpperCase()));\nconst STRING_DECAMELIZE_REGEXP = /([a-z\\d])([A-Z])/g;\nconst DECAMELIZE_CACHE = new _cache__WEBPACK_IMPORTED_MODULE_0__[\"default\"](1000, str => str.replace(STRING_DECAMELIZE_REGEXP, '$1_$2').toLowerCase());\n/**\n  Splits a string into separate units separated by spaces, eliminating any\n  empty strings in the process. This is a convenience method for split that\n  is mostly useful when applied to the `String.prototype`.\n\n  ```javascript\n  import { w } from '@ember/string';\n\n  w(\"alpha beta gamma\").forEach(function(key) {\n    console.log(key);\n  });\n\n  // > alpha\n  // > beta\n  // > gamma\n  ```\n\n  @method w\n  @param {String} str The string to split\n  @return {Array} array containing the split strings\n  @public\n*/\n\nfunction w(str) {\n  return str.split(/\\s+/);\n}\n/**\n  Converts a camelized string into all lower case separated by underscores.\n\n  ```javascript\n  import { decamelize } from '@ember/string';\n\n  decamelize('innerHTML');          // 'inner_html'\n  decamelize('action_name');        // 'action_name'\n  decamelize('css-class-name');     // 'css-class-name'\n  decamelize('my favorite items');  // 'my favorite items'\n  ```\n\n  @method decamelize\n  @param {String} str The string to decamelize.\n  @return {String} the decamelized string.\n  @public\n*/\n\nfunction decamelize(str) {\n  return DECAMELIZE_CACHE.get(str);\n}\n/**\n  Replaces underscores, spaces, or camelCase with dashes.\n\n  ```javascript\n  import { dasherize } from '@ember/string';\n\n  dasherize('innerHTML');                // 'inner-html'\n  dasherize('action_name');              // 'action-name'\n  dasherize('css-class-name');           // 'css-class-name'\n  dasherize('my favorite items');        // 'my-favorite-items'\n  dasherize('privateDocs/ownerInvoice';  // 'private-docs/owner-invoice'\n  ```\n\n  @method dasherize\n  @param {String} str The string to dasherize.\n  @return {String} the dasherized string.\n  @public\n*/\n\nfunction dasherize(str) {\n  return STRING_DASHERIZE_CACHE.get(str);\n}\n/**\n  Returns the lowerCamelCase form of a string.\n\n  ```javascript\n  import { camelize } from '@ember/string';\n\n  camelize('innerHTML');                   // 'innerHTML'\n  camelize('action_name');                 // 'actionName'\n  camelize('css-class-name');              // 'cssClassName'\n  camelize('my favorite items');           // 'myFavoriteItems'\n  camelize('My Favorite Items');           // 'myFavoriteItems'\n  camelize('private-docs/owner-invoice');  // 'privateDocs/ownerInvoice'\n  ```\n\n  @method camelize\n  @param {String} str The string to camelize.\n  @return {String} the camelized string.\n  @public\n*/\n\nfunction camelize(str) {\n  return CAMELIZE_CACHE.get(str);\n}\n/**\n  Returns the UpperCamelCase form of a string.\n\n  ```javascript\n  import { classify } from '@ember/string';\n\n  classify('innerHTML');                   // 'InnerHTML'\n  classify('action_name');                 // 'ActionName'\n  classify('css-class-name');              // 'CssClassName'\n  classify('my favorite items');           // 'MyFavoriteItems'\n  classify('private-docs/owner-invoice');  // 'PrivateDocs/OwnerInvoice'\n  ```\n\n  @method classify\n  @param {String} str the string to classify\n  @return {String} the classified string\n  @public\n*/\n\nfunction classify(str) {\n  return CLASSIFY_CACHE.get(str);\n}\n/**\n  More general than decamelize. Returns the lower\\_case\\_and\\_underscored\n  form of a string.\n\n  ```javascript\n  import { underscore } from '@ember/string';\n\n  underscore('innerHTML');                 // 'inner_html'\n  underscore('action_name');               // 'action_name'\n  underscore('css-class-name');            // 'css_class_name'\n  underscore('my favorite items');         // 'my_favorite_items'\n  underscore('privateDocs/ownerInvoice');  // 'private_docs/owner_invoice'\n  ```\n\n  @method underscore\n  @param {String} str The string to underscore.\n  @return {String} the underscored string.\n  @public\n*/\n\nfunction underscore(str) {\n  return UNDERSCORE_CACHE.get(str);\n}\n/**\n  Returns the Capitalized form of a string\n\n  ```javascript\n  import { capitalize } from '@ember/string';\n\n  capitalize('innerHTML')                 // 'InnerHTML'\n  capitalize('action_name')               // 'Action_name'\n  capitalize('css-class-name')            // 'Css-class-name'\n  capitalize('my favorite items')         // 'My favorite items'\n  capitalize('privateDocs/ownerInvoice'); // 'PrivateDocs/ownerInvoice'\n  ```\n\n  @method capitalize\n  @param {String} str The string to capitalize.\n  @return {String} The capitalized string.\n  @public\n*/\n\nfunction capitalize(str) {\n  return CAPITALIZE_CACHE.get(str);\n}\n/*\n  The following are implemented here to give users adding `@ember/string` to\n  their projects a useful error message. The `ember-source` implementation of\n  `@ember/string` is clobbered by adding this addon, and so the deprecation of\n  the import path is not triggered. This error message is intended to help\n  users discover what they need to change.\n*/\n\nfunction htmlSafe(str) {\n  throw new Error('htmlSafe is not implemented in the `@ember/string` package. Please import from `@ember/template` instead.');\n}\nfunction isHTMLSafe(str) {\n  throw new Error('isHTMLSafe is not implemented in the `@ember/string` package. Please import from `@ember/template` instead.');\n}\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@ember/string.5601e258/node_modules/@ember/string/index.js?");

/***/ }),

/***/ "../rewritten-packages/@ember/test-waiters.2bac1e98/node_modules/@ember/test-waiters/build-waiter.js":
/*!***********************************************************************************************************!*\
  !*** ../rewritten-packages/@ember/test-waiters.2bac1e98/node_modules/@ember/test-waiters/build-waiter.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _resetWaiterNames: () => (/* binding */ _resetWaiterNames),\n/* harmony export */   \"default\": () => (/* binding */ buildWaiter)\n/* harmony export */ });\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/debug */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fdebug&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_debug__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _token__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./token */ \"../rewritten-packages/@ember/test-waiters.2bac1e98/node_modules/@ember/test-waiters/token.js\");\n/* harmony import */ var _waiter_manager__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./waiter-manager */ \"../rewritten-packages/@ember/test-waiters.2bac1e98/node_modules/@ember/test-waiters/waiter-manager.js\");\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\n\n\n\nconst WAITER_NAME_PATTERN = /^[^:]*:?.*/;\nlet WAITER_NAMES =  true /* DEBUG */ ? new Set() : 0;\nfunction _resetWaiterNames() {\n  WAITER_NAMES = new Set();\n}\nfunction getNextToken() {\n  return new _token__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\n}\nclass TestWaiterImpl {\n  constructor(name, nextToken) {\n    _defineProperty(this, \"isRegistered\", false);\n    _defineProperty(this, \"items\", new Map());\n    _defineProperty(this, \"completedOperationsForTokens\", new WeakMap());\n    _defineProperty(this, \"completedOperationsForPrimitives\", new Map());\n    this.name = name; // @ts-ignore\n\n    this.nextToken = nextToken || getNextToken;\n  }\n  beginAsync(token = this.nextToken(), label) {\n    this._register();\n    if (this.items.has(token)) {\n      throw new Error(`beginAsync called for ${token} but it is already pending.`);\n    }\n    let error = new Error();\n    this.items.set(token, {\n      get stack() {\n        return error.stack;\n      },\n      label\n    });\n    return token;\n  }\n  endAsync(token) {\n    if (!this.items.has(token) && !this._getCompletedOperations(token).has(token)) {\n      throw new Error(`testWaiter.endAsync called with no preceding testWaiter.beginAsync call.\n        Test waiter calls should always be paired. This can occur when a test waiter's paired calls are invoked in a non-deterministic order.\n\n        See https://github.com/emberjs/ember-test-waiters#keep-beginasyncendasync-in-same-block-scope for more information.`);\n    }\n    this.items.delete(token); // Mark when a waiter operation has completed so we can distinguish\n    // whether endAsync is being called before a prior beginAsync call above.\n\n    this._getCompletedOperations(token).set(token, true);\n  }\n  waitUntil() {\n    return this.items.size === 0;\n  }\n  debugInfo() {\n    let result = [];\n    this.items.forEach(value => {\n      result.push(value);\n    });\n    return result;\n  }\n  reset() {\n    this.items.clear();\n  }\n  _register() {\n    if (!this.isRegistered) {\n      (0,_waiter_manager__WEBPACK_IMPORTED_MODULE_2__.register)(this);\n      this.isRegistered = true;\n    }\n  }\n  _getCompletedOperations(token) {\n    let type = typeof token;\n    let isFunction = type === 'function';\n    let isObject = token !== null && type === 'object';\n    let isPrimitive = !isFunction && !isObject;\n    return isPrimitive ? this.completedOperationsForPrimitives : this.completedOperationsForTokens;\n  }\n}\nclass NoopTestWaiter {\n  constructor(name) {\n    this.name = name;\n  }\n  beginAsync() {\n    return this;\n  }\n  endAsync() {}\n  waitUntil() {\n    return true;\n  }\n  debugInfo() {\n    return [];\n  }\n  reset() {}\n}\n/**\n * Builds and returns a test waiter. The type of the\n * returned waiter is dependent on whether the app or\n * addon is in `DEBUG` mode or not.\n *\n * @public\n *\n * @param name {string} The name of the test waiter\n * @returns {TestWaiter}\n *\n * @example\n *\n * import Component from '@ember/component';\n * import { buildWaiter } from '@ember/test-waiters';\n *\n * if (DEBUG) {\n *   let waiter = buildWaiter('friend-waiter');\n * }\n *\n * export default class Friendz extends Component {\n *   didInsertElement() {\n *     let token = waiter.beginAsync(this);\n *\n *     someAsyncWork().then(() => {\n *       waiter.endAsync(token);\n *     });\n *   }\n * }\n */\n\nfunction buildWaiter(name) {\n  if (true /* DEBUG */) {\n    ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.warn)(`The waiter name '${name}' is already in use`, !WAITER_NAMES.has(name), {\n      id: '@ember/test-waiters.duplicate-waiter-name'\n    }));\n    WAITER_NAMES.add(name);\n  }\n  if (false /* DEBUG */) {} else {\n    ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.warn)(`You must provide a name that contains a descriptive prefix separated by a colon.\n\n        Example: ember-fictitious-addon:some-file\n\n        You passed: ${name}`, WAITER_NAME_PATTERN.test(name), {\n      id: '@ember/test-waiters.invalid-waiter-name'\n    }));\n    return new TestWaiterImpl(name);\n  }\n}\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@ember/test-waiters.2bac1e98/node_modules/@ember/test-waiters/build-waiter.js?");

/***/ }),

/***/ "../rewritten-packages/@ember/test-waiters.2bac1e98/node_modules/@ember/test-waiters/ember-test-waiters/index.js":
/*!***********************************************************************************************************************!*\
  !*** ../rewritten-packages/@ember/test-waiters.2bac1e98/node_modules/@ember/test-waiters/ember-test-waiters/index.js ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _reset: () => (/* reexport safe */ _ember_test_waiters__WEBPACK_IMPORTED_MODULE_1__._reset),\n/* harmony export */   _resetWaiterNames: () => (/* reexport safe */ _ember_test_waiters__WEBPACK_IMPORTED_MODULE_1__._resetWaiterNames),\n/* harmony export */   buildWaiter: () => (/* reexport safe */ _ember_test_waiters__WEBPACK_IMPORTED_MODULE_1__.buildWaiter),\n/* harmony export */   getPendingWaiterState: () => (/* reexport safe */ _ember_test_waiters__WEBPACK_IMPORTED_MODULE_1__.getPendingWaiterState),\n/* harmony export */   getWaiters: () => (/* reexport safe */ _ember_test_waiters__WEBPACK_IMPORTED_MODULE_1__.getWaiters),\n/* harmony export */   hasPendingWaiters: () => (/* reexport safe */ _ember_test_waiters__WEBPACK_IMPORTED_MODULE_1__.hasPendingWaiters),\n/* harmony export */   register: () => (/* reexport safe */ _ember_test_waiters__WEBPACK_IMPORTED_MODULE_1__.register),\n/* harmony export */   unregister: () => (/* reexport safe */ _ember_test_waiters__WEBPACK_IMPORTED_MODULE_1__.unregister),\n/* harmony export */   waitFor: () => (/* reexport safe */ _ember_test_waiters__WEBPACK_IMPORTED_MODULE_1__.waitFor),\n/* harmony export */   waitForPromise: () => (/* reexport safe */ _ember_test_waiters__WEBPACK_IMPORTED_MODULE_1__.waitForPromise)\n/* harmony export */ });\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/debug */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fdebug&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_debug__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _ember_test_waiters__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember/test-waiters */ \"../rewritten-packages/@ember/test-waiters.2bac1e98/node_modules/@ember/test-waiters/index.js\");\n\n( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.deprecate)('Importing from ember-test-waiters is deprecated. Please import from @ember/test-waiters', false, {\n  id: 'ember-test-waiters-legacy-module-name',\n  until: '3.0.0',\n  for: 'ember-test-waiters',\n  since: {\n    enabled: '2.2.0'\n  }\n}));\n\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@ember/test-waiters.2bac1e98/node_modules/@ember/test-waiters/ember-test-waiters/index.js?");

/***/ }),

/***/ "../rewritten-packages/@ember/test-waiters.2bac1e98/node_modules/@ember/test-waiters/index.js":
/*!****************************************************************************************************!*\
  !*** ../rewritten-packages/@ember/test-waiters.2bac1e98/node_modules/@ember/test-waiters/index.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _reset: () => (/* reexport safe */ _waiter_manager__WEBPACK_IMPORTED_MODULE_0__._reset),\n/* harmony export */   _resetWaiterNames: () => (/* reexport safe */ _build_waiter__WEBPACK_IMPORTED_MODULE_1__._resetWaiterNames),\n/* harmony export */   buildWaiter: () => (/* reexport safe */ _build_waiter__WEBPACK_IMPORTED_MODULE_1__[\"default\"]),\n/* harmony export */   getPendingWaiterState: () => (/* reexport safe */ _waiter_manager__WEBPACK_IMPORTED_MODULE_0__.getPendingWaiterState),\n/* harmony export */   getWaiters: () => (/* reexport safe */ _waiter_manager__WEBPACK_IMPORTED_MODULE_0__.getWaiters),\n/* harmony export */   hasPendingWaiters: () => (/* reexport safe */ _waiter_manager__WEBPACK_IMPORTED_MODULE_0__.hasPendingWaiters),\n/* harmony export */   register: () => (/* reexport safe */ _waiter_manager__WEBPACK_IMPORTED_MODULE_0__.register),\n/* harmony export */   unregister: () => (/* reexport safe */ _waiter_manager__WEBPACK_IMPORTED_MODULE_0__.unregister),\n/* harmony export */   waitFor: () => (/* reexport safe */ _wait_for__WEBPACK_IMPORTED_MODULE_3__[\"default\"]),\n/* harmony export */   waitForPromise: () => (/* reexport safe */ _wait_for_promise__WEBPACK_IMPORTED_MODULE_2__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _waiter_manager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./waiter-manager */ \"../rewritten-packages/@ember/test-waiters.2bac1e98/node_modules/@ember/test-waiters/waiter-manager.js\");\n/* harmony import */ var _build_waiter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./build-waiter */ \"../rewritten-packages/@ember/test-waiters.2bac1e98/node_modules/@ember/test-waiters/build-waiter.js\");\n/* harmony import */ var _wait_for_promise__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./wait-for-promise */ \"../rewritten-packages/@ember/test-waiters.2bac1e98/node_modules/@ember/test-waiters/wait-for-promise.js\");\n/* harmony import */ var _wait_for__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./wait-for */ \"../rewritten-packages/@ember/test-waiters.2bac1e98/node_modules/@ember/test-waiters/wait-for.js\");\n\n\n\n\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@ember/test-waiters.2bac1e98/node_modules/@ember/test-waiters/index.js?");

/***/ }),

/***/ "../rewritten-packages/@ember/test-waiters.2bac1e98/node_modules/@ember/test-waiters/token.js":
/*!****************************************************************************************************!*\
  !*** ../rewritten-packages/@ember/test-waiters.2bac1e98/node_modules/@ember/test-waiters/token.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Token)\n/* harmony export */ });\n/**\n * A class representing a test waiter token.\n *\n * @public\n * @class\n */\nclass Token {}\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@ember/test-waiters.2bac1e98/node_modules/@ember/test-waiters/token.js?");

/***/ }),

/***/ "../rewritten-packages/@ember/test-waiters.2bac1e98/node_modules/@ember/test-waiters/types/index.js":
/*!**********************************************************************************************************!*\
  !*** ../rewritten-packages/@ember/test-waiters.2bac1e98/node_modules/@ember/test-waiters/types/index.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@ember/test-waiters.2bac1e98/node_modules/@ember/test-waiters/types/index.js?");

/***/ }),

/***/ "../rewritten-packages/@ember/test-waiters.2bac1e98/node_modules/@ember/test-waiters/wait-for-promise.js":
/*!***************************************************************************************************************!*\
  !*** ../rewritten-packages/@ember/test-waiters.2bac1e98/node_modules/@ember/test-waiters/wait-for-promise.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ waitForPromise)\n/* harmony export */ });\n/* harmony import */ var _build_waiter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./build-waiter */ \"../rewritten-packages/@ember/test-waiters.2bac1e98/node_modules/@ember/test-waiters/build-waiter.js\");\n\nconst PROMISE_WAITER = (0,_build_waiter__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('@ember/test-waiters:promise-waiter');\n/**\n * A convenient utility function to simplify waiting for a promise.\n *\n * @public\n * @param promise {Promise<T> | RSVP.Promise<T>} The promise to track async operations for\n * @param label {string} An optional string to identify the promise\n *\n * @example\n *\n * import Component from '@ember/component';\n * import { waitForPromise } from '@ember/test-waiters';\n *\n * export default class Friendz extends Component {\n *   didInsertElement() {\n *     waitForPromise(new Promise(resolve => {\n *       doSomeWork();\n *       resolve();\n *     }));\n *   }\n * }\n */\n\nfunction waitForPromise(promise, label) {\n  let result = promise;\n  if (true /* DEBUG */) {\n    PROMISE_WAITER.beginAsync(promise, label);\n    result = promise.then(value => {\n      PROMISE_WAITER.endAsync(promise);\n      return value;\n    }, error => {\n      PROMISE_WAITER.endAsync(promise);\n      throw error;\n    });\n  }\n  return result;\n}\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@ember/test-waiters.2bac1e98/node_modules/@ember/test-waiters/wait-for-promise.js?");

/***/ }),

/***/ "../rewritten-packages/@ember/test-waiters.2bac1e98/node_modules/@ember/test-waiters/wait-for.js":
/*!*******************************************************************************************************!*\
  !*** ../rewritten-packages/@ember/test-waiters.2bac1e98/node_modules/@ember/test-waiters/wait-for.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ waitFor)\n/* harmony export */ });\n/* harmony import */ var _wait_for_promise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./wait-for-promise */ \"../rewritten-packages/@ember/test-waiters.2bac1e98/node_modules/@ember/test-waiters/wait-for-promise.js\");\n/* harmony import */ var _build_waiter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./build-waiter */ \"../rewritten-packages/@ember/test-waiters.2bac1e98/node_modules/@ember/test-waiters/build-waiter.js\");\n\n\nfunction waitFor(...args) {\n  let isFunction = args.length < 3;\n  if (isFunction) {\n    let [fn, label] = args;\n    return wrapFunction(fn, label);\n  } else {\n    let [,, descriptor, label] = args;\n    if (false /* DEBUG */) {}\n    let fn = descriptor.value;\n    descriptor.value = wrapFunction(fn, label);\n    return descriptor;\n  }\n}\nfunction wrapFunction(fn, label) {\n  if (false /* DEBUG */) {}\n  return function (...args) {\n    let result = fn.call(this, ...args);\n    if (isThenable(result)) {\n      return (0,_wait_for_promise__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(result, label);\n    } else if (isGenerator(result)) {\n      return waitForGenerator(result, label);\n    } else {\n      return result;\n    }\n  };\n}\nfunction isThenable(maybePromise) {\n  let type = typeof maybePromise;\n  return (maybePromise !== null && type === 'object' || type === 'function') && typeof maybePromise.then === 'function';\n}\nfunction isGenerator(maybeGenerator) {\n  // Because we don't have Symbol.iterator in IE11\n  return typeof maybeGenerator.next === 'function' && typeof maybeGenerator.return === 'function' && typeof maybeGenerator.throw === 'function';\n}\nconst GENERATOR_WAITER = (0,_build_waiter__WEBPACK_IMPORTED_MODULE_1__[\"default\"])('@ember/test-waiters:generator-waiter');\nfunction waitForGenerator(generator, label) {\n  GENERATOR_WAITER.beginAsync(generator, label);\n  let isWaiting = true;\n  function stopWaiting() {\n    if (isWaiting) {\n      GENERATOR_WAITER.endAsync(generator);\n      isWaiting = false;\n    }\n  }\n  return {\n    next(...args) {\n      let hasErrored = true;\n      try {\n        let val = generator.next(...args);\n        hasErrored = false;\n        if (val.done) {\n          stopWaiting();\n        }\n        return val;\n      } finally {\n        // If generator.next() throws, we need to stop waiting. But if we catch\n        // and re-throw exceptions, it could move the location from which the\n        // uncaught exception is thrown, interfering with the developer\n        // debugging experience if they have break-on-exceptions enabled. So we\n        // use a boolean flag and a finally block to emulate a catch block.\n        if (hasErrored) {\n          stopWaiting();\n        }\n      }\n    },\n    return(...args) {\n      stopWaiting();\n      return generator.return(...args);\n    },\n    throw(...args) {\n      stopWaiting();\n      return generator.throw(...args);\n    }\n  };\n}\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@ember/test-waiters.2bac1e98/node_modules/@ember/test-waiters/wait-for.js?");

/***/ }),

/***/ "../rewritten-packages/@ember/test-waiters.2bac1e98/node_modules/@ember/test-waiters/waiter-manager.js":
/*!*************************************************************************************************************!*\
  !*** ../rewritten-packages/@ember/test-waiters.2bac1e98/node_modules/@ember/test-waiters/waiter-manager.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _reset: () => (/* binding */ _reset),\n/* harmony export */   getPendingWaiterState: () => (/* binding */ getPendingWaiterState),\n/* harmony export */   getWaiters: () => (/* binding */ getWaiters),\n/* harmony export */   hasPendingWaiters: () => (/* binding */ hasPendingWaiters),\n/* harmony export */   register: () => (/* binding */ register),\n/* harmony export */   unregister: () => (/* binding */ unregister)\n/* harmony export */ });\n/* harmony import */ var ember__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ember */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2Fember&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var ember__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(ember__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _ember_test__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember/test */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Ftest&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_test__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_ember_test__WEBPACK_IMPORTED_MODULE_1__);\n\n\n\n// this ensures that if @ember/test-waiters exists in multiple places in the\n// build output we will still use a single map of waiters (there really should\n// only be one of them, or else `settled` will not work at all)\nconst WAITERS = function () {\n  const HAS_SYMBOL = typeof Symbol !== 'undefined';\n  let symbolName = 'TEST_WAITERS';\n  let symbol = HAS_SYMBOL ? Symbol.for(symbolName) : symbolName;\n  let global = getGlobal();\n  let waiters = global[symbol];\n  if (waiters === undefined) {\n    waiters = global[symbol] = new Map();\n  }\n  return waiters;\n}();\nfunction indexable(input) {\n  return input;\n}\nfunction getGlobal() {\n  // eslint-disable-next-line node/no-unsupported-features/es-builtins\n  if (typeof globalThis !== 'undefined') return indexable(globalThis);\n  if (typeof self !== 'undefined') return indexable(self);\n  if (typeof window !== 'undefined') return indexable(window);\n  if (typeof global !== 'undefined') return indexable(global);\n  throw new Error('unable to locate global object');\n}\n/**\n * Backwards compatibility with legacy waiters system.\n *\n * We want to always register a waiter using the legacy waiter system, as right\n * now if consumers are not on the right version of @ember/test-helpers, using\n * this addon will result in none of these waiters waiting.\n */\n// eslint-disable-next-line ember/new-module-imports\n\nif ((ember__WEBPACK_IMPORTED_MODULE_0___default().Test)) {\n  (0,_ember_test__WEBPACK_IMPORTED_MODULE_1__.registerWaiter)(() => !hasPendingWaiters());\n}\n/**\n * Registers a waiter.\n *\n * @public\n * @param waiter {Waiter} A test waiter instance\n */\n\nfunction register(waiter) {\n  WAITERS.set(waiter.name, waiter);\n}\n/**\n * Un-registers a waiter.\n *\n * @public\n * @param waiter {Waiter} A test waiter instance\n */\n\nfunction unregister(waiter) {\n  WAITERS.delete(waiter.name);\n}\n/**\n * Gets an array of all waiters current registered.\n *\n * @public\n * @returns {Waiter[]}\n */\n\nfunction getWaiters() {\n  let result = [];\n  WAITERS.forEach(value => {\n    result.push(value);\n  });\n  return result;\n}\n/**\n * Clears all waiters.\n *\n * @private\n */\n\nfunction _reset() {\n  for (let waiter of getWaiters()) {\n    waiter.isRegistered = false;\n  }\n  WAITERS.clear();\n}\n/**\n * Gets the current state of all waiters. Any waiters whose\n * `waitUntil` method returns false will be considered `pending`.\n *\n * @returns {PendingWaiterState} An object containing a count of all waiters\n * pending and a `waiters` object containing the name of all pending waiters\n * and their debug info.\n */\n\nfunction getPendingWaiterState() {\n  let result = {\n    pending: 0,\n    waiters: {}\n  };\n  WAITERS.forEach(waiter => {\n    if (!waiter.waitUntil()) {\n      result.pending++;\n      let debugInfo = waiter.debugInfo();\n      result.waiters[waiter.name] = debugInfo || true;\n    }\n  });\n  return result;\n}\n/**\n * Determines if there are any pending waiters.\n *\n * @returns {boolean} `true` if there are pending waiters, otherwise `false`.\n */\n\nfunction hasPendingWaiters() {\n  let state = getPendingWaiterState();\n  return state.pending > 0;\n}\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@ember/test-waiters.2bac1e98/node_modules/@ember/test-waiters/waiter-manager.js?");

/***/ }),

/***/ "../rewritten-packages/@embroider/macros.83914fbf/node_modules/@embroider/macros/es-compat2.js":
/*!*****************************************************************************************************!*\
  !*** ../rewritten-packages/@embroider/macros.83914fbf/node_modules/@embroider/macros/es-compat2.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ esCompat)\n/* harmony export */ });\nfunction esCompat(m) {\n  return m?.__esModule ? m : {\n    default: m,\n    ...m\n  };\n}\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@embroider/macros.83914fbf/node_modules/@embroider/macros/es-compat2.js?");

/***/ }),

/***/ "../rewritten-packages/@embroider/macros.83914fbf/node_modules/@embroider/macros/runtime.js":
/*!**************************************************************************************************!*\
  !*** ../rewritten-packages/@embroider/macros.83914fbf/node_modules/@embroider/macros/runtime.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   each: () => (/* binding */ each),\n/* harmony export */   getGlobalConfig: () => (/* binding */ getGlobalConfig),\n/* harmony export */   isTesting: () => (/* binding */ isTesting),\n/* harmony export */   macroCondition: () => (/* binding */ macroCondition)\n/* harmony export */ });\n/*\n  These are the runtime implementations for the javascript macros that have\n  runtime implementations.\n\n  Not every macro has a runtime implementation, some only make sense in the\n  build and always run there.\n\n  Even when we have runtime implementations, we are still careful to emit static\n  errors during the build wherever possible, and runtime errors when necessary,\n  so that you're not surprised when you switch from runtime-mode to compile-time\n  mode.\n*/\n\n/*\n  CAUTION: in classic builds, this file gets shared by all present copies of\n  @embroider/macros. If you want to change its public API, you need to rename it\n  and update `pathToRuntime` in ../babel/state.ts to point at it, so that your\n  babel plugin and runtime will match.\n*/\n\nfunction each(array) {\n  if (!Array.isArray(array)) {\n    throw new Error(`the argument to the each() macro must be an array`);\n  }\n  return array;\n}\nfunction macroCondition(predicate) {\n  return predicate;\n}\n\n// This is here as a compile target for `getConfig` and `getOwnConfig` when\n// we're in runtime mode. This is not public API to call from your own code.\nfunction config(packageRoot) {\n  return runtimeConfig.packages[packageRoot];\n}\nfunction getGlobalConfig() {\n  return runtimeConfig.global;\n}\nfunction isTesting() {\n  let g = runtimeConfig.global;\n  let e = g && g['@embroider/macros'];\n  return Boolean(e && e.isTesting);\n}\nconst runtimeConfig = initializeRuntimeMacrosConfig();\n\n// this exists to be targeted by our babel plugin\nfunction initializeRuntimeMacrosConfig() {\n  return {\n    \"packages\": {\n      \"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/@ember-data/adapter\": {\n        \"compatWith\": null,\n        \"debug\": {\n          \"LOG_PAYLOADS\": false,\n          \"LOG_OPERATIONS\": false,\n          \"LOG_MUTATIONS\": false,\n          \"LOG_NOTIFICATIONS\": false,\n          \"LOG_REQUESTS\": false,\n          \"LOG_REQUEST_STATUS\": false,\n          \"LOG_IDENTIFIERS\": false,\n          \"LOG_GRAPH\": false,\n          \"LOG_INSTANCE_CACHE\": false\n        },\n        \"deprecations\": {\n          \"DEPRECATE_CATCH_ALL\": true,\n          \"DEPRECATE_3_12\": true,\n          \"DEPRECATE_NON_STRICT_TYPES\": true,\n          \"DEPRECATE_NON_STRICT_ID\": true,\n          \"DEPRECATE_COMPUTED_CHAINS\": true,\n          \"DEPRECATE_LEGACY_IMPORTS\": true,\n          \"DEPRECATE_NON_UNIQUE_PAYLOADS\": true,\n          \"DEPRECATE_RELATIONSHIP_REMOTE_UPDATE_CLEARING_LOCAL_STATE\": true,\n          \"DEPRECATE_MANY_ARRAY_DUPLICATES\": true\n        },\n        \"features\": {\n          \"SAMPLE_FEATURE_FLAG\": false\n        },\n        \"includeDataAdapter\": false,\n        \"packages\": {\n          \"HAS_EMBER_DATA_PACKAGE\": false,\n          \"HAS_STORE_PACKAGE\": true,\n          \"HAS_MODEL_PACKAGE\": false,\n          \"HAS_JSON_API_PACKAGE\": false,\n          \"HAS_GRAPH_PACKAGE\": false,\n          \"HAS_REQUEST_PACKAGE\": false,\n          \"HAS_COMPAT_PACKAGE\": true,\n          \"HAS_TRACKING_PACKAGE\": false,\n          \"HAS_ADAPTER_PACKAGE\": true,\n          \"HAS_SERIALIZER_PACKAGE\": false\n        },\n        \"env\": {\n          \"TESTING\": true,\n          \"PRODUCTION\": false,\n          \"DEBUG\": true\n        }\n      },\n      \"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/@ember-data/debug\": {\n        \"compatWith\": null,\n        \"debug\": {\n          \"LOG_PAYLOADS\": false,\n          \"LOG_OPERATIONS\": false,\n          \"LOG_MUTATIONS\": false,\n          \"LOG_NOTIFICATIONS\": false,\n          \"LOG_REQUESTS\": false,\n          \"LOG_REQUEST_STATUS\": false,\n          \"LOG_IDENTIFIERS\": false,\n          \"LOG_GRAPH\": false,\n          \"LOG_INSTANCE_CACHE\": false\n        },\n        \"deprecations\": {\n          \"DEPRECATE_CATCH_ALL\": true,\n          \"DEPRECATE_3_12\": true,\n          \"DEPRECATE_NON_STRICT_TYPES\": true,\n          \"DEPRECATE_NON_STRICT_ID\": true,\n          \"DEPRECATE_COMPUTED_CHAINS\": true,\n          \"DEPRECATE_LEGACY_IMPORTS\": true,\n          \"DEPRECATE_NON_UNIQUE_PAYLOADS\": true,\n          \"DEPRECATE_RELATIONSHIP_REMOTE_UPDATE_CLEARING_LOCAL_STATE\": true,\n          \"DEPRECATE_MANY_ARRAY_DUPLICATES\": true\n        },\n        \"features\": {\n          \"SAMPLE_FEATURE_FLAG\": false\n        },\n        \"includeDataAdapter\": true,\n        \"env\": {\n          \"TESTING\": true,\n          \"PRODUCTION\": false,\n          \"DEBUG\": true\n        },\n        \"includeDataAdapterInProduction\": true\n      },\n      \"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/@ember-data/graph\": {\n        \"compatWith\": null,\n        \"debug\": {\n          \"LOG_PAYLOADS\": false,\n          \"LOG_OPERATIONS\": false,\n          \"LOG_MUTATIONS\": false,\n          \"LOG_NOTIFICATIONS\": false,\n          \"LOG_REQUESTS\": false,\n          \"LOG_REQUEST_STATUS\": false,\n          \"LOG_IDENTIFIERS\": false,\n          \"LOG_GRAPH\": false,\n          \"LOG_INSTANCE_CACHE\": false\n        },\n        \"deprecations\": {\n          \"DEPRECATE_CATCH_ALL\": true,\n          \"DEPRECATE_3_12\": true,\n          \"DEPRECATE_NON_STRICT_TYPES\": true,\n          \"DEPRECATE_NON_STRICT_ID\": true,\n          \"DEPRECATE_COMPUTED_CHAINS\": true,\n          \"DEPRECATE_LEGACY_IMPORTS\": true,\n          \"DEPRECATE_NON_UNIQUE_PAYLOADS\": true,\n          \"DEPRECATE_RELATIONSHIP_REMOTE_UPDATE_CLEARING_LOCAL_STATE\": true,\n          \"DEPRECATE_MANY_ARRAY_DUPLICATES\": true\n        },\n        \"features\": {\n          \"SAMPLE_FEATURE_FLAG\": false\n        },\n        \"includeDataAdapter\": false,\n        \"packages\": {\n          \"HAS_EMBER_DATA_PACKAGE\": false,\n          \"HAS_STORE_PACKAGE\": true,\n          \"HAS_MODEL_PACKAGE\": false,\n          \"HAS_JSON_API_PACKAGE\": false,\n          \"HAS_GRAPH_PACKAGE\": true,\n          \"HAS_REQUEST_PACKAGE\": false,\n          \"HAS_COMPAT_PACKAGE\": false,\n          \"HAS_TRACKING_PACKAGE\": false,\n          \"HAS_ADAPTER_PACKAGE\": false,\n          \"HAS_SERIALIZER_PACKAGE\": false\n        },\n        \"env\": {\n          \"TESTING\": true,\n          \"PRODUCTION\": false,\n          \"DEBUG\": true\n        }\n      },\n      \"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/@ember-data/json-api\": {\n        \"compatWith\": null,\n        \"debug\": {\n          \"LOG_PAYLOADS\": false,\n          \"LOG_OPERATIONS\": false,\n          \"LOG_MUTATIONS\": false,\n          \"LOG_NOTIFICATIONS\": false,\n          \"LOG_REQUESTS\": false,\n          \"LOG_REQUEST_STATUS\": false,\n          \"LOG_IDENTIFIERS\": false,\n          \"LOG_GRAPH\": false,\n          \"LOG_INSTANCE_CACHE\": false\n        },\n        \"deprecations\": {\n          \"DEPRECATE_CATCH_ALL\": true,\n          \"DEPRECATE_3_12\": true,\n          \"DEPRECATE_NON_STRICT_TYPES\": true,\n          \"DEPRECATE_NON_STRICT_ID\": true,\n          \"DEPRECATE_COMPUTED_CHAINS\": true,\n          \"DEPRECATE_LEGACY_IMPORTS\": true,\n          \"DEPRECATE_NON_UNIQUE_PAYLOADS\": true,\n          \"DEPRECATE_RELATIONSHIP_REMOTE_UPDATE_CLEARING_LOCAL_STATE\": true,\n          \"DEPRECATE_MANY_ARRAY_DUPLICATES\": true\n        },\n        \"features\": {\n          \"SAMPLE_FEATURE_FLAG\": false\n        },\n        \"includeDataAdapter\": false,\n        \"packages\": {\n          \"HAS_EMBER_DATA_PACKAGE\": false,\n          \"HAS_STORE_PACKAGE\": true,\n          \"HAS_MODEL_PACKAGE\": false,\n          \"HAS_JSON_API_PACKAGE\": true,\n          \"HAS_GRAPH_PACKAGE\": true,\n          \"HAS_REQUEST_PACKAGE\": false,\n          \"HAS_COMPAT_PACKAGE\": false,\n          \"HAS_TRACKING_PACKAGE\": false,\n          \"HAS_ADAPTER_PACKAGE\": false,\n          \"HAS_SERIALIZER_PACKAGE\": false\n        },\n        \"env\": {\n          \"TESTING\": true,\n          \"PRODUCTION\": false,\n          \"DEBUG\": true\n        }\n      },\n      \"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/@ember-data/legacy-compat\": {\n        \"compatWith\": null,\n        \"debug\": {\n          \"LOG_PAYLOADS\": false,\n          \"LOG_OPERATIONS\": false,\n          \"LOG_MUTATIONS\": false,\n          \"LOG_NOTIFICATIONS\": false,\n          \"LOG_REQUESTS\": false,\n          \"LOG_REQUEST_STATUS\": false,\n          \"LOG_IDENTIFIERS\": false,\n          \"LOG_GRAPH\": false,\n          \"LOG_INSTANCE_CACHE\": false\n        },\n        \"deprecations\": {\n          \"DEPRECATE_CATCH_ALL\": true,\n          \"DEPRECATE_3_12\": true,\n          \"DEPRECATE_NON_STRICT_TYPES\": true,\n          \"DEPRECATE_NON_STRICT_ID\": true,\n          \"DEPRECATE_COMPUTED_CHAINS\": true,\n          \"DEPRECATE_LEGACY_IMPORTS\": true,\n          \"DEPRECATE_NON_UNIQUE_PAYLOADS\": true,\n          \"DEPRECATE_RELATIONSHIP_REMOTE_UPDATE_CLEARING_LOCAL_STATE\": true,\n          \"DEPRECATE_MANY_ARRAY_DUPLICATES\": true\n        },\n        \"features\": {\n          \"SAMPLE_FEATURE_FLAG\": false\n        },\n        \"includeDataAdapter\": false,\n        \"packages\": {\n          \"HAS_EMBER_DATA_PACKAGE\": false,\n          \"HAS_STORE_PACKAGE\": true,\n          \"HAS_MODEL_PACKAGE\": false,\n          \"HAS_JSON_API_PACKAGE\": true,\n          \"HAS_GRAPH_PACKAGE\": true,\n          \"HAS_REQUEST_PACKAGE\": true,\n          \"HAS_COMPAT_PACKAGE\": true,\n          \"HAS_TRACKING_PACKAGE\": false,\n          \"HAS_ADAPTER_PACKAGE\": false,\n          \"HAS_SERIALIZER_PACKAGE\": false\n        },\n        \"env\": {\n          \"TESTING\": true,\n          \"PRODUCTION\": false,\n          \"DEBUG\": true\n        }\n      },\n      \"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/@ember-data/model\": {\n        \"compatWith\": null,\n        \"debug\": {\n          \"LOG_PAYLOADS\": false,\n          \"LOG_OPERATIONS\": false,\n          \"LOG_MUTATIONS\": false,\n          \"LOG_NOTIFICATIONS\": false,\n          \"LOG_REQUESTS\": false,\n          \"LOG_REQUEST_STATUS\": false,\n          \"LOG_IDENTIFIERS\": false,\n          \"LOG_GRAPH\": false,\n          \"LOG_INSTANCE_CACHE\": false\n        },\n        \"deprecations\": {\n          \"DEPRECATE_CATCH_ALL\": true,\n          \"DEPRECATE_3_12\": true,\n          \"DEPRECATE_NON_STRICT_TYPES\": true,\n          \"DEPRECATE_NON_STRICT_ID\": true,\n          \"DEPRECATE_COMPUTED_CHAINS\": true,\n          \"DEPRECATE_LEGACY_IMPORTS\": true,\n          \"DEPRECATE_NON_UNIQUE_PAYLOADS\": true,\n          \"DEPRECATE_RELATIONSHIP_REMOTE_UPDATE_CLEARING_LOCAL_STATE\": true,\n          \"DEPRECATE_MANY_ARRAY_DUPLICATES\": true\n        },\n        \"features\": {\n          \"SAMPLE_FEATURE_FLAG\": false\n        },\n        \"includeDataAdapter\": true,\n        \"packages\": {\n          \"HAS_EMBER_DATA_PACKAGE\": false,\n          \"HAS_STORE_PACKAGE\": true,\n          \"HAS_MODEL_PACKAGE\": true,\n          \"HAS_JSON_API_PACKAGE\": true,\n          \"HAS_GRAPH_PACKAGE\": true,\n          \"HAS_REQUEST_PACKAGE\": false,\n          \"HAS_COMPAT_PACKAGE\": true,\n          \"HAS_TRACKING_PACKAGE\": true,\n          \"HAS_ADAPTER_PACKAGE\": false,\n          \"HAS_SERIALIZER_PACKAGE\": false\n        },\n        \"env\": {\n          \"TESTING\": true,\n          \"PRODUCTION\": false,\n          \"DEBUG\": true\n        }\n      },\n      \"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/@ember-data/request\": {\n        \"compatWith\": null,\n        \"debug\": {\n          \"LOG_PAYLOADS\": false,\n          \"LOG_OPERATIONS\": false,\n          \"LOG_MUTATIONS\": false,\n          \"LOG_NOTIFICATIONS\": false,\n          \"LOG_REQUESTS\": false,\n          \"LOG_REQUEST_STATUS\": false,\n          \"LOG_IDENTIFIERS\": false,\n          \"LOG_GRAPH\": false,\n          \"LOG_INSTANCE_CACHE\": false\n        },\n        \"deprecations\": {\n          \"DEPRECATE_CATCH_ALL\": true,\n          \"DEPRECATE_3_12\": true,\n          \"DEPRECATE_NON_STRICT_TYPES\": true,\n          \"DEPRECATE_NON_STRICT_ID\": true,\n          \"DEPRECATE_COMPUTED_CHAINS\": true,\n          \"DEPRECATE_LEGACY_IMPORTS\": true,\n          \"DEPRECATE_NON_UNIQUE_PAYLOADS\": true,\n          \"DEPRECATE_RELATIONSHIP_REMOTE_UPDATE_CLEARING_LOCAL_STATE\": true,\n          \"DEPRECATE_MANY_ARRAY_DUPLICATES\": true\n        },\n        \"features\": {\n          \"SAMPLE_FEATURE_FLAG\": false\n        },\n        \"includeDataAdapter\": false,\n        \"packages\": {\n          \"HAS_EMBER_DATA_PACKAGE\": false,\n          \"HAS_STORE_PACKAGE\": false,\n          \"HAS_MODEL_PACKAGE\": false,\n          \"HAS_JSON_API_PACKAGE\": false,\n          \"HAS_GRAPH_PACKAGE\": false,\n          \"HAS_REQUEST_PACKAGE\": true,\n          \"HAS_COMPAT_PACKAGE\": false,\n          \"HAS_TRACKING_PACKAGE\": false,\n          \"HAS_ADAPTER_PACKAGE\": false,\n          \"HAS_SERIALIZER_PACKAGE\": false\n        },\n        \"env\": {\n          \"TESTING\": true,\n          \"PRODUCTION\": false,\n          \"DEBUG\": true\n        }\n      },\n      \"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/@ember-data/serializer\": {\n        \"compatWith\": null,\n        \"debug\": {\n          \"LOG_PAYLOADS\": false,\n          \"LOG_OPERATIONS\": false,\n          \"LOG_MUTATIONS\": false,\n          \"LOG_NOTIFICATIONS\": false,\n          \"LOG_REQUESTS\": false,\n          \"LOG_REQUEST_STATUS\": false,\n          \"LOG_IDENTIFIERS\": false,\n          \"LOG_GRAPH\": false,\n          \"LOG_INSTANCE_CACHE\": false\n        },\n        \"deprecations\": {\n          \"DEPRECATE_CATCH_ALL\": true,\n          \"DEPRECATE_3_12\": true,\n          \"DEPRECATE_NON_STRICT_TYPES\": true,\n          \"DEPRECATE_NON_STRICT_ID\": true,\n          \"DEPRECATE_COMPUTED_CHAINS\": true,\n          \"DEPRECATE_LEGACY_IMPORTS\": true,\n          \"DEPRECATE_NON_UNIQUE_PAYLOADS\": true,\n          \"DEPRECATE_RELATIONSHIP_REMOTE_UPDATE_CLEARING_LOCAL_STATE\": true,\n          \"DEPRECATE_MANY_ARRAY_DUPLICATES\": true\n        },\n        \"features\": {\n          \"SAMPLE_FEATURE_FLAG\": false\n        },\n        \"includeDataAdapter\": false,\n        \"packages\": {\n          \"HAS_EMBER_DATA_PACKAGE\": false,\n          \"HAS_STORE_PACKAGE\": false,\n          \"HAS_MODEL_PACKAGE\": false,\n          \"HAS_JSON_API_PACKAGE\": false,\n          \"HAS_GRAPH_PACKAGE\": false,\n          \"HAS_REQUEST_PACKAGE\": false,\n          \"HAS_COMPAT_PACKAGE\": false,\n          \"HAS_TRACKING_PACKAGE\": false,\n          \"HAS_ADAPTER_PACKAGE\": false,\n          \"HAS_SERIALIZER_PACKAGE\": true\n        },\n        \"env\": {\n          \"TESTING\": true,\n          \"PRODUCTION\": false,\n          \"DEBUG\": true\n        }\n      },\n      \"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/@ember-data/store\": {\n        \"compatWith\": null,\n        \"debug\": {\n          \"LOG_PAYLOADS\": false,\n          \"LOG_OPERATIONS\": false,\n          \"LOG_MUTATIONS\": false,\n          \"LOG_NOTIFICATIONS\": false,\n          \"LOG_REQUESTS\": false,\n          \"LOG_REQUEST_STATUS\": false,\n          \"LOG_IDENTIFIERS\": false,\n          \"LOG_GRAPH\": false,\n          \"LOG_INSTANCE_CACHE\": false\n        },\n        \"deprecations\": {\n          \"DEPRECATE_CATCH_ALL\": true,\n          \"DEPRECATE_3_12\": true,\n          \"DEPRECATE_NON_STRICT_TYPES\": true,\n          \"DEPRECATE_NON_STRICT_ID\": true,\n          \"DEPRECATE_COMPUTED_CHAINS\": true,\n          \"DEPRECATE_LEGACY_IMPORTS\": true,\n          \"DEPRECATE_NON_UNIQUE_PAYLOADS\": true,\n          \"DEPRECATE_RELATIONSHIP_REMOTE_UPDATE_CLEARING_LOCAL_STATE\": true,\n          \"DEPRECATE_MANY_ARRAY_DUPLICATES\": true\n        },\n        \"features\": {\n          \"SAMPLE_FEATURE_FLAG\": false\n        },\n        \"includeDataAdapter\": false,\n        \"packages\": {\n          \"HAS_EMBER_DATA_PACKAGE\": false,\n          \"HAS_STORE_PACKAGE\": true,\n          \"HAS_MODEL_PACKAGE\": false,\n          \"HAS_JSON_API_PACKAGE\": false,\n          \"HAS_GRAPH_PACKAGE\": false,\n          \"HAS_REQUEST_PACKAGE\": true,\n          \"HAS_COMPAT_PACKAGE\": false,\n          \"HAS_TRACKING_PACKAGE\": true,\n          \"HAS_ADAPTER_PACKAGE\": false,\n          \"HAS_SERIALIZER_PACKAGE\": false\n        },\n        \"env\": {\n          \"TESTING\": true,\n          \"PRODUCTION\": false,\n          \"DEBUG\": true\n        }\n      },\n      \"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/@ember-data/tracking\": {\n        \"compatWith\": null,\n        \"debug\": {\n          \"LOG_PAYLOADS\": false,\n          \"LOG_OPERATIONS\": false,\n          \"LOG_MUTATIONS\": false,\n          \"LOG_NOTIFICATIONS\": false,\n          \"LOG_REQUESTS\": false,\n          \"LOG_REQUEST_STATUS\": false,\n          \"LOG_IDENTIFIERS\": false,\n          \"LOG_GRAPH\": false,\n          \"LOG_INSTANCE_CACHE\": false\n        },\n        \"deprecations\": {\n          \"DEPRECATE_CATCH_ALL\": true,\n          \"DEPRECATE_3_12\": true,\n          \"DEPRECATE_NON_STRICT_TYPES\": true,\n          \"DEPRECATE_NON_STRICT_ID\": true,\n          \"DEPRECATE_COMPUTED_CHAINS\": true,\n          \"DEPRECATE_LEGACY_IMPORTS\": true,\n          \"DEPRECATE_NON_UNIQUE_PAYLOADS\": true,\n          \"DEPRECATE_RELATIONSHIP_REMOTE_UPDATE_CLEARING_LOCAL_STATE\": true,\n          \"DEPRECATE_MANY_ARRAY_DUPLICATES\": true\n        },\n        \"features\": {\n          \"SAMPLE_FEATURE_FLAG\": false\n        },\n        \"includeDataAdapter\": false,\n        \"packages\": {\n          \"HAS_EMBER_DATA_PACKAGE\": false,\n          \"HAS_STORE_PACKAGE\": false,\n          \"HAS_MODEL_PACKAGE\": false,\n          \"HAS_JSON_API_PACKAGE\": false,\n          \"HAS_GRAPH_PACKAGE\": false,\n          \"HAS_REQUEST_PACKAGE\": false,\n          \"HAS_COMPAT_PACKAGE\": false,\n          \"HAS_TRACKING_PACKAGE\": true,\n          \"HAS_ADAPTER_PACKAGE\": false,\n          \"HAS_SERIALIZER_PACKAGE\": false\n        },\n        \"env\": {\n          \"TESTING\": true,\n          \"PRODUCTION\": false,\n          \"DEBUG\": true\n        }\n      },\n      \"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/ember-data\": {\n        \"compatWith\": null,\n        \"debug\": {\n          \"LOG_PAYLOADS\": false,\n          \"LOG_OPERATIONS\": false,\n          \"LOG_MUTATIONS\": false,\n          \"LOG_NOTIFICATIONS\": false,\n          \"LOG_REQUESTS\": false,\n          \"LOG_REQUEST_STATUS\": false,\n          \"LOG_IDENTIFIERS\": false,\n          \"LOG_GRAPH\": false,\n          \"LOG_INSTANCE_CACHE\": false\n        },\n        \"deprecations\": {\n          \"DEPRECATE_CATCH_ALL\": true,\n          \"DEPRECATE_3_12\": true,\n          \"DEPRECATE_NON_STRICT_TYPES\": true,\n          \"DEPRECATE_NON_STRICT_ID\": true,\n          \"DEPRECATE_COMPUTED_CHAINS\": true,\n          \"DEPRECATE_LEGACY_IMPORTS\": true,\n          \"DEPRECATE_NON_UNIQUE_PAYLOADS\": true,\n          \"DEPRECATE_RELATIONSHIP_REMOTE_UPDATE_CLEARING_LOCAL_STATE\": true,\n          \"DEPRECATE_MANY_ARRAY_DUPLICATES\": true\n        },\n        \"features\": {\n          \"SAMPLE_FEATURE_FLAG\": false\n        },\n        \"includeDataAdapter\": true,\n        \"env\": {\n          \"TESTING\": true,\n          \"PRODUCTION\": false,\n          \"DEBUG\": true\n        }\n      }\n    },\n    \"global\": {\n      \"@embroider/macros\": {\n        \"isTesting\": false\n      },\n      \"@embroider/core\": {\n        \"active\": true\n      }\n    }\n  };\n}\nfunction updaterMethods() {\n  return {\n    config,\n    getGlobalConfig,\n    setConfig(packageRoot, value) {\n      runtimeConfig.packages[packageRoot] = value;\n    },\n    setGlobalConfig(key, value) {\n      runtimeConfig.global[key] = value;\n    }\n  };\n}\n\n// this is how runtime config can get injected at boot. I'm not sure yet if this\n// should be public API, but we certainly need it internally to set things like\n// the global fastboot.isRunning.\n//\n// consumers of this API push a function onto\n// window._embroider_macros_runtime_config. The function is given four methods\n// which allow it to read and write the per-package and global configs. The\n// reason for allowing both read & write is that merging strategies are up to\n// each consumers -- read first, then merge, then write.\n//\n// For an example user of this API, see where we generate\n// embroider_macros_fastboot_init.js' in @embroider/core.\nlet updaters = typeof window !== 'undefined' ? window._embroider_macros_runtime_config : undefined;\nif (updaters) {\n  let methods = updaterMethods();\n  for (let updater of updaters) {\n    updater(methods);\n  }\n}\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@embroider/macros.83914fbf/node_modules/@embroider/macros/runtime.js?");

/***/ }),

/***/ "../rewritten-packages/@glimmer/component.9a0d5824/node_modules/@glimmer/component/-private/base-component-manager.js":
/*!****************************************************************************************************************************!*\
  !*** ../rewritten-packages/@glimmer/component.9a0d5824/node_modules/@glimmer/component/-private/base-component-manager.js ***!
  \****************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ BaseComponentManager)\n/* harmony export */ });\n/* harmony import */ var _component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./component */ \"../rewritten-packages/@glimmer/component.9a0d5824/node_modules/@glimmer/component/-private/component.js\");\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\n\n/**\n * This factory function returns a component manager class with common behavior\n * that can be extend to add Glimmer.js- or Ember.js-specific functionality. As\n * these environments converge, the need for two component manager\n * implementations (and thus this factory) should go away.\n */\nfunction BaseComponentManager(setOwner, getOwner, capabilities) {\n  return class {\n    static create(attrs) {\n      let owner = getOwner(attrs);\n      return new this(owner);\n    }\n    constructor(owner) {\n      _defineProperty(this, \"capabilities\", capabilities);\n      setOwner(this, owner);\n    }\n    createComponent(ComponentClass, args) {\n      if (true /* DEBUG */) {\n        _component__WEBPACK_IMPORTED_MODULE_0__.ARGS_SET.set(args.named, true);\n      }\n      return new ComponentClass(getOwner(this), args.named);\n    }\n    getContext(component) {\n      return component;\n    }\n  };\n}\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@glimmer/component.9a0d5824/node_modules/@glimmer/component/-private/base-component-manager.js?");

/***/ }),

/***/ "../rewritten-packages/@glimmer/component.9a0d5824/node_modules/@glimmer/component/-private/component.js":
/*!***************************************************************************************************************!*\
  !*** ../rewritten-packages/@glimmer/component.9a0d5824/node_modules/@glimmer/component/-private/component.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ARGS_SET: () => (/* binding */ ARGS_SET),\n/* harmony export */   \"default\": () => (/* binding */ BaseComponent)\n/* harmony export */ });\n/* harmony import */ var _owner__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./owner */ \"../rewritten-packages/@glimmer/component.9a0d5824/node_modules/@glimmer/component/-private/owner.js\");\n/* harmony import */ var _destroyables__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./destroyables */ \"../rewritten-packages/@glimmer/component.9a0d5824/node_modules/@glimmer/component/-private/destroyables.js\");\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\n\n\n\n// This provides a type-safe `WeakMap`: the getter and setter link the key to a\n// specific value. This is how `WeakMap`s actually behave, but the TS type\n// system does not (yet!) have a good way to capture that for types like\n// `WeakMap` where the type is generic over another generic type (here, `Args`).\n\n// SAFETY: this only holds because we *only* acces this when `DEBUG` is `true`.\n// There is not a great way to connect that data in TS at present.\nlet ARGS_SET;\nif (true /* DEBUG */) {\n  ARGS_SET = new WeakMap();\n}\n\n// --- Type utilities for component signatures --- //\n// Type-only \"symbol\" to use with `EmptyObject` below, so that it is *not*\n// equivalent to an empty interface.\n\n/**\n * This provides us a way to have a \"fallback\" which represents an empty object,\n * without the downsides of how TS treats `{}`. Specifically: this will\n * correctly leverage \"excess property checking\" so that, given a component\n * which has no named args, if someone invokes it with any named args, they will\n * get a type error.\n *\n * @internal This is exported so declaration emit works (if it were not emitted,\n *   declarations which fall back to it would not work). It is *not* intended for\n *   public usage, and the specific mechanics it uses may change at any time.\n *   The location of this export *is* part of the public API, because moving it\n *   will break existing declarations, but is not legal for end users to import\n *   themselves, so ***DO NOT RELY ON IT***.\n */\n\n/** Given a signature `S`, get back the `Args` type. */\n\n/**\n * Given any allowed shorthand form of a signature, desugars it to its full\n * expanded type.\n *\n * @internal This is only exported so we can avoid duplicating it in\n *   [Glint](https://github.com/typed-ember/glint) or other such tooling. It is\n *   *not* intended for public usage, and the specific mechanics it uses may\n *   change at any time. Although the signature produced by is part of Glimmer's\n *   public API the existence and mechanics of this specific symbol are *not*,\n *   so ***DO NOT RELY ON IT***.\n */\n// The conditional type here is because TS applies conditional types\n// distributively. This means that for union types, checks like `keyof T` get\n// all the keys from all elements of the union, instead of ending up as `never`\n// and then always falling into the `Signature` path instead of falling back to\n// the legacy args handling path.\n\n/**\n * @internal we use this type for convenience internally; inference means users\n *   should not normally need to name it\n */\n\n/**\n * The `Component` class defines an encapsulated UI element that is rendered to\n * the DOM. A component is made up of a template and, optionally, this component\n * object.\n *\n * ## Defining a Component\n *\n * To define a component, subclass `Component` and add your own properties,\n * methods and lifecycle hooks:\n *\n * ```ts\n * import Component from '@glimmer/component';\n *\n * export default class extends Component {\n * }\n * ```\n *\n * ## Lifecycle Hooks\n *\n * Lifecycle hooks allow you to respond to changes to a component, such as when\n * it gets created, rendered, updated or destroyed. To add a lifecycle hook to a\n * component, implement the hook as a method on your component subclass.\n *\n * For example, to be notified when Glimmer has rendered your component so you\n * can attach a legacy jQuery plugin, implement the `didInsertElement()` method:\n *\n * ```ts\n * import Component from '@glimmer/component';\n *\n * export default class extends Component {\n *   didInsertElement() {\n *     $(this.element).pickadate();\n *   }\n * }\n * ```\n *\n * ## Data for Templates\n *\n * `Component`s have two different kinds of data, or state, that can be\n * displayed in templates:\n *\n * 1. Arguments\n * 2. Properties\n *\n * Arguments are data that is passed in to a component from its parent\n * component. For example, if I have a `UserGreeting` component, I can pass it\n * a name and greeting to use:\n *\n * ```hbs\n * <UserGreeting @name=\"Ricardo\" @greeting=\"Olá\" />\n * ```\n *\n * Inside my `UserGreeting` template, I can access the `@name` and `@greeting`\n * arguments that I've been given:\n *\n * ```hbs\n * {{@greeting}}, {{@name}}!\n * ```\n *\n * Arguments are also available inside my component:\n *\n * ```ts\n * console.log(this.args.greeting); // prints \"Olá\"\n * ```\n *\n * Properties, on the other hand, are internal to the component and declared in\n * the class. You can use properties to store data that you want to show in the\n * template, or pass to another component as an argument.\n *\n * ```ts\n * import Component from '@glimmer/component';\n *\n * export default class extends Component {\n *   user = {\n *     name: 'Robbie'\n *   }\n * }\n * ```\n *\n * In the above example, we've defined a component with a `user` property that\n * contains an object with its own `name` property.\n *\n * We can render that property in our template:\n *\n * ```hbs\n * Hello, {{user.name}}!\n * ```\n *\n * We can also take that property and pass it as an argument to the\n * `UserGreeting` component we defined above:\n *\n * ```hbs\n * <UserGreeting @greeting=\"Hello\" @name={{user.name}} />\n * ```\n *\n * ## Arguments vs. Properties\n *\n * Remember, arguments are data that was given to your component by its parent\n * component, and properties are data your component has defined for itself.\n *\n * You can tell the difference between arguments and properties in templates\n * because arguments always start with an `@` sign (think \"A is for arguments\"):\n *\n * ```hbs\n * {{@firstName}}\n * ```\n *\n * We know that `@firstName` came from the parent component, not the current\n * component, because it starts with `@` and is therefore an argument.\n *\n * On the other hand, if we see:\n *\n * ```hbs\n * {{name}}\n * ```\n *\n * We know that `name` is a property on the component. If we want to know where\n * the data is coming from, we can go look at our component class to find out.\n *\n * Inside the component itself, arguments always show up inside the component's\n * `args` property. For example, if `{{@firstName}}` is `Tom` in the template,\n * inside the component `this.args.firstName` would also be `Tom`.\n */\nclass BaseComponent {\n  /**\n   * Constructs a new component and assigns itself the passed properties. You\n   * should not construct new components yourself. Instead, Glimmer will\n   * instantiate new components automatically as it renders.\n   *\n   * @param owner\n   * @param args\n   */\n  constructor(owner, args) {\n    /**\n     * Named arguments passed to the component from its parent component.\n     * They can be accessed in JavaScript via `this.args.argumentName` and in the template via `@argumentName`.\n     *\n     * Say you have the following component, which will have two `args`, `firstName` and `lastName`:\n     *\n     * ```hbs\n     * <my-component @firstName=\"Arthur\" @lastName=\"Dent\" />\n     * ```\n     *\n     * If you needed to calculate `fullName` by combining both of them, you would do:\n     *\n     * ```ts\n     * didInsertElement() {\n     *   console.log(`Hi, my full name is ${this.args.firstName} ${this.args.lastName}`);\n     * }\n     * ```\n     *\n     * While in the template you could do:\n     *\n     * ```hbs\n     * <p>Welcome, {{@firstName}} {{@lastName}}!</p>\n     * ```\n     */\n    _defineProperty(this, \"args\", void 0);\n    if ( true /* DEBUG */ && !(owner !== null && typeof owner === 'object' && ARGS_SET.has(args))) {\n      throw new Error(`You must pass both the owner and args to super() in your component: ${this.constructor.name}. You can pass them directly, or use ...arguments to pass all arguments through.`);\n    }\n    this.args = args;\n    (0,_owner__WEBPACK_IMPORTED_MODULE_0__.setOwner)(this, owner);\n  }\n  get isDestroying() {\n    return (0,_destroyables__WEBPACK_IMPORTED_MODULE_1__.isDestroying)(this);\n  }\n  get isDestroyed() {\n    return (0,_destroyables__WEBPACK_IMPORTED_MODULE_1__.isDestroyed)(this);\n  }\n\n  /**\n   * Called before the component has been removed from the DOM.\n   */\n  willDestroy() {}\n}\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@glimmer/component.9a0d5824/node_modules/@glimmer/component/-private/component.js?");

/***/ }),

/***/ "../rewritten-packages/@glimmer/component.9a0d5824/node_modules/@glimmer/component/-private/destroyables.js":
/*!******************************************************************************************************************!*\
  !*** ../rewritten-packages/@glimmer/component.9a0d5824/node_modules/@glimmer/component/-private/destroyables.js ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isDestroyed: () => (/* binding */ isDestroyed),\n/* harmony export */   isDestroying: () => (/* binding */ isDestroying)\n/* harmony export */ });\n/* harmony import */ var ember__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ember */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2Fember&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var ember__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(ember__WEBPACK_IMPORTED_MODULE_0__);\n\nconst isDestroying = (ember__WEBPACK_IMPORTED_MODULE_0___default()._isDestroying);\nconst isDestroyed = (ember__WEBPACK_IMPORTED_MODULE_0___default()._isDestroyed);\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@glimmer/component.9a0d5824/node_modules/@glimmer/component/-private/destroyables.js?");

/***/ }),

/***/ "../rewritten-packages/@glimmer/component.9a0d5824/node_modules/@glimmer/component/-private/ember-component-manager.js":
/*!*****************************************************************************************************************************!*\
  !*** ../rewritten-packages/@glimmer/component.9a0d5824/node_modules/@glimmer/component/-private/ember-component-manager.js ***!
  \*****************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var ember__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ember */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2Fember&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var ember__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(ember__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _ember_object__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember/object */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fobject&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_object__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_ember_object__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _ember_application__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ember/application */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fapplication&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_application__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_ember_application__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _ember_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ember/component */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fcomponent&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_component__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_ember_component__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _ember_runloop__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ember/runloop */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Frunloop&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_runloop__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_ember_runloop__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _base_component_manager__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./base-component-manager */ \"../rewritten-packages/@glimmer/component.9a0d5824/node_modules/@glimmer/component/-private/base-component-manager.js\");\n/* harmony import */ var _destroyables__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./destroyables */ \"../rewritten-packages/@glimmer/component.9a0d5824/node_modules/@glimmer/component/-private/destroyables.js\");\n\n\n\n\n\n\n\nconst {\n  setDestroyed,\n  setDestroying\n} = _destroyables__WEBPACK_IMPORTED_MODULE_6__;\nconst CAPABILITIES =  true // @ts-ignore\n// @ts-ignore\n? (0,_ember_component__WEBPACK_IMPORTED_MODULE_3__.capabilities)('3.13', {\n  destructor: true,\n  asyncLifecycleCallbacks: false,\n  updateHook: false\n}) : 0;\nconst scheduledDestroyComponent =  true ? undefined : 0;\nconst destroy =  true ? (ember__WEBPACK_IMPORTED_MODULE_0___default().destroy) : 0;\nconst registerDestructor =  true ? (ember__WEBPACK_IMPORTED_MODULE_0___default()._registerDestructor) : 0;\n\n/**\n * This component manager runs in Ember.js environments and extends the base component manager to:\n *\n * 1. Properly destroy the component's associated `meta` data structure\n * 2. Schedule destruction using Ember's runloop\n */\nclass EmberGlimmerComponentManager extends (0,_base_component_manager__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(_ember_application__WEBPACK_IMPORTED_MODULE_2__.setOwner, _ember_application__WEBPACK_IMPORTED_MODULE_2__.getOwner, CAPABILITIES) {\n  createComponent(ComponentClass, args) {\n    const component = super.createComponent(ComponentClass, args);\n    if (true) {\n      registerDestructor(component, () => {\n        component.willDestroy();\n      });\n    }\n    return component;\n  }\n  destroyComponent(component) {\n    destroy(component);\n  }\n}\n// In Ember 3.12 and earlier, the updateComponent hook was mandatory.\n// As of Ember 3.13, the `args` object is stable and each property of the\n// object participates in the autotrack stack on its own. This means we do not\n// need to set the `args` property on the component instance to invalidate\n// tracked getters that rely on `args`, and therefore don't require the `updateComponent`\n// hook at all.\nif (false) {}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (EmberGlimmerComponentManager);\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@glimmer/component.9a0d5824/node_modules/@glimmer/component/-private/ember-component-manager.js?");

/***/ }),

/***/ "../rewritten-packages/@glimmer/component.9a0d5824/node_modules/@glimmer/component/-private/owner.js":
/*!***********************************************************************************************************!*\
  !*** ../rewritten-packages/@glimmer/component.9a0d5824/node_modules/@glimmer/component/-private/owner.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   setOwner: () => (/* reexport safe */ _ember_application__WEBPACK_IMPORTED_MODULE_0__.setOwner)\n/* harmony export */ });\n/* harmony import */ var _ember_application__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/application */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fapplication&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_application__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_application__WEBPACK_IMPORTED_MODULE_0__);\n\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@glimmer/component.9a0d5824/node_modules/@glimmer/component/-private/owner.js?");

/***/ }),

/***/ "../rewritten-packages/@glimmer/component.9a0d5824/node_modules/@glimmer/component/_app_/component-managers/glimmer.js":
/*!*****************************************************************************************************************************!*\
  !*** ../rewritten-packages/@glimmer/component.9a0d5824/node_modules/@glimmer/component/_app_/component-managers/glimmer.js ***!
  \*****************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* reexport safe */ _glimmer_component_private_ember_component_manager__WEBPACK_IMPORTED_MODULE_0__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _glimmer_component_private_ember_component_manager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @glimmer/component/-private/ember-component-manager */ \"../rewritten-packages/@glimmer/component.9a0d5824/node_modules/@glimmer/component/-private/ember-component-manager.js\");\n\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@glimmer/component.9a0d5824/node_modules/@glimmer/component/_app_/component-managers/glimmer.js?");

/***/ }),

/***/ "../rewritten-packages/@glimmer/component.9a0d5824/node_modules/@glimmer/component/index.js":
/*!**************************************************************************************************!*\
  !*** ../rewritten-packages/@glimmer/component.9a0d5824/node_modules/@glimmer/component/index.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _ember_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/component */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fcomponent&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_component__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_component__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _private_ember_component_manager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./-private/ember-component-manager */ \"../rewritten-packages/@glimmer/component.9a0d5824/node_modules/@glimmer/component/-private/ember-component-manager.js\");\n/* harmony import */ var _private_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./-private/component */ \"../rewritten-packages/@glimmer/component.9a0d5824/node_modules/@glimmer/component/-private/component.js\");\n\n\n// Hax because the old version of `@types/ember__component` the `1.x` branch\n// uses does not provide any types for `setComponentManager` *and* because we\n// are using a very old version of `setComponentManager` for versions before\n// Ember 3.8.\n\n\n\nlet GlimmerComponent = _private_component__WEBPACK_IMPORTED_MODULE_2__[\"default\"];\nif (true /* DEBUG */) {\n  // Add assertions against using Glimmer.js only APIs\n\n  // TODO: Add GlimmerComponent API docs link to these messages once API docs are live\n  function throwMethodUseError(methodName) {\n    throw new Error(`You attempted to define the '${methodName}' method on a Glimmer Component, but that lifecycle hook does not exist in Ember.js applications, it only exists in Glimmer.js apps. You can rename this method, and you can trigger it using a modifier such as {{did-insert}} from '@ember/render-modifiers': https://github.com/emberjs/ember-render-modifiers.`);\n  }\n  function throwPropertyUseError(propertyName) {\n    throw new Error(`You attempted to access the '${propertyName}' property on a Glimmer Component, but that property does not exist in Ember.js applications, it only exists in Glimmer.js apps. You define a class field with the same name on your component class and it will overwrite this error message, but it will not be used by the framework.`);\n  }\n  GlimmerComponent = class GlimmerDebugComponent extends GlimmerComponent {\n    constructor(owner, args) {\n      super(owner, args);\n      if (typeof this['didInsertElement'] === 'function') {\n        throwMethodUseError('didInsertElement');\n      }\n      if (typeof this['didUpdate'] === 'function') {\n        throwMethodUseError('didUpdate');\n      }\n    }\n  };\n  let proto = GlimmerComponent.prototype;\n  function defineErrorProp(proto, key, getterMethod) {\n    Object.defineProperty(proto, key, {\n      get: () => getterMethod(key),\n      set(value) {\n        Object.defineProperty(this, key, {\n          value\n        });\n      }\n    });\n  }\n\n  // Methods should still throw whenever they are accessed\n  defineErrorProp(proto, 'bounds', throwPropertyUseError);\n  defineErrorProp(proto, 'element', throwPropertyUseError);\n  defineErrorProp(proto, 'debugName', throwPropertyUseError);\n}\nif (true) {\n  (0,_ember_component__WEBPACK_IMPORTED_MODULE_0__.setComponentManager)(owner => {\n    return new _private_ember_component_manager__WEBPACK_IMPORTED_MODULE_1__[\"default\"](owner);\n  }, GlimmerComponent);\n} else {}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (GlimmerComponent);\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@glimmer/component.9a0d5824/node_modules/@glimmer/component/index.js?");

/***/ }),

/***/ "../rewritten-packages/@glimmer/tracking.481d7669/node_modules/@glimmer/tracking/index.js":
/*!************************************************************************************************!*\
  !*** ../rewritten-packages/@glimmer/tracking.481d7669/node_modules/@glimmer/tracking/index.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cached: () => (/* binding */ cached),\n/* harmony export */   tracked: () => (/* binding */ tracked)\n/* harmony export */ });\n/* harmony import */ var _ember_internals_metal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/-internals/metal */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2F-internals%2Fmetal&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_internals_metal__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_internals_metal__WEBPACK_IMPORTED_MODULE_0__);\n\nconst {\n  cached,\n  tracked\n} = _ember_internals_metal__WEBPACK_IMPORTED_MODULE_0__;\n\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@glimmer/tracking.481d7669/node_modules/@glimmer/tracking/index.js?");

/***/ }),

/***/ "../rewritten-packages/@glimmer/tracking.481d7669/node_modules/@glimmer/tracking/primitives/cache.js":
/*!***********************************************************************************************************!*\
  !*** ../rewritten-packages/@glimmer/tracking.481d7669/node_modules/@glimmer/tracking/primitives/cache.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createCache: () => (/* reexport safe */ _ember_internals_metal__WEBPACK_IMPORTED_MODULE_0__.createCache),\n/* harmony export */   getValue: () => (/* reexport safe */ _ember_internals_metal__WEBPACK_IMPORTED_MODULE_0__.getValue),\n/* harmony export */   isConst: () => (/* reexport safe */ _ember_internals_metal__WEBPACK_IMPORTED_MODULE_0__.isConst)\n/* harmony export */ });\n/* harmony import */ var _ember_internals_metal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/-internals/metal */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2F-internals%2Fmetal&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_internals_metal__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_internals_metal__WEBPACK_IMPORTED_MODULE_0__);\n\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@glimmer/tracking.481d7669/node_modules/@glimmer/tracking/primitives/cache.js?");

/***/ }),

/***/ "../rewritten-packages/@warp-drive/core-types.f90747f3/node_modules/@warp-drive/core-types/identifier.js":
/*!***************************************************************************************************************!*\
  !*** ../rewritten-packages/@warp-drive/core-types.f90747f3/node_modules/@warp-drive/core-types/identifier.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CACHE_OWNER: () => (/* binding */ CACHE_OWNER),\n/* harmony export */   DEBUG_CLIENT_ORIGINATED: () => (/* binding */ DEBUG_CLIENT_ORIGINATED),\n/* harmony export */   DEBUG_IDENTIFIER_BUCKET: () => (/* binding */ DEBUG_IDENTIFIER_BUCKET),\n/* harmony export */   DEBUG_STALE_CACHE_OWNER: () => (/* binding */ DEBUG_STALE_CACHE_OWNER)\n/* harmony export */ });\n/**\n  @module @ember-data/store\n*/\n\n// provided for additional debuggability\nconst DEBUG_CLIENT_ORIGINATED = Symbol('record-originated-on-client');\nconst DEBUG_IDENTIFIER_BUCKET = Symbol('identifier-bucket');\nconst DEBUG_STALE_CACHE_OWNER = Symbol('warpDriveStaleCache');\n\n// also present in production\nconst CACHE_OWNER = Symbol('warpDriveCache');\n\n/**\n * An Identifier specific to a record which may or may not\n * be present in the cache.\n *\n * The absence of an `id` DOES NOT indicate that this\n * Identifier is for a new client-created record as it\n * may also indicate that it was generated for a secondary\n * index and the primary `id` index is not yet known.\n *\n * @internal\n */\n\n/**\n * Used when an Identifier is known to be the stable version\n *\n * @internal\n */\n\n/**\n * Used when a StableRecordIdentifier was not created locally as part\n * of a call to store.createRecord\n *\n * Distinguishing between this Identifier and one for a client created\n * record that was created with an ID is generally speaking not possible\n * at runtime, so anything with an ID typically narrows to this.\n *\n * @internal\n */\n\n/**\n * Used when a StableRecordIdentifier was created locally\n * (by a call to store.createRecord).\n *\n * It is possible in rare circumstances to have a StableRecordIdentifier\n * that is not for a new record but does not have an ID. This would\n * happen if a user intentionally created one for use with a secondary-index\n * prior to the record having been fully loaded.\n *\n * @internal\n */\n\n/**\n * A referentially stable object with a unique string (lid) that can be used\n * as a reference to data in the cache.\n *\n * Every record instance has a unique identifier, and identifiers may refer\n * to data that has never been loaded (for instance, in an async relationship).\n *\n * @class StableRecordIdentifier\n * @public\n */\n\n/**\n * A string representing a unique identity.\n *\n * @property {string} lid\n * @public\n */\n/**\n * the primary resource `type` or `modelName` this identity belongs to.\n *\n * @property {string} type\n * @public\n */\n/**\n * the primary id for the record this identity belongs to. `null`\n * if not yet assigned an id.\n *\n * @property {string | null} id\n * @public\n */\n\n\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@warp-drive/core-types.f90747f3/node_modules/@warp-drive/core-types/identifier.js?");

/***/ }),

/***/ "../rewritten-packages/@warp-drive/core-types.f90747f3/node_modules/@warp-drive/core-types/index.js":
/*!**********************************************************************************************************!*\
  !*** ../rewritten-packages/@warp-drive/core-types.f90747f3/node_modules/@warp-drive/core-types/index.js ***!
  \**********************************************************************************************************/
/***/ (() => {

eval("\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@warp-drive/core-types.f90747f3/node_modules/@warp-drive/core-types/index.js?");

/***/ }),

/***/ "../rewritten-packages/@warp-drive/core-types.f90747f3/node_modules/@warp-drive/core-types/request.js":
/*!************************************************************************************************************!*\
  !*** ../rewritten-packages/@warp-drive/core-types.f90747f3/node_modules/@warp-drive/core-types/request.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EnableHydration: () => (/* binding */ EnableHydration),\n/* harmony export */   IS_FUTURE: () => (/* binding */ IS_FUTURE),\n/* harmony export */   STRUCTURED: () => (/* binding */ STRUCTURED),\n/* harmony export */   SkipCache: () => (/* binding */ SkipCache)\n/* harmony export */ });\nconst SkipCache = Symbol.for('wd:skip-cache');\nconst EnableHydration = Symbol.for('wd:enable-hydration');\nconst IS_FUTURE = Symbol('IS_FUTURE');\nconst STRUCTURED = Symbol('DOC');\n\n/**\n * Use these options to adjust CacheHandler behavior for a request.\n *\n * @typedoc\n */\n\n/**\n * JavaScript's native Request class.\n *\n * EmberData provides our own typings due to incompleteness in the native typings.\n *\n * @typedoc\n */\n\n/**\n * Extends JavaScript's native {@link Request} object with additional\n * properties specific to the RequestManager's capabilities.\n *\n * @typedoc\n */\n\n/**\n * Immutable version of {@link RequestInfo}. This is what is passed to handlers.\n *\n * @typedoc\n */\n\n\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@warp-drive/core-types.f90747f3/node_modules/@warp-drive/core-types/request.js?");

/***/ }),

/***/ "../rewritten-packages/@warp-drive/core-types.f90747f3/node_modules/@warp-drive/core-types/symbols.js":
/*!************************************************************************************************************!*\
  !*** ../rewritten-packages/@warp-drive/core-types.f90747f3/node_modules/@warp-drive/core-types/symbols.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RecordStore: () => (/* binding */ RecordStore)\n/* harmony export */ });\nconst RecordStore = Symbol('Store');\n\n\n//# sourceURL=webpack://my-app/../rewritten-packages/@warp-drive/core-types.f90747f3/node_modules/@warp-drive/core-types/symbols.js?");

/***/ }),

/***/ "../rewritten-packages/ember-cached-decorator-polyfill.0a9d25b1/node_modules/ember-cached-decorator-polyfill/index.js":
/*!****************************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-cached-decorator-polyfill.0a9d25b1/node_modules/ember-cached-decorator-polyfill/index.js ***!
  \****************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cached: () => (/* binding */ cached)\n/* harmony export */ });\n/* harmony import */ var _glimmer_tracking_primitives_cache__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @glimmer/tracking/primitives/cache */ \"../rewritten-packages/@glimmer/tracking.481d7669/node_modules/@glimmer/tracking/primitives/cache.js\");\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember/debug */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fdebug&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_ember_debug__WEBPACK_IMPORTED_MODULE_1__);\n\n\nfunction cached(...args) {\n  const [target, key, descriptor] = args;\n\n  // Error on `@cached()`, `@cached(...args)`, and `@cached propName = value;`\n  ( true && !(target !== undefined) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)('You attempted to use @cached(), which is not necessary nor supported. Remove the parentheses and you will be good to go!', target !== undefined));\n  ( true && !(typeof target === 'object' && typeof key === 'string' && typeof descriptor === 'object' && args.length === 3) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)(`You attempted to use @cached on with ${args.length > 1 ? 'arguments' : 'an argument'} ( @cached(${args.map(d => `'${d}'`).join(', ')}), which is not supported. Dependencies are automatically tracked, so you can just use ${'`@cached`'}`, typeof target === 'object' && typeof key === 'string' && typeof descriptor === 'object' && args.length === 3));\n  ( true && !(typeof descriptor.get == 'function') && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)(`The @cached decorator must be applied to getters. '${key}' is not a getter.`, typeof descriptor.get == 'function'));\n  const caches = new WeakMap();\n  const getter = descriptor.get;\n  descriptor.get = function () {\n    if (!caches.has(this)) caches.set(this, (0,_glimmer_tracking_primitives_cache__WEBPACK_IMPORTED_MODULE_0__.createCache)(getter.bind(this)));\n    return (0,_glimmer_tracking_primitives_cache__WEBPACK_IMPORTED_MODULE_0__.getValue)(caches.get(this));\n  };\n}\n\n//# sourceURL=webpack://my-app/../rewritten-packages/ember-cached-decorator-polyfill.0a9d25b1/node_modules/ember-cached-decorator-polyfill/index.js?");

/***/ }),

/***/ "../rewritten-packages/ember-cli-app-version.15f7f965/node_modules/ember-cli-app-version/_app_/helpers/app-version.js":
/*!****************************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-cli-app-version.15f7f965/node_modules/ember-cli-app-version/_app_/helpers/app-version.js ***!
  \****************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   appVersion: () => (/* binding */ appVersion),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _ember_component_helper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/component/helper */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fcomponent%2Fhelper&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_component_helper__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_component_helper__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _config_environment__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../config/environment */ \"./config/environment.js\");\n/* harmony import */ var ember_cli_app_version_utils_regexp__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ember-cli-app-version/utils/regexp */ \"../rewritten-packages/ember-cli-app-version.15f7f965/node_modules/ember-cli-app-version/utils/regexp.js\");\n\n\n\nfunction appVersion(_, hash = {}) {\n  const version = _config_environment__WEBPACK_IMPORTED_MODULE_1__[\"default\"].APP.version;\n  // e.g. 1.0.0-alpha.1+4jds75hf\n\n  // Allow use of 'hideSha' and 'hideVersion' For backwards compatibility\n  let versionOnly = hash.versionOnly || hash.hideSha;\n  let shaOnly = hash.shaOnly || hash.hideVersion;\n  let match = null;\n  if (versionOnly) {\n    if (hash.showExtended) {\n      match = version.match(ember_cli_app_version_utils_regexp__WEBPACK_IMPORTED_MODULE_2__.versionExtendedRegExp); // 1.0.0-alpha.1\n    }\n    // Fallback to just version\n    if (!match) {\n      match = version.match(ember_cli_app_version_utils_regexp__WEBPACK_IMPORTED_MODULE_2__.versionRegExp); // 1.0.0\n    }\n  }\n  if (shaOnly) {\n    match = version.match(ember_cli_app_version_utils_regexp__WEBPACK_IMPORTED_MODULE_2__.shaRegExp); // 4jds75hf\n  }\n  return match ? match[0] : version;\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_ember_component_helper__WEBPACK_IMPORTED_MODULE_0__.helper)(appVersion));\n\n//# sourceURL=webpack://my-app/../rewritten-packages/ember-cli-app-version.15f7f965/node_modules/ember-cli-app-version/_app_/helpers/app-version.js?");

/***/ }),

/***/ "../rewritten-packages/ember-cli-app-version.15f7f965/node_modules/ember-cli-app-version/_app_/initializers/app-version.js":
/*!*********************************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-cli-app-version.15f7f965/node_modules/ember-cli-app-version/_app_/initializers/app-version.js ***!
  \*********************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var ember_cli_app_version_initializer_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ember-cli-app-version/initializer-factory */ \"../rewritten-packages/ember-cli-app-version.15f7f965/node_modules/ember-cli-app-version/initializer-factory.js\");\n/* harmony import */ var _config_environment__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../config/environment */ \"./config/environment.js\");\n\n\nlet name, version;\nif (_config_environment__WEBPACK_IMPORTED_MODULE_1__[\"default\"].APP) {\n  name = _config_environment__WEBPACK_IMPORTED_MODULE_1__[\"default\"].APP.name;\n  version = _config_environment__WEBPACK_IMPORTED_MODULE_1__[\"default\"].APP.version;\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  name: 'App Version',\n  initialize: (0,ember_cli_app_version_initializer_factory__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(name, version)\n});\n\n//# sourceURL=webpack://my-app/../rewritten-packages/ember-cli-app-version.15f7f965/node_modules/ember-cli-app-version/_app_/initializers/app-version.js?");

/***/ }),

/***/ "../rewritten-packages/ember-cli-app-version.15f7f965/node_modules/ember-cli-app-version/initializer-factory.js":
/*!**********************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-cli-app-version.15f7f965/node_modules/ember-cli-app-version/initializer-factory.js ***!
  \**********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ initializerFactory)\n/* harmony export */ });\n/* harmony import */ var ember__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ember */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2Fember&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var ember__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(ember__WEBPACK_IMPORTED_MODULE_0__);\n\nconst {\n  libraries\n} = (ember__WEBPACK_IMPORTED_MODULE_0___default());\nfunction initializerFactory(name, version) {\n  let registered = false;\n  return function () {\n    if (!registered && name && version) {\n      libraries.register(name, version);\n      registered = true;\n    }\n  };\n}\n\n//# sourceURL=webpack://my-app/../rewritten-packages/ember-cli-app-version.15f7f965/node_modules/ember-cli-app-version/initializer-factory.js?");

/***/ }),

/***/ "../rewritten-packages/ember-cli-app-version.15f7f965/node_modules/ember-cli-app-version/utils/regexp.js":
/*!***************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-cli-app-version.15f7f965/node_modules/ember-cli-app-version/utils/regexp.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   shaRegExp: () => (/* binding */ shaRegExp),\n/* harmony export */   versionExtendedRegExp: () => (/* binding */ versionExtendedRegExp),\n/* harmony export */   versionRegExp: () => (/* binding */ versionRegExp)\n/* harmony export */ });\nconst versionRegExp = /\\d+[.]\\d+[.]\\d+/; // Match any number of 3 sections of digits separated by .\nconst versionExtendedRegExp = /\\d+[.]\\d+[.]\\d+-[a-z]*([.]\\d+)?/; // Match the above but also hyphen followed by any number of lowercase letters, then optionally period and digits\nconst shaRegExp = /[a-z\\d]{8}$/; // Match 8 lowercase letters and digits, at the end of the string only (to avoid matching with version extended part)\n\n//# sourceURL=webpack://my-app/../rewritten-packages/ember-cli-app-version.15f7f965/node_modules/ember-cli-app-version/utils/regexp.js?");

/***/ }),

/***/ "../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/-private/core.js":
/*!******************************************************************************************!*\
  !*** ../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/-private/core.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DS: () => (/* binding */ DS),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _ember_application_namespace__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/application/namespace */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fapplication%2Fnamespace&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_application_namespace__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_application_namespace__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var ember__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ember */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2Fember&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var ember__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(ember__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var ember_data_version__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ember-data/version */ \"../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/version.js\");\n\n\n\nconst DS = _ember_application_namespace__WEBPACK_IMPORTED_MODULE_0___default().create({\n  // @ts-expect-error ember-source types are wrong\n  VERSION: ember_data_version__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n  name: 'DS'\n});\nif ((ember__WEBPACK_IMPORTED_MODULE_1___default().libraries)) {\n  ember__WEBPACK_IMPORTED_MODULE_1___default().libraries.registerCoreLibrary('Ember Data', ember_data_version__WEBPACK_IMPORTED_MODULE_2__[\"default\"]);\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (DS);\n\n//# sourceURL=webpack://my-app/../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/-private/core.js?");

/***/ }),

/***/ "../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/-private/index.js":
/*!*******************************************************************************************!*\
  !*** ../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/-private/index.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DS: () => (/* reexport safe */ _core__WEBPACK_IMPORTED_MODULE_5__.DS),\n/* harmony export */   Errors: () => (/* reexport safe */ _ember_data_model_private__WEBPACK_IMPORTED_MODULE_6__.Errors),\n/* harmony export */   ManyArray: () => (/* reexport safe */ _ember_data_model_private__WEBPACK_IMPORTED_MODULE_6__.ManyArray),\n/* harmony export */   PromiseArray: () => (/* binding */ PromiseArray),\n/* harmony export */   PromiseManyArray: () => (/* reexport safe */ _ember_data_model_private__WEBPACK_IMPORTED_MODULE_6__.PromiseManyArray),\n/* harmony export */   PromiseObject: () => (/* binding */ PromiseObject),\n/* harmony export */   RecordArrayManager: () => (/* reexport safe */ _ember_data_store_private__WEBPACK_IMPORTED_MODULE_8__.RecordArrayManager),\n/* harmony export */   Snapshot: () => (/* reexport safe */ _ember_data_legacy_compat_private__WEBPACK_IMPORTED_MODULE_7__.Snapshot),\n/* harmony export */   SnapshotRecordArray: () => (/* reexport safe */ _ember_data_legacy_compat_private__WEBPACK_IMPORTED_MODULE_7__.SnapshotRecordArray),\n/* harmony export */   Store: () => (/* reexport safe */ _store__WEBPACK_IMPORTED_MODULE_4__[\"default\"]),\n/* harmony export */   coerceId: () => (/* reexport safe */ _ember_data_store_private__WEBPACK_IMPORTED_MODULE_8__.coerceId)\n/* harmony export */ });\n/* harmony import */ var _ember_array_proxy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/array/proxy */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Farray%2Fproxy&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_array_proxy__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_array_proxy__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember/debug */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fdebug&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_ember_debug__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _ember_object_promise_proxy_mixin__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ember/object/promise-proxy-mixin */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fobject%2Fpromise-proxy-mixin&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_object_promise_proxy_mixin__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_ember_object_promise_proxy_mixin__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _ember_object_proxy__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ember/object/proxy */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fobject%2Fproxy&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_object_proxy__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_ember_object_proxy__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _store__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../store */ \"../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/store.js\");\n/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./core */ \"../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/-private/core.js\");\n/* harmony import */ var _ember_data_model_private__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ember-data/model/-private */ \"../rewritten-packages/@ember-data/model.9cfa41c3/node_modules/@ember-data/model/-private.js\");\n/* harmony import */ var _ember_data_legacy_compat_private__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @ember-data/legacy-compat/-private */ \"../rewritten-packages/@ember-data/legacy-compat.e84b6420/node_modules/@ember-data/legacy-compat/-private.js\");\n/* harmony import */ var _ember_data_store_private__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @ember-data/store/-private */ \"../rewritten-packages/@ember-data/store.a4360448/node_modules/@ember-data/store/-private.js\");\n// public\n\n\n\n\n( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.deprecate)('Importing from `ember-data/-private` is deprecated without replacement.', false, {\n  id: 'ember-data:deprecate-legacy-imports',\n  for: 'ember-data',\n  until: '6.0',\n  since: {\n    enabled: '5.2',\n    available: '5.2'\n  }\n}));\n\n\n\n\n\n\n\nconst PromiseArray = _ember_array_proxy__WEBPACK_IMPORTED_MODULE_0___default().extend((_ember_object_promise_proxy_mixin__WEBPACK_IMPORTED_MODULE_2___default()));\nconst PromiseObject = _ember_object_proxy__WEBPACK_IMPORTED_MODULE_3___default().extend((_ember_object_promise_proxy_mixin__WEBPACK_IMPORTED_MODULE_2___default()));\n\n//# sourceURL=webpack://my-app/../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/-private/index.js?");

/***/ }),

/***/ "../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/_app_/initializers/ember-data.js":
/*!**********************************************************************************************************!*\
  !*** ../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/_app_/initializers/ember-data.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/*\n  This code initializes EmberData in an Ember application.\n*/\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  name: 'ember-data',\n  initialize(application) {\n    application.registerOptionsForType('serializer', {\n      singleton: false\n    });\n    application.registerOptionsForType('adapter', {\n      singleton: false\n    });\n  }\n});\n\n//# sourceURL=webpack://my-app/../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/_app_/initializers/ember-data.js?");

/***/ }),

/***/ "../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/_app_/services/store.js":
/*!*************************************************************************************************!*\
  !*** ../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/_app_/services/store.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* reexport safe */ ember_data_store__WEBPACK_IMPORTED_MODULE_1__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/debug */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fdebug&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_debug__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var ember_data_store__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ember-data/store */ \"../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/store.js\");\n\n\n( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.deprecate)(\"You are relying on ember-data auto-magically installing the store service. Use `export { default } from 'ember-data/store';` in app/services/store.js instead\", false, {\n  id: 'ember-data:deprecate-legacy-imports',\n  for: 'ember-data',\n  until: '6.0',\n  since: {\n    enabled: '5.2',\n    available: '5.2'\n  }\n}));\n\n//# sourceURL=webpack://my-app/../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/_app_/services/store.js?");

/***/ }),

/***/ "../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/_app_/transforms/boolean.js":
/*!*****************************************************************************************************!*\
  !*** ../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/_app_/transforms/boolean.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* reexport safe */ _ember_data_serializer_private__WEBPACK_IMPORTED_MODULE_1__.BooleanTransform)\n/* harmony export */ });\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/debug */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fdebug&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_debug__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _ember_data_serializer_private__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember-data/serializer/-private */ \"../rewritten-packages/@ember-data/serializer.677d83bc/node_modules/@ember-data/serializer/-private.js\");\n\n\n( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.deprecate)(\"You are relying on ember-data auto-magically installing the BooleanTransform. Use `export { BooleanTransform as default } from '@ember-data/serializer/transform';` in app/transforms/boolean.js instead\", false, {\n  id: 'ember-data:deprecate-legacy-imports',\n  for: 'ember-data',\n  until: '6.0',\n  since: {\n    enabled: '5.2',\n    available: '5.2'\n  }\n}));\n\n//# sourceURL=webpack://my-app/../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/_app_/transforms/boolean.js?");

/***/ }),

/***/ "../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/_app_/transforms/date.js":
/*!**************************************************************************************************!*\
  !*** ../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/_app_/transforms/date.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* reexport safe */ _ember_data_serializer_private__WEBPACK_IMPORTED_MODULE_1__.DateTransform)\n/* harmony export */ });\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/debug */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fdebug&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_debug__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _ember_data_serializer_private__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember-data/serializer/-private */ \"../rewritten-packages/@ember-data/serializer.677d83bc/node_modules/@ember-data/serializer/-private.js\");\n\n\n( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.deprecate)(\"You are relying on ember-data auto-magically installing the DateTransform. Use `export { DateTransform as default } from '@ember-data/serializer/transform';` in app/transforms/date.js instead\", false, {\n  id: 'ember-data:deprecate-legacy-imports',\n  for: 'ember-data',\n  until: '6.0',\n  since: {\n    enabled: '5.2',\n    available: '5.2'\n  }\n}));\n\n//# sourceURL=webpack://my-app/../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/_app_/transforms/date.js?");

/***/ }),

/***/ "../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/_app_/transforms/number.js":
/*!****************************************************************************************************!*\
  !*** ../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/_app_/transforms/number.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* reexport safe */ _ember_data_serializer_private__WEBPACK_IMPORTED_MODULE_1__.NumberTransform)\n/* harmony export */ });\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/debug */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fdebug&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_debug__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _ember_data_serializer_private__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember-data/serializer/-private */ \"../rewritten-packages/@ember-data/serializer.677d83bc/node_modules/@ember-data/serializer/-private.js\");\n\n\n( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.deprecate)(\"You are relying on ember-data auto-magically installing the NumberTransform. Use `export { NumberTransform as default } from '@ember-data/serializer/transform';` in app/transforms/number.js instead\", false, {\n  id: 'ember-data:deprecate-legacy-imports',\n  for: 'ember-data',\n  until: '6.0',\n  since: {\n    enabled: '5.2',\n    available: '5.2'\n  }\n}));\n\n//# sourceURL=webpack://my-app/../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/_app_/transforms/number.js?");

/***/ }),

/***/ "../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/_app_/transforms/string.js":
/*!****************************************************************************************************!*\
  !*** ../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/_app_/transforms/string.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* reexport safe */ _ember_data_serializer_private__WEBPACK_IMPORTED_MODULE_1__.StringTransform)\n/* harmony export */ });\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/debug */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fdebug&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_debug__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _ember_data_serializer_private__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember-data/serializer/-private */ \"../rewritten-packages/@ember-data/serializer.677d83bc/node_modules/@ember-data/serializer/-private.js\");\n\n\n( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.deprecate)(\"You are relying on ember-data auto-magically installing the StringTransform. Use `export { StringTransform as default } from '@ember-data/serializer/transform';` in app/transforms/string.js instead\", false, {\n  id: 'ember-data:deprecate-legacy-imports',\n  for: 'ember-data',\n  until: '6.0',\n  since: {\n    enabled: '5.2',\n    available: '5.2'\n  }\n}));\n\n//# sourceURL=webpack://my-app/../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/_app_/transforms/string.js?");

/***/ }),

/***/ "../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/adapter.js":
/*!************************************************************************************!*\
  !*** ../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/adapter.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* reexport safe */ _ember_data_adapter__WEBPACK_IMPORTED_MODULE_1__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/debug */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fdebug&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_debug__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _ember_data_adapter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember-data/adapter */ \"../rewritten-packages/@ember-data/adapter.85bda234/node_modules/@ember-data/adapter/index.js\");\n\n\n( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.deprecate)('Importing from `ember-data/adapter` is deprecated. Please import from `@ember-data/adapter` instead.', false, {\n  id: 'ember-data:deprecate-legacy-imports',\n  for: 'ember-data',\n  until: '6.0',\n  since: {\n    enabled: '5.2',\n    available: '5.2'\n  }\n}));\n\n//# sourceURL=webpack://my-app/../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/adapter.js?");

/***/ }),

/***/ "../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/adapters/errors.js":
/*!********************************************************************************************!*\
  !*** ../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/adapters/errors.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AbortError: () => (/* reexport safe */ _ember_data_adapter_error__WEBPACK_IMPORTED_MODULE_1__.AbortError),\n/* harmony export */   AdapterError: () => (/* reexport safe */ _ember_data_adapter_error__WEBPACK_IMPORTED_MODULE_1__[\"default\"]),\n/* harmony export */   ConflictError: () => (/* reexport safe */ _ember_data_adapter_error__WEBPACK_IMPORTED_MODULE_1__.ConflictError),\n/* harmony export */   ForbiddenError: () => (/* reexport safe */ _ember_data_adapter_error__WEBPACK_IMPORTED_MODULE_1__.ForbiddenError),\n/* harmony export */   InvalidError: () => (/* reexport safe */ _ember_data_adapter_error__WEBPACK_IMPORTED_MODULE_1__.InvalidError),\n/* harmony export */   NotFoundError: () => (/* reexport safe */ _ember_data_adapter_error__WEBPACK_IMPORTED_MODULE_1__.NotFoundError),\n/* harmony export */   ServerError: () => (/* reexport safe */ _ember_data_adapter_error__WEBPACK_IMPORTED_MODULE_1__.ServerError),\n/* harmony export */   TimeoutError: () => (/* reexport safe */ _ember_data_adapter_error__WEBPACK_IMPORTED_MODULE_1__.TimeoutError),\n/* harmony export */   UnauthorizedError: () => (/* reexport safe */ _ember_data_adapter_error__WEBPACK_IMPORTED_MODULE_1__.UnauthorizedError)\n/* harmony export */ });\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/debug */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fdebug&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_debug__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _ember_data_adapter_error__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember-data/adapter/error */ \"../rewritten-packages/@ember-data/adapter.85bda234/node_modules/@ember-data/adapter/error.js\");\n\n\n( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.deprecate)('Importing from `ember-data/adapters/errors` is deprecated. Please import from `@ember-data/adapter` instead.', false, {\n  id: 'ember-data:deprecate-legacy-imports',\n  for: 'ember-data',\n  until: '6.0',\n  since: {\n    enabled: '5.2',\n    available: '5.2'\n  }\n}));\n\n//# sourceURL=webpack://my-app/../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/adapters/errors.js?");

/***/ }),

/***/ "../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/adapters/json-api.js":
/*!**********************************************************************************************!*\
  !*** ../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/adapters/json-api.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* reexport safe */ _ember_data_adapter_json_api__WEBPACK_IMPORTED_MODULE_1__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/debug */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fdebug&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_debug__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _ember_data_adapter_json_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember-data/adapter/json-api */ \"../rewritten-packages/@ember-data/adapter.85bda234/node_modules/@ember-data/adapter/json-api.js\");\n\n\n( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.deprecate)('Importing from `ember-data/adapters/json-api` is deprecated. Please import from `@ember-data/adapter/json-api` instead.', false, {\n  id: 'ember-data:deprecate-legacy-imports',\n  for: 'ember-data',\n  until: '6.0',\n  since: {\n    enabled: '5.2',\n    available: '5.2'\n  }\n}));\n\n//# sourceURL=webpack://my-app/../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/adapters/json-api.js?");

/***/ }),

/***/ "../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/adapters/rest.js":
/*!******************************************************************************************!*\
  !*** ../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/adapters/rest.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* reexport safe */ _ember_data_adapter_rest__WEBPACK_IMPORTED_MODULE_1__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/debug */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fdebug&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_debug__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _ember_data_adapter_rest__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember-data/adapter/rest */ \"../rewritten-packages/@ember-data/adapter.85bda234/node_modules/@ember-data/adapter/rest.js\");\n\n\n( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.deprecate)('Importing from `ember-data/adapters/rest` is deprecated. Please import from `@ember-data/adapter/rest` instead.', false, {\n  id: 'ember-data:deprecate-legacy-imports',\n  for: 'ember-data',\n  until: '6.0',\n  since: {\n    enabled: '5.2',\n    available: '5.2'\n  }\n}));\n\n//# sourceURL=webpack://my-app/../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/adapters/rest.js?");

/***/ }),

/***/ "../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/attr.js":
/*!*********************************************************************************!*\
  !*** ../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/attr.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* reexport safe */ _ember_data_model__WEBPACK_IMPORTED_MODULE_1__.attr)\n/* harmony export */ });\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/debug */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fdebug&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_debug__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _ember_data_model__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember-data/model */ \"../rewritten-packages/@ember-data/model.9cfa41c3/node_modules/@ember-data/model/index.js\");\n\n\n( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.deprecate)('Importing from `ember-data/attr` is deprecated. Please import from `@ember-data/model` instead.', false, {\n  id: 'ember-data:deprecate-legacy-imports',\n  for: 'ember-data',\n  until: '6.0',\n  since: {\n    enabled: '5.2',\n    available: '5.2'\n  }\n}));\n\n//# sourceURL=webpack://my-app/../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/attr.js?");

/***/ }),

/***/ "../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/index.js":
/*!**********************************************************************************!*\
  !*** ../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/index.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/debug */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fdebug&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_debug__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _ember_data_adapter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember-data/adapter */ \"../rewritten-packages/@ember-data/adapter.85bda234/node_modules/@ember-data/adapter/index.js\");\n/* harmony import */ var _ember_data_adapter_error__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ember-data/adapter/error */ \"../rewritten-packages/@ember-data/adapter.85bda234/node_modules/@ember-data/adapter/error.js\");\n/* harmony import */ var _ember_data_adapter_json_api__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ember-data/adapter/json-api */ \"../rewritten-packages/@ember-data/adapter.85bda234/node_modules/@ember-data/adapter/json-api.js\");\n/* harmony import */ var _ember_data_adapter_rest__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ember-data/adapter/rest */ \"../rewritten-packages/@ember-data/adapter.85bda234/node_modules/@ember-data/adapter/rest.js\");\n/* harmony import */ var _ember_data_model__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ember-data/model */ \"../rewritten-packages/@ember-data/model.9cfa41c3/node_modules/@ember-data/model/index.js\");\n/* harmony import */ var _ember_data_serializer__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ember-data/serializer */ \"../rewritten-packages/@ember-data/serializer.677d83bc/node_modules/@ember-data/serializer/index.js\");\n/* harmony import */ var _ember_data_serializer_private__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @ember-data/serializer/-private */ \"../rewritten-packages/@ember-data/serializer.677d83bc/node_modules/@ember-data/serializer/-private.js\");\n/* harmony import */ var _ember_data_serializer_json__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @ember-data/serializer/json */ \"../rewritten-packages/@ember-data/serializer.677d83bc/node_modules/@ember-data/serializer/json.js\");\n/* harmony import */ var _ember_data_serializer_json_api__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @ember-data/serializer/json-api */ \"../rewritten-packages/@ember-data/serializer.677d83bc/node_modules/@ember-data/serializer/json-api.js\");\n/* harmony import */ var _ember_data_serializer_rest__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @ember-data/serializer/rest */ \"../rewritten-packages/@ember-data/serializer.677d83bc/node_modules/@ember-data/serializer/rest.js\");\n/* harmony import */ var _ember_data_serializer_transform__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @ember-data/serializer/transform */ \"../rewritten-packages/@ember-data/serializer.677d83bc/node_modules/@ember-data/serializer/transform.js\");\n/* harmony import */ var _private__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./-private */ \"../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/-private/index.js\");\n/* harmony import */ var _setup_container__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./setup-container */ \"../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/setup-container.js\");\n/* harmony import */ var _embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../../../../@embroider/macros/src/addon/es-compat2 */ \"../../@embroider/macros/src/addon/es-compat2.js\");\n/**\n <p align=\"center\">\n  <img\n    class=\"project-logo\"\n    src=\"https://raw.githubusercontent.com/emberjs/data/4612c9354e4c54d53327ec2cf21955075ce21294/ember-data-logo-light.svg#gh-light-mode-only\"\n    alt=\"EmberData\"\n    width=\"240px\"\n    title=\"EmberData\"\n    />\n</p>\n\n<p align=\"center\">The lightweight reactive data library for JavaScript applications</p>\n\n---\n\nWrangle your application's data management with scalable patterns for developer productivity.\n\n- ⚡️  Committed to Best-In-Class Performance\n- 🌲 Focused on being as svelte as possible\n- 🚀 SSR Ready\n- 🔜 Typescript Support\n- 🐹 Built with ♥️ by [Ember](https://emberjs.com)\n- ⚛️ Supports any API: `GraphQL` `JSON:API` `REST` `tRPC` ...bespoke or a mix\n\n### 📖 On This Page\n\n- [Overview](./#overview)\n  - [Architecture](#🪜-architecture)\n  - [Basic Installation](#basic-installation)\n  - [Advanced Installation](#advanced-installation)\n- [Configuration](#configuration)\n  - [Deprecation Stripping](#deprecation-stripping)\n  - [randomUUID polyfill](#randomuuid-polyfill)\n  - [Removing inspector support in production](#removing-inspector-support-in-production)\n  - [Debugging](#debugging)\n\n\n# Overview\n\n*Ember*‍**Data** is a lightweight reactive data library for JavaScript applications that provides composable primitives for ordering query/mutation/peek flows, managing network and cache, and reducing data for presentation.\n\n## 🪜 Architecture\n\nThe core of *Ember*‍**Data** is the `Store`, which coordinates interaction between your application, the `Cache`, and sources of data (such as your `API` or a local persistence layer).\nOptionally, the Store can be configured to hydrate the response data into rich presentation classes.\n\n*Ember*‍**Data** is both resource centric and document centric in it's approach to caching, requesting and presenting data. Your application's configuration and usage drives which is important and when.\n\nThe `Store` is a **coordinator**. When using a `Store` you configure what cache to use, how cache data should be presented to the UI, and where it should look for requested data when it is not available in the cache.\n\nThis coordination is handled opaquely to the nature of the requests issued and the format of the data being handled. This approach gives applications broad flexibility to configure *Ember*‍**Data** to best suite their needs. This makes *Ember*‍**Data** a powerful solution for applications regardless of their size and complexity.\n\n*Ember*‍**Data** is designed to scale, with a religious focus on performance and asset-size to keep its footprint small but speedy while still being able to handle large complex APIs in huge data-driven applications with no additional code and no added application complexity. It's goal is to prevent applications from writing code to manage data that is difficult to maintain or reason about.\n\n*Ember*‍**Data**'s power comes not from specific features, data formats, or adherence to specific API specs such as `JSON:API` `trpc` or `GraphQL`, but from solid conventions around requesting and mutating data developed over decades of experience scaling developer productivity.\n\n## Basic Installation\n\nInstall using your javascript package manager of choice. For instance with [pnpm](https://pnpm.io/)\n\n```no-highlight\npnpm add ember-data\n```\n\n`ember-data` is installed by default for new applications generated with `ember-cli`. You can check what version is installed by looking in the `devDependencies` hash of your project's [package.json](https://docs.npmjs.com/cli/v8/configuring-npm/package-json) file.\n\nIf you have generated a new `Ember` application using `ember-cli` but do\nnot wish to use `ember-data`, remove `ember-data` from your project's `package.json` file and run your package manager's install command to update your lockfile.\n\n## Advanced Installation\n\n*Ember*‍**Data** is organized into primitives that compose together via public APIs.\n\n- [@ember-data/store](/ember-data/release/modules/@ember-data%2Fstore) is the core and handles coordination\n- [@ember-data/json-api](/ember-data/release/modules/@ember-data%2Fjson-api) provides a resource cache for JSON:API structured data. It integrates with the store via the hook `createCache`\n- [@ember-data/model](/ember-data/release/modules/@ember-data%2Fmodel) is a presentation layer, it integrates with the store via the hooks `instantiateRecord` and `teardownRecord`.\n- [@ember-data/adapter](/ember-data/release/modules/@ember-data%2Fadapter) provides various network API integrations for APIS built over specific REST or JSON:API conventions.\n- [@ember-data/serializer](/ember-data/release/modules/@ember-data%2Fserializer) pairs with `@ember-data/adapter` to normalize and serialize data to and from an API format into the `JSON:API` format understood by `@ember-data/json-api`.\n- [@ember-data/debug](/ember-data/release/modules/@ember-data%2Fdebug) provides debugging support for the `ember-inspector`.\n- **ember-data** is a \"meta\" package which bundles all of these together for convenience\n\nThe packages interop with each other through well defined public API boundaries. The core\nof the library is the store provided by `@ember-data/store`, while each of the other libraries plugs into the store when installed. Because these packages interop via fully\npublic APIs, other libraries or applications may provide their own implementations. For instance, [ember-m3](https://github.com/hjdivad/ember-m3) is a commonly used presentation and cache implementation suitable for complex resource objects and graphs.\n\n## Configuration\n\n### Deprecation Stripping\n\n*Ember*‍**Data** allows users to opt-in and remove code that exists to support deprecated behaviors.\n\nIf your app has resolved all deprecations present in a given version, you may specify that version as your \"compatibility\" version to remove the code that supported the deprecated behavior from your app.\n\n```ts\nlet app = new EmberApp(defaults, {\n  emberData: {\n    compatWith: '4.8',\n  },\n});\n```\n\n- [Full Documentation](https://api.emberjs.com/ember-data/release/modules/@ember-data%2Fdeprecations)\n\n### randomUUID polyfill\n\n*Ember*‍**Data** uses `UUID V4` by default to generate identifiers for new data created on the client. Identifier generation is configurable, but we also for convenience will polyfill\nthe necessary feature if your browser support or deployment environment demands it. To\nactivate this polyfill:\n\n```ts\nlet app = new EmberApp(defaults, {\n  '@embroider/macros': {\n    setConfig: {\n      '@ember-data/store': {\n        polyfillUUID: true\n      },\n    },\n  },\n});\n```\n\n### removing inspector support in production\n\nIf you do not with to ship inspector support in your production application, you can specify\nthat all support for it should be stripped from the build.\n\n```ts\nlet app = new EmberApp(defaults, {\n  emberData: {\n    includeDataAdapterInProduction: false\n  }\n});\n```\n\n- [Full Documentation](https://api.emberjs.com/ember-data/release/modules/@ember-data%2Fdebug)\n\n### Debugging\n\nMany portions of the internals are helpfully instrumented with logging that can be activated\nat build time. This instrumentation is always removed from production builds or any builds\nthat has not explicitly activated it. To activate it set the appropriate flag to `true`.\n\n```ts\n  let app = new EmberApp(defaults, {\n    emberData: {\n      debug: {\n          LOG_PAYLOADS: false, // data store received to update cache with\n          LOG_OPERATIONS: false, // updates to cache remote state\n          LOG_MUTATIONS: false, // updates to cache local state\n          LOG_NOTIFICATIONS: false,\n          LOG_REQUESTS: false, // log Requests issued via the request manager\n          LOG_REQUEST_STATUS: false,\n          LOG_IDENTIFIERS: false,\n          LOG_GRAPH: false,\n          LOG_INSTANCE_CACHE: false,\n      }\n    }\n  });\n  ```\n\n @module ember-data-overview\n @main ember-data-overview\n*/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.deprecate)('Importing from `ember-data` is deprecated. Please import from the appropriate `@ember-data/*` instead.', false, {\n  id: 'ember-data:deprecate-legacy-imports',\n  for: 'ember-data',\n  until: '6.0',\n  since: {\n    enabled: '5.2',\n    available: '5.2'\n  }\n}));\nfunction upgradeDS(obj) {}\nupgradeDS(_private__WEBPACK_IMPORTED_MODULE_12__.DS);\n_private__WEBPACK_IMPORTED_MODULE_12__.DS.Store = _private__WEBPACK_IMPORTED_MODULE_12__.Store;\n_private__WEBPACK_IMPORTED_MODULE_12__.DS.PromiseArray = _private__WEBPACK_IMPORTED_MODULE_12__.PromiseArray;\n_private__WEBPACK_IMPORTED_MODULE_12__.DS.PromiseObject = _private__WEBPACK_IMPORTED_MODULE_12__.PromiseObject;\n_private__WEBPACK_IMPORTED_MODULE_12__.DS.PromiseManyArray = _private__WEBPACK_IMPORTED_MODULE_12__.PromiseManyArray;\n_private__WEBPACK_IMPORTED_MODULE_12__.DS.Model = _ember_data_model__WEBPACK_IMPORTED_MODULE_5__[\"default\"];\n_private__WEBPACK_IMPORTED_MODULE_12__.DS.attr = _ember_data_model__WEBPACK_IMPORTED_MODULE_5__.attr;\n_private__WEBPACK_IMPORTED_MODULE_12__.DS.Errors = _private__WEBPACK_IMPORTED_MODULE_12__.Errors;\n_private__WEBPACK_IMPORTED_MODULE_12__.DS.Snapshot = _private__WEBPACK_IMPORTED_MODULE_12__.Snapshot;\n_private__WEBPACK_IMPORTED_MODULE_12__.DS.Adapter = _ember_data_adapter__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n_private__WEBPACK_IMPORTED_MODULE_12__.DS.AdapterError = _ember_data_adapter_error__WEBPACK_IMPORTED_MODULE_2__[\"default\"];\n_private__WEBPACK_IMPORTED_MODULE_12__.DS.InvalidError = _ember_data_adapter_error__WEBPACK_IMPORTED_MODULE_2__.InvalidError;\n_private__WEBPACK_IMPORTED_MODULE_12__.DS.TimeoutError = _ember_data_adapter_error__WEBPACK_IMPORTED_MODULE_2__.TimeoutError;\n_private__WEBPACK_IMPORTED_MODULE_12__.DS.AbortError = _ember_data_adapter_error__WEBPACK_IMPORTED_MODULE_2__.AbortError;\n_private__WEBPACK_IMPORTED_MODULE_12__.DS.UnauthorizedError = _ember_data_adapter_error__WEBPACK_IMPORTED_MODULE_2__.UnauthorizedError;\n_private__WEBPACK_IMPORTED_MODULE_12__.DS.ForbiddenError = _ember_data_adapter_error__WEBPACK_IMPORTED_MODULE_2__.ForbiddenError;\n_private__WEBPACK_IMPORTED_MODULE_12__.DS.NotFoundError = _ember_data_adapter_error__WEBPACK_IMPORTED_MODULE_2__.NotFoundError;\n_private__WEBPACK_IMPORTED_MODULE_12__.DS.ConflictError = _ember_data_adapter_error__WEBPACK_IMPORTED_MODULE_2__.ConflictError;\n_private__WEBPACK_IMPORTED_MODULE_12__.DS.ServerError = _ember_data_adapter_error__WEBPACK_IMPORTED_MODULE_2__.ServerError;\n_private__WEBPACK_IMPORTED_MODULE_12__.DS.Serializer = _ember_data_serializer__WEBPACK_IMPORTED_MODULE_6__[\"default\"];\n{\n  // @ts-expect-error untyped\n  _private__WEBPACK_IMPORTED_MODULE_12__.DS.DebugAdapter = (0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_14__[\"default\"])(__webpack_require__(/*! @ember-data/debug */ \"../rewritten-packages/@ember-data/debug.cbe3cfb1/node_modules/@ember-data/debug/index.js\")).default;\n}\n_private__WEBPACK_IMPORTED_MODULE_12__.DS.ManyArray = _private__WEBPACK_IMPORTED_MODULE_12__.ManyArray;\n_private__WEBPACK_IMPORTED_MODULE_12__.DS.RecordArrayManager = _private__WEBPACK_IMPORTED_MODULE_12__.RecordArrayManager;\n_private__WEBPACK_IMPORTED_MODULE_12__.DS.RESTAdapter = _ember_data_adapter_rest__WEBPACK_IMPORTED_MODULE_4__[\"default\"];\n_private__WEBPACK_IMPORTED_MODULE_12__.DS.BuildURLMixin = _ember_data_adapter__WEBPACK_IMPORTED_MODULE_1__.BuildURLMixin;\n_private__WEBPACK_IMPORTED_MODULE_12__.DS.RESTSerializer = _ember_data_serializer_rest__WEBPACK_IMPORTED_MODULE_10__[\"default\"];\n_private__WEBPACK_IMPORTED_MODULE_12__.DS.JSONSerializer = _ember_data_serializer_json__WEBPACK_IMPORTED_MODULE_8__[\"default\"];\n_private__WEBPACK_IMPORTED_MODULE_12__.DS.JSONAPIAdapter = _ember_data_adapter_json_api__WEBPACK_IMPORTED_MODULE_3__[\"default\"];\n_private__WEBPACK_IMPORTED_MODULE_12__.DS.JSONAPISerializer = _ember_data_serializer_json_api__WEBPACK_IMPORTED_MODULE_9__[\"default\"];\n_private__WEBPACK_IMPORTED_MODULE_12__.DS.Transform = _ember_data_serializer_transform__WEBPACK_IMPORTED_MODULE_11__[\"default\"];\n_private__WEBPACK_IMPORTED_MODULE_12__.DS.DateTransform = _ember_data_serializer_private__WEBPACK_IMPORTED_MODULE_7__.DateTransform;\n_private__WEBPACK_IMPORTED_MODULE_12__.DS.StringTransform = _ember_data_serializer_private__WEBPACK_IMPORTED_MODULE_7__.StringTransform;\n_private__WEBPACK_IMPORTED_MODULE_12__.DS.NumberTransform = _ember_data_serializer_private__WEBPACK_IMPORTED_MODULE_7__.NumberTransform;\n_private__WEBPACK_IMPORTED_MODULE_12__.DS.BooleanTransform = _ember_data_serializer_private__WEBPACK_IMPORTED_MODULE_7__.BooleanTransform;\n_private__WEBPACK_IMPORTED_MODULE_12__.DS.EmbeddedRecordsMixin = _ember_data_serializer_rest__WEBPACK_IMPORTED_MODULE_10__.EmbeddedRecordsMixin;\n_private__WEBPACK_IMPORTED_MODULE_12__.DS.belongsTo = _ember_data_model__WEBPACK_IMPORTED_MODULE_5__.belongsTo;\n_private__WEBPACK_IMPORTED_MODULE_12__.DS.hasMany = _ember_data_model__WEBPACK_IMPORTED_MODULE_5__.hasMany;\n_private__WEBPACK_IMPORTED_MODULE_12__.DS._setupContainer = _setup_container__WEBPACK_IMPORTED_MODULE_13__[\"default\"];\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_private__WEBPACK_IMPORTED_MODULE_12__.DS);\n\n//# sourceURL=webpack://my-app/../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/index.js?");

/***/ }),

/***/ "../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/model.js":
/*!**********************************************************************************!*\
  !*** ../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/model.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* reexport safe */ _ember_data_model__WEBPACK_IMPORTED_MODULE_1__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/debug */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fdebug&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_debug__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _ember_data_model__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember-data/model */ \"../rewritten-packages/@ember-data/model.9cfa41c3/node_modules/@ember-data/model/index.js\");\n\n\n( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.deprecate)('Importing from `ember-data/model` is deprecated. Please import from `@ember-data/model` instead.', false, {\n  id: 'ember-data:deprecate-legacy-imports',\n  for: 'ember-data',\n  until: '6.0',\n  since: {\n    enabled: '5.2',\n    available: '5.2'\n  }\n}));\n\n//# sourceURL=webpack://my-app/../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/model.js?");

/***/ }),

/***/ "../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/relationships.js":
/*!******************************************************************************************!*\
  !*** ../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/relationships.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   belongsTo: () => (/* reexport safe */ _ember_data_model__WEBPACK_IMPORTED_MODULE_1__.belongsTo),\n/* harmony export */   hasMany: () => (/* reexport safe */ _ember_data_model__WEBPACK_IMPORTED_MODULE_1__.hasMany)\n/* harmony export */ });\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/debug */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fdebug&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_debug__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _ember_data_model__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember-data/model */ \"../rewritten-packages/@ember-data/model.9cfa41c3/node_modules/@ember-data/model/index.js\");\n\n\n( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.deprecate)('Importing from `ember-data/relationships` is deprecated. Please import from `@ember-data/model` instead.', false, {\n  id: 'ember-data:deprecate-legacy-imports',\n  for: 'ember-data',\n  until: '6.0',\n  since: {\n    enabled: '5.2',\n    available: '5.2'\n  }\n}));\n\n//# sourceURL=webpack://my-app/../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/relationships.js?");

/***/ }),

/***/ "../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/serializer.js":
/*!***************************************************************************************!*\
  !*** ../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/serializer.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* reexport safe */ _ember_data_serializer__WEBPACK_IMPORTED_MODULE_1__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/debug */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fdebug&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_debug__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _ember_data_serializer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember-data/serializer */ \"../rewritten-packages/@ember-data/serializer.677d83bc/node_modules/@ember-data/serializer/index.js\");\n\n\n( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.deprecate)('Importing from `ember-data/serializer` is deprecated. Please import from `@ember-data/serializer` instead.', false, {\n  id: 'ember-data:deprecate-legacy-imports',\n  for: 'ember-data',\n  until: '6.0',\n  since: {\n    enabled: '5.2',\n    available: '5.2'\n  }\n}));\n\n//# sourceURL=webpack://my-app/../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/serializer.js?");

/***/ }),

/***/ "../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/serializers/embedded-records-mixin.js":
/*!***************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/serializers/embedded-records-mixin.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* reexport safe */ _ember_data_serializer_rest__WEBPACK_IMPORTED_MODULE_1__.EmbeddedRecordsMixin)\n/* harmony export */ });\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/debug */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fdebug&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_debug__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _ember_data_serializer_rest__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember-data/serializer/rest */ \"../rewritten-packages/@ember-data/serializer.677d83bc/node_modules/@ember-data/serializer/rest.js\");\n\n\n( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.deprecate)('Importing from `ember-data/serializers/embedded-records-mixin` is deprecated. Please import from `@ember-data/serializer/rest` instead.', false, {\n  id: 'ember-data:deprecate-legacy-imports',\n  for: 'ember-data',\n  until: '6.0',\n  since: {\n    enabled: '5.2',\n    available: '5.2'\n  }\n}));\n\n//# sourceURL=webpack://my-app/../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/serializers/embedded-records-mixin.js?");

/***/ }),

/***/ "../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/serializers/json-api.js":
/*!*************************************************************************************************!*\
  !*** ../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/serializers/json-api.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* reexport safe */ _ember_data_serializer_json_api__WEBPACK_IMPORTED_MODULE_1__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/debug */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fdebug&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_debug__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _ember_data_serializer_json_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember-data/serializer/json-api */ \"../rewritten-packages/@ember-data/serializer.677d83bc/node_modules/@ember-data/serializer/json-api.js\");\n\n\n( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.deprecate)('Importing from `ember-data/serializers/json-api` is deprecated. Please import from `@ember-data/serializer/json-api` instead.', false, {\n  id: 'ember-data:deprecate-legacy-imports',\n  for: 'ember-data',\n  until: '6.0',\n  since: {\n    enabled: '5.2',\n    available: '5.2'\n  }\n}));\n\n//# sourceURL=webpack://my-app/../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/serializers/json-api.js?");

/***/ }),

/***/ "../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/serializers/json.js":
/*!*********************************************************************************************!*\
  !*** ../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/serializers/json.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* reexport safe */ _ember_data_serializer_json__WEBPACK_IMPORTED_MODULE_1__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/debug */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fdebug&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_debug__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _ember_data_serializer_json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember-data/serializer/json */ \"../rewritten-packages/@ember-data/serializer.677d83bc/node_modules/@ember-data/serializer/json.js\");\n\n\n( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.deprecate)('Importing from `ember-data/serializers/json` is deprecated. Please import from `@ember-data/serializer/json` instead.', false, {\n  id: 'ember-data:deprecate-legacy-imports',\n  for: 'ember-data',\n  until: '6.0',\n  since: {\n    enabled: '5.2',\n    available: '5.2'\n  }\n}));\n\n//# sourceURL=webpack://my-app/../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/serializers/json.js?");

/***/ }),

/***/ "../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/serializers/rest.js":
/*!*********************************************************************************************!*\
  !*** ../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/serializers/rest.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* reexport safe */ _ember_data_serializer_rest__WEBPACK_IMPORTED_MODULE_1__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/debug */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fdebug&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_debug__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _ember_data_serializer_rest__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember-data/serializer/rest */ \"../rewritten-packages/@ember-data/serializer.677d83bc/node_modules/@ember-data/serializer/rest.js\");\n\n\n( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.deprecate)('Importing from `ember-data/serializers/rest` is deprecated. Please import from `@ember-data/serializer/rest` instead.', false, {\n  id: 'ember-data:deprecate-legacy-imports',\n  for: 'ember-data',\n  until: '6.0',\n  since: {\n    enabled: '5.2',\n    available: '5.2'\n  }\n}));\n\n//# sourceURL=webpack://my-app/../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/serializers/rest.js?");

/***/ }),

/***/ "../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/setup-container.js":
/*!********************************************************************************************!*\
  !*** ../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/setup-container.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ setupContainer)\n/* harmony export */ });\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/debug */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fdebug&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_debug__WEBPACK_IMPORTED_MODULE_0__);\n\nfunction initializeStore(application) {\n  application.registerOptionsForType('serializer', {\n    singleton: false\n  });\n  application.registerOptionsForType('adapter', {\n    singleton: false\n  });\n}\nfunction setupContainer(application) {\n  initializeStore(application);\n}\n( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.deprecate)('Importing from `ember-data/setup-container` is deprecated without replacement', false, {\n  id: 'ember-data:deprecate-legacy-imports',\n  for: 'ember-data',\n  until: '6.0',\n  since: {\n    enabled: '5.2',\n    available: '5.2'\n  }\n}));\n\n//# sourceURL=webpack://my-app/../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/setup-container.js?");

/***/ }),

/***/ "../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/store.js":
/*!**********************************************************************************!*\
  !*** ../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/store.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Store)\n/* harmony export */ });\n/* harmony import */ var _ember_data_json_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember-data/json-api */ \"../rewritten-packages/@ember-data/json-api.d7f0a39f/node_modules/@ember-data/json-api/index.js\");\n/* harmony import */ var _ember_data_legacy_compat__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember-data/legacy-compat */ \"../rewritten-packages/@ember-data/legacy-compat.e84b6420/node_modules/@ember-data/legacy-compat/index.js\");\n/* harmony import */ var _ember_data_model_hooks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ember-data/model/hooks */ \"../rewritten-packages/@ember-data/model.9cfa41c3/node_modules/@ember-data/model/hooks.js\");\n/* harmony import */ var _ember_data_request__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ember-data/request */ \"../rewritten-packages/@ember-data/request.7c2e6d52/node_modules/@ember-data/request/index.js\");\n/* harmony import */ var _ember_data_request_fetch__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ember-data/request/fetch */ \"../rewritten-packages/@ember-data/request.7c2e6d52/node_modules/@ember-data/request/fetch.js\");\n/* harmony import */ var _ember_data_store__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ember-data/store */ \"../rewritten-packages/@ember-data/store.a4360448/node_modules/@ember-data/store/index.js\");\n\n\n\n\n\n\nfunction hasRequestManager(store) {\n  return 'requestManager' in store;\n}\nclass Store extends _ember_data_store__WEBPACK_IMPORTED_MODULE_5__[\"default\"] {\n  constructor(args) {\n    super(args);\n    this.adapterFor = _ember_data_legacy_compat__WEBPACK_IMPORTED_MODULE_1__.adapterFor;\n    this.serializerFor = _ember_data_legacy_compat__WEBPACK_IMPORTED_MODULE_1__.serializerFor;\n    this.pushPayload = _ember_data_legacy_compat__WEBPACK_IMPORTED_MODULE_1__.pushPayload;\n    this.normalize = _ember_data_legacy_compat__WEBPACK_IMPORTED_MODULE_1__.normalize;\n    this.serializeRecord = _ember_data_legacy_compat__WEBPACK_IMPORTED_MODULE_1__.serializeRecord;\n    if (!hasRequestManager(this)) {\n      this.requestManager = new _ember_data_request__WEBPACK_IMPORTED_MODULE_3__[\"default\"]();\n      this.requestManager.use([_ember_data_legacy_compat__WEBPACK_IMPORTED_MODULE_1__.LegacyNetworkHandler, _ember_data_request_fetch__WEBPACK_IMPORTED_MODULE_4__[\"default\"]]);\n    }\n    this.requestManager.useCache(_ember_data_store__WEBPACK_IMPORTED_MODULE_5__.CacheHandler);\n    this.registerSchema((0,_ember_data_model_hooks__WEBPACK_IMPORTED_MODULE_2__.buildSchema)(this));\n  }\n  createCache(storeWrapper) {\n    return new _ember_data_json_api__WEBPACK_IMPORTED_MODULE_0__[\"default\"](storeWrapper);\n  }\n  instantiateRecord(identifier, createRecordArgs) {\n    return _ember_data_model_hooks__WEBPACK_IMPORTED_MODULE_2__.instantiateRecord.call(this, identifier, createRecordArgs);\n  }\n  teardownRecord(record) {\n    _ember_data_model_hooks__WEBPACK_IMPORTED_MODULE_2__.teardownRecord.call(this, record);\n  }\n  modelFor(type) {\n    return _ember_data_model_hooks__WEBPACK_IMPORTED_MODULE_2__.modelFor.call(this, type) || super.modelFor(type);\n  }\n  destroy() {\n    _ember_data_legacy_compat__WEBPACK_IMPORTED_MODULE_1__.cleanup.call(this);\n    super.destroy();\n  }\n}\n\n//# sourceURL=webpack://my-app/../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/store.js?");

/***/ }),

/***/ "../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/transform.js":
/*!**************************************************************************************!*\
  !*** ../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/transform.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* reexport safe */ _ember_data_serializer_transform__WEBPACK_IMPORTED_MODULE_1__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/debug */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fdebug&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_debug__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _ember_data_serializer_transform__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember-data/serializer/transform */ \"../rewritten-packages/@ember-data/serializer.677d83bc/node_modules/@ember-data/serializer/transform.js\");\n\n\n( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.deprecate)('Importing from `ember-data/transform` is deprecated. Please import from `@ember-data/serializer/transform` instead.', false, {\n  id: 'ember-data:deprecate-legacy-imports',\n  for: 'ember-data',\n  until: '6.0',\n  since: {\n    enabled: '5.2',\n    available: '5.2'\n  }\n}));\n\n//# sourceURL=webpack://my-app/../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/transform.js?");

/***/ }),

/***/ "../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/version.js":
/*!************************************************************************************!*\
  !*** ../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/version.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"5.3.3\");\n\n//# sourceURL=webpack://my-app/../rewritten-packages/ember-data.f323c51d/node_modules/ember-data/version.js?");

/***/ }),

/***/ "../rewritten-packages/ember-fetch.da60d5ea/node_modules/ember-fetch/_fastboot_/instance-initializers/setup-fetch.js":
/*!***************************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-fetch.da60d5ea/node_modules/ember-fetch/_fastboot_/instance-initializers/setup-fetch.js ***!
  \***************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var fetch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fetch */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2Ffetch&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var fetch__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fetch__WEBPACK_IMPORTED_MODULE_0__);\n\n\n/**\n * To allow relative URLs for Fastboot mode, we need the per request information\n * from the fastboot service. Then we save the request from fastboot info.\n * On each fetch with relative url we get host and protocol from it.\n */\nfunction patchFetchForRelativeURLs(instance) {\n  const fastboot = instance.lookup('service:fastboot');\n  (0,fetch__WEBPACK_IMPORTED_MODULE_0__.setupFastboot)(fastboot.get('request'));\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  name: 'fetch',\n  initialize: patchFetchForRelativeURLs\n});\n\n//# sourceURL=webpack://my-app/../rewritten-packages/ember-fetch.da60d5ea/node_modules/ember-fetch/_fastboot_/instance-initializers/setup-fetch.js?");

/***/ }),

/***/ "../rewritten-packages/ember-fetch.da60d5ea/node_modules/ember-fetch/errors.js":
/*!*************************************************************************************!*\
  !*** ../rewritten-packages/ember-fetch.da60d5ea/node_modules/ember-fetch/errors.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isAbortError: () => (/* binding */ isAbortError),\n/* harmony export */   isBadRequestResponse: () => (/* binding */ isBadRequestResponse),\n/* harmony export */   isConflictResponse: () => (/* binding */ isConflictResponse),\n/* harmony export */   isForbiddenResponse: () => (/* binding */ isForbiddenResponse),\n/* harmony export */   isGoneResponse: () => (/* binding */ isGoneResponse),\n/* harmony export */   isInvalidResponse: () => (/* binding */ isInvalidResponse),\n/* harmony export */   isNotFoundResponse: () => (/* binding */ isNotFoundResponse),\n/* harmony export */   isServerErrorResponse: () => (/* binding */ isServerErrorResponse),\n/* harmony export */   isUnauthorizedResponse: () => (/* binding */ isUnauthorizedResponse)\n/* harmony export */ });\n/**\n * Checks if the given response represents an unauthorized request error\n */\nfunction isUnauthorizedResponse(response) {\n  return response.status === 401;\n}\n\n/**\n * Checks if the given response represents a forbidden request error\n */\nfunction isForbiddenResponse(response) {\n  return response.status === 403;\n}\n\n/**\n * Checks if the given response represents an invalid request error\n */\nfunction isInvalidResponse(response) {\n  return response.status === 422;\n}\n\n/**\n * Checks if the given response represents a bad request error\n */\nfunction isBadRequestResponse(response) {\n  return response.status === 400;\n}\n\n/**\n * Checks if the given response represents a \"not found\" error\n */\nfunction isNotFoundResponse(response) {\n  return response.status === 404;\n}\n\n/**\n * Checks if the given response represents a \"gone\" error\n */\nfunction isGoneResponse(response) {\n  return response.status === 410;\n}\n\n/**\n * Checks if the given error is an \"abort\" error\n */\nfunction isAbortError(error) {\n  return error.name == 'AbortError';\n}\n\n/**\n * Checks if the given response represents a conflict error\n */\nfunction isConflictResponse(response) {\n  return response.status === 409;\n}\n\n/**\n * Checks if the given response represents a server error\n */\nfunction isServerErrorResponse(response) {\n  return response.status >= 500 && response.status < 600;\n}\n\n//# sourceURL=webpack://my-app/../rewritten-packages/ember-fetch.da60d5ea/node_modules/ember-fetch/errors.js?");

/***/ }),

/***/ "../rewritten-packages/ember-fetch.da60d5ea/node_modules/ember-fetch/types.js":
/*!************************************************************************************!*\
  !*** ../rewritten-packages/ember-fetch.da60d5ea/node_modules/ember-fetch/types.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isPlainObject: () => (/* binding */ isPlainObject)\n/* harmony export */ });\nfunction isPlainObject(obj) {\n  return Object.prototype.toString.call(obj) === '[object Object]';\n}\n\n//# sourceURL=webpack://my-app/../rewritten-packages/ember-fetch.da60d5ea/node_modules/ember-fetch/types.js?");

/***/ }),

/***/ "../rewritten-packages/ember-fetch.da60d5ea/node_modules/ember-fetch/utils/determine-body-promise.js":
/*!***********************************************************************************************************!*\
  !*** ../rewritten-packages/ember-fetch.da60d5ea/node_modules/ember-fetch/utils/determine-body-promise.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ determineBodyPromise)\n/* harmony export */ });\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/debug */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fdebug&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_debug__WEBPACK_IMPORTED_MODULE_0__);\n\n\n/**\n * Function that always attempts to parse the response as json, and if an error is thrown,\n * returns `undefined` if the response is successful and has a status code of 204 (No Content),\n * or 205 (Reset Content) or if the request method was 'HEAD', and the plain payload otherwise.\n */\nfunction determineBodyPromise(response, requestData) {\n  return response.text().then(function (payload) {\n    let ret = payload;\n    try {\n      ret = JSON.parse(payload);\n    } catch (error) {\n      if (!(error instanceof SyntaxError)) {\n        throw error;\n      }\n      const status = response.status;\n      if (response.ok && (status === 204 || status === 205 || requestData.method === 'HEAD')) {\n        ret = undefined;\n      } else {\n        (0,_ember_debug__WEBPACK_IMPORTED_MODULE_0__.debug)(`This response was unable to be parsed as json: ${payload}`);\n      }\n    }\n    return ret;\n  });\n}\n\n//# sourceURL=webpack://my-app/../rewritten-packages/ember-fetch.da60d5ea/node_modules/ember-fetch/utils/determine-body-promise.js?");

/***/ }),

/***/ "../rewritten-packages/ember-fetch.da60d5ea/node_modules/ember-fetch/utils/mung-options-for-fetch.js":
/*!***********************************************************************************************************!*\
  !*** ../rewritten-packages/ember-fetch.da60d5ea/node_modules/ember-fetch/utils/mung-options-for-fetch.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ mungOptionsForFetch)\n/* harmony export */ });\n/* harmony import */ var _ember_polyfills__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/polyfills */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fpolyfills&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_polyfills__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_polyfills__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _serialize_query_params__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./serialize-query-params */ \"../rewritten-packages/ember-fetch.da60d5ea/node_modules/ember-fetch/utils/serialize-query-params.js\");\n/* harmony import */ var ember_fetch_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ember-fetch/types */ \"../rewritten-packages/ember-fetch.da60d5ea/node_modules/ember-fetch/types.js\");\n\n\n\n\n/**\n * Helper function that translates the options passed to `jQuery.ajax` into a format that `fetch` expects.\n */\nfunction mungOptionsForFetch(options) {\n  const hash = (0,_ember_polyfills__WEBPACK_IMPORTED_MODULE_0__.assign)({\n    credentials: 'same-origin'\n  }, options);\n\n  // Default to 'GET' in case `type` is not passed in (mimics jQuery.ajax).\n  hash.method = (hash.method || hash.type || 'GET').toUpperCase();\n  if (hash.data) {\n    // GET and HEAD requests can't have a `body`\n    if (hash.method === 'GET' || hash.method === 'HEAD') {\n      // If no options are passed, Ember Data sets `data` to an empty object, which we test for.\n      if (Object.keys(hash.data).length) {\n        // Test if there are already query params in the url (mimics jQuey.ajax).\n        const queryParamDelimiter = hash.url.indexOf('?') > -1 ? '&' : '?';\n        hash.url += `${queryParamDelimiter}${(0,_serialize_query_params__WEBPACK_IMPORTED_MODULE_1__.serializeQueryParams)(hash.data)}`;\n      }\n    } else {\n      // NOTE: a request's body cannot be a POJO, so we stringify it if it is.\n      // JSON.stringify removes keys with values of `undefined` (mimics jQuery.ajax).\n      // If the data is not a POJO (it's a String, FormData, etc), we just set it.\n      // If the data is a string, we assume it's a stringified object.\n      if ((0,ember_fetch_types__WEBPACK_IMPORTED_MODULE_2__.isPlainObject)(hash.data)) {\n        hash.body = JSON.stringify(hash.data);\n      } else {\n        hash.body = hash.data;\n      }\n    }\n  }\n  return hash;\n}\n\n//# sourceURL=webpack://my-app/../rewritten-packages/ember-fetch.da60d5ea/node_modules/ember-fetch/utils/mung-options-for-fetch.js?");

/***/ }),

/***/ "../rewritten-packages/ember-fetch.da60d5ea/node_modules/ember-fetch/utils/serialize-query-params.js":
/*!***********************************************************************************************************!*\
  !*** ../rewritten-packages/ember-fetch.da60d5ea/node_modules/ember-fetch/utils/serialize-query-params.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   serializeQueryParams: () => (/* binding */ serializeQueryParams)\n/* harmony export */ });\n/* harmony import */ var ember_fetch_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ember-fetch/types */ \"../rewritten-packages/ember-fetch.da60d5ea/node_modules/ember-fetch/types.js\");\n\nconst RBRACKET = /\\[\\]$/;\n\n/**\n * Helper function that turns the data/body of a request into a query param string.\n * This is directly copied from jQuery.param.\n */\nfunction serializeQueryParams(queryParamsObject) {\n  var s = [];\n  function buildParams(prefix, obj) {\n    var i, len, key;\n    if (prefix) {\n      if (Array.isArray(obj)) {\n        for (i = 0, len = obj.length; i < len; i++) {\n          if (RBRACKET.test(prefix)) {\n            add(s, prefix, obj[i]);\n          } else {\n            buildParams(prefix + '[' + (typeof obj[i] === 'object' ? i : '') + ']', obj[i]);\n          }\n        }\n      } else if ((0,ember_fetch_types__WEBPACK_IMPORTED_MODULE_0__.isPlainObject)(obj)) {\n        for (key in obj) {\n          buildParams(prefix + '[' + key + ']', obj[key]);\n        }\n      } else {\n        add(s, prefix, obj);\n      }\n    } else if (Array.isArray(obj)) {\n      for (i = 0, len = obj.length; i < len; i++) {\n        add(s, obj[i].name, obj[i].value);\n      }\n    } else {\n      for (key in obj) {\n        buildParams(key, obj[key]);\n      }\n    }\n    return s;\n  }\n  return buildParams('', queryParamsObject).join('&').replace(/%20/g, '+');\n}\n\n/**\n * Part of the `serializeQueryParams` helper function.\n */\nfunction add(s, k, v) {\n  // Strip out keys with undefined value and replace null values with\n  // empty strings (mimics jQuery.ajax)\n  if (v === undefined) {\n    return;\n  } else if (v === null) {\n    v = '';\n  }\n  v = typeof v === 'function' ? v() : v;\n  s[s.length] = `${encodeURIComponent(k)}=${encodeURIComponent(v)}`;\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (serializeQueryParams);\n\n//# sourceURL=webpack://my-app/../rewritten-packages/ember-fetch.da60d5ea/node_modules/ember-fetch/utils/serialize-query-params.js?");

/***/ }),

/***/ "../rewritten-packages/ember-inflector.73f9432a/node_modules/ember-inflector/_app_/helpers/pluralize.js":
/*!**************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-inflector.73f9432a/node_modules/ember-inflector/_app_/helpers/pluralize.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var ember_inflector_lib_helpers_pluralize__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ember-inflector/lib/helpers/pluralize */ \"../rewritten-packages/ember-inflector.73f9432a/node_modules/ember-inflector/lib/helpers/pluralize.js\");\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ember_inflector_lib_helpers_pluralize__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n\n//# sourceURL=webpack://my-app/../rewritten-packages/ember-inflector.73f9432a/node_modules/ember-inflector/_app_/helpers/pluralize.js?");

/***/ }),

/***/ "../rewritten-packages/ember-inflector.73f9432a/node_modules/ember-inflector/_app_/helpers/singularize.js":
/*!****************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-inflector.73f9432a/node_modules/ember-inflector/_app_/helpers/singularize.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var ember_inflector_lib_helpers_singularize__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ember-inflector/lib/helpers/singularize */ \"../rewritten-packages/ember-inflector.73f9432a/node_modules/ember-inflector/lib/helpers/singularize.js\");\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ember_inflector_lib_helpers_singularize__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n\n//# sourceURL=webpack://my-app/../rewritten-packages/ember-inflector.73f9432a/node_modules/ember-inflector/_app_/helpers/singularize.js?");

/***/ }),

/***/ "../rewritten-packages/ember-inflector.73f9432a/node_modules/ember-inflector/index.js":
/*!********************************************************************************************!*\
  !*** ../rewritten-packages/ember-inflector.73f9432a/node_modules/ember-inflector/index.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   pluralize: () => (/* reexport safe */ _lib_system__WEBPACK_IMPORTED_MODULE_0__.pluralize),\n/* harmony export */   singularize: () => (/* reexport safe */ _lib_system__WEBPACK_IMPORTED_MODULE_0__.singularize)\n/* harmony export */ });\n/* harmony import */ var _lib_system__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/system */ \"../rewritten-packages/ember-inflector.73f9432a/node_modules/ember-inflector/lib/system.js\");\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_lib_system__WEBPACK_IMPORTED_MODULE_0__.Inflector);\n\n\n//# sourceURL=webpack://my-app/../rewritten-packages/ember-inflector.73f9432a/node_modules/ember-inflector/index.js?");

/***/ }),

/***/ "../rewritten-packages/ember-inflector.73f9432a/node_modules/ember-inflector/lib/helpers/pluralize.js":
/*!************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-inflector.73f9432a/node_modules/ember-inflector/lib/helpers/pluralize.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var ember_inflector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ember-inflector */ \"../rewritten-packages/ember-inflector.73f9432a/node_modules/ember-inflector/index.js\");\n/* harmony import */ var _utils_make_helper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/make-helper */ \"../rewritten-packages/ember-inflector.73f9432a/node_modules/ember-inflector/lib/utils/make-helper.js\");\n\n\n\n/**\n *\n * If you have Ember Inflector (such as if Ember Data is present),\n * pluralize a word. For example, turn \"ox\" into \"oxen\".\n *\n * Example:\n *\n * {{pluralize count myProperty}}\n * {{pluralize 1 \"oxen\"}}\n * {{pluralize myProperty}}\n * {{pluralize \"ox\"}}\n *\n * @for Ember.HTMLBars.helpers\n * @method pluralize\n * @param {Number|Property} [count] count of objects\n * @param {String|Property} word word to pluralize\n */\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_utils_make_helper__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(function (params, hash) {\n  let fullParams = new Array(...params);\n  if (fullParams.length === 2) {\n    fullParams.push({\n      withoutCount: hash[\"without-count\"]\n    });\n  }\n  return (0,ember_inflector__WEBPACK_IMPORTED_MODULE_0__.pluralize)(...fullParams);\n}));\n\n//# sourceURL=webpack://my-app/../rewritten-packages/ember-inflector.73f9432a/node_modules/ember-inflector/lib/helpers/pluralize.js?");

/***/ }),

/***/ "../rewritten-packages/ember-inflector.73f9432a/node_modules/ember-inflector/lib/helpers/singularize.js":
/*!**************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-inflector.73f9432a/node_modules/ember-inflector/lib/helpers/singularize.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var ember_inflector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ember-inflector */ \"../rewritten-packages/ember-inflector.73f9432a/node_modules/ember-inflector/index.js\");\n/* harmony import */ var _utils_make_helper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/make-helper */ \"../rewritten-packages/ember-inflector.73f9432a/node_modules/ember-inflector/lib/utils/make-helper.js\");\n\n\n\n/**\n *\n * If you have Ember Inflector (such as if Ember Data is present),\n * singularize a word. For example, turn \"oxen\" into \"ox\".\n *\n * Example:\n *\n * {{singularize myProperty}}\n * {{singularize \"oxen\"}}\n *\n * @for Ember.HTMLBars.helpers\n * @method singularize\n * @param {String|Property} word word to singularize\n*/\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_utils_make_helper__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(function (params) {\n  return (0,ember_inflector__WEBPACK_IMPORTED_MODULE_0__.singularize)(params[0]);\n}));\n\n//# sourceURL=webpack://my-app/../rewritten-packages/ember-inflector.73f9432a/node_modules/ember-inflector/lib/helpers/singularize.js?");

/***/ }),

/***/ "../rewritten-packages/ember-inflector.73f9432a/node_modules/ember-inflector/lib/system.js":
/*!*************************************************************************************************!*\
  !*** ../rewritten-packages/ember-inflector.73f9432a/node_modules/ember-inflector/lib/system.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Inflector: () => (/* reexport safe */ _system_inflector__WEBPACK_IMPORTED_MODULE_0__[\"default\"]),\n/* harmony export */   pluralize: () => (/* reexport safe */ _system_string__WEBPACK_IMPORTED_MODULE_1__.pluralize),\n/* harmony export */   singularize: () => (/* reexport safe */ _system_string__WEBPACK_IMPORTED_MODULE_1__.singularize)\n/* harmony export */ });\n/* harmony import */ var _system_inflector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./system/inflector */ \"../rewritten-packages/ember-inflector.73f9432a/node_modules/ember-inflector/lib/system/inflector.js\");\n/* harmony import */ var _system_string__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./system/string */ \"../rewritten-packages/ember-inflector.73f9432a/node_modules/ember-inflector/lib/system/string.js\");\n\n\n\n\n//# sourceURL=webpack://my-app/../rewritten-packages/ember-inflector.73f9432a/node_modules/ember-inflector/lib/system.js?");

/***/ }),

/***/ "../rewritten-packages/ember-inflector.73f9432a/node_modules/ember-inflector/lib/system/inflections.js":
/*!*************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-inflector.73f9432a/node_modules/ember-inflector/lib/system/inflections.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  plurals: [[/$/, 's'], [/s$/i, 's'], [/^(ax|test)is$/i, '$1es'], [/(octop|vir)us$/i, '$1i'], [/(octop|vir)i$/i, '$1i'], [/(alias|status|bonus)$/i, '$1es'], [/(bu)s$/i, '$1ses'], [/(buffal|tomat)o$/i, '$1oes'], [/([ti])um$/i, '$1a'], [/([ti])a$/i, '$1a'], [/sis$/i, 'ses'], [/(?:([^f])fe|([lr])f)$/i, '$1$2ves'], [/(hive)$/i, '$1s'], [/([^aeiouy]|qu)y$/i, '$1ies'], [/(x|ch|ss|sh)$/i, '$1es'], [/(matr|vert|ind)(?:ix|ex)$/i, '$1ices'], [/^(m|l)ouse$/i, '$1ice'], [/^(m|l)ice$/i, '$1ice'], [/^(ox)$/i, '$1en'], [/^(oxen)$/i, '$1'], [/(quiz)$/i, '$1zes']],\n  singular: [[/s$/i, ''], [/(ss)$/i, '$1'], [/(n)ews$/i, '$1ews'], [/([ti])a$/i, '$1um'], [/((a)naly|(b)a|(d)iagno|(p)arenthe|(p)rogno|(s)ynop|(t)he)(sis|ses)$/i, '$1sis'], [/(^analy)(sis|ses)$/i, '$1sis'], [/([^f])ves$/i, '$1fe'], [/(hive)s$/i, '$1'], [/(tive)s$/i, '$1'], [/([lr])ves$/i, '$1f'], [/([^aeiouy]|qu)ies$/i, '$1y'], [/(s)eries$/i, '$1eries'], [/(m)ovies$/i, '$1ovie'], [/(x|ch|ss|sh)es$/i, '$1'], [/^(m|l)ice$/i, '$1ouse'], [/(bus)(es)?$/i, '$1'], [/(o)es$/i, '$1'], [/(shoe)s$/i, '$1'], [/(cris|test)(is|es)$/i, '$1is'], [/^(a)x[ie]s$/i, '$1xis'], [/(octop|vir)(us|i)$/i, '$1us'], [/(alias|status|bonus)(es)?$/i, '$1'], [/^(ox)en/i, '$1'], [/(vert|ind)ices$/i, '$1ex'], [/(matr)ices$/i, '$1ix'], [/(quiz)zes$/i, '$1'], [/(database)s$/i, '$1']],\n  irregularPairs: [['person', 'people'], ['man', 'men'], ['child', 'children'], ['sex', 'sexes'], ['move', 'moves'], ['cow', 'kine'], ['zombie', 'zombies']],\n  uncountable: ['equipment', 'information', 'rice', 'money', 'species', 'series', 'fish', 'sheep', 'jeans', 'police']\n});\n\n//# sourceURL=webpack://my-app/../rewritten-packages/ember-inflector.73f9432a/node_modules/ember-inflector/lib/system/inflections.js?");

/***/ }),

/***/ "../rewritten-packages/ember-inflector.73f9432a/node_modules/ember-inflector/lib/system/inflector.js":
/*!***********************************************************************************************************!*\
  !*** ../rewritten-packages/ember-inflector.73f9432a/node_modules/ember-inflector/lib/system/inflector.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _ember_string__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/string */ \"../rewritten-packages/@ember/string.5601e258/node_modules/@ember/string/index.js\");\n/* harmony import */ var _inflections__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./inflections */ \"../rewritten-packages/ember-inflector.73f9432a/node_modules/ember-inflector/lib/system/inflections.js\");\n\n\nconst BLANK_REGEX = /^\\s*$/;\nconst LAST_WORD_DASHED_REGEX = /([\\w/-]+[_/\\s-])([a-z\\d]+$)/;\nconst LAST_WORD_CAMELIZED_REGEX = /([\\w/\\s-]+)([A-Z][a-z\\d]*$)/;\nconst CAMELIZED_REGEX = /[A-Z][a-z\\d]*$/;\nfunction loadUncountable(rules, uncountable) {\n  for (let i = 0, length = uncountable.length; i < length; i++) {\n    rules.uncountable[uncountable[i].toLowerCase()] = true;\n  }\n}\nfunction loadIrregular(rules, irregularPairs) {\n  let pair;\n  for (let i = 0, length = irregularPairs.length; i < length; i++) {\n    pair = irregularPairs[i];\n\n    //pluralizing\n    rules.irregular[pair[0].toLowerCase()] = pair[1];\n    rules.irregular[pair[1].toLowerCase()] = pair[1];\n\n    //singularizing\n    rules.irregularInverse[pair[1].toLowerCase()] = pair[0];\n    rules.irregularInverse[pair[0].toLowerCase()] = pair[0];\n  }\n}\n\n/**\n  Inflector.Ember provides a mechanism for supplying inflection rules for your\n  application. Ember includes a default set of inflection rules, and provides an\n  API for providing additional rules.\n\n  Examples:\n\n  Creating an inflector with no rules.\n\n  ```js\n  var inflector = new Ember.Inflector();\n  ```\n\n  Creating an inflector with the default ember ruleset.\n\n  ```js\n  var inflector = new Ember.Inflector(Ember.Inflector.defaultRules);\n\n  inflector.pluralize('cow'); //=> 'kine'\n  inflector.singularize('kine'); //=> 'cow'\n  ```\n\n  Creating an inflector and adding rules later.\n\n  ```javascript\n  var inflector = Ember.Inflector.inflector;\n\n  inflector.pluralize('advice'); // => 'advices'\n  inflector.uncountable('advice');\n  inflector.pluralize('advice'); // => 'advice'\n\n  inflector.pluralize('formula'); // => 'formulas'\n  inflector.irregular('formula', 'formulae');\n  inflector.pluralize('formula'); // => 'formulae'\n\n  // you would not need to add these as they are the default rules\n  inflector.plural(/$/, 's');\n  inflector.singular(/s$/i, '');\n  ```\n\n  Creating an inflector with a nondefault ruleset.\n\n  ```javascript\n  var rules = {\n    plurals:  [\n      [ /$/, 's' ]\n    ],\n    singular: [\n      [ /\\s$/, '' ]\n    ],\n    irregularPairs: [\n      [ 'cow', 'kine' ]\n    ],\n    uncountable: [ 'fish' ]\n  };\n\n  var inflector = new Ember.Inflector(rules);\n  ```\n\n  @class Inflector\n  @namespace Ember\n*/\nfunction Inflector(ruleSet) {\n  ruleSet = ruleSet || {};\n  ruleSet.uncountable = ruleSet.uncountable || makeDictionary();\n  ruleSet.irregularPairs = ruleSet.irregularPairs || makeDictionary();\n  const rules = this.rules = {\n    plurals: ruleSet.plurals || [],\n    singular: ruleSet.singular || [],\n    irregular: makeDictionary(),\n    irregularInverse: makeDictionary(),\n    uncountable: makeDictionary()\n  };\n  loadUncountable(rules, ruleSet.uncountable);\n  loadIrregular(rules, ruleSet.irregularPairs);\n  this.enableCache();\n}\nif (!Object.create && !Object.create(null).hasOwnProperty) {\n  throw new Error(\"This browser does not support Object.create(null), please polyfil with es5-sham: http://git.io/yBU2rg\");\n}\nfunction makeDictionary() {\n  var cache = Object.create(null);\n  cache['_dict'] = null;\n  delete cache['_dict'];\n  return cache;\n}\nInflector.prototype = {\n  /**\n    @public\n     As inflections can be costly, and commonly the same subset of words are repeatedly\n    inflected an optional cache is provided.\n     @method enableCache\n  */\n  enableCache() {\n    this.purgeCache();\n    this.singularize = function (word) {\n      this._cacheUsed = true;\n      return this._sCache[word] || (this._sCache[word] = this._singularize(word));\n    };\n    this.pluralize = function (numberOrWord, word, options = {}) {\n      this._cacheUsed = true;\n      var cacheKey = [numberOrWord, word, options.withoutCount];\n      return this._pCache[cacheKey] || (this._pCache[cacheKey] = this._pluralize(numberOrWord, word, options));\n    };\n  },\n  /**\n    @public\n     @method purgeCache\n  */\n  purgeCache() {\n    this._cacheUsed = false;\n    this._sCache = makeDictionary();\n    this._pCache = makeDictionary();\n  },\n  /**\n    @public\n    disable caching\n     @method disableCache;\n  */\n  disableCache() {\n    this._sCache = null;\n    this._pCache = null;\n    this.singularize = function (word) {\n      return this._singularize(word);\n    };\n    this.pluralize = function () {\n      return this._pluralize(...arguments);\n    };\n  },\n  /**\n    @method plural\n    @param {RegExp} regex\n    @param {String} string\n  */\n  plural(regex, string) {\n    if (this._cacheUsed) {\n      this.purgeCache();\n    }\n    this.rules.plurals.push([regex, string.toLowerCase()]);\n  },\n  /**\n    @method singular\n    @param {RegExp} regex\n    @param {String} string\n  */\n  singular(regex, string) {\n    if (this._cacheUsed) {\n      this.purgeCache();\n    }\n    this.rules.singular.push([regex, string.toLowerCase()]);\n  },\n  /**\n    @method uncountable\n    @param {String} regex\n  */\n  uncountable(string) {\n    if (this._cacheUsed) {\n      this.purgeCache();\n    }\n    loadUncountable(this.rules, [string.toLowerCase()]);\n  },\n  /**\n    @method irregular\n    @param {String} singular\n    @param {String} plural\n  */\n  irregular(singular, plural) {\n    if (this._cacheUsed) {\n      this.purgeCache();\n    }\n    loadIrregular(this.rules, [[singular, plural]]);\n  },\n  /**\n    @method pluralize\n    @param {String} word\n  */\n  pluralize() {\n    return this._pluralize(...arguments);\n  },\n  _pluralize(wordOrCount, word, options = {}) {\n    if (word === undefined) {\n      return this.inflect(wordOrCount, this.rules.plurals, this.rules.irregular);\n    }\n    if (parseFloat(wordOrCount) !== 1) {\n      word = this.inflect(word, this.rules.plurals, this.rules.irregular);\n    }\n    return options.withoutCount ? word : `${wordOrCount} ${word}`;\n  },\n  /**\n    @method singularize\n    @param {String} word\n  */\n  singularize(word) {\n    return this._singularize(word);\n  },\n  _singularize(word) {\n    return this.inflect(word, this.rules.singular, this.rules.irregularInverse);\n  },\n  /**\n    @protected\n     @method inflect\n    @param {String} word\n    @param {Object} typeRules\n    @param {Object} irregular\n  */\n  inflect(word, typeRules, irregular) {\n    let inflection, substitution, result, lowercase, wordSplit, lastWord, isBlank, isCamelized, rule, isUncountable;\n    isBlank = !word || BLANK_REGEX.test(word);\n    isCamelized = CAMELIZED_REGEX.test(word);\n    if (isBlank) {\n      return word;\n    }\n    lowercase = word.toLowerCase();\n    wordSplit = LAST_WORD_DASHED_REGEX.exec(word) || LAST_WORD_CAMELIZED_REGEX.exec(word);\n    if (wordSplit) {\n      lastWord = wordSplit[2].toLowerCase();\n    }\n    isUncountable = this.rules.uncountable[lowercase] || this.rules.uncountable[lastWord];\n    if (isUncountable) {\n      return word;\n    }\n    for (rule in irregular) {\n      if (lowercase.match(rule + \"$\")) {\n        substitution = irregular[rule];\n        if (isCamelized && irregular[lastWord]) {\n          substitution = (0,_ember_string__WEBPACK_IMPORTED_MODULE_0__.capitalize)(substitution);\n          rule = (0,_ember_string__WEBPACK_IMPORTED_MODULE_0__.capitalize)(rule);\n        }\n        return word.replace(new RegExp(rule, 'i'), substitution);\n      }\n    }\n    for (var i = typeRules.length, min = 0; i > min; i--) {\n      inflection = typeRules[i - 1];\n      rule = inflection[0];\n      if (rule.test(word)) {\n        break;\n      }\n    }\n    inflection = inflection || [];\n    rule = inflection[0];\n    substitution = inflection[1];\n    result = word.replace(rule, substitution);\n    return result;\n  }\n};\nInflector.defaultRules = _inflections__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\nInflector.inflector = new Inflector(_inflections__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Inflector);\n\n//# sourceURL=webpack://my-app/../rewritten-packages/ember-inflector.73f9432a/node_modules/ember-inflector/lib/system/inflector.js?");

/***/ }),

/***/ "../rewritten-packages/ember-inflector.73f9432a/node_modules/ember-inflector/lib/system/string.js":
/*!********************************************************************************************************!*\
  !*** ../rewritten-packages/ember-inflector.73f9432a/node_modules/ember-inflector/lib/system/string.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   pluralize: () => (/* binding */ pluralize),\n/* harmony export */   singularize: () => (/* binding */ singularize)\n/* harmony export */ });\n/* harmony import */ var _inflector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./inflector */ \"../rewritten-packages/ember-inflector.73f9432a/node_modules/ember-inflector/lib/system/inflector.js\");\n\nfunction pluralize() {\n  return _inflector__WEBPACK_IMPORTED_MODULE_0__[\"default\"].inflector.pluralize(...arguments);\n}\nfunction singularize(word) {\n  return _inflector__WEBPACK_IMPORTED_MODULE_0__[\"default\"].inflector.singularize(word);\n}\n\n\n//# sourceURL=webpack://my-app/../rewritten-packages/ember-inflector.73f9432a/node_modules/ember-inflector/lib/system/string.js?");

/***/ }),

/***/ "../rewritten-packages/ember-inflector.73f9432a/node_modules/ember-inflector/lib/utils/make-helper.js":
/*!************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-inflector.73f9432a/node_modules/ember-inflector/lib/utils/make-helper.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ makeHelper)\n/* harmony export */ });\n/* harmony import */ var ember__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ember */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2Fember&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var ember__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(ember__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _ember_component_helper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember/component/helper */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fcomponent%2Fhelper&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_component_helper__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_ember_component_helper__WEBPACK_IMPORTED_MODULE_1__);\n\n\nfunction makeHelper(helperFunction) {\n  if ((_ember_component_helper__WEBPACK_IMPORTED_MODULE_1___default())) {\n    return _ember_component_helper__WEBPACK_IMPORTED_MODULE_1___default().helper(helperFunction);\n  }\n  if ((ember__WEBPACK_IMPORTED_MODULE_0___default().HTMLBars)) {\n    return ember__WEBPACK_IMPORTED_MODULE_0___default().HTMLBars.makeBoundHelper(helperFunction);\n  }\n  return ember__WEBPACK_IMPORTED_MODULE_0___default().Handlebars.makeBoundHelper(helperFunction);\n}\n\n//# sourceURL=webpack://my-app/../rewritten-packages/ember-inflector.73f9432a/node_modules/ember-inflector/lib/utils/make-helper.js?");

/***/ }),

/***/ "../rewritten-packages/ember-load-initializers.f6066884/node_modules/ember-load-initializers/index.js":
/*!************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-load-initializers.f6066884/node_modules/ember-load-initializers/index.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ loadInitializers)\n/* harmony export */ });\n/* harmony import */ var require__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! require */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2Frequire&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var require__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(require__WEBPACK_IMPORTED_MODULE_0__);\n\nfunction resolveInitializer(moduleName) {\n  var module = require__WEBPACK_IMPORTED_MODULE_0___default()(moduleName, null, null, true);\n  if (!module) {\n    throw new Error(moduleName + ' must export an initializer.');\n  }\n  var initializer = module['default'];\n  if (!initializer) {\n    throw new Error(moduleName + ' must have a default export');\n  }\n  if (!initializer.name) {\n    initializer.name = moduleName.slice(moduleName.lastIndexOf('/') + 1);\n  }\n  return initializer;\n}\nfunction registerInitializers(app, moduleNames) {\n  for (var i = 0; i < moduleNames.length; i++) {\n    app.initializer(resolveInitializer(moduleNames[i]));\n  }\n}\nfunction registerInstanceInitializers(app, moduleNames) {\n  for (var i = 0; i < moduleNames.length; i++) {\n    app.instanceInitializer(resolveInitializer(moduleNames[i]));\n  }\n}\nfunction _endsWith(str, suffix) {\n  return str.indexOf(suffix, str.length - suffix.length) !== -1;\n}\n\n/**\n * Configure your application as it boots\n */\nfunction loadInitializers(app, prefix) {\n  var initializerPrefix = prefix + '/initializers/';\n  var instanceInitializerPrefix = prefix + '/instance-initializers/';\n  var initializers = [];\n  var instanceInitializers = [];\n  // this is 2 pass because generally the first pass is the problem\n  // and is reduced, and resolveInitializer has potential to deopt\n  var moduleNames = Object.keys(requirejs._eak_seen);\n  for (var i = 0; i < moduleNames.length; i++) {\n    var moduleName = moduleNames[i];\n    if (moduleName.lastIndexOf(initializerPrefix, 0) === 0) {\n      if (!_endsWith(moduleName, '-test')) {\n        initializers.push(moduleName);\n      }\n    } else if (moduleName.lastIndexOf(instanceInitializerPrefix, 0) === 0) {\n      if (!_endsWith(moduleName, '-test')) {\n        instanceInitializers.push(moduleName);\n      }\n    }\n  }\n  registerInitializers(app, initializers);\n  registerInstanceInitializers(app, instanceInitializers);\n}\n\n//# sourceURL=webpack://my-app/../rewritten-packages/ember-load-initializers.f6066884/node_modules/ember-load-initializers/index.js?");

/***/ }),

/***/ "../rewritten-packages/ember-resolver.69e2404e/node_modules/ember-resolver/_app_/container-debug-adapter.js":
/*!******************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-resolver.69e2404e/node_modules/ember-resolver/_app_/container-debug-adapter.js ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* reexport safe */ ember_resolver_container_debug_adapter__WEBPACK_IMPORTED_MODULE_0__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var ember_resolver_container_debug_adapter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ember-resolver/container-debug-adapter */ \"../rewritten-packages/ember-resolver.69e2404e/node_modules/ember-resolver/container-debug-adapter.js\");\n\n\n//# sourceURL=webpack://my-app/../rewritten-packages/ember-resolver.69e2404e/node_modules/ember-resolver/_app_/container-debug-adapter.js?");

/***/ }),

/***/ "../rewritten-packages/ember-resolver.69e2404e/node_modules/ember-resolver/container-debug-adapter.js":
/*!************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-resolver.69e2404e/node_modules/ember-resolver/container-debug-adapter.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _ember_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/array */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Farray&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_array__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_array__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _ember_debug_container_debug_adapter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember/debug/container-debug-adapter */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fdebug%2Fcontainer-debug-adapter&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_debug_container_debug_adapter__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_ember_debug_container_debug_adapter__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index */ \"../rewritten-packages/ember-resolver.69e2404e/node_modules/ember-resolver/index.js\");\n/* harmony import */ var _ember_application__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ember/application */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fapplication&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_application__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_ember_application__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\nfunction getPod(type, key, prefix) {\n  let match = key.match(new RegExp('^/?' + prefix + '/(.+)/' + type + '$'));\n  if (match !== null) {\n    return match[1];\n  }\n}\n\n/*\n * This module defines a subclass of Ember.ContainerDebugAdapter that adds\n * support for resolving from modules.\n *\n */\n\n/* eslint-disable ember/no-classic-classes */\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_ember_debug_container_debug_adapter__WEBPACK_IMPORTED_MODULE_1___default().extend({\n  _moduleRegistry: null,\n  init() {\n    this._super(...arguments);\n    this.namespace = (0,_ember_application__WEBPACK_IMPORTED_MODULE_3__.getOwner)(this).lookup('application:main');\n    if (!this._moduleRegistry) {\n      this._moduleRegistry = new _index__WEBPACK_IMPORTED_MODULE_2__.ModuleRegistry();\n    }\n  },\n  /**\n      The container of the application being debugged.\n      This property will be injected\n      on creation.\n       @property container\n      @default null\n      */\n\n  /**\n      The resolver instance of the application\n      being debugged. This property will be injected\n      on creation.\n       @property resolver\n      @default null\n      */\n\n  /**\n      Returns true if it is possible to catalog a list of available\n      classes in the resolver for a given type.\n       @method canCatalogEntriesByType\n      @param {string} type The type. e.g. \"model\", \"controller\", \"route\"\n      @return {boolean} whether a list is available for this type.\n      */\n  canCatalogEntriesByType(type) {\n    if (type === 'model') {\n      return true;\n    }\n    return this._super(...arguments);\n  },\n  /**\n      Returns the available classes a given type.\n       @method catalogEntriesByType\n      @param {string} type The type. e.g. \"model\", \"controller\", \"route\"\n      @return {Array} An array of classes.\n      */\n  catalogEntriesByType(type) {\n    let moduleNames = this._moduleRegistry.moduleNames();\n    let types = (0,_ember_array__WEBPACK_IMPORTED_MODULE_0__.A)();\n    let prefix = this.namespace.modulePrefix;\n    for (let i = 0, l = moduleNames.length; i < l; i++) {\n      let key = moduleNames[i];\n      if (key.indexOf(type) !== -1) {\n        // Check if it's a pod module\n        let name = getPod(type, key, this.namespace.podModulePrefix || prefix);\n        if (!name) {\n          // Not pod\n          name = key.split(type + 's/').pop();\n\n          // Support for different prefix (such as ember-cli addons).\n          // Uncomment the code below when\n          // https://github.com/ember-cli/ember-resolver/pull/80 is merged.\n\n          //let match = key.match('^/?(.+)/' + type);\n          //if (match && match[1] !== prefix) {\n          // Different prefix such as an addon\n          //name = match[1] + '@' + name;\n          //}\n        }\n        types.addObject(name);\n      }\n    }\n    return types;\n  }\n}));\n\n//# sourceURL=webpack://my-app/../rewritten-packages/ember-resolver.69e2404e/node_modules/ember-resolver/container-debug-adapter.js?");

/***/ }),

/***/ "../rewritten-packages/ember-resolver.69e2404e/node_modules/ember-resolver/features.js":
/*!*********************************************************************************************!*\
  !*** ../rewritten-packages/ember-resolver.69e2404e/node_modules/ember-resolver/features.js ***!
  \*********************************************************************************************/
/***/ (() => {

eval("/*\n * This is a stub file, it must be on disk b/c babel-plugin-debug-macros\n * does not strip the module require when the transpiled variable usage is\n * stripped.\n */\n\n//# sourceURL=webpack://my-app/../rewritten-packages/ember-resolver.69e2404e/node_modules/ember-resolver/features.js?");

/***/ }),

/***/ "../rewritten-packages/ember-resolver.69e2404e/node_modules/ember-resolver/index.js":
/*!******************************************************************************************!*\
  !*** ../rewritten-packages/ember-resolver.69e2404e/node_modules/ember-resolver/index.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ModuleRegistry: () => (/* binding */ ModuleRegistry),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../@babel/runtime/helpers/esm/defineProperty.js */ \"../../@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var ember__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ember */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2Fember&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var ember__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(ember__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ember/debug */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fdebug&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_ember_debug__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _ember_object__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ember/object */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fobject&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_object__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_ember_object__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _string__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./string */ \"../rewritten-packages/ember-resolver.69e2404e/node_modules/ember-resolver/string/index.js\");\n/* harmony import */ var _utils_class_factory__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils/class-factory */ \"../rewritten-packages/ember-resolver.69e2404e/node_modules/ember-resolver/utils/class-factory.js\");\n\n/* globals requirejs, require */\n\n\n\n\n\n\nif (typeof requirejs.entries === 'undefined') {\n  requirejs.entries = requirejs._eak_seen;\n}\nclass ModuleRegistry {\n  constructor(entries) {\n    this._entries = entries || requirejs.entries;\n  }\n  moduleNames() {\n    return Object.keys(this._entries);\n  }\n  has(moduleName) {\n    return moduleName in this._entries;\n  }\n  get(...args) {\n    return window.require(...args);\n  }\n}\n\n/**\n * This module defines a subclass of Ember.DefaultResolver that adds two\n * important features:\n *\n *  1) The resolver makes the container aware of es6 modules via the AMD\n *     output. The loader's _moduleEntries is consulted so that classes can be\n *     resolved directly via the module loader, without needing a manual\n *     `import`.\n *  2) is able to provide injections to classes that implement `extend`\n *     (as is typical with Ember).\n */\nclass Resolver extends (_ember_object__WEBPACK_IMPORTED_MODULE_3___default()) {\n  constructor() {\n    super(...arguments);\n    (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"moduleBasedResolver\", true);\n    (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_deprecatedPodModulePrefix\", false);\n    (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_normalizeCache\", Object.create(null));\n    /**\n     A listing of functions to test for moduleName's based on the provided\n     `parsedName`. This allows easy customization of additional module based\n     lookup patterns.\n      @property moduleNameLookupPatterns\n     @returns {Ember.Array}\n     */\n    (0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"moduleNameLookupPatterns\", [this.podBasedModuleName, this.podBasedComponentsInSubdir, this.mainModuleName, this.defaultModuleName, this.nestedColocationComponentModuleName]);\n    if (!this._moduleRegistry) {\n      this._moduleRegistry = new ModuleRegistry();\n    }\n    this.pluralizedTypes = this.pluralizedTypes || Object.create(null);\n    if (!this.pluralizedTypes.config) {\n      this.pluralizedTypes.config = 'config';\n    }\n  }\n  makeToString(factory, fullName) {\n    return '' + this.namespace.modulePrefix + '@' + fullName + ':';\n  }\n  shouldWrapInClassFactory( /* module, parsedName */\n  ) {\n    return false;\n  }\n  parseName(fullName) {\n    if (fullName.parsedName === true) {\n      return fullName;\n    }\n    let prefix, type, name;\n    let fullNameParts = fullName.split('@');\n    if (fullNameParts.length === 3) {\n      if (fullNameParts[0].length === 0) {\n        // leading scoped namespace: `@scope/pkg@type:name`\n        prefix = `@${fullNameParts[1]}`;\n        let prefixParts = fullNameParts[2].split(':');\n        type = prefixParts[0];\n        name = prefixParts[1];\n      } else {\n        // interweaved scoped namespace: `type:@scope/pkg@name`\n        prefix = `@${fullNameParts[1]}`;\n        type = fullNameParts[0].slice(0, -1);\n        name = fullNameParts[2];\n      }\n      if (type === 'template:components') {\n        name = `components/${name}`;\n        type = 'template';\n      }\n    } else if (fullNameParts.length === 2) {\n      let prefixParts = fullNameParts[0].split(':');\n      if (prefixParts.length === 2) {\n        if (prefixParts[1].length === 0) {\n          type = prefixParts[0];\n          name = `@${fullNameParts[1]}`;\n        } else {\n          prefix = prefixParts[1];\n          type = prefixParts[0];\n          name = fullNameParts[1];\n        }\n      } else {\n        let nameParts = fullNameParts[1].split(':');\n        prefix = fullNameParts[0];\n        type = nameParts[0];\n        name = nameParts[1];\n      }\n      if (type === 'template' && prefix.lastIndexOf('components/', 0) === 0) {\n        name = `components/${name}`;\n        prefix = prefix.slice(11);\n      }\n    } else {\n      fullNameParts = fullName.split(':');\n      type = fullNameParts[0];\n      name = fullNameParts[1];\n    }\n    let fullNameWithoutType = name;\n    let namespace = this.namespace;\n    let root = namespace;\n    return {\n      parsedName: true,\n      fullName: fullName,\n      prefix: prefix || this.prefix({\n        type: type\n      }),\n      type: type,\n      fullNameWithoutType: fullNameWithoutType,\n      name: name,\n      root: root,\n      resolveMethodName: 'resolve' + (0,_string__WEBPACK_IMPORTED_MODULE_4__.classify)(type)\n    };\n  }\n  resolveOther(parsedName) {\n    ( true && !(this.namespace.modulePrefix) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_2__.assert)('`modulePrefix` must be defined', this.namespace.modulePrefix));\n    let normalizedModuleName = this.findModuleName(parsedName);\n    if (normalizedModuleName) {\n      let defaultExport = this._extractDefaultExport(normalizedModuleName, parsedName);\n      if (defaultExport === undefined) {\n        throw new Error(` Expected to find: '${parsedName.fullName}' within '${normalizedModuleName}' but got 'undefined'. Did you forget to 'export default' within '${normalizedModuleName}'?`);\n      }\n      if (this.shouldWrapInClassFactory(defaultExport, parsedName)) {\n        defaultExport = (0,_utils_class_factory__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(defaultExport);\n      }\n      return defaultExport;\n    }\n  }\n  normalize(fullName) {\n    return this._normalizeCache[fullName] || (this._normalizeCache[fullName] = this._normalize(fullName));\n  }\n  resolve(fullName) {\n    let parsedName = this.parseName(fullName);\n    let resolveMethodName = parsedName.resolveMethodName;\n    let resolved;\n    if (typeof this[resolveMethodName] === 'function') {\n      resolved = this[resolveMethodName](parsedName);\n    }\n    if (resolved == null) {\n      resolved = this.resolveOther(parsedName);\n    }\n    return resolved;\n  }\n  _normalize(fullName) {\n    // A) Convert underscores to dashes\n    // B) Convert camelCase to dash-case, except for components (their\n    //    templates) and helpers where we want to avoid shadowing camelCase\n    //    expressions\n    // C) replace `.` with `/` in order to make nested controllers work in the following cases\n    //      1. `needs: ['posts/post']`\n    //      2. `{{render \"posts/post\"}}`\n    //      3. `this.render('posts/post')` from Route\n\n    let split = fullName.split(':');\n    if (split.length > 1) {\n      let type = split[0];\n      if (type === 'component' || type === 'helper' || type === 'modifier' || type === 'template' && split[1].indexOf('components/') === 0) {\n        return type + ':' + split[1].replace(/_/g, '-');\n      } else {\n        return type + ':' + (0,_string__WEBPACK_IMPORTED_MODULE_4__.dasherize)(split[1].replace(/\\./g, '/'));\n      }\n    } else {\n      return fullName;\n    }\n  }\n  pluralize(type) {\n    return this.pluralizedTypes[type] || (this.pluralizedTypes[type] = type + 's');\n  }\n  podBasedLookupWithPrefix(podPrefix, parsedName) {\n    let fullNameWithoutType = parsedName.fullNameWithoutType;\n    if (parsedName.type === 'template') {\n      fullNameWithoutType = fullNameWithoutType.replace(/^components\\//, '');\n    }\n    return podPrefix + '/' + fullNameWithoutType + '/' + parsedName.type;\n  }\n  podBasedModuleName(parsedName) {\n    let podPrefix = this.namespace.podModulePrefix || this.namespace.modulePrefix;\n    return this.podBasedLookupWithPrefix(podPrefix, parsedName);\n  }\n  podBasedComponentsInSubdir(parsedName) {\n    let podPrefix = this.namespace.podModulePrefix || this.namespace.modulePrefix;\n    podPrefix = podPrefix + '/components';\n    if (parsedName.type === 'component' || /^components/.test(parsedName.fullNameWithoutType)) {\n      return this.podBasedLookupWithPrefix(podPrefix, parsedName);\n    }\n  }\n  resolveEngine(parsedName) {\n    let engineName = parsedName.fullNameWithoutType;\n    let engineModule = engineName + '/engine';\n    if (this._moduleRegistry.has(engineModule)) {\n      return this._extractDefaultExport(engineModule);\n    }\n  }\n  resolveRouteMap(parsedName) {\n    let engineName = parsedName.fullNameWithoutType;\n    let engineRoutesModule = engineName + '/routes';\n    if (this._moduleRegistry.has(engineRoutesModule)) {\n      let routeMap = this._extractDefaultExport(engineRoutesModule);\n      ( true && !(routeMap.isRouteMap) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_2__.assert)(`The route map for ${engineName} should be wrapped by 'buildRoutes' before exporting.`, routeMap.isRouteMap));\n      return routeMap;\n    }\n  }\n  resolveTemplate(parsedName) {\n    let resolved = this.resolveOther(parsedName);\n    if (resolved == null) {\n      resolved = (ember__WEBPACK_IMPORTED_MODULE_1___default().TEMPLATES)[parsedName.fullNameWithoutType];\n    }\n    return resolved;\n  }\n  mainModuleName(parsedName) {\n    if (parsedName.fullNameWithoutType === 'main') {\n      // if router:main or adapter:main look for a module with just the type first\n      return parsedName.prefix + '/' + parsedName.type;\n    }\n  }\n  defaultModuleName(parsedName) {\n    return parsedName.prefix + '/' + this.pluralize(parsedName.type) + '/' + parsedName.fullNameWithoutType;\n  }\n  nestedColocationComponentModuleName(parsedName) {\n    if (parsedName.type === 'component') {\n      return parsedName.prefix + '/' + this.pluralize(parsedName.type) + '/' + parsedName.fullNameWithoutType + '/index';\n    }\n  }\n  prefix(parsedName) {\n    let tmpPrefix = this.namespace.modulePrefix;\n    if (this.namespace[parsedName.type + 'Prefix']) {\n      tmpPrefix = this.namespace[parsedName.type + 'Prefix'];\n    }\n    return tmpPrefix;\n  }\n  findModuleName(parsedName, loggingDisabled) {\n    let moduleNameLookupPatterns = this.moduleNameLookupPatterns;\n    let moduleName;\n    for (let index = 0, length = moduleNameLookupPatterns.length; index < length; index++) {\n      let item = moduleNameLookupPatterns[index];\n      let tmpModuleName = item.call(this, parsedName);\n\n      // allow treat all dashed and all underscored as the same thing\n      // supports components with dashes and other stuff with underscores.\n      if (tmpModuleName) {\n        tmpModuleName = this.chooseModuleName(tmpModuleName, parsedName);\n      }\n      if (tmpModuleName && this._moduleRegistry.has(tmpModuleName)) {\n        moduleName = tmpModuleName;\n      }\n      if (!loggingDisabled) {\n        this._logLookup(moduleName, parsedName, tmpModuleName);\n      }\n      if (moduleName) {\n        return moduleName;\n      }\n    }\n  }\n  chooseModuleName(moduleName, parsedName) {\n    let underscoredModuleName = (0,_string__WEBPACK_IMPORTED_MODULE_4__.underscore)(moduleName);\n    if (moduleName !== underscoredModuleName && this._moduleRegistry.has(moduleName) && this._moduleRegistry.has(underscoredModuleName)) {\n      throw new TypeError(`Ambiguous module names: '${moduleName}' and '${underscoredModuleName}'`);\n    }\n    if (this._moduleRegistry.has(moduleName)) {\n      return moduleName;\n    } else if (this._moduleRegistry.has(underscoredModuleName)) {\n      return underscoredModuleName;\n    }\n    // workaround for dasherized partials:\n    // something/something/-something => something/something/_something\n    let partializedModuleName = moduleName.replace(/\\/-([^/]*)$/, '/_$1');\n    if (this._moduleRegistry.has(partializedModuleName)) {\n      ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_2__.deprecate)('Modules should not contain underscores. ' + 'Attempted to lookup \"' + moduleName + '\" which ' + 'was not found. Please rename \"' + partializedModuleName + '\" ' + 'to \"' + moduleName + '\" instead.', false, {\n        id: 'ember-resolver.underscored-modules',\n        until: '3.0.0',\n        for: 'ember-resolver',\n        since: '0.1.0'\n      }));\n      return partializedModuleName;\n    }\n    if (true /* DEBUG */) {\n      let isCamelCaseHelper = parsedName.type === 'helper' && /[a-z]+[A-Z]+/.test(moduleName);\n      if (isCamelCaseHelper) {\n        this._camelCaseHelperWarnedNames = this._camelCaseHelperWarnedNames || [];\n        let alreadyWarned = this._camelCaseHelperWarnedNames.indexOf(parsedName.fullName) > -1;\n        if (!alreadyWarned && this._moduleRegistry.has((0,_string__WEBPACK_IMPORTED_MODULE_4__.dasherize)(moduleName))) {\n          this._camelCaseHelperWarnedNames.push(parsedName.fullName);\n          ( true && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_2__.warn)('Attempted to lookup \"' + parsedName.fullName + '\" which ' + 'was not found. In previous versions of ember-resolver, a bug would have ' + 'caused the module at \"' + (0,_string__WEBPACK_IMPORTED_MODULE_4__.dasherize)(moduleName) + '\" to be ' + 'returned for this camel case helper name. This has been fixed. ' + 'Use the dasherized name to resolve the module that would have been ' + 'returned in previous versions.', false, {\n            id: 'ember-resolver.camelcase-helper-names',\n            until: '3.0.0'\n          }));\n        }\n      }\n    }\n  }\n\n  // used by Ember.DefaultResolver.prototype._logLookup\n  lookupDescription(fullName) {\n    let parsedName = this.parseName(fullName);\n    let moduleName = this.findModuleName(parsedName, true);\n    return moduleName;\n  }\n\n  // only needed until 1.6.0-beta.2 can be required\n  _logLookup(found, parsedName, description) {\n    if (!(ember__WEBPACK_IMPORTED_MODULE_1___default().ENV).LOG_MODULE_RESOLVER && !parsedName.root.LOG_RESOLVER) {\n      return;\n    }\n    let padding;\n    let symbol = found ? '[✓]' : '[ ]';\n    if (parsedName.fullName.length > 60) {\n      padding = '.';\n    } else {\n      padding = new Array(60 - parsedName.fullName.length).join('.');\n    }\n    if (!description) {\n      description = this.lookupDescription(parsedName);\n    }\n\n    /* eslint-disable no-console */\n    if (console && console.info) {\n      console.info(symbol, parsedName.fullName, padding, description);\n    }\n  }\n  knownForType(type) {\n    let moduleKeys = this._moduleRegistry.moduleNames();\n    let items = Object.create(null);\n    for (let index = 0, length = moduleKeys.length; index < length; index++) {\n      let moduleName = moduleKeys[index];\n      let fullname = this.translateToContainerFullname(type, moduleName);\n      if (fullname) {\n        items[fullname] = true;\n      }\n    }\n    return items;\n  }\n  translateToContainerFullname(type, moduleName) {\n    let prefix = this.prefix({\n      type\n    });\n\n    // Note: using string manipulation here rather than regexes for better performance.\n    // pod modules\n    // '^' + prefix + '/(.+)/' + type + '$'\n    let podPrefix = prefix + '/';\n    let podSuffix = '/' + type;\n    let start = moduleName.indexOf(podPrefix);\n    let end = moduleName.indexOf(podSuffix);\n    if (start === 0 && end === moduleName.length - podSuffix.length && moduleName.length > podPrefix.length + podSuffix.length) {\n      return type + ':' + moduleName.slice(start + podPrefix.length, end);\n    }\n\n    // non-pod modules\n    // '^' + prefix + '/' + pluralizedType + '/(.+)$'\n    let pluralizedType = this.pluralize(type);\n    let nonPodPrefix = prefix + '/' + pluralizedType + '/';\n    if (moduleName.indexOf(nonPodPrefix) === 0 && moduleName.length > nonPodPrefix.length) {\n      return type + ':' + moduleName.slice(nonPodPrefix.length);\n    }\n  }\n  _extractDefaultExport(normalizedModuleName) {\n    let module = this._moduleRegistry.get(normalizedModuleName, null, null, true /* force sync */);\n    if (module && module['default']) {\n      module = module['default'];\n    }\n    return module;\n  }\n}\n(0,_Users_pconejo_Desktop_PROYECTOS_internshipPabloConejo_Ember_tutorial_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(Resolver, \"moduleBasedResolver\", true);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Resolver);\n\n//# sourceURL=webpack://my-app/../rewritten-packages/ember-resolver.69e2404e/node_modules/ember-resolver/index.js?");

/***/ }),

/***/ "../rewritten-packages/ember-resolver.69e2404e/node_modules/ember-resolver/string/cache.js":
/*!*************************************************************************************************!*\
  !*** ../rewritten-packages/ember-resolver.69e2404e/node_modules/ember-resolver/string/cache.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Cache)\n/* harmony export */ });\nclass Cache {\n  constructor(limit, func, store) {\n    this.limit = limit;\n    this.func = func;\n    this.store = store;\n    this.size = 0;\n    this.misses = 0;\n    this.hits = 0;\n    this.store = store || new Map();\n  }\n  get(key) {\n    let value = this.store.get(key);\n    if (this.store.has(key)) {\n      this.hits++;\n      return this.store.get(key);\n    } else {\n      this.misses++;\n      value = this.set(key, this.func(key));\n    }\n    return value;\n  }\n  set(key, value) {\n    if (this.limit > this.size) {\n      this.size++;\n      this.store.set(key, value);\n    }\n    return value;\n  }\n  purge() {\n    this.store.clear();\n    this.size = 0;\n    this.hits = 0;\n    this.misses = 0;\n  }\n}\n\n//# sourceURL=webpack://my-app/../rewritten-packages/ember-resolver.69e2404e/node_modules/ember-resolver/string/cache.js?");

/***/ }),

/***/ "../rewritten-packages/ember-resolver.69e2404e/node_modules/ember-resolver/string/index.js":
/*!*************************************************************************************************!*\
  !*** ../rewritten-packages/ember-resolver.69e2404e/node_modules/ember-resolver/string/index.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   classify: () => (/* binding */ classify),\n/* harmony export */   dasherize: () => (/* binding */ dasherize),\n/* harmony export */   decamelize: () => (/* binding */ decamelize),\n/* harmony export */   getString: () => (/* binding */ getString),\n/* harmony export */   getStrings: () => (/* binding */ getStrings),\n/* harmony export */   setStrings: () => (/* binding */ setStrings),\n/* harmony export */   underscore: () => (/* binding */ underscore)\n/* harmony export */ });\n/* harmony import */ var _cache__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cache */ \"../rewritten-packages/ember-resolver.69e2404e/node_modules/ember-resolver/string/cache.js\");\n/* eslint-disable no-useless-escape */\n\nlet STRINGS = {};\nfunction setStrings(strings) {\n  STRINGS = strings;\n}\nfunction getStrings() {\n  return STRINGS;\n}\nfunction getString(name) {\n  return STRINGS[name];\n}\nconst STRING_DASHERIZE_REGEXP = /[ _]/g;\nconst STRING_DASHERIZE_CACHE = new _cache__WEBPACK_IMPORTED_MODULE_0__[\"default\"](1000, key => decamelize(key).replace(STRING_DASHERIZE_REGEXP, '-'));\nconst STRING_CLASSIFY_REGEXP_1 = /^(\\-|_)+(.)?/;\nconst STRING_CLASSIFY_REGEXP_2 = /(.)(\\-|\\_|\\.|\\s)+(.)?/g;\nconst STRING_CLASSIFY_REGEXP_3 = /(^|\\/|\\.)([a-z])/g;\nconst CLASSIFY_CACHE = new _cache__WEBPACK_IMPORTED_MODULE_0__[\"default\"](1000, str => {\n  const replace1 = (_match, _separator, chr) => chr ? `_${chr.toUpperCase()}` : '';\n  const replace2 = (_match, initialChar, _separator, chr) => initialChar + (chr ? chr.toUpperCase() : '');\n  const parts = str.split('/');\n  for (let i = 0; i < parts.length; i++) {\n    parts[i] = parts[i].replace(STRING_CLASSIFY_REGEXP_1, replace1).replace(STRING_CLASSIFY_REGEXP_2, replace2);\n  }\n  return parts.join('/').replace(STRING_CLASSIFY_REGEXP_3, (match /*, separator, chr */) => match.toUpperCase());\n});\nconst STRING_UNDERSCORE_REGEXP_1 = /([a-z\\d])([A-Z]+)/g;\nconst STRING_UNDERSCORE_REGEXP_2 = /\\-|\\s+/g;\nconst UNDERSCORE_CACHE = new _cache__WEBPACK_IMPORTED_MODULE_0__[\"default\"](1000, str => str.replace(STRING_UNDERSCORE_REGEXP_1, '$1_$2').replace(STRING_UNDERSCORE_REGEXP_2, '_').toLowerCase());\nconst STRING_DECAMELIZE_REGEXP = /([a-z\\d])([A-Z])/g;\nconst DECAMELIZE_CACHE = new _cache__WEBPACK_IMPORTED_MODULE_0__[\"default\"](1000, str => str.replace(STRING_DECAMELIZE_REGEXP, '$1_$2').toLowerCase());\n/**\n  Converts a camelized string into all lower case separated by underscores.\n\n  ```javascript\n  import { decamelize } from '@ember/string';\n\n  decamelize('innerHTML');          // 'inner_html'\n  decamelize('action_name');        // 'action_name'\n  decamelize('css-class-name');     // 'css-class-name'\n  decamelize('my favorite items');  // 'my favorite items'\n  ```\n\n  @method decamelize\n  @param {String} str The string to decamelize.\n  @return {String} the decamelized string.\n  @public\n*/\nfunction decamelize(str) {\n  return DECAMELIZE_CACHE.get(str);\n}\n/**\n  Replaces underscores, spaces, or camelCase with dashes.\n\n  ```javascript\n  import { dasherize } from '@ember/string';\n\n  dasherize('innerHTML');                // 'inner-html'\n  dasherize('action_name');              // 'action-name'\n  dasherize('css-class-name');           // 'css-class-name'\n  dasherize('my favorite items');        // 'my-favorite-items'\n  dasherize('privateDocs/ownerInvoice';  // 'private-docs/owner-invoice'\n  ```\n\n  @method dasherize\n  @param {String} str The string to dasherize.\n  @return {String} the dasherized string.\n  @public\n*/\nfunction dasherize(str) {\n  return STRING_DASHERIZE_CACHE.get(str);\n}\n/**\n  Returns the UpperCamelCase form of a string.\n\n  ```javascript\n  import { classify } from '@ember/string';\n\n  classify('innerHTML');                   // 'InnerHTML'\n  classify('action_name');                 // 'ActionName'\n  classify('css-class-name');              // 'CssClassName'\n  classify('my favorite items');           // 'MyFavoriteItems'\n  classify('private-docs/owner-invoice');  // 'PrivateDocs/OwnerInvoice'\n  ```\n\n  @method classify\n  @param {String} str the string to classify\n  @return {String} the classified string\n  @public\n*/\nfunction classify(str) {\n  return CLASSIFY_CACHE.get(str);\n}\n/**\n  More general than decamelize. Returns the lower\\_case\\_and\\_underscored\n  form of a string.\n\n  ```javascript\n  import { underscore } from '@ember/string';\n\n  underscore('innerHTML');                 // 'inner_html'\n  underscore('action_name');               // 'action_name'\n  underscore('css-class-name');            // 'css_class_name'\n  underscore('my favorite items');         // 'my_favorite_items'\n  underscore('privateDocs/ownerInvoice');  // 'private_docs/owner_invoice'\n  ```\n\n  @method underscore\n  @param {String} str The string to underscore.\n  @return {String} the underscored string.\n  @public\n*/\nfunction underscore(str) {\n  return UNDERSCORE_CACHE.get(str);\n}\n\n//# sourceURL=webpack://my-app/../rewritten-packages/ember-resolver.69e2404e/node_modules/ember-resolver/string/index.js?");

/***/ }),

/***/ "../rewritten-packages/ember-resolver.69e2404e/node_modules/ember-resolver/utils/class-factory.js":
/*!********************************************************************************************************!*\
  !*** ../rewritten-packages/ember-resolver.69e2404e/node_modules/ember-resolver/utils/class-factory.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ classFactory)\n/* harmony export */ });\nfunction classFactory(klass) {\n  return {\n    create(injections) {\n      if (typeof klass.extend === 'function') {\n        return klass.extend(injections);\n      } else {\n        return klass;\n      }\n    }\n  };\n}\n\n//# sourceURL=webpack://my-app/../rewritten-packages/ember-resolver.69e2404e/node_modules/ember-resolver/utils/class-factory.js?");

/***/ }),

/***/ "../rewritten-packages/ember-tracked-storage-polyfill.20a34da1/node_modules/ember-tracked-storage-polyfill/index.js":
/*!**************************************************************************************************************************!*\
  !*** ../rewritten-packages/ember-tracked-storage-polyfill.20a34da1/node_modules/ember-tracked-storage-polyfill/index.js ***!
  \**************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createStorage: () => (/* binding */ createStorage),\n/* harmony export */   getValue: () => (/* binding */ getValue),\n/* harmony export */   setValue: () => (/* binding */ setValue)\n/* harmony export */ });\n/* harmony import */ var _glimmer_tracking__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @glimmer/tracking */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40glimmer%2Ftracking&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _glimmer_tracking__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_glimmer_tracking__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember/debug */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fdebug&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_ember_debug__WEBPACK_IMPORTED_MODULE_1__);\nvar __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\n\nclass TrackedStorageImpl {\n  constructor(initialValue, isEqual) {\n    this._value = this._lastValue = initialValue;\n    this._isEqual = isEqual;\n  }\n}\n__decorate([_glimmer_tracking__WEBPACK_IMPORTED_MODULE_0__.tracked], TrackedStorageImpl.prototype, \"_value\", void 0);\nfunction tripleEq(a, b) {\n  return a === b;\n}\nfunction createStorage(initialValue, isEqual = tripleEq) {\n  ( true && !(typeof isEqual === 'function') && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)('the second parameter to `createStorage` must be an equality function or undefined', typeof isEqual === 'function'));\n  return new TrackedStorageImpl(initialValue, isEqual);\n}\nfunction getValue(storage) {\n  ( true && !(storage instanceof TrackedStorageImpl) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)('getValue must be passed a tracked store created with `createStorage`.', storage instanceof TrackedStorageImpl));\n  return storage._value;\n}\nfunction setValue(storage, value) {\n  ( true && !(storage instanceof TrackedStorageImpl) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_1__.assert)('setValue must be passed a tracked store created with `createStorage`.', storage instanceof TrackedStorageImpl));\n  const {\n    _isEqual: isEqual,\n    _lastValue: lastValue\n  } = storage;\n  if (!isEqual(value, lastValue)) {\n    storage._value = storage._lastValue = value;\n  }\n}\n\n//# sourceURL=webpack://my-app/../rewritten-packages/ember-tracked-storage-polyfill.20a34da1/node_modules/ember-tracked-storage-polyfill/index.js?");

/***/ }),

/***/ "../../@embroider/macros/src/addon/es-compat2.js":
/*!*******************************************************!*\
  !*** ../../@embroider/macros/src/addon/es-compat2.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ esCompat)\n/* harmony export */ });\nfunction esCompat(m) {\n  return m?.__esModule ? m : {\n    default: m,\n    ...m\n  };\n}\n\n//# sourceURL=webpack://my-app/../../@embroider/macros/src/addon/es-compat2.js?");

/***/ }),

/***/ "../../@embroider/macros/src/addon/runtime.js":
/*!****************************************************!*\
  !*** ../../@embroider/macros/src/addon/runtime.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   each: () => (/* binding */ each),\n/* harmony export */   getGlobalConfig: () => (/* binding */ getGlobalConfig),\n/* harmony export */   isTesting: () => (/* binding */ isTesting),\n/* harmony export */   macroCondition: () => (/* binding */ macroCondition)\n/* harmony export */ });\n/*\n  These are the runtime implementations for the javascript macros that have\n  runtime implementations.\n\n  Not every macro has a runtime implementation, some only make sense in the\n  build and always run there.\n\n  Even when we have runtime implementations, we are still careful to emit static\n  errors during the build wherever possible, and runtime errors when necessary,\n  so that you're not surprised when you switch from runtime-mode to compile-time\n  mode.\n*/\n\n/*\n  CAUTION: in classic builds, this file gets shared by all present copies of\n  @embroider/macros. If you want to change its public API, you need to rename it\n  and update `pathToRuntime` in ../babel/state.ts to point at it, so that your\n  babel plugin and runtime will match.\n*/\n\nfunction each(array) {\n  if (!Array.isArray(array)) {\n    throw new Error(`the argument to the each() macro must be an array`);\n  }\n  return array;\n}\nfunction macroCondition(predicate) {\n  return predicate;\n}\n\n// This is here as a compile target for `getConfig` and `getOwnConfig` when\n// we're in runtime mode. This is not public API to call from your own code.\nfunction config(packageRoot) {\n  return runtimeConfig.packages[packageRoot];\n}\nfunction getGlobalConfig() {\n  return runtimeConfig.global;\n}\nfunction isTesting() {\n  let g = runtimeConfig.global;\n  let e = g && g['@embroider/macros'];\n  return Boolean(e && e.isTesting);\n}\nconst runtimeConfig = initializeRuntimeMacrosConfig();\n\n// this exists to be targeted by our babel plugin\nfunction initializeRuntimeMacrosConfig() {\n  return {\n    \"packages\": {\n      \"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/@ember-data/adapter\": {\n        \"compatWith\": null,\n        \"debug\": {\n          \"LOG_PAYLOADS\": false,\n          \"LOG_OPERATIONS\": false,\n          \"LOG_MUTATIONS\": false,\n          \"LOG_NOTIFICATIONS\": false,\n          \"LOG_REQUESTS\": false,\n          \"LOG_REQUEST_STATUS\": false,\n          \"LOG_IDENTIFIERS\": false,\n          \"LOG_GRAPH\": false,\n          \"LOG_INSTANCE_CACHE\": false\n        },\n        \"deprecations\": {\n          \"DEPRECATE_CATCH_ALL\": true,\n          \"DEPRECATE_3_12\": true,\n          \"DEPRECATE_NON_STRICT_TYPES\": true,\n          \"DEPRECATE_NON_STRICT_ID\": true,\n          \"DEPRECATE_COMPUTED_CHAINS\": true,\n          \"DEPRECATE_LEGACY_IMPORTS\": true,\n          \"DEPRECATE_NON_UNIQUE_PAYLOADS\": true,\n          \"DEPRECATE_RELATIONSHIP_REMOTE_UPDATE_CLEARING_LOCAL_STATE\": true,\n          \"DEPRECATE_MANY_ARRAY_DUPLICATES\": true\n        },\n        \"features\": {\n          \"SAMPLE_FEATURE_FLAG\": false\n        },\n        \"includeDataAdapter\": false,\n        \"packages\": {\n          \"HAS_EMBER_DATA_PACKAGE\": false,\n          \"HAS_STORE_PACKAGE\": true,\n          \"HAS_MODEL_PACKAGE\": false,\n          \"HAS_JSON_API_PACKAGE\": false,\n          \"HAS_GRAPH_PACKAGE\": false,\n          \"HAS_REQUEST_PACKAGE\": false,\n          \"HAS_COMPAT_PACKAGE\": true,\n          \"HAS_TRACKING_PACKAGE\": false,\n          \"HAS_ADAPTER_PACKAGE\": true,\n          \"HAS_SERIALIZER_PACKAGE\": false\n        },\n        \"env\": {\n          \"TESTING\": true,\n          \"PRODUCTION\": false,\n          \"DEBUG\": true\n        }\n      },\n      \"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/@ember-data/debug\": {\n        \"compatWith\": null,\n        \"debug\": {\n          \"LOG_PAYLOADS\": false,\n          \"LOG_OPERATIONS\": false,\n          \"LOG_MUTATIONS\": false,\n          \"LOG_NOTIFICATIONS\": false,\n          \"LOG_REQUESTS\": false,\n          \"LOG_REQUEST_STATUS\": false,\n          \"LOG_IDENTIFIERS\": false,\n          \"LOG_GRAPH\": false,\n          \"LOG_INSTANCE_CACHE\": false\n        },\n        \"deprecations\": {\n          \"DEPRECATE_CATCH_ALL\": true,\n          \"DEPRECATE_3_12\": true,\n          \"DEPRECATE_NON_STRICT_TYPES\": true,\n          \"DEPRECATE_NON_STRICT_ID\": true,\n          \"DEPRECATE_COMPUTED_CHAINS\": true,\n          \"DEPRECATE_LEGACY_IMPORTS\": true,\n          \"DEPRECATE_NON_UNIQUE_PAYLOADS\": true,\n          \"DEPRECATE_RELATIONSHIP_REMOTE_UPDATE_CLEARING_LOCAL_STATE\": true,\n          \"DEPRECATE_MANY_ARRAY_DUPLICATES\": true\n        },\n        \"features\": {\n          \"SAMPLE_FEATURE_FLAG\": false\n        },\n        \"includeDataAdapter\": true,\n        \"env\": {\n          \"TESTING\": true,\n          \"PRODUCTION\": false,\n          \"DEBUG\": true\n        },\n        \"includeDataAdapterInProduction\": true\n      },\n      \"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/@ember-data/graph\": {\n        \"compatWith\": null,\n        \"debug\": {\n          \"LOG_PAYLOADS\": false,\n          \"LOG_OPERATIONS\": false,\n          \"LOG_MUTATIONS\": false,\n          \"LOG_NOTIFICATIONS\": false,\n          \"LOG_REQUESTS\": false,\n          \"LOG_REQUEST_STATUS\": false,\n          \"LOG_IDENTIFIERS\": false,\n          \"LOG_GRAPH\": false,\n          \"LOG_INSTANCE_CACHE\": false\n        },\n        \"deprecations\": {\n          \"DEPRECATE_CATCH_ALL\": true,\n          \"DEPRECATE_3_12\": true,\n          \"DEPRECATE_NON_STRICT_TYPES\": true,\n          \"DEPRECATE_NON_STRICT_ID\": true,\n          \"DEPRECATE_COMPUTED_CHAINS\": true,\n          \"DEPRECATE_LEGACY_IMPORTS\": true,\n          \"DEPRECATE_NON_UNIQUE_PAYLOADS\": true,\n          \"DEPRECATE_RELATIONSHIP_REMOTE_UPDATE_CLEARING_LOCAL_STATE\": true,\n          \"DEPRECATE_MANY_ARRAY_DUPLICATES\": true\n        },\n        \"features\": {\n          \"SAMPLE_FEATURE_FLAG\": false\n        },\n        \"includeDataAdapter\": false,\n        \"packages\": {\n          \"HAS_EMBER_DATA_PACKAGE\": false,\n          \"HAS_STORE_PACKAGE\": true,\n          \"HAS_MODEL_PACKAGE\": false,\n          \"HAS_JSON_API_PACKAGE\": false,\n          \"HAS_GRAPH_PACKAGE\": true,\n          \"HAS_REQUEST_PACKAGE\": false,\n          \"HAS_COMPAT_PACKAGE\": false,\n          \"HAS_TRACKING_PACKAGE\": false,\n          \"HAS_ADAPTER_PACKAGE\": false,\n          \"HAS_SERIALIZER_PACKAGE\": false\n        },\n        \"env\": {\n          \"TESTING\": true,\n          \"PRODUCTION\": false,\n          \"DEBUG\": true\n        }\n      },\n      \"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/@ember-data/json-api\": {\n        \"compatWith\": null,\n        \"debug\": {\n          \"LOG_PAYLOADS\": false,\n          \"LOG_OPERATIONS\": false,\n          \"LOG_MUTATIONS\": false,\n          \"LOG_NOTIFICATIONS\": false,\n          \"LOG_REQUESTS\": false,\n          \"LOG_REQUEST_STATUS\": false,\n          \"LOG_IDENTIFIERS\": false,\n          \"LOG_GRAPH\": false,\n          \"LOG_INSTANCE_CACHE\": false\n        },\n        \"deprecations\": {\n          \"DEPRECATE_CATCH_ALL\": true,\n          \"DEPRECATE_3_12\": true,\n          \"DEPRECATE_NON_STRICT_TYPES\": true,\n          \"DEPRECATE_NON_STRICT_ID\": true,\n          \"DEPRECATE_COMPUTED_CHAINS\": true,\n          \"DEPRECATE_LEGACY_IMPORTS\": true,\n          \"DEPRECATE_NON_UNIQUE_PAYLOADS\": true,\n          \"DEPRECATE_RELATIONSHIP_REMOTE_UPDATE_CLEARING_LOCAL_STATE\": true,\n          \"DEPRECATE_MANY_ARRAY_DUPLICATES\": true\n        },\n        \"features\": {\n          \"SAMPLE_FEATURE_FLAG\": false\n        },\n        \"includeDataAdapter\": false,\n        \"packages\": {\n          \"HAS_EMBER_DATA_PACKAGE\": false,\n          \"HAS_STORE_PACKAGE\": true,\n          \"HAS_MODEL_PACKAGE\": false,\n          \"HAS_JSON_API_PACKAGE\": true,\n          \"HAS_GRAPH_PACKAGE\": true,\n          \"HAS_REQUEST_PACKAGE\": false,\n          \"HAS_COMPAT_PACKAGE\": false,\n          \"HAS_TRACKING_PACKAGE\": false,\n          \"HAS_ADAPTER_PACKAGE\": false,\n          \"HAS_SERIALIZER_PACKAGE\": false\n        },\n        \"env\": {\n          \"TESTING\": true,\n          \"PRODUCTION\": false,\n          \"DEBUG\": true\n        }\n      },\n      \"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/@ember-data/legacy-compat\": {\n        \"compatWith\": null,\n        \"debug\": {\n          \"LOG_PAYLOADS\": false,\n          \"LOG_OPERATIONS\": false,\n          \"LOG_MUTATIONS\": false,\n          \"LOG_NOTIFICATIONS\": false,\n          \"LOG_REQUESTS\": false,\n          \"LOG_REQUEST_STATUS\": false,\n          \"LOG_IDENTIFIERS\": false,\n          \"LOG_GRAPH\": false,\n          \"LOG_INSTANCE_CACHE\": false\n        },\n        \"deprecations\": {\n          \"DEPRECATE_CATCH_ALL\": true,\n          \"DEPRECATE_3_12\": true,\n          \"DEPRECATE_NON_STRICT_TYPES\": true,\n          \"DEPRECATE_NON_STRICT_ID\": true,\n          \"DEPRECATE_COMPUTED_CHAINS\": true,\n          \"DEPRECATE_LEGACY_IMPORTS\": true,\n          \"DEPRECATE_NON_UNIQUE_PAYLOADS\": true,\n          \"DEPRECATE_RELATIONSHIP_REMOTE_UPDATE_CLEARING_LOCAL_STATE\": true,\n          \"DEPRECATE_MANY_ARRAY_DUPLICATES\": true\n        },\n        \"features\": {\n          \"SAMPLE_FEATURE_FLAG\": false\n        },\n        \"includeDataAdapter\": false,\n        \"packages\": {\n          \"HAS_EMBER_DATA_PACKAGE\": false,\n          \"HAS_STORE_PACKAGE\": true,\n          \"HAS_MODEL_PACKAGE\": false,\n          \"HAS_JSON_API_PACKAGE\": true,\n          \"HAS_GRAPH_PACKAGE\": true,\n          \"HAS_REQUEST_PACKAGE\": true,\n          \"HAS_COMPAT_PACKAGE\": true,\n          \"HAS_TRACKING_PACKAGE\": false,\n          \"HAS_ADAPTER_PACKAGE\": false,\n          \"HAS_SERIALIZER_PACKAGE\": false\n        },\n        \"env\": {\n          \"TESTING\": true,\n          \"PRODUCTION\": false,\n          \"DEBUG\": true\n        }\n      },\n      \"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/@ember-data/model\": {\n        \"compatWith\": null,\n        \"debug\": {\n          \"LOG_PAYLOADS\": false,\n          \"LOG_OPERATIONS\": false,\n          \"LOG_MUTATIONS\": false,\n          \"LOG_NOTIFICATIONS\": false,\n          \"LOG_REQUESTS\": false,\n          \"LOG_REQUEST_STATUS\": false,\n          \"LOG_IDENTIFIERS\": false,\n          \"LOG_GRAPH\": false,\n          \"LOG_INSTANCE_CACHE\": false\n        },\n        \"deprecations\": {\n          \"DEPRECATE_CATCH_ALL\": true,\n          \"DEPRECATE_3_12\": true,\n          \"DEPRECATE_NON_STRICT_TYPES\": true,\n          \"DEPRECATE_NON_STRICT_ID\": true,\n          \"DEPRECATE_COMPUTED_CHAINS\": true,\n          \"DEPRECATE_LEGACY_IMPORTS\": true,\n          \"DEPRECATE_NON_UNIQUE_PAYLOADS\": true,\n          \"DEPRECATE_RELATIONSHIP_REMOTE_UPDATE_CLEARING_LOCAL_STATE\": true,\n          \"DEPRECATE_MANY_ARRAY_DUPLICATES\": true\n        },\n        \"features\": {\n          \"SAMPLE_FEATURE_FLAG\": false\n        },\n        \"includeDataAdapter\": true,\n        \"packages\": {\n          \"HAS_EMBER_DATA_PACKAGE\": false,\n          \"HAS_STORE_PACKAGE\": true,\n          \"HAS_MODEL_PACKAGE\": true,\n          \"HAS_JSON_API_PACKAGE\": true,\n          \"HAS_GRAPH_PACKAGE\": true,\n          \"HAS_REQUEST_PACKAGE\": false,\n          \"HAS_COMPAT_PACKAGE\": true,\n          \"HAS_TRACKING_PACKAGE\": true,\n          \"HAS_ADAPTER_PACKAGE\": false,\n          \"HAS_SERIALIZER_PACKAGE\": false\n        },\n        \"env\": {\n          \"TESTING\": true,\n          \"PRODUCTION\": false,\n          \"DEBUG\": true\n        }\n      },\n      \"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/@ember-data/request\": {\n        \"compatWith\": null,\n        \"debug\": {\n          \"LOG_PAYLOADS\": false,\n          \"LOG_OPERATIONS\": false,\n          \"LOG_MUTATIONS\": false,\n          \"LOG_NOTIFICATIONS\": false,\n          \"LOG_REQUESTS\": false,\n          \"LOG_REQUEST_STATUS\": false,\n          \"LOG_IDENTIFIERS\": false,\n          \"LOG_GRAPH\": false,\n          \"LOG_INSTANCE_CACHE\": false\n        },\n        \"deprecations\": {\n          \"DEPRECATE_CATCH_ALL\": true,\n          \"DEPRECATE_3_12\": true,\n          \"DEPRECATE_NON_STRICT_TYPES\": true,\n          \"DEPRECATE_NON_STRICT_ID\": true,\n          \"DEPRECATE_COMPUTED_CHAINS\": true,\n          \"DEPRECATE_LEGACY_IMPORTS\": true,\n          \"DEPRECATE_NON_UNIQUE_PAYLOADS\": true,\n          \"DEPRECATE_RELATIONSHIP_REMOTE_UPDATE_CLEARING_LOCAL_STATE\": true,\n          \"DEPRECATE_MANY_ARRAY_DUPLICATES\": true\n        },\n        \"features\": {\n          \"SAMPLE_FEATURE_FLAG\": false\n        },\n        \"includeDataAdapter\": false,\n        \"packages\": {\n          \"HAS_EMBER_DATA_PACKAGE\": false,\n          \"HAS_STORE_PACKAGE\": false,\n          \"HAS_MODEL_PACKAGE\": false,\n          \"HAS_JSON_API_PACKAGE\": false,\n          \"HAS_GRAPH_PACKAGE\": false,\n          \"HAS_REQUEST_PACKAGE\": true,\n          \"HAS_COMPAT_PACKAGE\": false,\n          \"HAS_TRACKING_PACKAGE\": false,\n          \"HAS_ADAPTER_PACKAGE\": false,\n          \"HAS_SERIALIZER_PACKAGE\": false\n        },\n        \"env\": {\n          \"TESTING\": true,\n          \"PRODUCTION\": false,\n          \"DEBUG\": true\n        }\n      },\n      \"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/@ember-data/serializer\": {\n        \"compatWith\": null,\n        \"debug\": {\n          \"LOG_PAYLOADS\": false,\n          \"LOG_OPERATIONS\": false,\n          \"LOG_MUTATIONS\": false,\n          \"LOG_NOTIFICATIONS\": false,\n          \"LOG_REQUESTS\": false,\n          \"LOG_REQUEST_STATUS\": false,\n          \"LOG_IDENTIFIERS\": false,\n          \"LOG_GRAPH\": false,\n          \"LOG_INSTANCE_CACHE\": false\n        },\n        \"deprecations\": {\n          \"DEPRECATE_CATCH_ALL\": true,\n          \"DEPRECATE_3_12\": true,\n          \"DEPRECATE_NON_STRICT_TYPES\": true,\n          \"DEPRECATE_NON_STRICT_ID\": true,\n          \"DEPRECATE_COMPUTED_CHAINS\": true,\n          \"DEPRECATE_LEGACY_IMPORTS\": true,\n          \"DEPRECATE_NON_UNIQUE_PAYLOADS\": true,\n          \"DEPRECATE_RELATIONSHIP_REMOTE_UPDATE_CLEARING_LOCAL_STATE\": true,\n          \"DEPRECATE_MANY_ARRAY_DUPLICATES\": true\n        },\n        \"features\": {\n          \"SAMPLE_FEATURE_FLAG\": false\n        },\n        \"includeDataAdapter\": false,\n        \"packages\": {\n          \"HAS_EMBER_DATA_PACKAGE\": false,\n          \"HAS_STORE_PACKAGE\": false,\n          \"HAS_MODEL_PACKAGE\": false,\n          \"HAS_JSON_API_PACKAGE\": false,\n          \"HAS_GRAPH_PACKAGE\": false,\n          \"HAS_REQUEST_PACKAGE\": false,\n          \"HAS_COMPAT_PACKAGE\": false,\n          \"HAS_TRACKING_PACKAGE\": false,\n          \"HAS_ADAPTER_PACKAGE\": false,\n          \"HAS_SERIALIZER_PACKAGE\": true\n        },\n        \"env\": {\n          \"TESTING\": true,\n          \"PRODUCTION\": false,\n          \"DEBUG\": true\n        }\n      },\n      \"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/@ember-data/store\": {\n        \"compatWith\": null,\n        \"debug\": {\n          \"LOG_PAYLOADS\": false,\n          \"LOG_OPERATIONS\": false,\n          \"LOG_MUTATIONS\": false,\n          \"LOG_NOTIFICATIONS\": false,\n          \"LOG_REQUESTS\": false,\n          \"LOG_REQUEST_STATUS\": false,\n          \"LOG_IDENTIFIERS\": false,\n          \"LOG_GRAPH\": false,\n          \"LOG_INSTANCE_CACHE\": false\n        },\n        \"deprecations\": {\n          \"DEPRECATE_CATCH_ALL\": true,\n          \"DEPRECATE_3_12\": true,\n          \"DEPRECATE_NON_STRICT_TYPES\": true,\n          \"DEPRECATE_NON_STRICT_ID\": true,\n          \"DEPRECATE_COMPUTED_CHAINS\": true,\n          \"DEPRECATE_LEGACY_IMPORTS\": true,\n          \"DEPRECATE_NON_UNIQUE_PAYLOADS\": true,\n          \"DEPRECATE_RELATIONSHIP_REMOTE_UPDATE_CLEARING_LOCAL_STATE\": true,\n          \"DEPRECATE_MANY_ARRAY_DUPLICATES\": true\n        },\n        \"features\": {\n          \"SAMPLE_FEATURE_FLAG\": false\n        },\n        \"includeDataAdapter\": false,\n        \"packages\": {\n          \"HAS_EMBER_DATA_PACKAGE\": false,\n          \"HAS_STORE_PACKAGE\": true,\n          \"HAS_MODEL_PACKAGE\": false,\n          \"HAS_JSON_API_PACKAGE\": false,\n          \"HAS_GRAPH_PACKAGE\": false,\n          \"HAS_REQUEST_PACKAGE\": true,\n          \"HAS_COMPAT_PACKAGE\": false,\n          \"HAS_TRACKING_PACKAGE\": true,\n          \"HAS_ADAPTER_PACKAGE\": false,\n          \"HAS_SERIALIZER_PACKAGE\": false\n        },\n        \"env\": {\n          \"TESTING\": true,\n          \"PRODUCTION\": false,\n          \"DEBUG\": true\n        }\n      },\n      \"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/@ember-data/tracking\": {\n        \"compatWith\": null,\n        \"debug\": {\n          \"LOG_PAYLOADS\": false,\n          \"LOG_OPERATIONS\": false,\n          \"LOG_MUTATIONS\": false,\n          \"LOG_NOTIFICATIONS\": false,\n          \"LOG_REQUESTS\": false,\n          \"LOG_REQUEST_STATUS\": false,\n          \"LOG_IDENTIFIERS\": false,\n          \"LOG_GRAPH\": false,\n          \"LOG_INSTANCE_CACHE\": false\n        },\n        \"deprecations\": {\n          \"DEPRECATE_CATCH_ALL\": true,\n          \"DEPRECATE_3_12\": true,\n          \"DEPRECATE_NON_STRICT_TYPES\": true,\n          \"DEPRECATE_NON_STRICT_ID\": true,\n          \"DEPRECATE_COMPUTED_CHAINS\": true,\n          \"DEPRECATE_LEGACY_IMPORTS\": true,\n          \"DEPRECATE_NON_UNIQUE_PAYLOADS\": true,\n          \"DEPRECATE_RELATIONSHIP_REMOTE_UPDATE_CLEARING_LOCAL_STATE\": true,\n          \"DEPRECATE_MANY_ARRAY_DUPLICATES\": true\n        },\n        \"features\": {\n          \"SAMPLE_FEATURE_FLAG\": false\n        },\n        \"includeDataAdapter\": false,\n        \"packages\": {\n          \"HAS_EMBER_DATA_PACKAGE\": false,\n          \"HAS_STORE_PACKAGE\": false,\n          \"HAS_MODEL_PACKAGE\": false,\n          \"HAS_JSON_API_PACKAGE\": false,\n          \"HAS_GRAPH_PACKAGE\": false,\n          \"HAS_REQUEST_PACKAGE\": false,\n          \"HAS_COMPAT_PACKAGE\": false,\n          \"HAS_TRACKING_PACKAGE\": true,\n          \"HAS_ADAPTER_PACKAGE\": false,\n          \"HAS_SERIALIZER_PACKAGE\": false\n        },\n        \"env\": {\n          \"TESTING\": true,\n          \"PRODUCTION\": false,\n          \"DEBUG\": true\n        }\n      },\n      \"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/ember-data\": {\n        \"compatWith\": null,\n        \"debug\": {\n          \"LOG_PAYLOADS\": false,\n          \"LOG_OPERATIONS\": false,\n          \"LOG_MUTATIONS\": false,\n          \"LOG_NOTIFICATIONS\": false,\n          \"LOG_REQUESTS\": false,\n          \"LOG_REQUEST_STATUS\": false,\n          \"LOG_IDENTIFIERS\": false,\n          \"LOG_GRAPH\": false,\n          \"LOG_INSTANCE_CACHE\": false\n        },\n        \"deprecations\": {\n          \"DEPRECATE_CATCH_ALL\": true,\n          \"DEPRECATE_3_12\": true,\n          \"DEPRECATE_NON_STRICT_TYPES\": true,\n          \"DEPRECATE_NON_STRICT_ID\": true,\n          \"DEPRECATE_COMPUTED_CHAINS\": true,\n          \"DEPRECATE_LEGACY_IMPORTS\": true,\n          \"DEPRECATE_NON_UNIQUE_PAYLOADS\": true,\n          \"DEPRECATE_RELATIONSHIP_REMOTE_UPDATE_CLEARING_LOCAL_STATE\": true,\n          \"DEPRECATE_MANY_ARRAY_DUPLICATES\": true\n        },\n        \"features\": {\n          \"SAMPLE_FEATURE_FLAG\": false\n        },\n        \"includeDataAdapter\": true,\n        \"env\": {\n          \"TESTING\": true,\n          \"PRODUCTION\": false,\n          \"DEBUG\": true\n        }\n      }\n    },\n    \"global\": {\n      \"@embroider/macros\": {\n        \"isTesting\": false\n      },\n      \"@embroider/core\": {\n        \"active\": true\n      }\n    }\n  };\n}\nfunction updaterMethods() {\n  return {\n    config,\n    getGlobalConfig,\n    setConfig(packageRoot, value) {\n      runtimeConfig.packages[packageRoot] = value;\n    },\n    setGlobalConfig(key, value) {\n      runtimeConfig.global[key] = value;\n    }\n  };\n}\n\n// this is how runtime config can get injected at boot. I'm not sure yet if this\n// should be public API, but we certainly need it internally to set things like\n// the global fastboot.isRunning.\n//\n// consumers of this API push a function onto\n// window._embroider_macros_runtime_config. The function is given four methods\n// which allow it to read and write the per-package and global configs. The\n// reason for allowing both read & write is that merging strategies are up to\n// each consumers -- read first, then merge, then write.\n//\n// For an example user of this API, see where we generate\n// embroider_macros_fastboot_init.js' in @embroider/core.\nlet updaters = typeof window !== 'undefined' ? window._embroider_macros_runtime_config : undefined;\nif (updaters) {\n  let methods = updaterMethods();\n  for (let updater of updaters) {\n    updater(methods);\n  }\n}\n\n//# sourceURL=webpack://my-app/../../@embroider/macros/src/addon/runtime.js?");

/***/ }),

/***/ "../../@mswjs/cookies/lib/index.js":
/*!*****************************************!*\
  !*** ../../@mswjs/cookies/lib/index.js ***!
  \*****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __exportStar = this && this.__exportStar || function (m, exports) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\n__exportStar(__webpack_require__(/*! ./store */ \"../../@mswjs/cookies/lib/store.js\"), exports);\n\n//# sourceURL=webpack://my-app/../../@mswjs/cookies/lib/index.js?");

/***/ }),

/***/ "../../@mswjs/cookies/lib/store.js":
/*!*****************************************!*\
  !*** ../../@mswjs/cookies/lib/store.js ***!
  \*****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.store = exports.PERSISTENCY_KEY = void 0;\nconst set_cookie_parser_1 = __webpack_require__(/*! set-cookie-parser */ \"../../set-cookie-parser/lib/set-cookie.js\");\nexports.PERSISTENCY_KEY = 'MSW_COOKIE_STORE';\nfunction supportsLocalStorage() {\n  try {\n    if (localStorage == null) {\n      return false;\n    }\n    const testKey = exports.PERSISTENCY_KEY + '_test';\n    localStorage.setItem(testKey, 'test');\n    localStorage.getItem(testKey);\n    localStorage.removeItem(testKey);\n    return true;\n  } catch (error) {\n    return false;\n  }\n}\nclass CookieStore {\n  constructor() {\n    this.store = new Map();\n  }\n  /**\n   * Sets the given request cookies into the store.\n   * Respects the `request.credentials` policy.\n   */\n  add(request, response) {\n    if (request.credentials === 'omit') {\n      return;\n    }\n    const requestUrl = new URL(request.url);\n    const responseCookies = response.headers.get('set-cookie');\n    if (!responseCookies) {\n      return;\n    }\n    const now = Date.now();\n    const parsedResponseCookies = set_cookie_parser_1.parse(responseCookies).map(_a => {\n      var {\n          maxAge\n        } = _a,\n        cookie = __rest(_a, [\"maxAge\"]);\n      return Object.assign(Object.assign({}, cookie), {\n        expires: maxAge === undefined ? cookie.expires : new Date(now + maxAge * 1000),\n        maxAge\n      });\n    });\n    const prevCookies = this.store.get(requestUrl.origin) || new Map();\n    parsedResponseCookies.forEach(cookie => {\n      this.store.set(requestUrl.origin, prevCookies.set(cookie.name, cookie));\n    });\n  }\n  /**\n   * Returns cookies relevant to the given request\n   * and its `request.credentials` policy.\n   */\n  get(request) {\n    this.deleteExpiredCookies();\n    const requestUrl = new URL(request.url);\n    const originCookies = this.store.get(requestUrl.origin) || new Map();\n    switch (request.credentials) {\n      case 'include':\n        {\n          // Support running this method in Node.js.\n          if (typeof document === 'undefined') {\n            return originCookies;\n          }\n          const documentCookies = set_cookie_parser_1.parse(document.cookie);\n          documentCookies.forEach(cookie => {\n            originCookies.set(cookie.name, cookie);\n          });\n          return originCookies;\n        }\n      case 'same-origin':\n        {\n          return originCookies;\n        }\n      default:\n        return new Map();\n    }\n  }\n  /**\n   * Returns a collection of all stored cookies.\n   */\n  getAll() {\n    this.deleteExpiredCookies();\n    return this.store;\n  }\n  /**\n   * Deletes all cookies associated with the given request.\n   */\n  deleteAll(request) {\n    const requestUrl = new URL(request.url);\n    this.store.delete(requestUrl.origin);\n  }\n  /**\n   * Clears the entire cookie store.\n   */\n  clear() {\n    this.store.clear();\n  }\n  /**\n   * Hydrates the virtual cookie store from the `localStorage` if defined.\n   */\n  hydrate() {\n    if (!supportsLocalStorage()) {\n      return;\n    }\n    const persistedCookies = localStorage.getItem(exports.PERSISTENCY_KEY);\n    if (!persistedCookies) {\n      return;\n    }\n    try {\n      const parsedCookies = JSON.parse(persistedCookies);\n      parsedCookies.forEach(([origin, cookies]) => {\n        this.store.set(origin, new Map(cookies.map(_a => {\n          var [token, _b] = _a,\n            {\n              expires\n            } = _b,\n            cookie = __rest(_b, [\"expires\"]);\n          return [token, expires === undefined ? cookie : Object.assign(Object.assign({}, cookie), {\n            expires: new Date(expires)\n          })];\n        })));\n      });\n    } catch (error) {\n      console.warn(`\n[virtual-cookie] Failed to parse a stored cookie from the localStorage (key \"${exports.PERSISTENCY_KEY}\").\n\nStored value:\n${localStorage.getItem(exports.PERSISTENCY_KEY)}\n\nThrown exception:\n${error}\n\nInvalid value has been removed from localStorage to prevent subsequent failed parsing attempts.`);\n      localStorage.removeItem(exports.PERSISTENCY_KEY);\n    }\n  }\n  /**\n   * Persists the current virtual cookies into the `localStorage` if defined,\n   * so they are available on the next page load.\n   */\n  persist() {\n    if (!supportsLocalStorage()) {\n      return;\n    }\n    const serializedCookies = Array.from(this.store.entries()).map(([origin, cookies]) => {\n      return [origin, Array.from(cookies.entries())];\n    });\n    localStorage.setItem(exports.PERSISTENCY_KEY, JSON.stringify(serializedCookies));\n  }\n  deleteExpiredCookies() {\n    const now = Date.now();\n    this.store.forEach((originCookies, origin) => {\n      originCookies.forEach(({\n        expires,\n        name\n      }) => {\n        if (expires !== undefined && expires.getTime() <= now) {\n          originCookies.delete(name);\n        }\n      });\n      if (originCookies.size === 0) {\n        this.store.delete(origin);\n      }\n    });\n  }\n}\nexports.store = new CookieStore();\n\n//# sourceURL=webpack://my-app/../../@mswjs/cookies/lib/store.js?");

/***/ }),

/***/ "../../@mswjs/interceptors/lib/BatchInterceptor.js":
/*!*********************************************************!*\
  !*** ../../@mswjs/interceptors/lib/BatchInterceptor.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n    m = s && o[s],\n    i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.BatchInterceptor = void 0;\nvar Interceptor_1 = __webpack_require__(/*! ./Interceptor */ \"../../@mswjs/interceptors/lib/Interceptor.js\");\n/**\n * A batch interceptor that exposes a single interface\n * to apply and operate with multiple interceptors at once.\n */\nvar BatchInterceptor = /** @class */function (_super) {\n  __extends(BatchInterceptor, _super);\n  function BatchInterceptor(options) {\n    var _this = this;\n    BatchInterceptor.symbol = Symbol(options.name);\n    _this = _super.call(this, BatchInterceptor.symbol) || this;\n    _this.interceptors = options.interceptors;\n    return _this;\n  }\n  BatchInterceptor.prototype.setup = function () {\n    var e_1, _a;\n    var log = this.log.extend('setup');\n    log('applying all %d interceptors...', this.interceptors.length);\n    var _loop_1 = function (interceptor) {\n      log('applying \"%s\" interceptor...', interceptor.constructor.name);\n      interceptor.apply();\n      log('adding interceptor dispose subscription');\n      this_1.subscriptions.push(function () {\n        return interceptor.dispose();\n      });\n    };\n    var this_1 = this;\n    try {\n      for (var _b = __values(this.interceptors), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var interceptor = _c.value;\n        _loop_1(interceptor);\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n  BatchInterceptor.prototype.on = function (event, listener) {\n    // Instead of adding a listener to the batch interceptor,\n    // propagate the listener to each of the individual interceptors.\n    this.interceptors.forEach(function (interceptor) {\n      interceptor.on(event, listener);\n    });\n  };\n  return BatchInterceptor;\n}(Interceptor_1.Interceptor);\nexports.BatchInterceptor = BatchInterceptor;\n\n//# sourceURL=webpack://my-app/../../@mswjs/interceptors/lib/BatchInterceptor.js?");

/***/ }),

/***/ "../../@mswjs/interceptors/lib/InteractiveIsomorphicRequest.js":
/*!*********************************************************************!*\
  !*** ../../@mswjs/interceptors/lib/InteractiveIsomorphicRequest.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.InteractiveIsomorphicRequest = void 0;\nvar outvariant_1 = __webpack_require__(/*! outvariant */ \"../../outvariant/lib/index.js\");\nvar IsomorphicRequest_1 = __webpack_require__(/*! ./IsomorphicRequest */ \"../../@mswjs/interceptors/lib/IsomorphicRequest.js\");\nvar createLazyCallback_1 = __webpack_require__(/*! ./utils/createLazyCallback */ \"../../@mswjs/interceptors/lib/utils/createLazyCallback.js\");\nvar InteractiveIsomorphicRequest = /** @class */function (_super) {\n  __extends(InteractiveIsomorphicRequest, _super);\n  function InteractiveIsomorphicRequest(request) {\n    var _this = _super.call(this, request) || this;\n    _this.respondWith = createLazyCallback_1.createLazyCallback({\n      maxCalls: 1,\n      maxCallsCallback: function () {\n        outvariant_1.invariant(false, 'Failed to respond to \"%s %s\" request: the \"request\" event has already been responded to.', _this.method, _this.url.href);\n      }\n    });\n    return _this;\n  }\n  return InteractiveIsomorphicRequest;\n}(IsomorphicRequest_1.IsomorphicRequest);\nexports.InteractiveIsomorphicRequest = InteractiveIsomorphicRequest;\n\n//# sourceURL=webpack://my-app/../../@mswjs/interceptors/lib/InteractiveIsomorphicRequest.js?");

/***/ }),

/***/ "../../@mswjs/interceptors/lib/Interceptor.js":
/*!****************************************************!*\
  !*** ../../@mswjs/interceptors/lib/Interceptor.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n    m = s && o[s],\n    i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.Interceptor = exports.InterceptorReadyState = exports.deleteGlobalSymbol = exports.getGlobalSymbol = void 0;\nvar debug_1 = __webpack_require__(/*! debug */ \"../../debug/src/browser.js\");\nvar AsyncEventEmitter_1 = __webpack_require__(/*! ./utils/AsyncEventEmitter */ \"../../@mswjs/interceptors/lib/utils/AsyncEventEmitter.js\");\nvar nextTick_1 = __webpack_require__(/*! ./utils/nextTick */ \"../../@mswjs/interceptors/lib/utils/nextTick.js\");\nfunction getGlobalSymbol(symbol) {\n  return (\n    // @ts-ignore https://github.com/Microsoft/TypeScript/issues/24587\n    globalThis[symbol] || undefined\n  );\n}\nexports.getGlobalSymbol = getGlobalSymbol;\nfunction setGlobalSymbol(symbol, value) {\n  // @ts-ignore\n  globalThis[symbol] = value;\n}\nfunction deleteGlobalSymbol(symbol) {\n  // @ts-ignore\n  delete globalThis[symbol];\n}\nexports.deleteGlobalSymbol = deleteGlobalSymbol;\nvar InterceptorReadyState;\n(function (InterceptorReadyState) {\n  InterceptorReadyState[\"IDLE\"] = \"IDLE\";\n  InterceptorReadyState[\"APPLYING\"] = \"APPLYING\";\n  InterceptorReadyState[\"APPLIED\"] = \"APPLIED\";\n  InterceptorReadyState[\"DISPOSING\"] = \"DISPOSING\";\n  InterceptorReadyState[\"DISPOSED\"] = \"DISPOSED\";\n})(InterceptorReadyState = exports.InterceptorReadyState || (exports.InterceptorReadyState = {}));\nvar Interceptor = /** @class */function () {\n  function Interceptor(symbol) {\n    this.symbol = symbol;\n    this.readyState = InterceptorReadyState.IDLE;\n    this.emitter = new AsyncEventEmitter_1.AsyncEventEmitter();\n    this.subscriptions = [];\n    this.log = debug_1.debug(symbol.description);\n    // Do not limit the maximum number of listeners\n    // so not to limit the maximum amount of parallel events emitted.\n    this.emitter.setMaxListeners(0);\n    this.log('constructing the interceptor...');\n  }\n  /**\n   * Determine if this interceptor can be applied\n   * in the current environment.\n   */\n  Interceptor.prototype.checkEnvironment = function () {\n    return true;\n  };\n  /**\n   * Apply this interceptor to the current process.\n   * Returns an already running interceptor instance if it's present.\n   */\n  Interceptor.prototype.apply = function () {\n    var _this = this;\n    var log = this.log.extend('apply');\n    log('applying the interceptor...');\n    if (this.readyState === InterceptorReadyState.APPLIED) {\n      log('intercepted already applied!');\n      return;\n    }\n    var shouldApply = this.checkEnvironment();\n    if (!shouldApply) {\n      log('the interceptor cannot be applied in this environment!');\n      return;\n    }\n    this.readyState = InterceptorReadyState.APPLYING;\n    // Always activate the emitter when applying the interceptor.\n    // This will ensure the interceptor can process events after it's\n    // been disposed and re-applied again (it may be a singleton).\n    this.emitter.activate();\n    log('activated the emiter!', this.emitter.readyState);\n    // Whenever applying a new interceptor, check if it hasn't been applied already.\n    // This enables to apply the same interceptor multiple times, for example from a different\n    // interceptor, only proxying events but keeping the stubs in a single place.\n    var runningInstance = this.getInstance();\n    if (runningInstance) {\n      log('found a running instance, reusing...');\n      // Proxy any listeners you set on this instance to the running instance.\n      this.on = function (event, listener) {\n        log('proxying the \"%s\" listener', event);\n        // Add listeners to the running instance so they appear\n        // at the top of the event listeners list and are executed first.\n        runningInstance.emitter.addListener(event, listener);\n        // Ensure that once this interceptor instance is disposed,\n        // it removes all listeners it has appended to the running interceptor instance.\n        _this.subscriptions.push(function () {\n          runningInstance.emitter.removeListener(event, listener);\n          log('removed proxied \"%s\" listener!', event);\n        });\n      };\n      nextTick_1.nextTick(function () {\n        _this.readyState = InterceptorReadyState.APPLIED;\n      });\n      return;\n    }\n    log('no running instance found, setting up a new instance...');\n    // Setup the interceptor.\n    this.setup();\n    // Store the newly applied interceptor instance globally.\n    this.setInstance();\n    nextTick_1.nextTick(function () {\n      _this.readyState = InterceptorReadyState.APPLIED;\n    });\n  };\n  /**\n   * Setup the module augments and stubs necessary for this interceptor.\n   * This method is not run if there's a running interceptor instance\n   * to prevent instantiating an interceptor multiple times.\n   */\n  Interceptor.prototype.setup = function () {};\n  /**\n   * Listen to the interceptor's public events.\n   */\n  Interceptor.prototype.on = function (event, listener) {\n    var log = this.log.extend('on');\n    if (this.readyState === InterceptorReadyState.DISPOSING || this.readyState === InterceptorReadyState.DISPOSED) {\n      log('cannot listen to events, already disposed!');\n      return;\n    }\n    log('adding \"%s\" event listener:', event, listener.name);\n    this.emitter.on(event, listener);\n  };\n  /**\n   * Disposes of any side-effects this interceptor has introduced.\n   */\n  Interceptor.prototype.dispose = function () {\n    var e_1, _a;\n    var _this = this;\n    var log = this.log.extend('dispose');\n    if (this.readyState === InterceptorReadyState.DISPOSED) {\n      log('cannot dispose, already disposed!');\n      return;\n    }\n    log('disposing the interceptor...');\n    this.readyState = InterceptorReadyState.DISPOSING;\n    if (!this.getInstance()) {\n      log('no interceptors running, skipping dispose...');\n      return;\n    }\n    // Delete the global symbol as soon as possible,\n    // indicating that the interceptor is no longer running.\n    this.clearInstance();\n    log('global symbol deleted:', getGlobalSymbol(this.symbol));\n    if (this.subscriptions.length > 0) {\n      log('disposing of %d subscriptions...', this.subscriptions.length);\n      try {\n        for (var _b = __values(this.subscriptions), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var dispose = _c.value;\n          dispose();\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n      this.subscriptions = [];\n      log('disposed of all subscriptions!', this.subscriptions.length);\n    }\n    this.emitter.deactivate();\n    log('destroyed the listener!');\n    nextTick_1.nextTick(function () {\n      _this.readyState = InterceptorReadyState.DISPOSED;\n    });\n  };\n  Interceptor.prototype.getInstance = function () {\n    var _a;\n    var instance = getGlobalSymbol(this.symbol);\n    this.log('retrieved global instance:', (_a = instance === null || instance === void 0 ? void 0 : instance.constructor) === null || _a === void 0 ? void 0 : _a.name);\n    return instance;\n  };\n  Interceptor.prototype.setInstance = function () {\n    setGlobalSymbol(this.symbol, this);\n    this.log('set global instance!', this.symbol.description);\n  };\n  Interceptor.prototype.clearInstance = function () {\n    deleteGlobalSymbol(this.symbol);\n    this.log('cleared global instance!', this.symbol.description);\n  };\n  return Interceptor;\n}();\nexports.Interceptor = Interceptor;\n\n//# sourceURL=webpack://my-app/../../@mswjs/interceptors/lib/Interceptor.js?");

/***/ }),

/***/ "../../@mswjs/interceptors/lib/IsomorphicRequest.js":
/*!**********************************************************!*\
  !*** ../../@mswjs/interceptors/lib/IsomorphicRequest.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.IsomorphicRequest = void 0;\nvar headers_polyfill_1 = __webpack_require__(/*! headers-polyfill */ \"../../headers-polyfill/lib/index.js\");\nvar outvariant_1 = __webpack_require__(/*! outvariant */ \"../../outvariant/lib/index.js\");\nvar bufferUtils_1 = __webpack_require__(/*! ./utils/bufferUtils */ \"../../@mswjs/interceptors/lib/utils/bufferUtils.js\");\nvar uuid_1 = __webpack_require__(/*! ./utils/uuid */ \"../../@mswjs/interceptors/lib/utils/uuid.js\");\nvar IsomorphicRequest = /** @class */function () {\n  function IsomorphicRequest(input, init) {\n    if (init === void 0) {\n      init = {};\n    }\n    var defaultBody = new ArrayBuffer(0);\n    this._bodyUsed = false;\n    if (input instanceof IsomorphicRequest) {\n      this.id = input.id;\n      this.url = input.url;\n      this.method = input.method;\n      this.headers = input.headers;\n      this.credentials = input.credentials;\n      this._body = input._body || defaultBody;\n      return;\n    }\n    this.id = uuid_1.uuidv4();\n    this.url = input;\n    this.method = init.method || 'GET';\n    this.headers = new headers_polyfill_1.Headers(init.headers);\n    this.credentials = init.credentials || 'same-origin';\n    this._body = init.body || defaultBody;\n  }\n  Object.defineProperty(IsomorphicRequest.prototype, \"bodyUsed\", {\n    get: function () {\n      return this._bodyUsed;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  IsomorphicRequest.prototype.text = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        outvariant_1.invariant(!this.bodyUsed, 'Failed to execute \"text\" on \"IsomorphicRequest\": body buffer already read');\n        this._bodyUsed = true;\n        return [2 /*return*/, bufferUtils_1.decodeBuffer(this._body)];\n      });\n    });\n  };\n  IsomorphicRequest.prototype.json = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var text;\n      return __generator(this, function (_a) {\n        outvariant_1.invariant(!this.bodyUsed, 'Failed to execute \"json\" on \"IsomorphicRequest\": body buffer already read');\n        this._bodyUsed = true;\n        text = bufferUtils_1.decodeBuffer(this._body);\n        return [2 /*return*/, JSON.parse(text)];\n      });\n    });\n  };\n  IsomorphicRequest.prototype.arrayBuffer = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        outvariant_1.invariant(!this.bodyUsed, 'Failed to execute \"arrayBuffer\" on \"IsomorphicRequest\": body buffer already read');\n        this._bodyUsed = true;\n        return [2 /*return*/, this._body];\n      });\n    });\n  };\n  IsomorphicRequest.prototype.clone = function () {\n    return new IsomorphicRequest(this);\n  };\n  return IsomorphicRequest;\n}();\nexports.IsomorphicRequest = IsomorphicRequest;\n\n//# sourceURL=webpack://my-app/../../@mswjs/interceptors/lib/IsomorphicRequest.js?");

/***/ }),

/***/ "../../@mswjs/interceptors/lib/glossary.js":
/*!*************************************************!*\
  !*** ../../@mswjs/interceptors/lib/glossary.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.IS_PATCHED_MODULE = void 0;\nexports.IS_PATCHED_MODULE = Symbol('isPatchedModule');\n\n//# sourceURL=webpack://my-app/../../@mswjs/interceptors/lib/glossary.js?");

/***/ }),

/***/ "../../@mswjs/interceptors/lib/index.js":
/*!**********************************************!*\
  !*** ../../@mswjs/interceptors/lib/index.js ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __exportStar = this && this.__exportStar || function (m, exports) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.decodeBuffer = exports.encodeBuffer = exports.getCleanUrl = void 0;\n__exportStar(__webpack_require__(/*! ./glossary */ \"../../@mswjs/interceptors/lib/glossary.js\"), exports);\n__exportStar(__webpack_require__(/*! ./Interceptor */ \"../../@mswjs/interceptors/lib/Interceptor.js\"), exports);\n__exportStar(__webpack_require__(/*! ./BatchInterceptor */ \"../../@mswjs/interceptors/lib/BatchInterceptor.js\"), exports);\n__exportStar(__webpack_require__(/*! ./IsomorphicRequest */ \"../../@mswjs/interceptors/lib/IsomorphicRequest.js\"), exports);\n__exportStar(__webpack_require__(/*! ./InteractiveIsomorphicRequest */ \"../../@mswjs/interceptors/lib/InteractiveIsomorphicRequest.js\"), exports);\n/* Utils */\nvar getCleanUrl_1 = __webpack_require__(/*! ./utils/getCleanUrl */ \"../../@mswjs/interceptors/lib/utils/getCleanUrl.js\");\nObject.defineProperty(exports, \"getCleanUrl\", ({\n  enumerable: true,\n  get: function () {\n    return getCleanUrl_1.getCleanUrl;\n  }\n}));\nvar bufferUtils_1 = __webpack_require__(/*! ./utils/bufferUtils */ \"../../@mswjs/interceptors/lib/utils/bufferUtils.js\");\nObject.defineProperty(exports, \"encodeBuffer\", ({\n  enumerable: true,\n  get: function () {\n    return bufferUtils_1.encodeBuffer;\n  }\n}));\nObject.defineProperty(exports, \"decodeBuffer\", ({\n  enumerable: true,\n  get: function () {\n    return bufferUtils_1.decodeBuffer;\n  }\n}));\n\n//# sourceURL=webpack://my-app/../../@mswjs/interceptors/lib/index.js?");

/***/ }),

/***/ "../../@mswjs/interceptors/lib/interceptors/XMLHttpRequest/XMLHttpRequestOverride.js":
/*!*******************************************************************************************!*\
  !*** ../../@mswjs/interceptors/lib/interceptors/XMLHttpRequest/XMLHttpRequestOverride.js ***!
  \*******************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n    m = s && o[s],\n    i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.createXMLHttpRequestOverride = void 0;\nvar until_1 = __webpack_require__(/*! @open-draft/until */ \"../../@open-draft/until/lib/index.js\");\nvar headers_polyfill_1 = __webpack_require__(/*! headers-polyfill */ \"../../headers-polyfill/lib/index.js\");\nvar xmldom_1 = __webpack_require__(/*! @xmldom/xmldom */ \"../../@xmldom/xmldom/lib/index.js\");\nvar parseJson_1 = __webpack_require__(/*! ../../utils/parseJson */ \"../../@mswjs/interceptors/lib/utils/parseJson.js\");\nvar toIsoResponse_1 = __webpack_require__(/*! ../../utils/toIsoResponse */ \"../../@mswjs/interceptors/lib/utils/toIsoResponse.js\");\nvar bufferFrom_1 = __webpack_require__(/*! ./utils/bufferFrom */ \"../../@mswjs/interceptors/lib/interceptors/XMLHttpRequest/utils/bufferFrom.js\");\nvar createEvent_1 = __webpack_require__(/*! ./utils/createEvent */ \"../../@mswjs/interceptors/lib/interceptors/XMLHttpRequest/utils/createEvent.js\");\nvar IsomorphicRequest_1 = __webpack_require__(/*! ../../IsomorphicRequest */ \"../../@mswjs/interceptors/lib/IsomorphicRequest.js\");\nvar bufferUtils_1 = __webpack_require__(/*! ../../utils/bufferUtils */ \"../../@mswjs/interceptors/lib/utils/bufferUtils.js\");\nvar InteractiveIsomorphicRequest_1 = __webpack_require__(/*! ../../InteractiveIsomorphicRequest */ \"../../@mswjs/interceptors/lib/InteractiveIsomorphicRequest.js\");\nvar createXMLHttpRequestOverride = function (options) {\n  var _a;\n  var XMLHttpRequest = options.XMLHttpRequest,\n    emitter = options.emitter,\n    log = options.log;\n  return _a = /** @class */function () {\n    function XMLHttpRequestOverride() {\n      // Collection of events modified by `addEventListener`/`removeEventListener` calls.\n      this._events = [];\n      this.log = log;\n      this.UNSENT = 0;\n      this.OPENED = 1;\n      this.HEADERS_RECEIVED = 2;\n      this.LOADING = 3;\n      this.DONE = 4;\n      this.onreadystatechange = null;\n      /* Events */\n      this.onabort = null;\n      this.onerror = null;\n      this.onload = null;\n      this.onloadend = null;\n      this.onloadstart = null;\n      this.onprogress = null;\n      this.ontimeout = null;\n      this.url = '';\n      this.method = 'GET';\n      this.readyState = this.UNSENT;\n      this.withCredentials = false;\n      this.status = 200;\n      this.statusText = 'OK';\n      this.response = '';\n      this.responseType = 'text';\n      this.responseText = '';\n      this.responseXML = null;\n      this.responseURL = '';\n      this.upload = {};\n      this.timeout = 0;\n      this._requestHeaders = new headers_polyfill_1.Headers();\n      this._responseHeaders = new headers_polyfill_1.Headers();\n    }\n    XMLHttpRequestOverride.prototype.setReadyState = function (nextState) {\n      if (nextState === this.readyState) {\n        return;\n      }\n      this.log('readyState change %d -> %d', this.readyState, nextState);\n      this.readyState = nextState;\n      if (nextState !== this.UNSENT) {\n        this.log('triggering readystate change...');\n        this.trigger('readystatechange');\n      }\n    };\n    /**\n     * Triggers both direct callback and attached event listeners\n     * for the given event.\n     */\n    XMLHttpRequestOverride.prototype.trigger = function (eventName, options) {\n      var e_1, _a;\n      this.log('trigger \"%s\" (%d)', eventName, this.readyState);\n      this.log('resolve listener for event \"%s\"', eventName);\n      // @ts-expect-error XMLHttpRequest class has no index signature.\n      var callback = this[\"on\" + eventName];\n      callback === null || callback === void 0 ? void 0 : callback.call(this, createEvent_1.createEvent(this, eventName, options));\n      try {\n        for (var _b = __values(this._events), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var event_1 = _c.value;\n          if (event_1.name === eventName) {\n            log('calling mock event listener \"%s\" (%d)', eventName, this.readyState);\n            event_1.listener.call(this, createEvent_1.createEvent(this, eventName, options));\n          }\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n      return this;\n    };\n    XMLHttpRequestOverride.prototype.reset = function () {\n      this.log('reset');\n      this.setReadyState(this.UNSENT);\n      this.status = 200;\n      this.statusText = 'OK';\n      this.response = null;\n      this.responseText = null;\n      this.responseXML = null;\n      this._requestHeaders = new headers_polyfill_1.Headers();\n      this._responseHeaders = new headers_polyfill_1.Headers();\n    };\n    XMLHttpRequestOverride.prototype.open = function (method, url, async, user, password) {\n      if (async === void 0) {\n        async = true;\n      }\n      return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          this.log = this.log.extend(\"request \" + method + \" \" + url);\n          this.log('open', {\n            method: method,\n            url: url,\n            async: async,\n            user: user,\n            password: password\n          });\n          this.reset();\n          this.setReadyState(this.OPENED);\n          if (typeof url === 'undefined') {\n            this.url = method;\n            this.method = 'GET';\n          } else {\n            this.url = url;\n            this.method = method;\n            this.async = async;\n            this.user = user;\n            this.password = password;\n          }\n          return [2 /*return*/];\n        });\n      });\n    };\n    XMLHttpRequestOverride.prototype.send = function (data) {\n      var _this = this;\n      this.log('send %s %s', this.method, this.url);\n      var buffer;\n      if (typeof data === 'string') {\n        buffer = bufferUtils_1.encodeBuffer(data);\n      } else {\n        buffer = data || new ArrayBuffer(0);\n      }\n      var url;\n      try {\n        url = new URL(this.url);\n      } catch (error) {\n        // Assume a relative URL, if construction of a new `URL` instance fails.\n        // Since `XMLHttpRequest` always executed in a DOM-like environment,\n        // resolve the relative request URL against the current window location.\n        url = new URL(this.url, window.location.href);\n      }\n      this.log('request headers', this._requestHeaders);\n      // Create an intercepted request instance exposed to the request intercepting middleware.\n      var isomorphicRequest = new IsomorphicRequest_1.IsomorphicRequest(url, {\n        body: buffer,\n        method: this.method,\n        headers: this._requestHeaders,\n        credentials: this.withCredentials ? 'include' : 'omit'\n      });\n      var interactiveIsomorphicRequest = new InteractiveIsomorphicRequest_1.InteractiveIsomorphicRequest(isomorphicRequest);\n      this.log('emitting the \"request\" event for %d listener(s)...', emitter.listenerCount('request'));\n      emitter.emit('request', interactiveIsomorphicRequest);\n      this.log('awaiting mocked response...');\n      Promise.resolve(until_1.until(function () {\n        return __awaiter(_this, void 0, void 0, function () {\n          var _a, mockedResponse;\n          return __generator(this, function (_b) {\n            switch (_b.label) {\n              case 0:\n                return [4 /*yield*/, emitter.untilIdle('request', function (_a) {\n                  var _b = __read(_a.args, 1),\n                    request = _b[0];\n                  return request.id === interactiveIsomorphicRequest.id;\n                })];\n              case 1:\n                _b.sent();\n                this.log('all request listeners have been resolved!');\n                return [4 /*yield*/, interactiveIsomorphicRequest.respondWith.invoked()];\n              case 2:\n                _a = __read.apply(void 0, [_b.sent(), 1]), mockedResponse = _a[0];\n                this.log('event.respondWith called with:', mockedResponse);\n                return [2 /*return*/, mockedResponse];\n            }\n          });\n        });\n      })).then(function (_a) {\n        var _b, _c;\n        var _d = __read(_a, 2),\n          middlewareException = _d[0],\n          mockedResponse = _d[1];\n        // When the request middleware throws an exception, error the request.\n        // This cancels the request and is similar to a network error.\n        if (middlewareException) {\n          _this.log('middleware function threw an exception!', middlewareException);\n          // No way to propagate the actual error message.\n          _this.trigger('error');\n          _this.abort();\n          return;\n        }\n        // Return a mocked response, if provided in the middleware.\n        if (mockedResponse) {\n          _this.log('received mocked response', mockedResponse);\n          // Trigger a loadstart event to indicate the initialization of the fetch.\n          _this.trigger('loadstart');\n          _this.status = (_b = mockedResponse.status) !== null && _b !== void 0 ? _b : 200;\n          _this.statusText = mockedResponse.statusText || 'OK';\n          _this._responseHeaders = mockedResponse.headers ? headers_polyfill_1.objectToHeaders(mockedResponse.headers) : new headers_polyfill_1.Headers();\n          _this.log('set response status', _this.status, _this.statusText);\n          _this.log('set response headers', _this._responseHeaders);\n          // Mark that response headers has been received\n          // and trigger a ready state event to reflect received headers\n          // in a custom `onreadystatechange` callback.\n          _this.setReadyState(_this.HEADERS_RECEIVED);\n          _this.log('response type', _this.responseType);\n          _this.response = _this.getResponseBody(mockedResponse.body);\n          _this.responseURL = _this.url;\n          _this.responseText = mockedResponse.body || '';\n          _this.responseXML = _this.getResponseXML();\n          _this.log('set response body', _this.response);\n          if (mockedResponse.body && _this.response) {\n            _this.setReadyState(_this.LOADING);\n            // Presence of the mocked response implies a response body (not null).\n            // Presence of the coerced `this.response` implies the mocked body is valid.\n            var bodyBuffer = bufferFrom_1.bufferFrom(mockedResponse.body);\n            // Trigger a progress event based on the mocked response body.\n            _this.trigger('progress', {\n              loaded: bodyBuffer.length,\n              total: bodyBuffer.length\n            });\n          }\n          /**\n           * Explicitly mark the request as done so its response never hangs.\n           * @see https://github.com/mswjs/interceptors/issues/13\n           */\n          _this.setReadyState(_this.DONE);\n          // Trigger a load event to indicate the fetch has succeeded.\n          _this.trigger('load');\n          // Trigger a loadend event to indicate the fetch has completed.\n          _this.trigger('loadend');\n          emitter.emit('response', isomorphicRequest, toIsoResponse_1.toIsoResponse(mockedResponse));\n        } else {\n          _this.log('no mocked response received!');\n          // Perform an original request, when the request middleware returned no mocked response.\n          var originalRequest_1 = new XMLHttpRequest();\n          _this.log('opening an original request %s %s', _this.method, _this.url);\n          originalRequest_1.open(_this.method, _this.url, (_c = _this.async) !== null && _c !== void 0 ? _c : true, _this.user, _this.password);\n          // Reflect a successful state of the original request\n          // on the patched instance.\n          originalRequest_1.addEventListener('load', function () {\n            _this.log('original \"onload\"');\n            _this.status = originalRequest_1.status;\n            _this.statusText = originalRequest_1.statusText;\n            _this.responseURL = originalRequest_1.responseURL;\n            _this.responseType = originalRequest_1.responseType;\n            _this.response = originalRequest_1.response;\n            _this.responseText = originalRequest_1.responseText;\n            _this.responseXML = originalRequest_1.responseXML;\n            _this.log('set mock request readyState to DONE');\n            // Explicitly mark the mocked request instance as done\n            // so the response never hangs.\n            /**\n             * @note `readystatechange` listener is called TWICE\n             * in the case of unhandled request.\n             */\n            _this.setReadyState(_this.DONE);\n            _this.log('received original response', _this.status, _this.statusText);\n            _this.log('original response body:', _this.response);\n            var responseHeaders = originalRequest_1.getAllResponseHeaders();\n            _this.log('original response headers:\\n', responseHeaders);\n            _this._responseHeaders = headers_polyfill_1.stringToHeaders(responseHeaders);\n            _this.log('original response headers (normalized)', _this._responseHeaders);\n            _this.log('original response finished');\n            emitter.emit('response', isomorphicRequest, {\n              status: originalRequest_1.status,\n              statusText: originalRequest_1.statusText,\n              headers: _this._responseHeaders,\n              body: originalRequest_1.response\n            });\n          });\n          // Assign callbacks and event listeners from the intercepted XHR instance\n          // to the original XHR instance.\n          _this.propagateCallbacks(originalRequest_1);\n          _this.propagateListeners(originalRequest_1);\n          _this.propagateHeaders(originalRequest_1, _this._requestHeaders);\n          if (_this.async) {\n            originalRequest_1.timeout = _this.timeout;\n          }\n          _this.log('send', data);\n          originalRequest_1.send(data);\n        }\n      });\n    };\n    XMLHttpRequestOverride.prototype.abort = function () {\n      this.log('abort');\n      if (this.readyState > this.UNSENT && this.readyState < this.DONE) {\n        this.setReadyState(this.UNSENT);\n        this.trigger('abort');\n      }\n    };\n    XMLHttpRequestOverride.prototype.dispatchEvent = function () {\n      return false;\n    };\n    XMLHttpRequestOverride.prototype.setRequestHeader = function (name, value) {\n      this.log('set request header \"%s\" to \"%s\"', name, value);\n      this._requestHeaders.append(name, value);\n    };\n    XMLHttpRequestOverride.prototype.getResponseHeader = function (name) {\n      this.log('get response header \"%s\"', name);\n      if (this.readyState < this.HEADERS_RECEIVED) {\n        this.log('cannot return a header: headers not received (state: %s)', this.readyState);\n        return null;\n      }\n      var headerValue = this._responseHeaders.get(name);\n      this.log('resolved response header \"%s\" to \"%s\"', name, headerValue, this._responseHeaders);\n      return headerValue;\n    };\n    XMLHttpRequestOverride.prototype.getAllResponseHeaders = function () {\n      this.log('get all response headers');\n      if (this.readyState < this.HEADERS_RECEIVED) {\n        this.log('cannot return headers: headers not received (state: %s)', this.readyState);\n        return '';\n      }\n      return headers_polyfill_1.headersToString(this._responseHeaders);\n    };\n    XMLHttpRequestOverride.prototype.addEventListener = function (name, listener) {\n      this.log('addEventListener', name, listener);\n      this._events.push({\n        name: name,\n        listener: listener\n      });\n    };\n    XMLHttpRequestOverride.prototype.removeEventListener = function (name, listener) {\n      this.log('removeEventListener', name, listener);\n      this._events = this._events.filter(function (storedEvent) {\n        return storedEvent.name !== name && storedEvent.listener !== listener;\n      });\n    };\n    XMLHttpRequestOverride.prototype.overrideMimeType = function () {};\n    /**\n     * Resolves the response based on the `responseType` value.\n     */\n    XMLHttpRequestOverride.prototype.getResponseBody = function (body) {\n      // Handle an improperly set \"null\" value of the mocked response body.\n      var textBody = body !== null && body !== void 0 ? body : '';\n      this.log('coerced response body to', textBody);\n      switch (this.responseType) {\n        case 'json':\n          {\n            this.log('resolving response body as JSON');\n            return parseJson_1.parseJson(textBody);\n          }\n        case 'blob':\n          {\n            var blobType = this.getResponseHeader('content-type') || 'text/plain';\n            this.log('resolving response body as Blob', {\n              type: blobType\n            });\n            return new Blob([textBody], {\n              type: blobType\n            });\n          }\n        case 'arraybuffer':\n          {\n            this.log('resolving response body as ArrayBuffer');\n            var arrayBuffer = bufferFrom_1.bufferFrom(textBody);\n            return arrayBuffer;\n          }\n        default:\n          return textBody;\n      }\n    };\n    XMLHttpRequestOverride.prototype.getResponseXML = function () {\n      var contentType = this.getResponseHeader('Content-Type');\n      if (contentType === 'application/xml' || contentType === 'text/xml') {\n        return new xmldom_1.DOMParser().parseFromString(this.responseText, contentType);\n      }\n      return null;\n    };\n    /**\n     * Propagates mock XMLHttpRequest instance callbacks\n     * to the given XMLHttpRequest instance.\n     */\n    XMLHttpRequestOverride.prototype.propagateCallbacks = function (request) {\n      var e_2, _a;\n      this.log('propagating request callbacks to the original request');\n      var callbackNames = ['abort', 'onerror', 'ontimeout', 'onload', 'onloadstart', 'onloadend', 'onprogress', 'onreadystatechange'];\n      try {\n        for (var callbackNames_1 = __values(callbackNames), callbackNames_1_1 = callbackNames_1.next(); !callbackNames_1_1.done; callbackNames_1_1 = callbackNames_1.next()) {\n          var callbackName = callbackNames_1_1.value;\n          var callback = this[callbackName];\n          if (callback) {\n            request[callbackName] = this[callbackName];\n            this.log('propagated the \"%s\" callback', callbackName, callback);\n          }\n        }\n      } catch (e_2_1) {\n        e_2 = {\n          error: e_2_1\n        };\n      } finally {\n        try {\n          if (callbackNames_1_1 && !callbackNames_1_1.done && (_a = callbackNames_1.return)) _a.call(callbackNames_1);\n        } finally {\n          if (e_2) throw e_2.error;\n        }\n      }\n      request.onabort = this.abort;\n      request.onerror = this.onerror;\n      request.ontimeout = this.ontimeout;\n      request.onload = this.onload;\n      request.onloadstart = this.onloadstart;\n      request.onloadend = this.onloadend;\n      request.onprogress = this.onprogress;\n      request.onreadystatechange = this.onreadystatechange;\n    };\n    /**\n     * Propagates the mock XMLHttpRequest instance listeners\n     * to the given XMLHttpRequest instance.\n     */\n    XMLHttpRequestOverride.prototype.propagateListeners = function (request) {\n      this.log('propagating request listeners (%d) to the original request', this._events.length, this._events);\n      this._events.forEach(function (_a) {\n        var name = _a.name,\n          listener = _a.listener;\n        request.addEventListener(name, listener);\n      });\n    };\n    XMLHttpRequestOverride.prototype.propagateHeaders = function (request, headers) {\n      var _this = this;\n      this.log('propagating request headers to the original request', headers);\n      // Preserve the request headers casing.\n      Object.entries(headers.raw()).forEach(function (_a) {\n        var _b = __read(_a, 2),\n          name = _b[0],\n          value = _b[1];\n        _this.log('setting \"%s\" (%s) header on the original request', name, value);\n        request.setRequestHeader(name, value);\n      });\n    };\n    return XMLHttpRequestOverride;\n  }(), /* Request state */\n  _a.UNSENT = 0, _a.OPENED = 1, _a.HEADERS_RECEIVED = 2, _a.LOADING = 3, _a.DONE = 4, _a;\n};\nexports.createXMLHttpRequestOverride = createXMLHttpRequestOverride;\n\n//# sourceURL=webpack://my-app/../../@mswjs/interceptors/lib/interceptors/XMLHttpRequest/XMLHttpRequestOverride.js?");

/***/ }),

/***/ "../../@mswjs/interceptors/lib/interceptors/XMLHttpRequest/index.js":
/*!**************************************************************************!*\
  !*** ../../@mswjs/interceptors/lib/interceptors/XMLHttpRequest/index.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.XMLHttpRequestInterceptor = void 0;\nvar outvariant_1 = __webpack_require__(/*! outvariant */ \"../../outvariant/lib/index.js\");\nvar glossary_1 = __webpack_require__(/*! ../../glossary */ \"../../@mswjs/interceptors/lib/glossary.js\");\nvar Interceptor_1 = __webpack_require__(/*! ../../Interceptor */ \"../../@mswjs/interceptors/lib/Interceptor.js\");\nvar XMLHttpRequestOverride_1 = __webpack_require__(/*! ./XMLHttpRequestOverride */ \"../../@mswjs/interceptors/lib/interceptors/XMLHttpRequest/XMLHttpRequestOverride.js\");\nvar XMLHttpRequestInterceptor = /** @class */function (_super) {\n  __extends(XMLHttpRequestInterceptor, _super);\n  function XMLHttpRequestInterceptor() {\n    return _super.call(this, XMLHttpRequestInterceptor.symbol) || this;\n  }\n  XMLHttpRequestInterceptor.prototype.checkEnvironment = function () {\n    return typeof window !== 'undefined' && typeof window.XMLHttpRequest !== 'undefined';\n  };\n  XMLHttpRequestInterceptor.prototype.setup = function () {\n    var log = this.log.extend('setup');\n    log('patching \"XMLHttpRequest\" module...');\n    var PureXMLHttpRequest = window.XMLHttpRequest;\n    outvariant_1.invariant(!PureXMLHttpRequest[glossary_1.IS_PATCHED_MODULE], 'Failed to patch the \"XMLHttpRequest\" module: already patched.');\n    window.XMLHttpRequest = XMLHttpRequestOverride_1.createXMLHttpRequestOverride({\n      XMLHttpRequest: PureXMLHttpRequest,\n      emitter: this.emitter,\n      log: this.log\n    });\n    log('native \"XMLHttpRequest\" module patched!', window.XMLHttpRequest.name);\n    Object.defineProperty(window.XMLHttpRequest, glossary_1.IS_PATCHED_MODULE, {\n      enumerable: true,\n      configurable: true,\n      value: true\n    });\n    this.subscriptions.push(function () {\n      Object.defineProperty(window.XMLHttpRequest, glossary_1.IS_PATCHED_MODULE, {\n        value: undefined\n      });\n      window.XMLHttpRequest = PureXMLHttpRequest;\n      log('native \"XMLHttpRequest\" module restored!', window.XMLHttpRequest.name);\n    });\n  };\n  XMLHttpRequestInterceptor.symbol = Symbol('xhr');\n  return XMLHttpRequestInterceptor;\n}(Interceptor_1.Interceptor);\nexports.XMLHttpRequestInterceptor = XMLHttpRequestInterceptor;\n\n//# sourceURL=webpack://my-app/../../@mswjs/interceptors/lib/interceptors/XMLHttpRequest/index.js?");

/***/ }),

/***/ "../../@mswjs/interceptors/lib/interceptors/XMLHttpRequest/polyfills/EventPolyfill.js":
/*!********************************************************************************************!*\
  !*** ../../@mswjs/interceptors/lib/interceptors/XMLHttpRequest/polyfills/EventPolyfill.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.EventPolyfill = void 0;\nvar EventPolyfill = /** @class */function () {\n  function EventPolyfill(type, options) {\n    this.AT_TARGET = 0;\n    this.BUBBLING_PHASE = 0;\n    this.CAPTURING_PHASE = 0;\n    this.NONE = 0;\n    this.type = '';\n    this.srcElement = null;\n    this.currentTarget = null;\n    this.eventPhase = 0;\n    this.isTrusted = true;\n    this.composed = false;\n    this.cancelable = true;\n    this.defaultPrevented = false;\n    this.bubbles = true;\n    this.lengthComputable = true;\n    this.loaded = 0;\n    this.total = 0;\n    this.cancelBubble = false;\n    this.returnValue = true;\n    this.type = type;\n    this.target = (options === null || options === void 0 ? void 0 : options.target) || null;\n    this.currentTarget = (options === null || options === void 0 ? void 0 : options.currentTarget) || null;\n    this.timeStamp = Date.now();\n  }\n  EventPolyfill.prototype.composedPath = function () {\n    return [];\n  };\n  EventPolyfill.prototype.initEvent = function (type, bubbles, cancelable) {\n    this.type = type;\n    this.bubbles = !!bubbles;\n    this.cancelable = !!cancelable;\n  };\n  EventPolyfill.prototype.preventDefault = function () {\n    this.defaultPrevented = true;\n  };\n  EventPolyfill.prototype.stopPropagation = function () {};\n  EventPolyfill.prototype.stopImmediatePropagation = function () {};\n  return EventPolyfill;\n}();\nexports.EventPolyfill = EventPolyfill;\n\n//# sourceURL=webpack://my-app/../../@mswjs/interceptors/lib/interceptors/XMLHttpRequest/polyfills/EventPolyfill.js?");

/***/ }),

/***/ "../../@mswjs/interceptors/lib/interceptors/XMLHttpRequest/polyfills/ProgressEventPolyfill.js":
/*!****************************************************************************************************!*\
  !*** ../../@mswjs/interceptors/lib/interceptors/XMLHttpRequest/polyfills/ProgressEventPolyfill.js ***!
  \****************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.ProgressEventPolyfill = void 0;\nvar EventPolyfill_1 = __webpack_require__(/*! ./EventPolyfill */ \"../../@mswjs/interceptors/lib/interceptors/XMLHttpRequest/polyfills/EventPolyfill.js\");\nvar ProgressEventPolyfill = /** @class */function (_super) {\n  __extends(ProgressEventPolyfill, _super);\n  function ProgressEventPolyfill(type, init) {\n    var _this = _super.call(this, type) || this;\n    _this.lengthComputable = (init === null || init === void 0 ? void 0 : init.lengthComputable) || false;\n    _this.composed = (init === null || init === void 0 ? void 0 : init.composed) || false;\n    _this.loaded = (init === null || init === void 0 ? void 0 : init.loaded) || 0;\n    _this.total = (init === null || init === void 0 ? void 0 : init.total) || 0;\n    return _this;\n  }\n  return ProgressEventPolyfill;\n}(EventPolyfill_1.EventPolyfill);\nexports.ProgressEventPolyfill = ProgressEventPolyfill;\n\n//# sourceURL=webpack://my-app/../../@mswjs/interceptors/lib/interceptors/XMLHttpRequest/polyfills/ProgressEventPolyfill.js?");

/***/ }),

/***/ "../../@mswjs/interceptors/lib/interceptors/XMLHttpRequest/utils/bufferFrom.js":
/*!*************************************************************************************!*\
  !*** ../../@mswjs/interceptors/lib/interceptors/XMLHttpRequest/utils/bufferFrom.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.bufferFrom = void 0;\n/**\n * Convert a given string into a `Uint8Array`.\n * We don't use `TextEncoder` because it's unavailable in some environments.\n */\nfunction bufferFrom(init) {\n  var encodedString = encodeURIComponent(init);\n  var binaryString = encodedString.replace(/%([0-9A-F]{2})/g, function (_, char) {\n    return String.fromCharCode('0x' + char);\n  });\n  var buffer = new Uint8Array(binaryString.length);\n  Array.prototype.forEach.call(binaryString, function (char, index) {\n    buffer[index] = char.charCodeAt(0);\n  });\n  return buffer;\n}\nexports.bufferFrom = bufferFrom;\n\n//# sourceURL=webpack://my-app/../../@mswjs/interceptors/lib/interceptors/XMLHttpRequest/utils/bufferFrom.js?");

/***/ }),

/***/ "../../@mswjs/interceptors/lib/interceptors/XMLHttpRequest/utils/createEvent.js":
/*!**************************************************************************************!*\
  !*** ../../@mswjs/interceptors/lib/interceptors/XMLHttpRequest/utils/createEvent.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.createEvent = void 0;\nvar EventPolyfill_1 = __webpack_require__(/*! ../polyfills/EventPolyfill */ \"../../@mswjs/interceptors/lib/interceptors/XMLHttpRequest/polyfills/EventPolyfill.js\");\nvar ProgressEventPolyfill_1 = __webpack_require__(/*! ../polyfills/ProgressEventPolyfill */ \"../../@mswjs/interceptors/lib/interceptors/XMLHttpRequest/polyfills/ProgressEventPolyfill.js\");\nvar SUPPORTS_PROGRESS_EVENT = typeof ProgressEvent !== 'undefined';\nfunction createEvent(target, type, init) {\n  var progressEvents = ['error', 'progress', 'loadstart', 'loadend', 'load', 'timeout', 'abort'];\n  /**\n   * `ProgressEvent` is not supported in React Native.\n   * @see https://github.com/mswjs/interceptors/issues/40\n   */\n  var ProgressEventClass = SUPPORTS_PROGRESS_EVENT ? ProgressEvent : ProgressEventPolyfill_1.ProgressEventPolyfill;\n  var event = progressEvents.includes(type) ? new ProgressEventClass(type, {\n    lengthComputable: true,\n    loaded: (init === null || init === void 0 ? void 0 : init.loaded) || 0,\n    total: (init === null || init === void 0 ? void 0 : init.total) || 0\n  }) : new EventPolyfill_1.EventPolyfill(type, {\n    target: target,\n    currentTarget: target\n  });\n  return event;\n}\nexports.createEvent = createEvent;\n\n//# sourceURL=webpack://my-app/../../@mswjs/interceptors/lib/interceptors/XMLHttpRequest/utils/createEvent.js?");

/***/ }),

/***/ "../../@mswjs/interceptors/lib/interceptors/fetch/index.js":
/*!*****************************************************************!*\
  !*** ../../@mswjs/interceptors/lib/interceptors/fetch/index.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.FetchInterceptor = void 0;\nvar headers_polyfill_1 = __webpack_require__(/*! headers-polyfill */ \"../../headers-polyfill/lib/index.js\");\nvar outvariant_1 = __webpack_require__(/*! outvariant */ \"../../outvariant/lib/index.js\");\nvar until_1 = __webpack_require__(/*! @open-draft/until */ \"../../@open-draft/until/lib/index.js\");\nvar IsomorphicRequest_1 = __webpack_require__(/*! ../../IsomorphicRequest */ \"../../@mswjs/interceptors/lib/IsomorphicRequest.js\");\nvar glossary_1 = __webpack_require__(/*! ../../glossary */ \"../../@mswjs/interceptors/lib/glossary.js\");\nvar Interceptor_1 = __webpack_require__(/*! ../../Interceptor */ \"../../@mswjs/interceptors/lib/Interceptor.js\");\nvar toIsoResponse_1 = __webpack_require__(/*! ../../utils/toIsoResponse */ \"../../@mswjs/interceptors/lib/utils/toIsoResponse.js\");\nvar InteractiveIsomorphicRequest_1 = __webpack_require__(/*! ../../InteractiveIsomorphicRequest */ \"../../@mswjs/interceptors/lib/InteractiveIsomorphicRequest.js\");\nvar FetchInterceptor = /** @class */function (_super) {\n  __extends(FetchInterceptor, _super);\n  function FetchInterceptor() {\n    return _super.call(this, FetchInterceptor.symbol) || this;\n  }\n  FetchInterceptor.prototype.checkEnvironment = function () {\n    return typeof globalThis !== 'undefined' && typeof globalThis.fetch !== 'undefined';\n  };\n  FetchInterceptor.prototype.setup = function () {\n    var _this = this;\n    var pureFetch = globalThis.fetch;\n    outvariant_1.invariant(!pureFetch[glossary_1.IS_PATCHED_MODULE], 'Failed to patch the \"fetch\" module: already patched.');\n    globalThis.fetch = function (input, init) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var request, url, method, body, requestUrl, isomorphicRequest, interactiveIsomorphicRequest, _a, middlewareException, mockedResponse, error, isomorphicResponse, response;\n        var _this = this;\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              request = new Request(input, init);\n              url = typeof input === 'string' ? input : input.url;\n              method = request.method;\n              this.log('[%s] %s', method, url);\n              return [4 /*yield*/, request.clone().arrayBuffer()];\n            case 1:\n              body = _b.sent();\n              requestUrl = new URL(url, typeof location !== 'undefined' ? location.origin : undefined);\n              isomorphicRequest = new IsomorphicRequest_1.IsomorphicRequest(requestUrl, {\n                body: body,\n                method: method,\n                headers: new headers_polyfill_1.Headers(request.headers),\n                credentials: request.credentials\n              });\n              interactiveIsomorphicRequest = new InteractiveIsomorphicRequest_1.InteractiveIsomorphicRequest(isomorphicRequest);\n              this.log('isomorphic request', interactiveIsomorphicRequest);\n              this.log('emitting the \"request\" event for %d listener(s)...', this.emitter.listenerCount('request'));\n              this.emitter.emit('request', interactiveIsomorphicRequest);\n              this.log('awaiting for the mocked response...');\n              return [4 /*yield*/, until_1.until(function () {\n                return __awaiter(_this, void 0, void 0, function () {\n                  var _a, mockedResponse;\n                  return __generator(this, function (_b) {\n                    switch (_b.label) {\n                      case 0:\n                        return [4 /*yield*/, this.emitter.untilIdle('request', function (_a) {\n                          var _b = __read(_a.args, 1),\n                            request = _b[0];\n                          return request.id === interactiveIsomorphicRequest.id;\n                        })];\n                      case 1:\n                        _b.sent();\n                        this.log('all request listeners have been resolved!');\n                        return [4 /*yield*/, interactiveIsomorphicRequest.respondWith.invoked()];\n                      case 2:\n                        _a = __read.apply(void 0, [_b.sent(), 1]), mockedResponse = _a[0];\n                        this.log('event.respondWith called with:', mockedResponse);\n                        return [2 /*return*/, mockedResponse];\n                    }\n                  });\n                });\n              })];\n            case 2:\n              _a = __read.apply(void 0, [_b.sent(), 2]), middlewareException = _a[0], mockedResponse = _a[1];\n              if (middlewareException) {\n                console.error(request.method + \" \" + request.url + \" net::ERR_FAILED\");\n                error = Object.assign(new TypeError('Failed to fetch'), {\n                  cause: middlewareException\n                });\n                return [2 /*return*/, Promise.reject(error)];\n              }\n              if (mockedResponse) {\n                this.log('received mocked response:', mockedResponse);\n                isomorphicResponse = toIsoResponse_1.toIsoResponse(mockedResponse);\n                this.log('derived isomorphic response:', isomorphicResponse);\n                this.emitter.emit('response', interactiveIsomorphicRequest, isomorphicResponse);\n                response = new Response(mockedResponse.body, __assign(__assign({}, isomorphicResponse), {\n                  // `Response.headers` cannot be instantiated with the `Headers` polyfill.\n                  // Apparently, it halts if the `Headers` class contains unknown properties\n                  // (i.e. the internal `Headers.map`).\n                  headers: headers_polyfill_1.flattenHeadersObject(mockedResponse.headers || {})\n                }));\n                // Set the \"response.url\" property to equal the intercepted request URL.\n                Object.defineProperty(response, 'url', {\n                  writable: false,\n                  enumerable: true,\n                  configurable: false,\n                  value: interactiveIsomorphicRequest.url.href\n                });\n                return [2 /*return*/, response];\n              }\n              this.log('no mocked response received!');\n              return [2 /*return*/, pureFetch(request).then(function (response) {\n                return __awaiter(_this, void 0, void 0, function () {\n                  var cloneResponse, _a, _b, _c;\n                  return __generator(this, function (_d) {\n                    switch (_d.label) {\n                      case 0:\n                        cloneResponse = response.clone();\n                        this.log('original fetch performed', cloneResponse);\n                        _b = (_a = this.emitter).emit;\n                        _c = ['response', interactiveIsomorphicRequest];\n                        return [4 /*yield*/, normalizeFetchResponse(cloneResponse)];\n                      case 1:\n                        _b.apply(_a, _c.concat([_d.sent()]));\n                        return [2 /*return*/, response];\n                    }\n                  });\n                });\n              })];\n          }\n        });\n      });\n    };\n    Object.defineProperty(globalThis.fetch, glossary_1.IS_PATCHED_MODULE, {\n      enumerable: true,\n      configurable: true,\n      value: true\n    });\n    this.subscriptions.push(function () {\n      Object.defineProperty(globalThis.fetch, glossary_1.IS_PATCHED_MODULE, {\n        value: undefined\n      });\n      globalThis.fetch = pureFetch;\n      _this.log('restored native \"globalThis.fetch\"!', globalThis.fetch.name);\n    });\n  };\n  FetchInterceptor.symbol = Symbol('fetch');\n  return FetchInterceptor;\n}(Interceptor_1.Interceptor);\nexports.FetchInterceptor = FetchInterceptor;\nfunction normalizeFetchResponse(response) {\n  return __awaiter(this, void 0, void 0, function () {\n    var _a;\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          _a = {\n            status: response.status,\n            statusText: response.statusText,\n            headers: headers_polyfill_1.objectToHeaders(headers_polyfill_1.headersToObject(response.headers))\n          };\n          return [4 /*yield*/, response.text()];\n        case 1:\n          return [2 /*return*/, (_a.body = _b.sent(), _a)];\n      }\n    });\n  });\n}\n\n//# sourceURL=webpack://my-app/../../@mswjs/interceptors/lib/interceptors/fetch/index.js?");

/***/ }),

/***/ "../../@mswjs/interceptors/lib/utils/AsyncEventEmitter.js":
/*!****************************************************************!*\
  !*** ../../@mswjs/interceptors/lib/utils/AsyncEventEmitter.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __spreadArray = this && this.__spreadArray || function (to, from) {\n  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) to[j] = from[i];\n  return to;\n};\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.AsyncEventEmitter = exports.AsyncEventEmitterReadyState = void 0;\nvar debug_1 = __webpack_require__(/*! debug */ \"../../debug/src/browser.js\");\nvar strict_event_emitter_1 = __webpack_require__(/*! strict-event-emitter */ \"../../@mswjs/interceptors/node_modules/strict-event-emitter/lib/index.js\");\nvar nextTick_1 = __webpack_require__(/*! ./nextTick */ \"../../@mswjs/interceptors/lib/utils/nextTick.js\");\nvar AsyncEventEmitterReadyState;\n(function (AsyncEventEmitterReadyState) {\n  AsyncEventEmitterReadyState[\"ACTIVE\"] = \"ACTIVE\";\n  AsyncEventEmitterReadyState[\"DEACTIVATED\"] = \"DEACTIVATED\";\n})(AsyncEventEmitterReadyState = exports.AsyncEventEmitterReadyState || (exports.AsyncEventEmitterReadyState = {}));\nvar AsyncEventEmitter = /** @class */function (_super) {\n  __extends(AsyncEventEmitter, _super);\n  function AsyncEventEmitter() {\n    var _this = _super.call(this) || this;\n    _this.log = debug_1.debug('async-event-emitter');\n    _this.queue = new Map();\n    _this.readyState = AsyncEventEmitterReadyState.ACTIVE;\n    return _this;\n  }\n  AsyncEventEmitter.prototype.on = function (event, listener) {\n    var _this = this;\n    var log = this.log.extend('on');\n    log('adding \"%s\" listener...', event);\n    if (this.readyState === AsyncEventEmitterReadyState.DEACTIVATED) {\n      log('the emitter is destroyed, skipping!');\n      return this;\n    }\n    return _super.prototype.on.call(this, event, function () {\n      var args = [];\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n      return __awaiter(_this, void 0, void 0, function () {\n        var queue;\n        var _this = this;\n        return __generator(this, function (_a) {\n          queue = this.openListenerQueue(event);\n          log('awaiting the \"%s\" listener...', event);\n          // Whenever a listener is called, create a new Promise\n          // that resolves when that listener function completes its execution.\n          queue.push({\n            args: args,\n            done: new Promise(function (resolve, reject) {\n              return __awaiter(_this, void 0, void 0, function () {\n                var error_1;\n                return __generator(this, function (_a) {\n                  switch (_a.label) {\n                    case 0:\n                      _a.trys.push([0, 2,, 3]);\n                      // Treat listeners as potentially asynchronous functions\n                      // so they could be awaited.\n                      return [4 /*yield*/, listener.apply(void 0, __spreadArray([], __read(args)))];\n                    case 1:\n                      // Treat listeners as potentially asynchronous functions\n                      // so they could be awaited.\n                      _a.sent();\n                      resolve();\n                      log('\"%s\" listener has resolved!', event);\n                      return [3 /*break*/, 3];\n                    case 2:\n                      error_1 = _a.sent();\n                      log('\"%s\" listener has rejected!', error_1);\n                      reject(error_1);\n                      return [3 /*break*/, 3];\n                    case 3:\n                      return [2 /*return*/];\n                  }\n                });\n              });\n            })\n          });\n          return [2 /*return*/];\n        });\n      });\n    });\n  };\n  AsyncEventEmitter.prototype.emit = function (event) {\n    var _this = this;\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n      args[_i - 1] = arguments[_i];\n    }\n    var log = this.log.extend('emit');\n    log('emitting \"%s\" event...', event);\n    if (this.readyState === AsyncEventEmitterReadyState.DEACTIVATED) {\n      log('the emitter is destroyed, skipping!');\n      return false;\n    }\n    // Establish the Promise queue for this particular event.\n    this.openListenerQueue(event);\n    log('appending a one-time cleanup \"%s\" listener...', event);\n    // Append a one-time clean up listener.\n    this.once(event, function () {\n      // Clear the Promise queue for this particular event\n      // in the next tick so the Promise in \"untilIdle\" has\n      // time to properly resolve.\n      nextTick_1.nextTick(function () {\n        _this.queue.delete(event);\n        log('cleaned up \"%s\" listeners queue!', event);\n      });\n    });\n    return _super.prototype.emit.apply(this, __spreadArray([event], __read(args)));\n  };\n  /**\n   * Returns a promise that resolves when all the listeners for the given event\n   * has been called. Awaits asynchronous listeners.\n   * If the event has no listeners, resolves immediately.\n   */\n  AsyncEventEmitter.prototype.untilIdle = function (event, filter) {\n    if (filter === void 0) {\n      filter = function () {\n        return true;\n      };\n    }\n    return __awaiter(this, void 0, void 0, function () {\n      var listenersQueue;\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            listenersQueue = this.queue.get(event) || [];\n            return [4 /*yield*/, Promise.all(listenersQueue.filter(filter).map(function (_a) {\n              var done = _a.done;\n              return done;\n            })).finally(function () {\n              // Clear the queue one the promise settles\n              // so that different events don't share the same queue.\n              _this.queue.delete(event);\n            })];\n          case 1:\n            _a.sent();\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  AsyncEventEmitter.prototype.openListenerQueue = function (event) {\n    var log = this.log.extend('openListenerQueue');\n    log('opening \"%s\" listeners queue...', event);\n    var queue = this.queue.get(event);\n    if (!queue) {\n      log('no queue found, creating one...');\n      this.queue.set(event, []);\n      return [];\n    }\n    log('returning an exising queue:', queue);\n    return queue;\n  };\n  AsyncEventEmitter.prototype.removeAllListeners = function (event) {\n    var log = this.log.extend('removeAllListeners');\n    log('event:', event);\n    if (event) {\n      this.queue.delete(event);\n      log('cleared the \"%s\" listeners queue!', event, this.queue.get(event));\n    } else {\n      this.queue.clear();\n      log('cleared the listeners queue!', this.queue);\n    }\n    return _super.prototype.removeAllListeners.call(this, event);\n  };\n  AsyncEventEmitter.prototype.activate = function () {\n    var log = this.log.extend('activate');\n    this.readyState = AsyncEventEmitterReadyState.ACTIVE;\n    log('set state to:', this.readyState);\n  };\n  /**\n   * Deactivate this event emitter.\n   * Deactivated emitter can no longer emit and listen to events\n   * and needs to be activated again in order to do so.\n   */\n  AsyncEventEmitter.prototype.deactivate = function () {\n    var log = this.log.extend('deactivate');\n    log('removing all listeners...');\n    this.removeAllListeners();\n    this.readyState = AsyncEventEmitterReadyState.DEACTIVATED;\n    log('set state to:', this.readyState);\n  };\n  return AsyncEventEmitter;\n}(strict_event_emitter_1.StrictEventEmitter);\nexports.AsyncEventEmitter = AsyncEventEmitter;\n\n//# sourceURL=webpack://my-app/../../@mswjs/interceptors/lib/utils/AsyncEventEmitter.js?");

/***/ }),

/***/ "../../@mswjs/interceptors/lib/utils/bufferUtils.js":
/*!**********************************************************!*\
  !*** ../../@mswjs/interceptors/lib/utils/bufferUtils.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.getArrayBuffer = exports.decodeBuffer = exports.encodeBuffer = void 0;\nvar web_encoding_1 = __webpack_require__(/*! web-encoding */ \"../../web-encoding/src/lib.js\");\nfunction encodeBuffer(text) {\n  var encoder = new web_encoding_1.TextEncoder();\n  var encoded = encoder.encode(text);\n  return getArrayBuffer(encoded);\n}\nexports.encodeBuffer = encodeBuffer;\nfunction decodeBuffer(buffer, encoding) {\n  var decoder = new web_encoding_1.TextDecoder(encoding);\n  return decoder.decode(buffer);\n}\nexports.decodeBuffer = decodeBuffer;\nfunction getArrayBuffer(array) {\n  return array.buffer.slice(array.byteOffset, array.byteOffset + array.byteLength);\n}\nexports.getArrayBuffer = getArrayBuffer;\n\n//# sourceURL=webpack://my-app/../../@mswjs/interceptors/lib/utils/bufferUtils.js?");

/***/ }),

/***/ "../../@mswjs/interceptors/lib/utils/createLazyCallback.js":
/*!*****************************************************************!*\
  !*** ../../@mswjs/interceptors/lib/utils/createLazyCallback.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.createLazyCallback = void 0;\nfunction createLazyCallback(options) {\n  var _this = this;\n  if (options === void 0) {\n    options = {};\n  }\n  var calledTimes = 0;\n  var autoResolveTimeout;\n  var remoteResolve;\n  var callPromise = new Promise(function (resolve) {\n    remoteResolve = resolve;\n  }).finally(function () {\n    clearTimeout(autoResolveTimeout);\n  });\n  var fn = function () {\n    var _a;\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n    if (options.maxCalls && calledTimes >= options.maxCalls) {\n      (_a = options.maxCallsCallback) === null || _a === void 0 ? void 0 : _a.call(options);\n    }\n    remoteResolve(args);\n    calledTimes++;\n  };\n  fn.invoked = function () {\n    return __awaiter(_this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        // Immediately resolve the callback if it hasn't been called already.\n        autoResolveTimeout = setTimeout(function () {\n          remoteResolve([]);\n        }, 0);\n        return [2 /*return*/, callPromise];\n      });\n    });\n  };\n  return fn;\n}\nexports.createLazyCallback = createLazyCallback;\n\n//# sourceURL=webpack://my-app/../../@mswjs/interceptors/lib/utils/createLazyCallback.js?");

/***/ }),

/***/ "../../@mswjs/interceptors/lib/utils/getCleanUrl.js":
/*!**********************************************************!*\
  !*** ../../@mswjs/interceptors/lib/utils/getCleanUrl.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.getCleanUrl = void 0;\n/**\n * Removes query parameters and hashes from a given URL.\n */\nfunction getCleanUrl(url, isAbsolute) {\n  if (isAbsolute === void 0) {\n    isAbsolute = true;\n  }\n  return [isAbsolute && url.origin, url.pathname].filter(Boolean).join('');\n}\nexports.getCleanUrl = getCleanUrl;\n\n//# sourceURL=webpack://my-app/../../@mswjs/interceptors/lib/utils/getCleanUrl.js?");

/***/ }),

/***/ "../../@mswjs/interceptors/lib/utils/nextTick.js":
/*!*******************************************************!*\
  !*** ../../@mswjs/interceptors/lib/utils/nextTick.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.nextTickAsync = exports.nextTick = void 0;\nfunction nextTick(callback) {\n  setTimeout(callback, 0);\n}\nexports.nextTick = nextTick;\nfunction nextTickAsync(callback) {\n  return new Promise(function (resolve) {\n    setTimeout(function () {\n      resolve(callback());\n    }, 0);\n  });\n}\nexports.nextTickAsync = nextTickAsync;\n\n//# sourceURL=webpack://my-app/../../@mswjs/interceptors/lib/utils/nextTick.js?");

/***/ }),

/***/ "../../@mswjs/interceptors/lib/utils/parseJson.js":
/*!********************************************************!*\
  !*** ../../@mswjs/interceptors/lib/utils/parseJson.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.parseJson = void 0;\n/**\n * Parses a given string into JSON.\n * Gracefully handles invalid JSON by returning `null`.\n */\nfunction parseJson(data) {\n  try {\n    var json = JSON.parse(data);\n    return json;\n  } catch (_) {\n    return null;\n  }\n}\nexports.parseJson = parseJson;\n\n//# sourceURL=webpack://my-app/../../@mswjs/interceptors/lib/utils/parseJson.js?");

/***/ }),

/***/ "../../@mswjs/interceptors/lib/utils/toIsoResponse.js":
/*!************************************************************!*\
  !*** ../../@mswjs/interceptors/lib/utils/toIsoResponse.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.toIsoResponse = void 0;\nvar headers_polyfill_1 = __webpack_require__(/*! headers-polyfill */ \"../../headers-polyfill/lib/index.js\");\n/**\n * Converts a given mocked response object into an isomorphic response.\n */\nfunction toIsoResponse(response) {\n  var _a;\n  return {\n    status: (_a = response.status) !== null && _a !== void 0 ? _a : 200,\n    statusText: response.statusText || 'OK',\n    headers: headers_polyfill_1.objectToHeaders(response.headers || {}),\n    body: response.body\n  };\n}\nexports.toIsoResponse = toIsoResponse;\n\n//# sourceURL=webpack://my-app/../../@mswjs/interceptors/lib/utils/toIsoResponse.js?");

/***/ }),

/***/ "../../@mswjs/interceptors/lib/utils/uuid.js":
/*!***************************************************!*\
  !*** ../../@mswjs/interceptors/lib/utils/uuid.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.uuidv4 = void 0;\nfunction uuidv4() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = Math.random() * 16 | 0;\n    var v = c == 'x' ? r : r & 0x3 | 0x8;\n    return v.toString(16);\n  });\n}\nexports.uuidv4 = uuidv4;\n\n//# sourceURL=webpack://my-app/../../@mswjs/interceptors/lib/utils/uuid.js?");

/***/ }),

/***/ "../../@mswjs/interceptors/node_modules/strict-event-emitter/lib/StrictEventEmitter.js":
/*!*********************************************************************************************!*\
  !*** ../../@mswjs/interceptors/node_modules/strict-event-emitter/lib/StrictEventEmitter.js ***!
  \*********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n  return r;\n};\nexports.__esModule = true;\nexports.StrictEventEmitter = void 0;\nvar events_1 = __webpack_require__(/*! events */ \"../../events/events.js\");\nvar StrictEventEmitter = /** @class */function (_super) {\n  __extends(StrictEventEmitter, _super);\n  function StrictEventEmitter() {\n    return _super.call(this) || this;\n  }\n  StrictEventEmitter.prototype.on = function (event, listener) {\n    return _super.prototype.on.call(this, event.toString(), listener);\n  };\n  StrictEventEmitter.prototype.once = function (event, listener) {\n    return _super.prototype.once.call(this, event.toString(), listener);\n  };\n  StrictEventEmitter.prototype.off = function (event, listener) {\n    return _super.prototype.off.call(this, event.toString(), listener);\n  };\n  StrictEventEmitter.prototype.emit = function (event) {\n    var data = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n      data[_i - 1] = arguments[_i];\n    }\n    return _super.prototype.emit.apply(this, __spreadArrays([event.toString()], data));\n  };\n  StrictEventEmitter.prototype.addListener = function (event, listener) {\n    return _super.prototype.addListener.call(this, event.toString(), listener);\n  };\n  StrictEventEmitter.prototype.prependListener = function (event, listener) {\n    return _super.prototype.prependListener.call(this, event.toString(), listener);\n  };\n  StrictEventEmitter.prototype.prependOnceListener = function (event, listener) {\n    return _super.prototype.prependOnceListener.call(this, event.toString(), listener);\n  };\n  StrictEventEmitter.prototype.removeListener = function (event, listener) {\n    return _super.prototype.removeListener.call(this, event.toString(), listener);\n  };\n  StrictEventEmitter.prototype.removeAllListeners = function (event) {\n    if (event) {\n      return _super.prototype.removeAllListeners.call(this, event.toString());\n    }\n    return _super.prototype.removeAllListeners.call(this);\n  };\n  StrictEventEmitter.prototype.eventNames = function () {\n    return _super.prototype.eventNames.call(this);\n  };\n  StrictEventEmitter.prototype.listeners = function (event) {\n    return _super.prototype.listeners.call(this, event.toString());\n  };\n  StrictEventEmitter.prototype.rawListeners = function (event) {\n    return _super.prototype.rawListeners.call(this, event.toString());\n  };\n  StrictEventEmitter.prototype.listenerCount = function (event) {\n    return _super.prototype.listenerCount.call(this, event.toString());\n  };\n  return StrictEventEmitter;\n}(events_1.EventEmitter);\nexports.StrictEventEmitter = StrictEventEmitter;\n\n//# sourceURL=webpack://my-app/../../@mswjs/interceptors/node_modules/strict-event-emitter/lib/StrictEventEmitter.js?");

/***/ }),

/***/ "../../@mswjs/interceptors/node_modules/strict-event-emitter/lib/index.js":
/*!********************************************************************************!*\
  !*** ../../@mswjs/interceptors/node_modules/strict-event-emitter/lib/index.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __exportStar = this && this.__exportStar || function (m, exports) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nexports.__esModule = true;\n__exportStar(__webpack_require__(/*! ./StrictEventEmitter */ \"../../@mswjs/interceptors/node_modules/strict-event-emitter/lib/StrictEventEmitter.js\"), exports);\n\n//# sourceURL=webpack://my-app/../../@mswjs/interceptors/node_modules/strict-event-emitter/lib/index.js?");

/***/ }),

/***/ "../../@open-draft/until/lib/index.js":
/*!********************************************!*\
  !*** ../../@open-draft/until/lib/index.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nvar until_1 = __webpack_require__(/*! ./until */ \"../../@open-draft/until/lib/until.js\");\nexports.until = until_1.until;\n\n//# sourceURL=webpack://my-app/../../@open-draft/until/lib/index.js?");

/***/ }),

/***/ "../../@open-draft/until/lib/until.js":
/*!********************************************!*\
  !*** ../../@open-draft/until/lib/until.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\n/**\n * Gracefully handles a given Promise factory.\n * @example\n * cosnt [error, data] = await until(() => asyncAction())\n */\nexports.until = async promise => {\n  try {\n    const data = await promise().catch(error => {\n      throw error;\n    });\n    return [null, data];\n  } catch (error) {\n    return [error, null];\n  }\n};\n\n//# sourceURL=webpack://my-app/../../@open-draft/until/lib/until.js?");

/***/ }),

/***/ "../../@xmldom/xmldom/lib/conventions.js":
/*!***********************************************!*\
  !*** ../../@xmldom/xmldom/lib/conventions.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\n/**\n * Ponyfill for `Array.prototype.find` which is only available in ES6 runtimes.\n *\n * Works with anything that has a `length` property and index access properties, including NodeList.\n *\n * @template {unknown} T\n * @param {Array<T> | ({length:number, [number]: T})} list\n * @param {function (item: T, index: number, list:Array<T> | ({length:number, [number]: T})):boolean} predicate\n * @param {Partial<Pick<ArrayConstructor['prototype'], 'find'>>?} ac `Array.prototype` by default,\n * \t\t\t\tallows injecting a custom implementation in tests\n * @returns {T | undefined}\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\n * @see https://tc39.es/ecma262/multipage/indexed-collections.html#sec-array.prototype.find\n */\nfunction find(list, predicate, ac) {\n  if (ac === undefined) {\n    ac = Array.prototype;\n  }\n  if (list && typeof ac.find === 'function') {\n    return ac.find.call(list, predicate);\n  }\n  for (var i = 0; i < list.length; i++) {\n    if (Object.prototype.hasOwnProperty.call(list, i)) {\n      var item = list[i];\n      if (predicate.call(undefined, item, i, list)) {\n        return item;\n      }\n    }\n  }\n}\n\n/**\n * \"Shallow freezes\" an object to render it immutable.\n * Uses `Object.freeze` if available,\n * otherwise the immutability is only in the type.\n *\n * Is used to create \"enum like\" objects.\n *\n * @template T\n * @param {T} object the object to freeze\n * @param {Pick<ObjectConstructor, 'freeze'> = Object} oc `Object` by default,\n * \t\t\t\tallows to inject custom object constructor for tests\n * @returns {Readonly<T>}\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\n */\nfunction freeze(object, oc) {\n  if (oc === undefined) {\n    oc = Object;\n  }\n  return oc && typeof oc.freeze === 'function' ? oc.freeze(object) : object;\n}\n\n/**\n * Since we can not rely on `Object.assign` we provide a simplified version\n * that is sufficient for our needs.\n *\n * @param {Object} target\n * @param {Object | null | undefined} source\n *\n * @returns {Object} target\n * @throws TypeError if target is not an object\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n * @see https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-object.assign\n */\nfunction assign(target, source) {\n  if (target === null || typeof target !== 'object') {\n    throw new TypeError('target is not an object');\n  }\n  for (var key in source) {\n    if (Object.prototype.hasOwnProperty.call(source, key)) {\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\n\n/**\n * All mime types that are allowed as input to `DOMParser.parseFromString`\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString#Argument02 MDN\n * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#domparsersupportedtype WHATWG HTML Spec\n * @see DOMParser.prototype.parseFromString\n */\nvar MIME_TYPE = freeze({\n  /**\n   * `text/html`, the only mime type that triggers treating an XML document as HTML.\n   *\n   * @see DOMParser.SupportedType.isHTML\n   * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration\n   * @see https://en.wikipedia.org/wiki/HTML Wikipedia\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN\n   * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring WHATWG HTML Spec\n   */\n  HTML: 'text/html',\n  /**\n   * Helper method to check a mime type if it indicates an HTML document\n   *\n   * @param {string} [value]\n   * @returns {boolean}\n   *\n   * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration\n   * @see https://en.wikipedia.org/wiki/HTML Wikipedia\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN\n   * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring \t */\n  isHTML: function (value) {\n    return value === MIME_TYPE.HTML;\n  },\n  /**\n   * `application/xml`, the standard mime type for XML documents.\n   *\n   * @see https://www.iana.org/assignments/media-types/application/xml IANA MimeType registration\n   * @see https://tools.ietf.org/html/rfc7303#section-9.1 RFC 7303\n   * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia\n   */\n  XML_APPLICATION: 'application/xml',\n  /**\n   * `text/html`, an alias for `application/xml`.\n   *\n   * @see https://tools.ietf.org/html/rfc7303#section-9.2 RFC 7303\n   * @see https://www.iana.org/assignments/media-types/text/xml IANA MimeType registration\n   * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia\n   */\n  XML_TEXT: 'text/xml',\n  /**\n   * `application/xhtml+xml`, indicates an XML document that has the default HTML namespace,\n   * but is parsed as an XML document.\n   *\n   * @see https://www.iana.org/assignments/media-types/application/xhtml+xml IANA MimeType registration\n   * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument WHATWG DOM Spec\n   * @see https://en.wikipedia.org/wiki/XHTML Wikipedia\n   */\n  XML_XHTML_APPLICATION: 'application/xhtml+xml',\n  /**\n   * `image/svg+xml`,\n   *\n   * @see https://www.iana.org/assignments/media-types/image/svg+xml IANA MimeType registration\n   * @see https://www.w3.org/TR/SVG11/ W3C SVG 1.1\n   * @see https://en.wikipedia.org/wiki/Scalable_Vector_Graphics Wikipedia\n   */\n  XML_SVG_IMAGE: 'image/svg+xml'\n});\n\n/**\n * Namespaces that are used in this code base.\n *\n * @see http://www.w3.org/TR/REC-xml-names\n */\nvar NAMESPACE = freeze({\n  /**\n   * The XHTML namespace.\n   *\n   * @see http://www.w3.org/1999/xhtml\n   */\n  HTML: 'http://www.w3.org/1999/xhtml',\n  /**\n   * Checks if `uri` equals `NAMESPACE.HTML`.\n   *\n   * @param {string} [uri]\n   *\n   * @see NAMESPACE.HTML\n   */\n  isHTML: function (uri) {\n    return uri === NAMESPACE.HTML;\n  },\n  /**\n   * The SVG namespace.\n   *\n   * @see http://www.w3.org/2000/svg\n   */\n  SVG: 'http://www.w3.org/2000/svg',\n  /**\n   * The `xml:` namespace.\n   *\n   * @see http://www.w3.org/XML/1998/namespace\n   */\n  XML: 'http://www.w3.org/XML/1998/namespace',\n  /**\n   * The `xmlns:` namespace\n   *\n   * @see https://www.w3.org/2000/xmlns/\n   */\n  XMLNS: 'http://www.w3.org/2000/xmlns/'\n});\nexports.assign = assign;\nexports.find = find;\nexports.freeze = freeze;\nexports.MIME_TYPE = MIME_TYPE;\nexports.NAMESPACE = NAMESPACE;\n\n//# sourceURL=webpack://my-app/../../@xmldom/xmldom/lib/conventions.js?");

/***/ }),

/***/ "../../@xmldom/xmldom/lib/dom-parser.js":
/*!**********************************************!*\
  !*** ../../@xmldom/xmldom/lib/dom-parser.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var conventions = __webpack_require__(/*! ./conventions */ \"../../@xmldom/xmldom/lib/conventions.js\");\nvar dom = __webpack_require__(/*! ./dom */ \"../../@xmldom/xmldom/lib/dom.js\");\nvar entities = __webpack_require__(/*! ./entities */ \"../../@xmldom/xmldom/lib/entities.js\");\nvar sax = __webpack_require__(/*! ./sax */ \"../../@xmldom/xmldom/lib/sax.js\");\nvar DOMImplementation = dom.DOMImplementation;\nvar NAMESPACE = conventions.NAMESPACE;\nvar ParseError = sax.ParseError;\nvar XMLReader = sax.XMLReader;\n\n/**\n * Normalizes line ending according to https://www.w3.org/TR/xml11/#sec-line-ends:\n *\n * > XML parsed entities are often stored in computer files which,\n * > for editing convenience, are organized into lines.\n * > These lines are typically separated by some combination\n * > of the characters CARRIAGE RETURN (#xD) and LINE FEED (#xA).\n * >\n * > To simplify the tasks of applications, the XML processor must behave\n * > as if it normalized all line breaks in external parsed entities (including the document entity)\n * > on input, before parsing, by translating all of the following to a single #xA character:\n * >\n * > 1. the two-character sequence #xD #xA\n * > 2. the two-character sequence #xD #x85\n * > 3. the single character #x85\n * > 4. the single character #x2028\n * > 5. any #xD character that is not immediately followed by #xA or #x85.\n *\n * @param {string} input\n * @returns {string}\n */\nfunction normalizeLineEndings(input) {\n  return input.replace(/\\r[\\n\\u0085]/g, '\\n').replace(/[\\r\\u0085\\u2028]/g, '\\n');\n}\n\n/**\n * @typedef Locator\n * @property {number} [columnNumber]\n * @property {number} [lineNumber]\n */\n\n/**\n * @typedef DOMParserOptions\n * @property {DOMHandler} [domBuilder]\n * @property {Function} [errorHandler]\n * @property {(string) => string} [normalizeLineEndings] used to replace line endings before parsing\n * \t\t\t\t\t\tdefaults to `normalizeLineEndings`\n * @property {Locator} [locator]\n * @property {Record<string, string>} [xmlns]\n *\n * @see normalizeLineEndings\n */\n\n/**\n * The DOMParser interface provides the ability to parse XML or HTML source code\n * from a string into a DOM `Document`.\n *\n * _xmldom is different from the spec in that it allows an `options` parameter,\n * to override the default behavior._\n *\n * @param {DOMParserOptions} [options]\n * @constructor\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser\n * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-parsing-and-serialization\n */\nfunction DOMParser(options) {\n  this.options = options || {\n    locator: {}\n  };\n}\nDOMParser.prototype.parseFromString = function (source, mimeType) {\n  var options = this.options;\n  var sax = new XMLReader();\n  var domBuilder = options.domBuilder || new DOMHandler(); //contentHandler and LexicalHandler\n  var errorHandler = options.errorHandler;\n  var locator = options.locator;\n  var defaultNSMap = options.xmlns || {};\n  var isHTML = /\\/x?html?$/.test(mimeType); //mimeType.toLowerCase().indexOf('html') > -1;\n  var entityMap = isHTML ? entities.HTML_ENTITIES : entities.XML_ENTITIES;\n  if (locator) {\n    domBuilder.setDocumentLocator(locator);\n  }\n  sax.errorHandler = buildErrorHandler(errorHandler, domBuilder, locator);\n  sax.domBuilder = options.domBuilder || domBuilder;\n  if (isHTML) {\n    defaultNSMap[''] = NAMESPACE.HTML;\n  }\n  defaultNSMap.xml = defaultNSMap.xml || NAMESPACE.XML;\n  var normalize = options.normalizeLineEndings || normalizeLineEndings;\n  if (source && typeof source === 'string') {\n    sax.parse(normalize(source), defaultNSMap, entityMap);\n  } else {\n    sax.errorHandler.error('invalid doc source');\n  }\n  return domBuilder.doc;\n};\nfunction buildErrorHandler(errorImpl, domBuilder, locator) {\n  if (!errorImpl) {\n    if (domBuilder instanceof DOMHandler) {\n      return domBuilder;\n    }\n    errorImpl = domBuilder;\n  }\n  var errorHandler = {};\n  var isCallback = errorImpl instanceof Function;\n  locator = locator || {};\n  function build(key) {\n    var fn = errorImpl[key];\n    if (!fn && isCallback) {\n      fn = errorImpl.length == 2 ? function (msg) {\n        errorImpl(key, msg);\n      } : errorImpl;\n    }\n    errorHandler[key] = fn && function (msg) {\n      fn('[xmldom ' + key + ']\\t' + msg + _locator(locator));\n    } || function () {};\n  }\n  build('warning');\n  build('error');\n  build('fatalError');\n  return errorHandler;\n}\n\n//console.log('#\\n\\n\\n\\n\\n\\n\\n####')\n/**\n * +ContentHandler+ErrorHandler\n * +LexicalHandler+EntityResolver2\n * -DeclHandler-DTDHandler\n *\n * DefaultHandler:EntityResolver, DTDHandler, ContentHandler, ErrorHandler\n * DefaultHandler2:DefaultHandler,LexicalHandler, DeclHandler, EntityResolver2\n * @link http://www.saxproject.org/apidoc/org/xml/sax/helpers/DefaultHandler.html\n */\nfunction DOMHandler() {\n  this.cdata = false;\n}\nfunction position(locator, node) {\n  node.lineNumber = locator.lineNumber;\n  node.columnNumber = locator.columnNumber;\n}\n/**\n * @see org.xml.sax.ContentHandler#startDocument\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ContentHandler.html\n */\nDOMHandler.prototype = {\n  startDocument: function () {\n    this.doc = new DOMImplementation().createDocument(null, null, null);\n    if (this.locator) {\n      this.doc.documentURI = this.locator.systemId;\n    }\n  },\n  startElement: function (namespaceURI, localName, qName, attrs) {\n    var doc = this.doc;\n    var el = doc.createElementNS(namespaceURI, qName || localName);\n    var len = attrs.length;\n    appendElement(this, el);\n    this.currentElement = el;\n    this.locator && position(this.locator, el);\n    for (var i = 0; i < len; i++) {\n      var namespaceURI = attrs.getURI(i);\n      var value = attrs.getValue(i);\n      var qName = attrs.getQName(i);\n      var attr = doc.createAttributeNS(namespaceURI, qName);\n      this.locator && position(attrs.getLocator(i), attr);\n      attr.value = attr.nodeValue = value;\n      el.setAttributeNode(attr);\n    }\n  },\n  endElement: function (namespaceURI, localName, qName) {\n    var current = this.currentElement;\n    var tagName = current.tagName;\n    this.currentElement = current.parentNode;\n  },\n  startPrefixMapping: function (prefix, uri) {},\n  endPrefixMapping: function (prefix) {},\n  processingInstruction: function (target, data) {\n    var ins = this.doc.createProcessingInstruction(target, data);\n    this.locator && position(this.locator, ins);\n    appendElement(this, ins);\n  },\n  ignorableWhitespace: function (ch, start, length) {},\n  characters: function (chars, start, length) {\n    chars = _toString.apply(this, arguments);\n    //console.log(chars)\n    if (chars) {\n      if (this.cdata) {\n        var charNode = this.doc.createCDATASection(chars);\n      } else {\n        var charNode = this.doc.createTextNode(chars);\n      }\n      if (this.currentElement) {\n        this.currentElement.appendChild(charNode);\n      } else if (/^\\s*$/.test(chars)) {\n        this.doc.appendChild(charNode);\n        //process xml\n      }\n      this.locator && position(this.locator, charNode);\n    }\n  },\n  skippedEntity: function (name) {},\n  endDocument: function () {\n    this.doc.normalize();\n  },\n  setDocumentLocator: function (locator) {\n    if (this.locator = locator) {\n      // && !('lineNumber' in locator)){\n      locator.lineNumber = 0;\n    }\n  },\n  //LexicalHandler\n  comment: function (chars, start, length) {\n    chars = _toString.apply(this, arguments);\n    var comm = this.doc.createComment(chars);\n    this.locator && position(this.locator, comm);\n    appendElement(this, comm);\n  },\n  startCDATA: function () {\n    //used in characters() methods\n    this.cdata = true;\n  },\n  endCDATA: function () {\n    this.cdata = false;\n  },\n  startDTD: function (name, publicId, systemId) {\n    var impl = this.doc.implementation;\n    if (impl && impl.createDocumentType) {\n      var dt = impl.createDocumentType(name, publicId, systemId);\n      this.locator && position(this.locator, dt);\n      appendElement(this, dt);\n      this.doc.doctype = dt;\n    }\n  },\n  /**\n   * @see org.xml.sax.ErrorHandler\n   * @link http://www.saxproject.org/apidoc/org/xml/sax/ErrorHandler.html\n   */\n  warning: function (error) {\n    console.warn('[xmldom warning]\\t' + error, _locator(this.locator));\n  },\n  error: function (error) {\n    console.error('[xmldom error]\\t' + error, _locator(this.locator));\n  },\n  fatalError: function (error) {\n    throw new ParseError(error, this.locator);\n  }\n};\nfunction _locator(l) {\n  if (l) {\n    return '\\n@' + (l.systemId || '') + '#[line:' + l.lineNumber + ',col:' + l.columnNumber + ']';\n  }\n}\nfunction _toString(chars, start, length) {\n  if (typeof chars == 'string') {\n    return chars.substr(start, length);\n  } else {\n    //java sax connect width xmldom on rhino(what about: \"? && !(chars instanceof String)\")\n    if (chars.length >= start + length || start) {\n      return new java.lang.String(chars, start, length) + '';\n    }\n    return chars;\n  }\n}\n\n/*\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/LexicalHandler.html\n * used method of org.xml.sax.ext.LexicalHandler:\n *  #comment(chars, start, length)\n *  #startCDATA()\n *  #endCDATA()\n *  #startDTD(name, publicId, systemId)\n *\n *\n * IGNORED method of org.xml.sax.ext.LexicalHandler:\n *  #endDTD()\n *  #startEntity(name)\n *  #endEntity(name)\n *\n *\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/DeclHandler.html\n * IGNORED method of org.xml.sax.ext.DeclHandler\n * \t#attributeDecl(eName, aName, type, mode, value)\n *  #elementDecl(name, model)\n *  #externalEntityDecl(name, publicId, systemId)\n *  #internalEntityDecl(name, value)\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/EntityResolver2.html\n * IGNORED method of org.xml.sax.EntityResolver2\n *  #resolveEntity(String name,String publicId,String baseURI,String systemId)\n *  #resolveEntity(publicId, systemId)\n *  #getExternalSubset(name, baseURI)\n * @link http://www.saxproject.org/apidoc/org/xml/sax/DTDHandler.html\n * IGNORED method of org.xml.sax.DTDHandler\n *  #notationDecl(name, publicId, systemId) {};\n *  #unparsedEntityDecl(name, publicId, systemId, notationName) {};\n */\n\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g, function (key) {\n  DOMHandler.prototype[key] = function () {\n    return null;\n  };\n});\n\n/* Private static helpers treated below as private instance methods, so don't need to add these to the public API; we might use a Relator to also get rid of non-standard public properties */\nfunction appendElement(hander, node) {\n  if (!hander.currentElement) {\n    hander.doc.appendChild(node);\n  } else {\n    hander.currentElement.appendChild(node);\n  }\n} //appendChild and setAttributeNS are preformance key\n\nexports.__DOMHandler = DOMHandler;\nexports.normalizeLineEndings = normalizeLineEndings;\nexports.DOMParser = DOMParser;\n\n//# sourceURL=webpack://my-app/../../@xmldom/xmldom/lib/dom-parser.js?");

/***/ }),

/***/ "../../@xmldom/xmldom/lib/dom.js":
/*!***************************************!*\
  !*** ../../@xmldom/xmldom/lib/dom.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var conventions = __webpack_require__(/*! ./conventions */ \"../../@xmldom/xmldom/lib/conventions.js\");\nvar find = conventions.find;\nvar NAMESPACE = conventions.NAMESPACE;\n\n/**\n * A prerequisite for `[].filter`, to drop elements that are empty\n * @param {string} input\n * @returns {boolean}\n */\nfunction notEmptyString(input) {\n  return input !== '';\n}\n/**\n * @see https://infra.spec.whatwg.org/#split-on-ascii-whitespace\n * @see https://infra.spec.whatwg.org/#ascii-whitespace\n *\n * @param {string} input\n * @returns {string[]} (can be empty)\n */\nfunction splitOnASCIIWhitespace(input) {\n  // U+0009 TAB, U+000A LF, U+000C FF, U+000D CR, U+0020 SPACE\n  return input ? input.split(/[\\t\\n\\f\\r ]+/).filter(notEmptyString) : [];\n}\n\n/**\n * Adds element as a key to current if it is not already present.\n *\n * @param {Record<string, boolean | undefined>} current\n * @param {string} element\n * @returns {Record<string, boolean | undefined>}\n */\nfunction orderedSetReducer(current, element) {\n  if (!current.hasOwnProperty(element)) {\n    current[element] = true;\n  }\n  return current;\n}\n\n/**\n * @see https://infra.spec.whatwg.org/#ordered-set\n * @param {string} input\n * @returns {string[]}\n */\nfunction toOrderedSet(input) {\n  if (!input) return [];\n  var list = splitOnASCIIWhitespace(input);\n  return Object.keys(list.reduce(orderedSetReducer, {}));\n}\n\n/**\n * Uses `list.indexOf` to implement something like `Array.prototype.includes`,\n * which we can not rely on being available.\n *\n * @param {any[]} list\n * @returns {function(any): boolean}\n */\nfunction arrayIncludes(list) {\n  return function (element) {\n    return list && list.indexOf(element) !== -1;\n  };\n}\nfunction copy(src, dest) {\n  for (var p in src) {\n    if (Object.prototype.hasOwnProperty.call(src, p)) {\n      dest[p] = src[p];\n    }\n  }\n}\n\n/**\n^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*((?:.*\\{\\s*?[\\r\\n][\\s\\S]*?^})|\\S.*?(?=[;\\r\\n]));?\n^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*(\\S.*?(?=[;\\r\\n]));?\n */\nfunction _extends(Class, Super) {\n  var pt = Class.prototype;\n  if (!(pt instanceof Super)) {\n    function t() {}\n    ;\n    t.prototype = Super.prototype;\n    t = new t();\n    copy(pt, t);\n    Class.prototype = pt = t;\n  }\n  if (pt.constructor != Class) {\n    if (typeof Class != 'function') {\n      console.error(\"unknown Class:\" + Class);\n    }\n    pt.constructor = Class;\n  }\n}\n\n// Node Types\nvar NodeType = {};\nvar ELEMENT_NODE = NodeType.ELEMENT_NODE = 1;\nvar ATTRIBUTE_NODE = NodeType.ATTRIBUTE_NODE = 2;\nvar TEXT_NODE = NodeType.TEXT_NODE = 3;\nvar CDATA_SECTION_NODE = NodeType.CDATA_SECTION_NODE = 4;\nvar ENTITY_REFERENCE_NODE = NodeType.ENTITY_REFERENCE_NODE = 5;\nvar ENTITY_NODE = NodeType.ENTITY_NODE = 6;\nvar PROCESSING_INSTRUCTION_NODE = NodeType.PROCESSING_INSTRUCTION_NODE = 7;\nvar COMMENT_NODE = NodeType.COMMENT_NODE = 8;\nvar DOCUMENT_NODE = NodeType.DOCUMENT_NODE = 9;\nvar DOCUMENT_TYPE_NODE = NodeType.DOCUMENT_TYPE_NODE = 10;\nvar DOCUMENT_FRAGMENT_NODE = NodeType.DOCUMENT_FRAGMENT_NODE = 11;\nvar NOTATION_NODE = NodeType.NOTATION_NODE = 12;\n\n// ExceptionCode\nvar ExceptionCode = {};\nvar ExceptionMessage = {};\nvar INDEX_SIZE_ERR = ExceptionCode.INDEX_SIZE_ERR = (ExceptionMessage[1] = \"Index size error\", 1);\nvar DOMSTRING_SIZE_ERR = ExceptionCode.DOMSTRING_SIZE_ERR = (ExceptionMessage[2] = \"DOMString size error\", 2);\nvar HIERARCHY_REQUEST_ERR = ExceptionCode.HIERARCHY_REQUEST_ERR = (ExceptionMessage[3] = \"Hierarchy request error\", 3);\nvar WRONG_DOCUMENT_ERR = ExceptionCode.WRONG_DOCUMENT_ERR = (ExceptionMessage[4] = \"Wrong document\", 4);\nvar INVALID_CHARACTER_ERR = ExceptionCode.INVALID_CHARACTER_ERR = (ExceptionMessage[5] = \"Invalid character\", 5);\nvar NO_DATA_ALLOWED_ERR = ExceptionCode.NO_DATA_ALLOWED_ERR = (ExceptionMessage[6] = \"No data allowed\", 6);\nvar NO_MODIFICATION_ALLOWED_ERR = ExceptionCode.NO_MODIFICATION_ALLOWED_ERR = (ExceptionMessage[7] = \"No modification allowed\", 7);\nvar NOT_FOUND_ERR = ExceptionCode.NOT_FOUND_ERR = (ExceptionMessage[8] = \"Not found\", 8);\nvar NOT_SUPPORTED_ERR = ExceptionCode.NOT_SUPPORTED_ERR = (ExceptionMessage[9] = \"Not supported\", 9);\nvar INUSE_ATTRIBUTE_ERR = ExceptionCode.INUSE_ATTRIBUTE_ERR = (ExceptionMessage[10] = \"Attribute in use\", 10);\n//level2\nvar INVALID_STATE_ERR = ExceptionCode.INVALID_STATE_ERR = (ExceptionMessage[11] = \"Invalid state\", 11);\nvar SYNTAX_ERR = ExceptionCode.SYNTAX_ERR = (ExceptionMessage[12] = \"Syntax error\", 12);\nvar INVALID_MODIFICATION_ERR = ExceptionCode.INVALID_MODIFICATION_ERR = (ExceptionMessage[13] = \"Invalid modification\", 13);\nvar NAMESPACE_ERR = ExceptionCode.NAMESPACE_ERR = (ExceptionMessage[14] = \"Invalid namespace\", 14);\nvar INVALID_ACCESS_ERR = ExceptionCode.INVALID_ACCESS_ERR = (ExceptionMessage[15] = \"Invalid access\", 15);\n\n/**\n * DOM Level 2\n * Object DOMException\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html\n * @see http://www.w3.org/TR/REC-DOM-Level-1/ecma-script-language-binding.html\n */\nfunction DOMException(code, message) {\n  if (message instanceof Error) {\n    var error = message;\n  } else {\n    error = this;\n    Error.call(this, ExceptionMessage[code]);\n    this.message = ExceptionMessage[code];\n    if (Error.captureStackTrace) Error.captureStackTrace(this, DOMException);\n  }\n  error.code = code;\n  if (message) this.message = this.message + \": \" + message;\n  return error;\n}\n;\nDOMException.prototype = Error.prototype;\ncopy(ExceptionCode, DOMException);\n\n/**\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-536297177\n * The NodeList interface provides the abstraction of an ordered collection of nodes, without defining or constraining how this collection is implemented. NodeList objects in the DOM are live.\n * The items in the NodeList are accessible via an integral index, starting from 0.\n */\nfunction NodeList() {}\n;\nNodeList.prototype = {\n  /**\n   * The number of nodes in the list. The range of valid child node indices is 0 to length-1 inclusive.\n   * @standard level1\n   */\n  length: 0,\n  /**\n   * Returns the indexth item in the collection. If index is greater than or equal to the number of nodes in the list, this returns null.\n   * @standard level1\n   * @param index  unsigned long\n   *   Index into the collection.\n   * @return Node\n   * \tThe node at the indexth position in the NodeList, or null if that is not a valid index.\n   */\n  item: function (index) {\n    return index >= 0 && index < this.length ? this[index] : null;\n  },\n  toString: function (isHTML, nodeFilter) {\n    for (var buf = [], i = 0; i < this.length; i++) {\n      serializeToString(this[i], buf, isHTML, nodeFilter);\n    }\n    return buf.join('');\n  },\n  /**\n   * @private\n   * @param {function (Node):boolean} predicate\n   * @returns {Node[]}\n   */\n  filter: function (predicate) {\n    return Array.prototype.filter.call(this, predicate);\n  },\n  /**\n   * @private\n   * @param {Node} item\n   * @returns {number}\n   */\n  indexOf: function (item) {\n    return Array.prototype.indexOf.call(this, item);\n  }\n};\nfunction LiveNodeList(node, refresh) {\n  this._node = node;\n  this._refresh = refresh;\n  _updateLiveList(this);\n}\nfunction _updateLiveList(list) {\n  var inc = list._node._inc || list._node.ownerDocument._inc;\n  if (list._inc !== inc) {\n    var ls = list._refresh(list._node);\n    __set__(list, 'length', ls.length);\n    if (!list.$$length || ls.length < list.$$length) {\n      for (var i = ls.length; (i in list); i++) {\n        if (Object.prototype.hasOwnProperty.call(list, i)) {\n          delete list[i];\n        }\n      }\n    }\n    copy(ls, list);\n    list._inc = inc;\n  }\n}\nLiveNodeList.prototype.item = function (i) {\n  _updateLiveList(this);\n  return this[i] || null;\n};\n_extends(LiveNodeList, NodeList);\n\n/**\n * Objects implementing the NamedNodeMap interface are used\n * to represent collections of nodes that can be accessed by name.\n * Note that NamedNodeMap does not inherit from NodeList;\n * NamedNodeMaps are not maintained in any particular order.\n * Objects contained in an object implementing NamedNodeMap may also be accessed by an ordinal index,\n * but this is simply to allow convenient enumeration of the contents of a NamedNodeMap,\n * and does not imply that the DOM specifies an order to these Nodes.\n * NamedNodeMap objects in the DOM are live.\n * used for attributes or DocumentType entities\n */\nfunction NamedNodeMap() {}\n;\nfunction _findNodeIndex(list, node) {\n  var i = list.length;\n  while (i--) {\n    if (list[i] === node) {\n      return i;\n    }\n  }\n}\nfunction _addNamedNode(el, list, newAttr, oldAttr) {\n  if (oldAttr) {\n    list[_findNodeIndex(list, oldAttr)] = newAttr;\n  } else {\n    list[list.length++] = newAttr;\n  }\n  if (el) {\n    newAttr.ownerElement = el;\n    var doc = el.ownerDocument;\n    if (doc) {\n      oldAttr && _onRemoveAttribute(doc, el, oldAttr);\n      _onAddAttribute(doc, el, newAttr);\n    }\n  }\n}\nfunction _removeNamedNode(el, list, attr) {\n  //console.log('remove attr:'+attr)\n  var i = _findNodeIndex(list, attr);\n  if (i >= 0) {\n    var lastIndex = list.length - 1;\n    while (i < lastIndex) {\n      list[i] = list[++i];\n    }\n    list.length = lastIndex;\n    if (el) {\n      var doc = el.ownerDocument;\n      if (doc) {\n        _onRemoveAttribute(doc, el, attr);\n        attr.ownerElement = null;\n      }\n    }\n  } else {\n    throw new DOMException(NOT_FOUND_ERR, new Error(el.tagName + '@' + attr));\n  }\n}\nNamedNodeMap.prototype = {\n  length: 0,\n  item: NodeList.prototype.item,\n  getNamedItem: function (key) {\n    //\t\tif(key.indexOf(':')>0 || key == 'xmlns'){\n    //\t\t\treturn null;\n    //\t\t}\n    //console.log()\n    var i = this.length;\n    while (i--) {\n      var attr = this[i];\n      //console.log(attr.nodeName,key)\n      if (attr.nodeName == key) {\n        return attr;\n      }\n    }\n  },\n  setNamedItem: function (attr) {\n    var el = attr.ownerElement;\n    if (el && el != this._ownerElement) {\n      throw new DOMException(INUSE_ATTRIBUTE_ERR);\n    }\n    var oldAttr = this.getNamedItem(attr.nodeName);\n    _addNamedNode(this._ownerElement, this, attr, oldAttr);\n    return oldAttr;\n  },\n  /* returns Node */\n  setNamedItemNS: function (attr) {\n    // raises: WRONG_DOCUMENT_ERR,NO_MODIFICATION_ALLOWED_ERR,INUSE_ATTRIBUTE_ERR\n    var el = attr.ownerElement,\n      oldAttr;\n    if (el && el != this._ownerElement) {\n      throw new DOMException(INUSE_ATTRIBUTE_ERR);\n    }\n    oldAttr = this.getNamedItemNS(attr.namespaceURI, attr.localName);\n    _addNamedNode(this._ownerElement, this, attr, oldAttr);\n    return oldAttr;\n  },\n  /* returns Node */\n  removeNamedItem: function (key) {\n    var attr = this.getNamedItem(key);\n    _removeNamedNode(this._ownerElement, this, attr);\n    return attr;\n  },\n  // raises: NOT_FOUND_ERR,NO_MODIFICATION_ALLOWED_ERR\n\n  //for level2\n  removeNamedItemNS: function (namespaceURI, localName) {\n    var attr = this.getNamedItemNS(namespaceURI, localName);\n    _removeNamedNode(this._ownerElement, this, attr);\n    return attr;\n  },\n  getNamedItemNS: function (namespaceURI, localName) {\n    var i = this.length;\n    while (i--) {\n      var node = this[i];\n      if (node.localName == localName && node.namespaceURI == namespaceURI) {\n        return node;\n      }\n    }\n    return null;\n  }\n};\n\n/**\n * The DOMImplementation interface represents an object providing methods\n * which are not dependent on any particular document.\n * Such an object is returned by the `Document.implementation` property.\n *\n * __The individual methods describe the differences compared to the specs.__\n *\n * @constructor\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation MDN\n * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-102161490 DOM Level 1 Core (Initial)\n * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-102161490 DOM Level 2 Core\n * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-102161490 DOM Level 3 Core\n * @see https://dom.spec.whatwg.org/#domimplementation DOM Living Standard\n */\nfunction DOMImplementation() {}\nDOMImplementation.prototype = {\n  /**\n   * The DOMImplementation.hasFeature() method returns a Boolean flag indicating if a given feature is supported.\n   * The different implementations fairly diverged in what kind of features were reported.\n   * The latest version of the spec settled to force this method to always return true, where the functionality was accurate and in use.\n   *\n   * @deprecated It is deprecated and modern browsers return true in all cases.\n   *\n   * @param {string} feature\n   * @param {string} [version]\n   * @returns {boolean} always true\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/hasFeature MDN\n   * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-5CED94D7 DOM Level 1 Core\n   * @see https://dom.spec.whatwg.org/#dom-domimplementation-hasfeature DOM Living Standard\n   */\n  hasFeature: function (feature, version) {\n    return true;\n  },\n  /**\n   * Creates an XML Document object of the specified type with its document element.\n   *\n   * __It behaves slightly different from the description in the living standard__:\n   * - There is no interface/class `XMLDocument`, it returns a `Document` instance.\n   * - `contentType`, `encoding`, `mode`, `origin`, `url` fields are currently not declared.\n   * - this implementation is not validating names or qualified names\n   *   (when parsing XML strings, the SAX parser takes care of that)\n   *\n   * @param {string|null} namespaceURI\n   * @param {string} qualifiedName\n   * @param {DocumentType=null} doctype\n   * @returns {Document}\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocument MDN\n   * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocument DOM Level 2 Core (initial)\n   * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument  DOM Level 2 Core\n   *\n   * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract\n   * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names\n   * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names\n   */\n  createDocument: function (namespaceURI, qualifiedName, doctype) {\n    var doc = new Document();\n    doc.implementation = this;\n    doc.childNodes = new NodeList();\n    doc.doctype = doctype || null;\n    if (doctype) {\n      doc.appendChild(doctype);\n    }\n    if (qualifiedName) {\n      var root = doc.createElementNS(namespaceURI, qualifiedName);\n      doc.appendChild(root);\n    }\n    return doc;\n  },\n  /**\n   * Returns a doctype, with the given `qualifiedName`, `publicId`, and `systemId`.\n   *\n   * __This behavior is slightly different from the in the specs__:\n   * - this implementation is not validating names or qualified names\n   *   (when parsing XML strings, the SAX parser takes care of that)\n   *\n   * @param {string} qualifiedName\n   * @param {string} [publicId]\n   * @param {string} [systemId]\n   * @returns {DocumentType} which can either be used with `DOMImplementation.createDocument` upon document creation\n   * \t\t\t\t  or can be put into the document via methods like `Node.insertBefore()` or `Node.replaceChild()`\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocumentType MDN\n   * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocType DOM Level 2 Core\n   * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocumenttype DOM Living Standard\n   *\n   * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract\n   * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names\n   * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names\n   */\n  createDocumentType: function (qualifiedName, publicId, systemId) {\n    var node = new DocumentType();\n    node.name = qualifiedName;\n    node.nodeName = qualifiedName;\n    node.publicId = publicId || '';\n    node.systemId = systemId || '';\n    return node;\n  }\n};\n\n/**\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-1950641247\n */\n\nfunction Node() {}\n;\nNode.prototype = {\n  firstChild: null,\n  lastChild: null,\n  previousSibling: null,\n  nextSibling: null,\n  attributes: null,\n  parentNode: null,\n  childNodes: null,\n  ownerDocument: null,\n  nodeValue: null,\n  namespaceURI: null,\n  prefix: null,\n  localName: null,\n  // Modified in DOM Level 2:\n  insertBefore: function (newChild, refChild) {\n    //raises\n    return _insertBefore(this, newChild, refChild);\n  },\n  replaceChild: function (newChild, oldChild) {\n    //raises\n    _insertBefore(this, newChild, oldChild, assertPreReplacementValidityInDocument);\n    if (oldChild) {\n      this.removeChild(oldChild);\n    }\n  },\n  removeChild: function (oldChild) {\n    return _removeChild(this, oldChild);\n  },\n  appendChild: function (newChild) {\n    return this.insertBefore(newChild, null);\n  },\n  hasChildNodes: function () {\n    return this.firstChild != null;\n  },\n  cloneNode: function (deep) {\n    return cloneNode(this.ownerDocument || this, this, deep);\n  },\n  // Modified in DOM Level 2:\n  normalize: function () {\n    var child = this.firstChild;\n    while (child) {\n      var next = child.nextSibling;\n      if (next && next.nodeType == TEXT_NODE && child.nodeType == TEXT_NODE) {\n        this.removeChild(next);\n        child.appendData(next.data);\n      } else {\n        child.normalize();\n        child = next;\n      }\n    }\n  },\n  // Introduced in DOM Level 2:\n  isSupported: function (feature, version) {\n    return this.ownerDocument.implementation.hasFeature(feature, version);\n  },\n  // Introduced in DOM Level 2:\n  hasAttributes: function () {\n    return this.attributes.length > 0;\n  },\n  /**\n   * Look up the prefix associated to the given namespace URI, starting from this node.\n   * **The default namespace declarations are ignored by this method.**\n   * See Namespace Prefix Lookup for details on the algorithm used by this method.\n   *\n   * _Note: The implementation seems to be incomplete when compared to the algorithm described in the specs._\n   *\n   * @param {string | null} namespaceURI\n   * @returns {string | null}\n   * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-lookupNamespacePrefix\n   * @see https://www.w3.org/TR/DOM-Level-3-Core/namespaces-algorithms.html#lookupNamespacePrefixAlgo\n   * @see https://dom.spec.whatwg.org/#dom-node-lookupprefix\n   * @see https://github.com/xmldom/xmldom/issues/322\n   */\n  lookupPrefix: function (namespaceURI) {\n    var el = this;\n    while (el) {\n      var map = el._nsMap;\n      //console.dir(map)\n      if (map) {\n        for (var n in map) {\n          if (Object.prototype.hasOwnProperty.call(map, n) && map[n] === namespaceURI) {\n            return n;\n          }\n        }\n      }\n      el = el.nodeType == ATTRIBUTE_NODE ? el.ownerDocument : el.parentNode;\n    }\n    return null;\n  },\n  // Introduced in DOM Level 3:\n  lookupNamespaceURI: function (prefix) {\n    var el = this;\n    while (el) {\n      var map = el._nsMap;\n      //console.dir(map)\n      if (map) {\n        if (Object.prototype.hasOwnProperty.call(map, prefix)) {\n          return map[prefix];\n        }\n      }\n      el = el.nodeType == ATTRIBUTE_NODE ? el.ownerDocument : el.parentNode;\n    }\n    return null;\n  },\n  // Introduced in DOM Level 3:\n  isDefaultNamespace: function (namespaceURI) {\n    var prefix = this.lookupPrefix(namespaceURI);\n    return prefix == null;\n  }\n};\nfunction _xmlEncoder(c) {\n  return c == '<' && '&lt;' || c == '>' && '&gt;' || c == '&' && '&amp;' || c == '\"' && '&quot;' || '&#' + c.charCodeAt() + ';';\n}\ncopy(NodeType, Node);\ncopy(NodeType, Node.prototype);\n\n/**\n * @param callback return true for continue,false for break\n * @return boolean true: break visit;\n */\nfunction _visitNode(node, callback) {\n  if (callback(node)) {\n    return true;\n  }\n  if (node = node.firstChild) {\n    do {\n      if (_visitNode(node, callback)) {\n        return true;\n      }\n    } while (node = node.nextSibling);\n  }\n}\nfunction Document() {\n  this.ownerDocument = this;\n}\nfunction _onAddAttribute(doc, el, newAttr) {\n  doc && doc._inc++;\n  var ns = newAttr.namespaceURI;\n  if (ns === NAMESPACE.XMLNS) {\n    //update namespace\n    el._nsMap[newAttr.prefix ? newAttr.localName : ''] = newAttr.value;\n  }\n}\nfunction _onRemoveAttribute(doc, el, newAttr, remove) {\n  doc && doc._inc++;\n  var ns = newAttr.namespaceURI;\n  if (ns === NAMESPACE.XMLNS) {\n    //update namespace\n    delete el._nsMap[newAttr.prefix ? newAttr.localName : ''];\n  }\n}\n\n/**\n * Updates `el.childNodes`, updating the indexed items and it's `length`.\n * Passing `newChild` means it will be appended.\n * Otherwise it's assumed that an item has been removed,\n * and `el.firstNode` and it's `.nextSibling` are used\n * to walk the current list of child nodes.\n *\n * @param {Document} doc\n * @param {Node} el\n * @param {Node} [newChild]\n * @private\n */\nfunction _onUpdateChild(doc, el, newChild) {\n  if (doc && doc._inc) {\n    doc._inc++;\n    //update childNodes\n    var cs = el.childNodes;\n    if (newChild) {\n      cs[cs.length++] = newChild;\n    } else {\n      var child = el.firstChild;\n      var i = 0;\n      while (child) {\n        cs[i++] = child;\n        child = child.nextSibling;\n      }\n      cs.length = i;\n      delete cs[cs.length];\n    }\n  }\n}\n\n/**\n * Removes the connections between `parentNode` and `child`\n * and any existing `child.previousSibling` or `child.nextSibling`.\n *\n * @see https://github.com/xmldom/xmldom/issues/135\n * @see https://github.com/xmldom/xmldom/issues/145\n *\n * @param {Node} parentNode\n * @param {Node} child\n * @returns {Node} the child that was removed.\n * @private\n */\nfunction _removeChild(parentNode, child) {\n  var previous = child.previousSibling;\n  var next = child.nextSibling;\n  if (previous) {\n    previous.nextSibling = next;\n  } else {\n    parentNode.firstChild = next;\n  }\n  if (next) {\n    next.previousSibling = previous;\n  } else {\n    parentNode.lastChild = previous;\n  }\n  child.parentNode = null;\n  child.previousSibling = null;\n  child.nextSibling = null;\n  _onUpdateChild(parentNode.ownerDocument, parentNode);\n  return child;\n}\n\n/**\n * Returns `true` if `node` can be a parent for insertion.\n * @param {Node} node\n * @returns {boolean}\n */\nfunction hasValidParentNodeType(node) {\n  return node && (node.nodeType === Node.DOCUMENT_NODE || node.nodeType === Node.DOCUMENT_FRAGMENT_NODE || node.nodeType === Node.ELEMENT_NODE);\n}\n\n/**\n * Returns `true` if `node` can be inserted according to it's `nodeType`.\n * @param {Node} node\n * @returns {boolean}\n */\nfunction hasInsertableNodeType(node) {\n  return node && (isElementNode(node) || isTextNode(node) || isDocTypeNode(node) || node.nodeType === Node.DOCUMENT_FRAGMENT_NODE || node.nodeType === Node.COMMENT_NODE || node.nodeType === Node.PROCESSING_INSTRUCTION_NODE);\n}\n\n/**\n * Returns true if `node` is a DOCTYPE node\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isDocTypeNode(node) {\n  return node && node.nodeType === Node.DOCUMENT_TYPE_NODE;\n}\n\n/**\n * Returns true if the node is an element\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isElementNode(node) {\n  return node && node.nodeType === Node.ELEMENT_NODE;\n}\n/**\n * Returns true if `node` is a text node\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isTextNode(node) {\n  return node && node.nodeType === Node.TEXT_NODE;\n}\n\n/**\n * Check if en element node can be inserted before `child`, or at the end if child is falsy,\n * according to the presence and position of a doctype node on the same level.\n *\n * @param {Document} doc The document node\n * @param {Node} child the node that would become the nextSibling if the element would be inserted\n * @returns {boolean} `true` if an element can be inserted before child\n * @private\n * https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */\nfunction isElementInsertionPossible(doc, child) {\n  var parentChildNodes = doc.childNodes || [];\n  if (find(parentChildNodes, isElementNode) || isDocTypeNode(child)) {\n    return false;\n  }\n  var docTypeNode = find(parentChildNodes, isDocTypeNode);\n  return !(child && docTypeNode && parentChildNodes.indexOf(docTypeNode) > parentChildNodes.indexOf(child));\n}\n\n/**\n * Check if en element node can be inserted before `child`, or at the end if child is falsy,\n * according to the presence and position of a doctype node on the same level.\n *\n * @param {Node} doc The document node\n * @param {Node} child the node that would become the nextSibling if the element would be inserted\n * @returns {boolean} `true` if an element can be inserted before child\n * @private\n * https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */\nfunction isElementReplacementPossible(doc, child) {\n  var parentChildNodes = doc.childNodes || [];\n  function hasElementChildThatIsNotChild(node) {\n    return isElementNode(node) && node !== child;\n  }\n  if (find(parentChildNodes, hasElementChildThatIsNotChild)) {\n    return false;\n  }\n  var docTypeNode = find(parentChildNodes, isDocTypeNode);\n  return !(child && docTypeNode && parentChildNodes.indexOf(docTypeNode) > parentChildNodes.indexOf(child));\n}\n\n/**\n * @private\n * Steps 1-5 of the checks before inserting and before replacing a child are the same.\n *\n * @param {Node} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node=} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */\nfunction assertPreInsertionValidity1to5(parent, node, child) {\n  // 1. If `parent` is not a Document, DocumentFragment, or Element node, then throw a \"HierarchyRequestError\" DOMException.\n  if (!hasValidParentNodeType(parent)) {\n    throw new DOMException(HIERARCHY_REQUEST_ERR, 'Unexpected parent node type ' + parent.nodeType);\n  }\n  // 2. If `node` is a host-including inclusive ancestor of `parent`, then throw a \"HierarchyRequestError\" DOMException.\n  // not implemented!\n  // 3. If `child` is non-null and its parent is not `parent`, then throw a \"NotFoundError\" DOMException.\n  if (child && child.parentNode !== parent) {\n    throw new DOMException(NOT_FOUND_ERR, 'child not in parent');\n  }\n  if (\n  // 4. If `node` is not a DocumentFragment, DocumentType, Element, or CharacterData node, then throw a \"HierarchyRequestError\" DOMException.\n  !hasInsertableNodeType(node) ||\n  // 5. If either `node` is a Text node and `parent` is a document,\n  // the sax parser currently adds top level text nodes, this will be fixed in 0.9.0\n  // || (node.nodeType === Node.TEXT_NODE && parent.nodeType === Node.DOCUMENT_NODE)\n  // or `node` is a doctype and `parent` is not a document, then throw a \"HierarchyRequestError\" DOMException.\n  isDocTypeNode(node) && parent.nodeType !== Node.DOCUMENT_NODE) {\n    throw new DOMException(HIERARCHY_REQUEST_ERR, 'Unexpected node type ' + node.nodeType + ' for parent node type ' + parent.nodeType);\n  }\n}\n\n/**\n * @private\n * Step 6 of the checks before inserting and before replacing a child are different.\n *\n * @param {Document} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node | undefined} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */\nfunction assertPreInsertionValidityInDocument(parent, node, child) {\n  var parentChildNodes = parent.childNodes || [];\n  var nodeChildNodes = node.childNodes || [];\n\n  // DocumentFragment\n  if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n    var nodeChildElements = nodeChildNodes.filter(isElementNode);\n    // If node has more than one element child or has a Text node child.\n    if (nodeChildElements.length > 1 || find(nodeChildNodes, isTextNode)) {\n      throw new DOMException(HIERARCHY_REQUEST_ERR, 'More than one element or text in fragment');\n    }\n    // Otherwise, if `node` has one element child and either `parent` has an element child,\n    // `child` is a doctype, or `child` is non-null and a doctype is following `child`.\n    if (nodeChildElements.length === 1 && !isElementInsertionPossible(parent, child)) {\n      throw new DOMException(HIERARCHY_REQUEST_ERR, 'Element in fragment can not be inserted before doctype');\n    }\n  }\n  // Element\n  if (isElementNode(node)) {\n    // `parent` has an element child, `child` is a doctype,\n    // or `child` is non-null and a doctype is following `child`.\n    if (!isElementInsertionPossible(parent, child)) {\n      throw new DOMException(HIERARCHY_REQUEST_ERR, 'Only one element can be added and only after doctype');\n    }\n  }\n  // DocumentType\n  if (isDocTypeNode(node)) {\n    // `parent` has a doctype child,\n    if (find(parentChildNodes, isDocTypeNode)) {\n      throw new DOMException(HIERARCHY_REQUEST_ERR, 'Only one doctype is allowed');\n    }\n    var parentElementChild = find(parentChildNodes, isElementNode);\n    // `child` is non-null and an element is preceding `child`,\n    if (child && parentChildNodes.indexOf(parentElementChild) < parentChildNodes.indexOf(child)) {\n      throw new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can only be inserted before an element');\n    }\n    // or `child` is null and `parent` has an element child.\n    if (!child && parentElementChild) {\n      throw new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can not be appended since element is present');\n    }\n  }\n}\n\n/**\n * @private\n * Step 6 of the checks before inserting and before replacing a child are different.\n *\n * @param {Document} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node | undefined} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */\nfunction assertPreReplacementValidityInDocument(parent, node, child) {\n  var parentChildNodes = parent.childNodes || [];\n  var nodeChildNodes = node.childNodes || [];\n\n  // DocumentFragment\n  if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n    var nodeChildElements = nodeChildNodes.filter(isElementNode);\n    // If `node` has more than one element child or has a Text node child.\n    if (nodeChildElements.length > 1 || find(nodeChildNodes, isTextNode)) {\n      throw new DOMException(HIERARCHY_REQUEST_ERR, 'More than one element or text in fragment');\n    }\n    // Otherwise, if `node` has one element child and either `parent` has an element child that is not `child` or a doctype is following `child`.\n    if (nodeChildElements.length === 1 && !isElementReplacementPossible(parent, child)) {\n      throw new DOMException(HIERARCHY_REQUEST_ERR, 'Element in fragment can not be inserted before doctype');\n    }\n  }\n  // Element\n  if (isElementNode(node)) {\n    // `parent` has an element child that is not `child` or a doctype is following `child`.\n    if (!isElementReplacementPossible(parent, child)) {\n      throw new DOMException(HIERARCHY_REQUEST_ERR, 'Only one element can be added and only after doctype');\n    }\n  }\n  // DocumentType\n  if (isDocTypeNode(node)) {\n    function hasDoctypeChildThatIsNotChild(node) {\n      return isDocTypeNode(node) && node !== child;\n    }\n\n    // `parent` has a doctype child that is not `child`,\n    if (find(parentChildNodes, hasDoctypeChildThatIsNotChild)) {\n      throw new DOMException(HIERARCHY_REQUEST_ERR, 'Only one doctype is allowed');\n    }\n    var parentElementChild = find(parentChildNodes, isElementNode);\n    // or an element is preceding `child`.\n    if (child && parentChildNodes.indexOf(parentElementChild) < parentChildNodes.indexOf(child)) {\n      throw new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can only be inserted before an element');\n    }\n  }\n}\n\n/**\n * @private\n * @param {Node} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node=} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */\nfunction _insertBefore(parent, node, child, _inDocumentAssertion) {\n  // To ensure pre-insertion validity of a node into a parent before a child, run these steps:\n  assertPreInsertionValidity1to5(parent, node, child);\n\n  // If parent is a document, and any of the statements below, switched on the interface node implements,\n  // are true, then throw a \"HierarchyRequestError\" DOMException.\n  if (parent.nodeType === Node.DOCUMENT_NODE) {\n    (_inDocumentAssertion || assertPreInsertionValidityInDocument)(parent, node, child);\n  }\n  var cp = node.parentNode;\n  if (cp) {\n    cp.removeChild(node); //remove and update\n  }\n  if (node.nodeType === DOCUMENT_FRAGMENT_NODE) {\n    var newFirst = node.firstChild;\n    if (newFirst == null) {\n      return node;\n    }\n    var newLast = node.lastChild;\n  } else {\n    newFirst = newLast = node;\n  }\n  var pre = child ? child.previousSibling : parent.lastChild;\n  newFirst.previousSibling = pre;\n  newLast.nextSibling = child;\n  if (pre) {\n    pre.nextSibling = newFirst;\n  } else {\n    parent.firstChild = newFirst;\n  }\n  if (child == null) {\n    parent.lastChild = newLast;\n  } else {\n    child.previousSibling = newLast;\n  }\n  do {\n    newFirst.parentNode = parent;\n  } while (newFirst !== newLast && (newFirst = newFirst.nextSibling));\n  _onUpdateChild(parent.ownerDocument || parent, parent);\n  //console.log(parent.lastChild.nextSibling == null)\n  if (node.nodeType == DOCUMENT_FRAGMENT_NODE) {\n    node.firstChild = node.lastChild = null;\n  }\n  return node;\n}\n\n/**\n * Appends `newChild` to `parentNode`.\n * If `newChild` is already connected to a `parentNode` it is first removed from it.\n *\n * @see https://github.com/xmldom/xmldom/issues/135\n * @see https://github.com/xmldom/xmldom/issues/145\n * @param {Node} parentNode\n * @param {Node} newChild\n * @returns {Node}\n * @private\n */\nfunction _appendSingleChild(parentNode, newChild) {\n  if (newChild.parentNode) {\n    newChild.parentNode.removeChild(newChild);\n  }\n  newChild.parentNode = parentNode;\n  newChild.previousSibling = parentNode.lastChild;\n  newChild.nextSibling = null;\n  if (newChild.previousSibling) {\n    newChild.previousSibling.nextSibling = newChild;\n  } else {\n    parentNode.firstChild = newChild;\n  }\n  parentNode.lastChild = newChild;\n  _onUpdateChild(parentNode.ownerDocument, parentNode, newChild);\n  return newChild;\n}\nDocument.prototype = {\n  //implementation : null,\n  nodeName: '#document',\n  nodeType: DOCUMENT_NODE,\n  /**\n   * The DocumentType node of the document.\n   *\n   * @readonly\n   * @type DocumentType\n   */\n  doctype: null,\n  documentElement: null,\n  _inc: 1,\n  insertBefore: function (newChild, refChild) {\n    //raises\n    if (newChild.nodeType == DOCUMENT_FRAGMENT_NODE) {\n      var child = newChild.firstChild;\n      while (child) {\n        var next = child.nextSibling;\n        this.insertBefore(child, refChild);\n        child = next;\n      }\n      return newChild;\n    }\n    _insertBefore(this, newChild, refChild);\n    newChild.ownerDocument = this;\n    if (this.documentElement === null && newChild.nodeType === ELEMENT_NODE) {\n      this.documentElement = newChild;\n    }\n    return newChild;\n  },\n  removeChild: function (oldChild) {\n    if (this.documentElement == oldChild) {\n      this.documentElement = null;\n    }\n    return _removeChild(this, oldChild);\n  },\n  replaceChild: function (newChild, oldChild) {\n    //raises\n    _insertBefore(this, newChild, oldChild, assertPreReplacementValidityInDocument);\n    newChild.ownerDocument = this;\n    if (oldChild) {\n      this.removeChild(oldChild);\n    }\n    if (isElementNode(newChild)) {\n      this.documentElement = newChild;\n    }\n  },\n  // Introduced in DOM Level 2:\n  importNode: function (importedNode, deep) {\n    return importNode(this, importedNode, deep);\n  },\n  // Introduced in DOM Level 2:\n  getElementById: function (id) {\n    var rtv = null;\n    _visitNode(this.documentElement, function (node) {\n      if (node.nodeType == ELEMENT_NODE) {\n        if (node.getAttribute('id') == id) {\n          rtv = node;\n          return true;\n        }\n      }\n    });\n    return rtv;\n  },\n  /**\n   * The `getElementsByClassName` method of `Document` interface returns an array-like object\n   * of all child elements which have **all** of the given class name(s).\n   *\n   * Returns an empty list if `classeNames` is an empty string or only contains HTML white space characters.\n   *\n   *\n   * Warning: This is a live LiveNodeList.\n   * Changes in the DOM will reflect in the array as the changes occur.\n   * If an element selected by this array no longer qualifies for the selector,\n   * it will automatically be removed. Be aware of this for iteration purposes.\n   *\n   * @param {string} classNames is a string representing the class name(s) to match; multiple class names are separated by (ASCII-)whitespace\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementsByClassName\n   * @see https://dom.spec.whatwg.org/#concept-getelementsbyclassname\n   */\n  getElementsByClassName: function (classNames) {\n    var classNamesSet = toOrderedSet(classNames);\n    return new LiveNodeList(this, function (base) {\n      var ls = [];\n      if (classNamesSet.length > 0) {\n        _visitNode(base.documentElement, function (node) {\n          if (node !== base && node.nodeType === ELEMENT_NODE) {\n            var nodeClassNames = node.getAttribute('class');\n            // can be null if the attribute does not exist\n            if (nodeClassNames) {\n              // before splitting and iterating just compare them for the most common case\n              var matches = classNames === nodeClassNames;\n              if (!matches) {\n                var nodeClassNamesSet = toOrderedSet(nodeClassNames);\n                matches = classNamesSet.every(arrayIncludes(nodeClassNamesSet));\n              }\n              if (matches) {\n                ls.push(node);\n              }\n            }\n          }\n        });\n      }\n      return ls;\n    });\n  },\n  //document factory method:\n  createElement: function (tagName) {\n    var node = new Element();\n    node.ownerDocument = this;\n    node.nodeName = tagName;\n    node.tagName = tagName;\n    node.localName = tagName;\n    node.childNodes = new NodeList();\n    var attrs = node.attributes = new NamedNodeMap();\n    attrs._ownerElement = node;\n    return node;\n  },\n  createDocumentFragment: function () {\n    var node = new DocumentFragment();\n    node.ownerDocument = this;\n    node.childNodes = new NodeList();\n    return node;\n  },\n  createTextNode: function (data) {\n    var node = new Text();\n    node.ownerDocument = this;\n    node.appendData(data);\n    return node;\n  },\n  createComment: function (data) {\n    var node = new Comment();\n    node.ownerDocument = this;\n    node.appendData(data);\n    return node;\n  },\n  createCDATASection: function (data) {\n    var node = new CDATASection();\n    node.ownerDocument = this;\n    node.appendData(data);\n    return node;\n  },\n  createProcessingInstruction: function (target, data) {\n    var node = new ProcessingInstruction();\n    node.ownerDocument = this;\n    node.tagName = node.nodeName = node.target = target;\n    node.nodeValue = node.data = data;\n    return node;\n  },\n  createAttribute: function (name) {\n    var node = new Attr();\n    node.ownerDocument = this;\n    node.name = name;\n    node.nodeName = name;\n    node.localName = name;\n    node.specified = true;\n    return node;\n  },\n  createEntityReference: function (name) {\n    var node = new EntityReference();\n    node.ownerDocument = this;\n    node.nodeName = name;\n    return node;\n  },\n  // Introduced in DOM Level 2:\n  createElementNS: function (namespaceURI, qualifiedName) {\n    var node = new Element();\n    var pl = qualifiedName.split(':');\n    var attrs = node.attributes = new NamedNodeMap();\n    node.childNodes = new NodeList();\n    node.ownerDocument = this;\n    node.nodeName = qualifiedName;\n    node.tagName = qualifiedName;\n    node.namespaceURI = namespaceURI;\n    if (pl.length == 2) {\n      node.prefix = pl[0];\n      node.localName = pl[1];\n    } else {\n      //el.prefix = null;\n      node.localName = qualifiedName;\n    }\n    attrs._ownerElement = node;\n    return node;\n  },\n  // Introduced in DOM Level 2:\n  createAttributeNS: function (namespaceURI, qualifiedName) {\n    var node = new Attr();\n    var pl = qualifiedName.split(':');\n    node.ownerDocument = this;\n    node.nodeName = qualifiedName;\n    node.name = qualifiedName;\n    node.namespaceURI = namespaceURI;\n    node.specified = true;\n    if (pl.length == 2) {\n      node.prefix = pl[0];\n      node.localName = pl[1];\n    } else {\n      //el.prefix = null;\n      node.localName = qualifiedName;\n    }\n    return node;\n  }\n};\n_extends(Document, Node);\nfunction Element() {\n  this._nsMap = {};\n}\n;\nElement.prototype = {\n  nodeType: ELEMENT_NODE,\n  hasAttribute: function (name) {\n    return this.getAttributeNode(name) != null;\n  },\n  getAttribute: function (name) {\n    var attr = this.getAttributeNode(name);\n    return attr && attr.value || '';\n  },\n  getAttributeNode: function (name) {\n    return this.attributes.getNamedItem(name);\n  },\n  setAttribute: function (name, value) {\n    var attr = this.ownerDocument.createAttribute(name);\n    attr.value = attr.nodeValue = \"\" + value;\n    this.setAttributeNode(attr);\n  },\n  removeAttribute: function (name) {\n    var attr = this.getAttributeNode(name);\n    attr && this.removeAttributeNode(attr);\n  },\n  //four real opeartion method\n  appendChild: function (newChild) {\n    if (newChild.nodeType === DOCUMENT_FRAGMENT_NODE) {\n      return this.insertBefore(newChild, null);\n    } else {\n      return _appendSingleChild(this, newChild);\n    }\n  },\n  setAttributeNode: function (newAttr) {\n    return this.attributes.setNamedItem(newAttr);\n  },\n  setAttributeNodeNS: function (newAttr) {\n    return this.attributes.setNamedItemNS(newAttr);\n  },\n  removeAttributeNode: function (oldAttr) {\n    //console.log(this == oldAttr.ownerElement)\n    return this.attributes.removeNamedItem(oldAttr.nodeName);\n  },\n  //get real attribute name,and remove it by removeAttributeNode\n  removeAttributeNS: function (namespaceURI, localName) {\n    var old = this.getAttributeNodeNS(namespaceURI, localName);\n    old && this.removeAttributeNode(old);\n  },\n  hasAttributeNS: function (namespaceURI, localName) {\n    return this.getAttributeNodeNS(namespaceURI, localName) != null;\n  },\n  getAttributeNS: function (namespaceURI, localName) {\n    var attr = this.getAttributeNodeNS(namespaceURI, localName);\n    return attr && attr.value || '';\n  },\n  setAttributeNS: function (namespaceURI, qualifiedName, value) {\n    var attr = this.ownerDocument.createAttributeNS(namespaceURI, qualifiedName);\n    attr.value = attr.nodeValue = \"\" + value;\n    this.setAttributeNode(attr);\n  },\n  getAttributeNodeNS: function (namespaceURI, localName) {\n    return this.attributes.getNamedItemNS(namespaceURI, localName);\n  },\n  getElementsByTagName: function (tagName) {\n    return new LiveNodeList(this, function (base) {\n      var ls = [];\n      _visitNode(base, function (node) {\n        if (node !== base && node.nodeType == ELEMENT_NODE && (tagName === '*' || node.tagName == tagName)) {\n          ls.push(node);\n        }\n      });\n      return ls;\n    });\n  },\n  getElementsByTagNameNS: function (namespaceURI, localName) {\n    return new LiveNodeList(this, function (base) {\n      var ls = [];\n      _visitNode(base, function (node) {\n        if (node !== base && node.nodeType === ELEMENT_NODE && (namespaceURI === '*' || node.namespaceURI === namespaceURI) && (localName === '*' || node.localName == localName)) {\n          ls.push(node);\n        }\n      });\n      return ls;\n    });\n  }\n};\nDocument.prototype.getElementsByTagName = Element.prototype.getElementsByTagName;\nDocument.prototype.getElementsByTagNameNS = Element.prototype.getElementsByTagNameNS;\n_extends(Element, Node);\nfunction Attr() {}\n;\nAttr.prototype.nodeType = ATTRIBUTE_NODE;\n_extends(Attr, Node);\nfunction CharacterData() {}\n;\nCharacterData.prototype = {\n  data: '',\n  substringData: function (offset, count) {\n    return this.data.substring(offset, offset + count);\n  },\n  appendData: function (text) {\n    text = this.data + text;\n    this.nodeValue = this.data = text;\n    this.length = text.length;\n  },\n  insertData: function (offset, text) {\n    this.replaceData(offset, 0, text);\n  },\n  appendChild: function (newChild) {\n    throw new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR]);\n  },\n  deleteData: function (offset, count) {\n    this.replaceData(offset, count, \"\");\n  },\n  replaceData: function (offset, count, text) {\n    var start = this.data.substring(0, offset);\n    var end = this.data.substring(offset + count);\n    text = start + text + end;\n    this.nodeValue = this.data = text;\n    this.length = text.length;\n  }\n};\n_extends(CharacterData, Node);\nfunction Text() {}\n;\nText.prototype = {\n  nodeName: \"#text\",\n  nodeType: TEXT_NODE,\n  splitText: function (offset) {\n    var text = this.data;\n    var newText = text.substring(offset);\n    text = text.substring(0, offset);\n    this.data = this.nodeValue = text;\n    this.length = text.length;\n    var newNode = this.ownerDocument.createTextNode(newText);\n    if (this.parentNode) {\n      this.parentNode.insertBefore(newNode, this.nextSibling);\n    }\n    return newNode;\n  }\n};\n_extends(Text, CharacterData);\nfunction Comment() {}\n;\nComment.prototype = {\n  nodeName: \"#comment\",\n  nodeType: COMMENT_NODE\n};\n_extends(Comment, CharacterData);\nfunction CDATASection() {}\n;\nCDATASection.prototype = {\n  nodeName: \"#cdata-section\",\n  nodeType: CDATA_SECTION_NODE\n};\n_extends(CDATASection, CharacterData);\nfunction DocumentType() {}\n;\nDocumentType.prototype.nodeType = DOCUMENT_TYPE_NODE;\n_extends(DocumentType, Node);\nfunction Notation() {}\n;\nNotation.prototype.nodeType = NOTATION_NODE;\n_extends(Notation, Node);\nfunction Entity() {}\n;\nEntity.prototype.nodeType = ENTITY_NODE;\n_extends(Entity, Node);\nfunction EntityReference() {}\n;\nEntityReference.prototype.nodeType = ENTITY_REFERENCE_NODE;\n_extends(EntityReference, Node);\nfunction DocumentFragment() {}\n;\nDocumentFragment.prototype.nodeName = \"#document-fragment\";\nDocumentFragment.prototype.nodeType = DOCUMENT_FRAGMENT_NODE;\n_extends(DocumentFragment, Node);\nfunction ProcessingInstruction() {}\nProcessingInstruction.prototype.nodeType = PROCESSING_INSTRUCTION_NODE;\n_extends(ProcessingInstruction, Node);\nfunction XMLSerializer() {}\nXMLSerializer.prototype.serializeToString = function (node, isHtml, nodeFilter) {\n  return nodeSerializeToString.call(node, isHtml, nodeFilter);\n};\nNode.prototype.toString = nodeSerializeToString;\nfunction nodeSerializeToString(isHtml, nodeFilter) {\n  var buf = [];\n  var refNode = this.nodeType == 9 && this.documentElement || this;\n  var prefix = refNode.prefix;\n  var uri = refNode.namespaceURI;\n  if (uri && prefix == null) {\n    //console.log(prefix)\n    var prefix = refNode.lookupPrefix(uri);\n    if (prefix == null) {\n      //isHTML = true;\n      var visibleNamespaces = [{\n        namespace: uri,\n        prefix: null\n      }\n      //{namespace:uri,prefix:''}\n      ];\n    }\n  }\n  serializeToString(this, buf, isHtml, nodeFilter, visibleNamespaces);\n  //console.log('###',this.nodeType,uri,prefix,buf.join(''))\n  return buf.join('');\n}\nfunction needNamespaceDefine(node, isHTML, visibleNamespaces) {\n  var prefix = node.prefix || '';\n  var uri = node.namespaceURI;\n  // According to [Namespaces in XML 1.0](https://www.w3.org/TR/REC-xml-names/#ns-using) ,\n  // and more specifically https://www.w3.org/TR/REC-xml-names/#nsc-NoPrefixUndecl :\n  // > In a namespace declaration for a prefix [...], the attribute value MUST NOT be empty.\n  // in a similar manner [Namespaces in XML 1.1](https://www.w3.org/TR/xml-names11/#ns-using)\n  // and more specifically https://www.w3.org/TR/xml-names11/#nsc-NSDeclared :\n  // > [...] Furthermore, the attribute value [...] must not be an empty string.\n  // so serializing empty namespace value like xmlns:ds=\"\" would produce an invalid XML document.\n  if (!uri) {\n    return false;\n  }\n  if (prefix === \"xml\" && uri === NAMESPACE.XML || uri === NAMESPACE.XMLNS) {\n    return false;\n  }\n  var i = visibleNamespaces.length;\n  while (i--) {\n    var ns = visibleNamespaces[i];\n    // get namespace prefix\n    if (ns.prefix === prefix) {\n      return ns.namespace !== uri;\n    }\n  }\n  return true;\n}\n/**\n * Well-formed constraint: No < in Attribute Values\n * > The replacement text of any entity referred to directly or indirectly\n * > in an attribute value must not contain a <.\n * @see https://www.w3.org/TR/xml11/#CleanAttrVals\n * @see https://www.w3.org/TR/xml11/#NT-AttValue\n *\n * Literal whitespace other than space that appear in attribute values\n * are serialized as their entity references, so they will be preserved.\n * (In contrast to whitespace literals in the input which are normalized to spaces)\n * @see https://www.w3.org/TR/xml11/#AVNormalize\n * @see https://w3c.github.io/DOM-Parsing/#serializing-an-element-s-attributes\n */\nfunction addSerializedAttribute(buf, qualifiedName, value) {\n  buf.push(' ', qualifiedName, '=\"', value.replace(/[<>&\"\\t\\n\\r]/g, _xmlEncoder), '\"');\n}\nfunction serializeToString(node, buf, isHTML, nodeFilter, visibleNamespaces) {\n  if (!visibleNamespaces) {\n    visibleNamespaces = [];\n  }\n  if (nodeFilter) {\n    node = nodeFilter(node);\n    if (node) {\n      if (typeof node == 'string') {\n        buf.push(node);\n        return;\n      }\n    } else {\n      return;\n    }\n    //buf.sort.apply(attrs, attributeSorter);\n  }\n  switch (node.nodeType) {\n    case ELEMENT_NODE:\n      var attrs = node.attributes;\n      var len = attrs.length;\n      var child = node.firstChild;\n      var nodeName = node.tagName;\n      isHTML = NAMESPACE.isHTML(node.namespaceURI) || isHTML;\n      var prefixedNodeName = nodeName;\n      if (!isHTML && !node.prefix && node.namespaceURI) {\n        var defaultNS;\n        // lookup current default ns from `xmlns` attribute\n        for (var ai = 0; ai < attrs.length; ai++) {\n          if (attrs.item(ai).name === 'xmlns') {\n            defaultNS = attrs.item(ai).value;\n            break;\n          }\n        }\n        if (!defaultNS) {\n          // lookup current default ns in visibleNamespaces\n          for (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {\n            var namespace = visibleNamespaces[nsi];\n            if (namespace.prefix === '' && namespace.namespace === node.namespaceURI) {\n              defaultNS = namespace.namespace;\n              break;\n            }\n          }\n        }\n        if (defaultNS !== node.namespaceURI) {\n          for (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {\n            var namespace = visibleNamespaces[nsi];\n            if (namespace.namespace === node.namespaceURI) {\n              if (namespace.prefix) {\n                prefixedNodeName = namespace.prefix + ':' + nodeName;\n              }\n              break;\n            }\n          }\n        }\n      }\n      buf.push('<', prefixedNodeName);\n      for (var i = 0; i < len; i++) {\n        // add namespaces for attributes\n        var attr = attrs.item(i);\n        if (attr.prefix == 'xmlns') {\n          visibleNamespaces.push({\n            prefix: attr.localName,\n            namespace: attr.value\n          });\n        } else if (attr.nodeName == 'xmlns') {\n          visibleNamespaces.push({\n            prefix: '',\n            namespace: attr.value\n          });\n        }\n      }\n      for (var i = 0; i < len; i++) {\n        var attr = attrs.item(i);\n        if (needNamespaceDefine(attr, isHTML, visibleNamespaces)) {\n          var prefix = attr.prefix || '';\n          var uri = attr.namespaceURI;\n          addSerializedAttribute(buf, prefix ? 'xmlns:' + prefix : \"xmlns\", uri);\n          visibleNamespaces.push({\n            prefix: prefix,\n            namespace: uri\n          });\n        }\n        serializeToString(attr, buf, isHTML, nodeFilter, visibleNamespaces);\n      }\n\n      // add namespace for current node\n      if (nodeName === prefixedNodeName && needNamespaceDefine(node, isHTML, visibleNamespaces)) {\n        var prefix = node.prefix || '';\n        var uri = node.namespaceURI;\n        addSerializedAttribute(buf, prefix ? 'xmlns:' + prefix : \"xmlns\", uri);\n        visibleNamespaces.push({\n          prefix: prefix,\n          namespace: uri\n        });\n      }\n      if (child || isHTML && !/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)) {\n        buf.push('>');\n        //if is cdata child node\n        if (isHTML && /^script$/i.test(nodeName)) {\n          while (child) {\n            if (child.data) {\n              buf.push(child.data);\n            } else {\n              serializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n            }\n            child = child.nextSibling;\n          }\n        } else {\n          while (child) {\n            serializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n            child = child.nextSibling;\n          }\n        }\n        buf.push('</', prefixedNodeName, '>');\n      } else {\n        buf.push('/>');\n      }\n      // remove added visible namespaces\n      //visibleNamespaces.length = startVisibleNamespaces;\n      return;\n    case DOCUMENT_NODE:\n    case DOCUMENT_FRAGMENT_NODE:\n      var child = node.firstChild;\n      while (child) {\n        serializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n        child = child.nextSibling;\n      }\n      return;\n    case ATTRIBUTE_NODE:\n      return addSerializedAttribute(buf, node.name, node.value);\n    case TEXT_NODE:\n      /**\n       * The ampersand character (&) and the left angle bracket (<) must not appear in their literal form,\n       * except when used as markup delimiters, or within a comment, a processing instruction, or a CDATA section.\n       * If they are needed elsewhere, they must be escaped using either numeric character references or the strings\n       * `&amp;` and `&lt;` respectively.\n       * The right angle bracket (>) may be represented using the string \" &gt; \", and must, for compatibility,\n       * be escaped using either `&gt;` or a character reference when it appears in the string `]]>` in content,\n       * when that string is not marking the end of a CDATA section.\n       *\n       * In the content of elements, character data is any string of characters\n       * which does not contain the start-delimiter of any markup\n       * and does not include the CDATA-section-close delimiter, `]]>`.\n       *\n       * @see https://www.w3.org/TR/xml/#NT-CharData\n       * @see https://w3c.github.io/DOM-Parsing/#xml-serializing-a-text-node\n       */\n      return buf.push(node.data.replace(/[<&>]/g, _xmlEncoder));\n    case CDATA_SECTION_NODE:\n      return buf.push('<![CDATA[', node.data, ']]>');\n    case COMMENT_NODE:\n      return buf.push(\"<!--\", node.data, \"-->\");\n    case DOCUMENT_TYPE_NODE:\n      var pubid = node.publicId;\n      var sysid = node.systemId;\n      buf.push('<!DOCTYPE ', node.name);\n      if (pubid) {\n        buf.push(' PUBLIC ', pubid);\n        if (sysid && sysid != '.') {\n          buf.push(' ', sysid);\n        }\n        buf.push('>');\n      } else if (sysid && sysid != '.') {\n        buf.push(' SYSTEM ', sysid, '>');\n      } else {\n        var sub = node.internalSubset;\n        if (sub) {\n          buf.push(\" [\", sub, \"]\");\n        }\n        buf.push(\">\");\n      }\n      return;\n    case PROCESSING_INSTRUCTION_NODE:\n      return buf.push(\"<?\", node.target, \" \", node.data, \"?>\");\n    case ENTITY_REFERENCE_NODE:\n      return buf.push('&', node.nodeName, ';');\n    //case ENTITY_NODE:\n    //case NOTATION_NODE:\n    default:\n      buf.push('??', node.nodeName);\n  }\n}\nfunction importNode(doc, node, deep) {\n  var node2;\n  switch (node.nodeType) {\n    case ELEMENT_NODE:\n      node2 = node.cloneNode(false);\n      node2.ownerDocument = doc;\n    //var attrs = node2.attributes;\n    //var len = attrs.length;\n    //for(var i=0;i<len;i++){\n    //node2.setAttributeNodeNS(importNode(doc,attrs.item(i),deep));\n    //}\n    case DOCUMENT_FRAGMENT_NODE:\n      break;\n    case ATTRIBUTE_NODE:\n      deep = true;\n      break;\n    //case ENTITY_REFERENCE_NODE:\n    //case PROCESSING_INSTRUCTION_NODE:\n    ////case TEXT_NODE:\n    //case CDATA_SECTION_NODE:\n    //case COMMENT_NODE:\n    //\tdeep = false;\n    //\tbreak;\n    //case DOCUMENT_NODE:\n    //case DOCUMENT_TYPE_NODE:\n    //cannot be imported.\n    //case ENTITY_NODE:\n    //case NOTATION_NODE：\n    //can not hit in level3\n    //default:throw e;\n  }\n  if (!node2) {\n    node2 = node.cloneNode(false); //false\n  }\n  node2.ownerDocument = doc;\n  node2.parentNode = null;\n  if (deep) {\n    var child = node.firstChild;\n    while (child) {\n      node2.appendChild(importNode(doc, child, deep));\n      child = child.nextSibling;\n    }\n  }\n  return node2;\n}\n//\n//var _relationMap = {firstChild:1,lastChild:1,previousSibling:1,nextSibling:1,\n//\t\t\t\t\tattributes:1,childNodes:1,parentNode:1,documentElement:1,doctype,};\nfunction cloneNode(doc, node, deep) {\n  var node2 = new node.constructor();\n  for (var n in node) {\n    if (Object.prototype.hasOwnProperty.call(node, n)) {\n      var v = node[n];\n      if (typeof v != \"object\") {\n        if (v != node2[n]) {\n          node2[n] = v;\n        }\n      }\n    }\n  }\n  if (node.childNodes) {\n    node2.childNodes = new NodeList();\n  }\n  node2.ownerDocument = doc;\n  switch (node2.nodeType) {\n    case ELEMENT_NODE:\n      var attrs = node.attributes;\n      var attrs2 = node2.attributes = new NamedNodeMap();\n      var len = attrs.length;\n      attrs2._ownerElement = node2;\n      for (var i = 0; i < len; i++) {\n        node2.setAttributeNode(cloneNode(doc, attrs.item(i), true));\n      }\n      break;\n      ;\n    case ATTRIBUTE_NODE:\n      deep = true;\n  }\n  if (deep) {\n    var child = node.firstChild;\n    while (child) {\n      node2.appendChild(cloneNode(doc, child, deep));\n      child = child.nextSibling;\n    }\n  }\n  return node2;\n}\nfunction __set__(object, key, value) {\n  object[key] = value;\n}\n//do dynamic\ntry {\n  if (Object.defineProperty) {\n    Object.defineProperty(LiveNodeList.prototype, 'length', {\n      get: function () {\n        _updateLiveList(this);\n        return this.$$length;\n      }\n    });\n    Object.defineProperty(Node.prototype, 'textContent', {\n      get: function () {\n        return getTextContent(this);\n      },\n      set: function (data) {\n        switch (this.nodeType) {\n          case ELEMENT_NODE:\n          case DOCUMENT_FRAGMENT_NODE:\n            while (this.firstChild) {\n              this.removeChild(this.firstChild);\n            }\n            if (data || String(data)) {\n              this.appendChild(this.ownerDocument.createTextNode(data));\n            }\n            break;\n          default:\n            this.data = data;\n            this.value = data;\n            this.nodeValue = data;\n        }\n      }\n    });\n    function getTextContent(node) {\n      switch (node.nodeType) {\n        case ELEMENT_NODE:\n        case DOCUMENT_FRAGMENT_NODE:\n          var buf = [];\n          node = node.firstChild;\n          while (node) {\n            if (node.nodeType !== 7 && node.nodeType !== 8) {\n              buf.push(getTextContent(node));\n            }\n            node = node.nextSibling;\n          }\n          return buf.join('');\n        default:\n          return node.nodeValue;\n      }\n    }\n    __set__ = function (object, key, value) {\n      //console.log(value)\n      object['$$' + key] = value;\n    };\n  }\n} catch (e) {//ie8\n}\n\n//if(typeof require == 'function'){\nexports.DocumentType = DocumentType;\nexports.DOMException = DOMException;\nexports.DOMImplementation = DOMImplementation;\nexports.Element = Element;\nexports.Node = Node;\nexports.NodeList = NodeList;\nexports.XMLSerializer = XMLSerializer;\n//}\n\n//# sourceURL=webpack://my-app/../../@xmldom/xmldom/lib/dom.js?");

/***/ }),

/***/ "../../@xmldom/xmldom/lib/entities.js":
/*!********************************************!*\
  !*** ../../@xmldom/xmldom/lib/entities.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nvar freeze = (__webpack_require__(/*! ./conventions */ \"../../@xmldom/xmldom/lib/conventions.js\").freeze);\n\n/**\n * The entities that are predefined in every XML document.\n *\n * @see https://www.w3.org/TR/2006/REC-xml11-20060816/#sec-predefined-ent W3C XML 1.1\n * @see https://www.w3.org/TR/2008/REC-xml-20081126/#sec-predefined-ent W3C XML 1.0\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Predefined_entities_in_XML Wikipedia\n */\nexports.XML_ENTITIES = freeze({\n  amp: '&',\n  apos: \"'\",\n  gt: '>',\n  lt: '<',\n  quot: '\"'\n});\n\n/**\n * A map of all entities that are detected in an HTML document.\n * They contain all entries from `XML_ENTITIES`.\n *\n * @see XML_ENTITIES\n * @see DOMParser.parseFromString\n * @see DOMImplementation.prototype.createHTMLDocument\n * @see https://html.spec.whatwg.org/#named-character-references WHATWG HTML(5) Spec\n * @see https://html.spec.whatwg.org/entities.json JSON\n * @see https://www.w3.org/TR/xml-entity-names/ W3C XML Entity Names\n * @see https://www.w3.org/TR/html4/sgml/entities.html W3C HTML4/SGML\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Character_entity_references_in_HTML Wikipedia (HTML)\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Entities_representing_special_characters_in_XHTML Wikpedia (XHTML)\n */\nexports.HTML_ENTITIES = freeze({\n  Aacute: '\\u00C1',\n  aacute: '\\u00E1',\n  Abreve: '\\u0102',\n  abreve: '\\u0103',\n  ac: '\\u223E',\n  acd: '\\u223F',\n  acE: '\\u223E\\u0333',\n  Acirc: '\\u00C2',\n  acirc: '\\u00E2',\n  acute: '\\u00B4',\n  Acy: '\\u0410',\n  acy: '\\u0430',\n  AElig: '\\u00C6',\n  aelig: '\\u00E6',\n  af: '\\u2061',\n  Afr: '\\uD835\\uDD04',\n  afr: '\\uD835\\uDD1E',\n  Agrave: '\\u00C0',\n  agrave: '\\u00E0',\n  alefsym: '\\u2135',\n  aleph: '\\u2135',\n  Alpha: '\\u0391',\n  alpha: '\\u03B1',\n  Amacr: '\\u0100',\n  amacr: '\\u0101',\n  amalg: '\\u2A3F',\n  AMP: '\\u0026',\n  amp: '\\u0026',\n  And: '\\u2A53',\n  and: '\\u2227',\n  andand: '\\u2A55',\n  andd: '\\u2A5C',\n  andslope: '\\u2A58',\n  andv: '\\u2A5A',\n  ang: '\\u2220',\n  ange: '\\u29A4',\n  angle: '\\u2220',\n  angmsd: '\\u2221',\n  angmsdaa: '\\u29A8',\n  angmsdab: '\\u29A9',\n  angmsdac: '\\u29AA',\n  angmsdad: '\\u29AB',\n  angmsdae: '\\u29AC',\n  angmsdaf: '\\u29AD',\n  angmsdag: '\\u29AE',\n  angmsdah: '\\u29AF',\n  angrt: '\\u221F',\n  angrtvb: '\\u22BE',\n  angrtvbd: '\\u299D',\n  angsph: '\\u2222',\n  angst: '\\u00C5',\n  angzarr: '\\u237C',\n  Aogon: '\\u0104',\n  aogon: '\\u0105',\n  Aopf: '\\uD835\\uDD38',\n  aopf: '\\uD835\\uDD52',\n  ap: '\\u2248',\n  apacir: '\\u2A6F',\n  apE: '\\u2A70',\n  ape: '\\u224A',\n  apid: '\\u224B',\n  apos: '\\u0027',\n  ApplyFunction: '\\u2061',\n  approx: '\\u2248',\n  approxeq: '\\u224A',\n  Aring: '\\u00C5',\n  aring: '\\u00E5',\n  Ascr: '\\uD835\\uDC9C',\n  ascr: '\\uD835\\uDCB6',\n  Assign: '\\u2254',\n  ast: '\\u002A',\n  asymp: '\\u2248',\n  asympeq: '\\u224D',\n  Atilde: '\\u00C3',\n  atilde: '\\u00E3',\n  Auml: '\\u00C4',\n  auml: '\\u00E4',\n  awconint: '\\u2233',\n  awint: '\\u2A11',\n  backcong: '\\u224C',\n  backepsilon: '\\u03F6',\n  backprime: '\\u2035',\n  backsim: '\\u223D',\n  backsimeq: '\\u22CD',\n  Backslash: '\\u2216',\n  Barv: '\\u2AE7',\n  barvee: '\\u22BD',\n  Barwed: '\\u2306',\n  barwed: '\\u2305',\n  barwedge: '\\u2305',\n  bbrk: '\\u23B5',\n  bbrktbrk: '\\u23B6',\n  bcong: '\\u224C',\n  Bcy: '\\u0411',\n  bcy: '\\u0431',\n  bdquo: '\\u201E',\n  becaus: '\\u2235',\n  Because: '\\u2235',\n  because: '\\u2235',\n  bemptyv: '\\u29B0',\n  bepsi: '\\u03F6',\n  bernou: '\\u212C',\n  Bernoullis: '\\u212C',\n  Beta: '\\u0392',\n  beta: '\\u03B2',\n  beth: '\\u2136',\n  between: '\\u226C',\n  Bfr: '\\uD835\\uDD05',\n  bfr: '\\uD835\\uDD1F',\n  bigcap: '\\u22C2',\n  bigcirc: '\\u25EF',\n  bigcup: '\\u22C3',\n  bigodot: '\\u2A00',\n  bigoplus: '\\u2A01',\n  bigotimes: '\\u2A02',\n  bigsqcup: '\\u2A06',\n  bigstar: '\\u2605',\n  bigtriangledown: '\\u25BD',\n  bigtriangleup: '\\u25B3',\n  biguplus: '\\u2A04',\n  bigvee: '\\u22C1',\n  bigwedge: '\\u22C0',\n  bkarow: '\\u290D',\n  blacklozenge: '\\u29EB',\n  blacksquare: '\\u25AA',\n  blacktriangle: '\\u25B4',\n  blacktriangledown: '\\u25BE',\n  blacktriangleleft: '\\u25C2',\n  blacktriangleright: '\\u25B8',\n  blank: '\\u2423',\n  blk12: '\\u2592',\n  blk14: '\\u2591',\n  blk34: '\\u2593',\n  block: '\\u2588',\n  bne: '\\u003D\\u20E5',\n  bnequiv: '\\u2261\\u20E5',\n  bNot: '\\u2AED',\n  bnot: '\\u2310',\n  Bopf: '\\uD835\\uDD39',\n  bopf: '\\uD835\\uDD53',\n  bot: '\\u22A5',\n  bottom: '\\u22A5',\n  bowtie: '\\u22C8',\n  boxbox: '\\u29C9',\n  boxDL: '\\u2557',\n  boxDl: '\\u2556',\n  boxdL: '\\u2555',\n  boxdl: '\\u2510',\n  boxDR: '\\u2554',\n  boxDr: '\\u2553',\n  boxdR: '\\u2552',\n  boxdr: '\\u250C',\n  boxH: '\\u2550',\n  boxh: '\\u2500',\n  boxHD: '\\u2566',\n  boxHd: '\\u2564',\n  boxhD: '\\u2565',\n  boxhd: '\\u252C',\n  boxHU: '\\u2569',\n  boxHu: '\\u2567',\n  boxhU: '\\u2568',\n  boxhu: '\\u2534',\n  boxminus: '\\u229F',\n  boxplus: '\\u229E',\n  boxtimes: '\\u22A0',\n  boxUL: '\\u255D',\n  boxUl: '\\u255C',\n  boxuL: '\\u255B',\n  boxul: '\\u2518',\n  boxUR: '\\u255A',\n  boxUr: '\\u2559',\n  boxuR: '\\u2558',\n  boxur: '\\u2514',\n  boxV: '\\u2551',\n  boxv: '\\u2502',\n  boxVH: '\\u256C',\n  boxVh: '\\u256B',\n  boxvH: '\\u256A',\n  boxvh: '\\u253C',\n  boxVL: '\\u2563',\n  boxVl: '\\u2562',\n  boxvL: '\\u2561',\n  boxvl: '\\u2524',\n  boxVR: '\\u2560',\n  boxVr: '\\u255F',\n  boxvR: '\\u255E',\n  boxvr: '\\u251C',\n  bprime: '\\u2035',\n  Breve: '\\u02D8',\n  breve: '\\u02D8',\n  brvbar: '\\u00A6',\n  Bscr: '\\u212C',\n  bscr: '\\uD835\\uDCB7',\n  bsemi: '\\u204F',\n  bsim: '\\u223D',\n  bsime: '\\u22CD',\n  bsol: '\\u005C',\n  bsolb: '\\u29C5',\n  bsolhsub: '\\u27C8',\n  bull: '\\u2022',\n  bullet: '\\u2022',\n  bump: '\\u224E',\n  bumpE: '\\u2AAE',\n  bumpe: '\\u224F',\n  Bumpeq: '\\u224E',\n  bumpeq: '\\u224F',\n  Cacute: '\\u0106',\n  cacute: '\\u0107',\n  Cap: '\\u22D2',\n  cap: '\\u2229',\n  capand: '\\u2A44',\n  capbrcup: '\\u2A49',\n  capcap: '\\u2A4B',\n  capcup: '\\u2A47',\n  capdot: '\\u2A40',\n  CapitalDifferentialD: '\\u2145',\n  caps: '\\u2229\\uFE00',\n  caret: '\\u2041',\n  caron: '\\u02C7',\n  Cayleys: '\\u212D',\n  ccaps: '\\u2A4D',\n  Ccaron: '\\u010C',\n  ccaron: '\\u010D',\n  Ccedil: '\\u00C7',\n  ccedil: '\\u00E7',\n  Ccirc: '\\u0108',\n  ccirc: '\\u0109',\n  Cconint: '\\u2230',\n  ccups: '\\u2A4C',\n  ccupssm: '\\u2A50',\n  Cdot: '\\u010A',\n  cdot: '\\u010B',\n  cedil: '\\u00B8',\n  Cedilla: '\\u00B8',\n  cemptyv: '\\u29B2',\n  cent: '\\u00A2',\n  CenterDot: '\\u00B7',\n  centerdot: '\\u00B7',\n  Cfr: '\\u212D',\n  cfr: '\\uD835\\uDD20',\n  CHcy: '\\u0427',\n  chcy: '\\u0447',\n  check: '\\u2713',\n  checkmark: '\\u2713',\n  Chi: '\\u03A7',\n  chi: '\\u03C7',\n  cir: '\\u25CB',\n  circ: '\\u02C6',\n  circeq: '\\u2257',\n  circlearrowleft: '\\u21BA',\n  circlearrowright: '\\u21BB',\n  circledast: '\\u229B',\n  circledcirc: '\\u229A',\n  circleddash: '\\u229D',\n  CircleDot: '\\u2299',\n  circledR: '\\u00AE',\n  circledS: '\\u24C8',\n  CircleMinus: '\\u2296',\n  CirclePlus: '\\u2295',\n  CircleTimes: '\\u2297',\n  cirE: '\\u29C3',\n  cire: '\\u2257',\n  cirfnint: '\\u2A10',\n  cirmid: '\\u2AEF',\n  cirscir: '\\u29C2',\n  ClockwiseContourIntegral: '\\u2232',\n  CloseCurlyDoubleQuote: '\\u201D',\n  CloseCurlyQuote: '\\u2019',\n  clubs: '\\u2663',\n  clubsuit: '\\u2663',\n  Colon: '\\u2237',\n  colon: '\\u003A',\n  Colone: '\\u2A74',\n  colone: '\\u2254',\n  coloneq: '\\u2254',\n  comma: '\\u002C',\n  commat: '\\u0040',\n  comp: '\\u2201',\n  compfn: '\\u2218',\n  complement: '\\u2201',\n  complexes: '\\u2102',\n  cong: '\\u2245',\n  congdot: '\\u2A6D',\n  Congruent: '\\u2261',\n  Conint: '\\u222F',\n  conint: '\\u222E',\n  ContourIntegral: '\\u222E',\n  Copf: '\\u2102',\n  copf: '\\uD835\\uDD54',\n  coprod: '\\u2210',\n  Coproduct: '\\u2210',\n  COPY: '\\u00A9',\n  copy: '\\u00A9',\n  copysr: '\\u2117',\n  CounterClockwiseContourIntegral: '\\u2233',\n  crarr: '\\u21B5',\n  Cross: '\\u2A2F',\n  cross: '\\u2717',\n  Cscr: '\\uD835\\uDC9E',\n  cscr: '\\uD835\\uDCB8',\n  csub: '\\u2ACF',\n  csube: '\\u2AD1',\n  csup: '\\u2AD0',\n  csupe: '\\u2AD2',\n  ctdot: '\\u22EF',\n  cudarrl: '\\u2938',\n  cudarrr: '\\u2935',\n  cuepr: '\\u22DE',\n  cuesc: '\\u22DF',\n  cularr: '\\u21B6',\n  cularrp: '\\u293D',\n  Cup: '\\u22D3',\n  cup: '\\u222A',\n  cupbrcap: '\\u2A48',\n  CupCap: '\\u224D',\n  cupcap: '\\u2A46',\n  cupcup: '\\u2A4A',\n  cupdot: '\\u228D',\n  cupor: '\\u2A45',\n  cups: '\\u222A\\uFE00',\n  curarr: '\\u21B7',\n  curarrm: '\\u293C',\n  curlyeqprec: '\\u22DE',\n  curlyeqsucc: '\\u22DF',\n  curlyvee: '\\u22CE',\n  curlywedge: '\\u22CF',\n  curren: '\\u00A4',\n  curvearrowleft: '\\u21B6',\n  curvearrowright: '\\u21B7',\n  cuvee: '\\u22CE',\n  cuwed: '\\u22CF',\n  cwconint: '\\u2232',\n  cwint: '\\u2231',\n  cylcty: '\\u232D',\n  Dagger: '\\u2021',\n  dagger: '\\u2020',\n  daleth: '\\u2138',\n  Darr: '\\u21A1',\n  dArr: '\\u21D3',\n  darr: '\\u2193',\n  dash: '\\u2010',\n  Dashv: '\\u2AE4',\n  dashv: '\\u22A3',\n  dbkarow: '\\u290F',\n  dblac: '\\u02DD',\n  Dcaron: '\\u010E',\n  dcaron: '\\u010F',\n  Dcy: '\\u0414',\n  dcy: '\\u0434',\n  DD: '\\u2145',\n  dd: '\\u2146',\n  ddagger: '\\u2021',\n  ddarr: '\\u21CA',\n  DDotrahd: '\\u2911',\n  ddotseq: '\\u2A77',\n  deg: '\\u00B0',\n  Del: '\\u2207',\n  Delta: '\\u0394',\n  delta: '\\u03B4',\n  demptyv: '\\u29B1',\n  dfisht: '\\u297F',\n  Dfr: '\\uD835\\uDD07',\n  dfr: '\\uD835\\uDD21',\n  dHar: '\\u2965',\n  dharl: '\\u21C3',\n  dharr: '\\u21C2',\n  DiacriticalAcute: '\\u00B4',\n  DiacriticalDot: '\\u02D9',\n  DiacriticalDoubleAcute: '\\u02DD',\n  DiacriticalGrave: '\\u0060',\n  DiacriticalTilde: '\\u02DC',\n  diam: '\\u22C4',\n  Diamond: '\\u22C4',\n  diamond: '\\u22C4',\n  diamondsuit: '\\u2666',\n  diams: '\\u2666',\n  die: '\\u00A8',\n  DifferentialD: '\\u2146',\n  digamma: '\\u03DD',\n  disin: '\\u22F2',\n  div: '\\u00F7',\n  divide: '\\u00F7',\n  divideontimes: '\\u22C7',\n  divonx: '\\u22C7',\n  DJcy: '\\u0402',\n  djcy: '\\u0452',\n  dlcorn: '\\u231E',\n  dlcrop: '\\u230D',\n  dollar: '\\u0024',\n  Dopf: '\\uD835\\uDD3B',\n  dopf: '\\uD835\\uDD55',\n  Dot: '\\u00A8',\n  dot: '\\u02D9',\n  DotDot: '\\u20DC',\n  doteq: '\\u2250',\n  doteqdot: '\\u2251',\n  DotEqual: '\\u2250',\n  dotminus: '\\u2238',\n  dotplus: '\\u2214',\n  dotsquare: '\\u22A1',\n  doublebarwedge: '\\u2306',\n  DoubleContourIntegral: '\\u222F',\n  DoubleDot: '\\u00A8',\n  DoubleDownArrow: '\\u21D3',\n  DoubleLeftArrow: '\\u21D0',\n  DoubleLeftRightArrow: '\\u21D4',\n  DoubleLeftTee: '\\u2AE4',\n  DoubleLongLeftArrow: '\\u27F8',\n  DoubleLongLeftRightArrow: '\\u27FA',\n  DoubleLongRightArrow: '\\u27F9',\n  DoubleRightArrow: '\\u21D2',\n  DoubleRightTee: '\\u22A8',\n  DoubleUpArrow: '\\u21D1',\n  DoubleUpDownArrow: '\\u21D5',\n  DoubleVerticalBar: '\\u2225',\n  DownArrow: '\\u2193',\n  Downarrow: '\\u21D3',\n  downarrow: '\\u2193',\n  DownArrowBar: '\\u2913',\n  DownArrowUpArrow: '\\u21F5',\n  DownBreve: '\\u0311',\n  downdownarrows: '\\u21CA',\n  downharpoonleft: '\\u21C3',\n  downharpoonright: '\\u21C2',\n  DownLeftRightVector: '\\u2950',\n  DownLeftTeeVector: '\\u295E',\n  DownLeftVector: '\\u21BD',\n  DownLeftVectorBar: '\\u2956',\n  DownRightTeeVector: '\\u295F',\n  DownRightVector: '\\u21C1',\n  DownRightVectorBar: '\\u2957',\n  DownTee: '\\u22A4',\n  DownTeeArrow: '\\u21A7',\n  drbkarow: '\\u2910',\n  drcorn: '\\u231F',\n  drcrop: '\\u230C',\n  Dscr: '\\uD835\\uDC9F',\n  dscr: '\\uD835\\uDCB9',\n  DScy: '\\u0405',\n  dscy: '\\u0455',\n  dsol: '\\u29F6',\n  Dstrok: '\\u0110',\n  dstrok: '\\u0111',\n  dtdot: '\\u22F1',\n  dtri: '\\u25BF',\n  dtrif: '\\u25BE',\n  duarr: '\\u21F5',\n  duhar: '\\u296F',\n  dwangle: '\\u29A6',\n  DZcy: '\\u040F',\n  dzcy: '\\u045F',\n  dzigrarr: '\\u27FF',\n  Eacute: '\\u00C9',\n  eacute: '\\u00E9',\n  easter: '\\u2A6E',\n  Ecaron: '\\u011A',\n  ecaron: '\\u011B',\n  ecir: '\\u2256',\n  Ecirc: '\\u00CA',\n  ecirc: '\\u00EA',\n  ecolon: '\\u2255',\n  Ecy: '\\u042D',\n  ecy: '\\u044D',\n  eDDot: '\\u2A77',\n  Edot: '\\u0116',\n  eDot: '\\u2251',\n  edot: '\\u0117',\n  ee: '\\u2147',\n  efDot: '\\u2252',\n  Efr: '\\uD835\\uDD08',\n  efr: '\\uD835\\uDD22',\n  eg: '\\u2A9A',\n  Egrave: '\\u00C8',\n  egrave: '\\u00E8',\n  egs: '\\u2A96',\n  egsdot: '\\u2A98',\n  el: '\\u2A99',\n  Element: '\\u2208',\n  elinters: '\\u23E7',\n  ell: '\\u2113',\n  els: '\\u2A95',\n  elsdot: '\\u2A97',\n  Emacr: '\\u0112',\n  emacr: '\\u0113',\n  empty: '\\u2205',\n  emptyset: '\\u2205',\n  EmptySmallSquare: '\\u25FB',\n  emptyv: '\\u2205',\n  EmptyVerySmallSquare: '\\u25AB',\n  emsp: '\\u2003',\n  emsp13: '\\u2004',\n  emsp14: '\\u2005',\n  ENG: '\\u014A',\n  eng: '\\u014B',\n  ensp: '\\u2002',\n  Eogon: '\\u0118',\n  eogon: '\\u0119',\n  Eopf: '\\uD835\\uDD3C',\n  eopf: '\\uD835\\uDD56',\n  epar: '\\u22D5',\n  eparsl: '\\u29E3',\n  eplus: '\\u2A71',\n  epsi: '\\u03B5',\n  Epsilon: '\\u0395',\n  epsilon: '\\u03B5',\n  epsiv: '\\u03F5',\n  eqcirc: '\\u2256',\n  eqcolon: '\\u2255',\n  eqsim: '\\u2242',\n  eqslantgtr: '\\u2A96',\n  eqslantless: '\\u2A95',\n  Equal: '\\u2A75',\n  equals: '\\u003D',\n  EqualTilde: '\\u2242',\n  equest: '\\u225F',\n  Equilibrium: '\\u21CC',\n  equiv: '\\u2261',\n  equivDD: '\\u2A78',\n  eqvparsl: '\\u29E5',\n  erarr: '\\u2971',\n  erDot: '\\u2253',\n  Escr: '\\u2130',\n  escr: '\\u212F',\n  esdot: '\\u2250',\n  Esim: '\\u2A73',\n  esim: '\\u2242',\n  Eta: '\\u0397',\n  eta: '\\u03B7',\n  ETH: '\\u00D0',\n  eth: '\\u00F0',\n  Euml: '\\u00CB',\n  euml: '\\u00EB',\n  euro: '\\u20AC',\n  excl: '\\u0021',\n  exist: '\\u2203',\n  Exists: '\\u2203',\n  expectation: '\\u2130',\n  ExponentialE: '\\u2147',\n  exponentiale: '\\u2147',\n  fallingdotseq: '\\u2252',\n  Fcy: '\\u0424',\n  fcy: '\\u0444',\n  female: '\\u2640',\n  ffilig: '\\uFB03',\n  fflig: '\\uFB00',\n  ffllig: '\\uFB04',\n  Ffr: '\\uD835\\uDD09',\n  ffr: '\\uD835\\uDD23',\n  filig: '\\uFB01',\n  FilledSmallSquare: '\\u25FC',\n  FilledVerySmallSquare: '\\u25AA',\n  fjlig: '\\u0066\\u006A',\n  flat: '\\u266D',\n  fllig: '\\uFB02',\n  fltns: '\\u25B1',\n  fnof: '\\u0192',\n  Fopf: '\\uD835\\uDD3D',\n  fopf: '\\uD835\\uDD57',\n  ForAll: '\\u2200',\n  forall: '\\u2200',\n  fork: '\\u22D4',\n  forkv: '\\u2AD9',\n  Fouriertrf: '\\u2131',\n  fpartint: '\\u2A0D',\n  frac12: '\\u00BD',\n  frac13: '\\u2153',\n  frac14: '\\u00BC',\n  frac15: '\\u2155',\n  frac16: '\\u2159',\n  frac18: '\\u215B',\n  frac23: '\\u2154',\n  frac25: '\\u2156',\n  frac34: '\\u00BE',\n  frac35: '\\u2157',\n  frac38: '\\u215C',\n  frac45: '\\u2158',\n  frac56: '\\u215A',\n  frac58: '\\u215D',\n  frac78: '\\u215E',\n  frasl: '\\u2044',\n  frown: '\\u2322',\n  Fscr: '\\u2131',\n  fscr: '\\uD835\\uDCBB',\n  gacute: '\\u01F5',\n  Gamma: '\\u0393',\n  gamma: '\\u03B3',\n  Gammad: '\\u03DC',\n  gammad: '\\u03DD',\n  gap: '\\u2A86',\n  Gbreve: '\\u011E',\n  gbreve: '\\u011F',\n  Gcedil: '\\u0122',\n  Gcirc: '\\u011C',\n  gcirc: '\\u011D',\n  Gcy: '\\u0413',\n  gcy: '\\u0433',\n  Gdot: '\\u0120',\n  gdot: '\\u0121',\n  gE: '\\u2267',\n  ge: '\\u2265',\n  gEl: '\\u2A8C',\n  gel: '\\u22DB',\n  geq: '\\u2265',\n  geqq: '\\u2267',\n  geqslant: '\\u2A7E',\n  ges: '\\u2A7E',\n  gescc: '\\u2AA9',\n  gesdot: '\\u2A80',\n  gesdoto: '\\u2A82',\n  gesdotol: '\\u2A84',\n  gesl: '\\u22DB\\uFE00',\n  gesles: '\\u2A94',\n  Gfr: '\\uD835\\uDD0A',\n  gfr: '\\uD835\\uDD24',\n  Gg: '\\u22D9',\n  gg: '\\u226B',\n  ggg: '\\u22D9',\n  gimel: '\\u2137',\n  GJcy: '\\u0403',\n  gjcy: '\\u0453',\n  gl: '\\u2277',\n  gla: '\\u2AA5',\n  glE: '\\u2A92',\n  glj: '\\u2AA4',\n  gnap: '\\u2A8A',\n  gnapprox: '\\u2A8A',\n  gnE: '\\u2269',\n  gne: '\\u2A88',\n  gneq: '\\u2A88',\n  gneqq: '\\u2269',\n  gnsim: '\\u22E7',\n  Gopf: '\\uD835\\uDD3E',\n  gopf: '\\uD835\\uDD58',\n  grave: '\\u0060',\n  GreaterEqual: '\\u2265',\n  GreaterEqualLess: '\\u22DB',\n  GreaterFullEqual: '\\u2267',\n  GreaterGreater: '\\u2AA2',\n  GreaterLess: '\\u2277',\n  GreaterSlantEqual: '\\u2A7E',\n  GreaterTilde: '\\u2273',\n  Gscr: '\\uD835\\uDCA2',\n  gscr: '\\u210A',\n  gsim: '\\u2273',\n  gsime: '\\u2A8E',\n  gsiml: '\\u2A90',\n  Gt: '\\u226B',\n  GT: '\\u003E',\n  gt: '\\u003E',\n  gtcc: '\\u2AA7',\n  gtcir: '\\u2A7A',\n  gtdot: '\\u22D7',\n  gtlPar: '\\u2995',\n  gtquest: '\\u2A7C',\n  gtrapprox: '\\u2A86',\n  gtrarr: '\\u2978',\n  gtrdot: '\\u22D7',\n  gtreqless: '\\u22DB',\n  gtreqqless: '\\u2A8C',\n  gtrless: '\\u2277',\n  gtrsim: '\\u2273',\n  gvertneqq: '\\u2269\\uFE00',\n  gvnE: '\\u2269\\uFE00',\n  Hacek: '\\u02C7',\n  hairsp: '\\u200A',\n  half: '\\u00BD',\n  hamilt: '\\u210B',\n  HARDcy: '\\u042A',\n  hardcy: '\\u044A',\n  hArr: '\\u21D4',\n  harr: '\\u2194',\n  harrcir: '\\u2948',\n  harrw: '\\u21AD',\n  Hat: '\\u005E',\n  hbar: '\\u210F',\n  Hcirc: '\\u0124',\n  hcirc: '\\u0125',\n  hearts: '\\u2665',\n  heartsuit: '\\u2665',\n  hellip: '\\u2026',\n  hercon: '\\u22B9',\n  Hfr: '\\u210C',\n  hfr: '\\uD835\\uDD25',\n  HilbertSpace: '\\u210B',\n  hksearow: '\\u2925',\n  hkswarow: '\\u2926',\n  hoarr: '\\u21FF',\n  homtht: '\\u223B',\n  hookleftarrow: '\\u21A9',\n  hookrightarrow: '\\u21AA',\n  Hopf: '\\u210D',\n  hopf: '\\uD835\\uDD59',\n  horbar: '\\u2015',\n  HorizontalLine: '\\u2500',\n  Hscr: '\\u210B',\n  hscr: '\\uD835\\uDCBD',\n  hslash: '\\u210F',\n  Hstrok: '\\u0126',\n  hstrok: '\\u0127',\n  HumpDownHump: '\\u224E',\n  HumpEqual: '\\u224F',\n  hybull: '\\u2043',\n  hyphen: '\\u2010',\n  Iacute: '\\u00CD',\n  iacute: '\\u00ED',\n  ic: '\\u2063',\n  Icirc: '\\u00CE',\n  icirc: '\\u00EE',\n  Icy: '\\u0418',\n  icy: '\\u0438',\n  Idot: '\\u0130',\n  IEcy: '\\u0415',\n  iecy: '\\u0435',\n  iexcl: '\\u00A1',\n  iff: '\\u21D4',\n  Ifr: '\\u2111',\n  ifr: '\\uD835\\uDD26',\n  Igrave: '\\u00CC',\n  igrave: '\\u00EC',\n  ii: '\\u2148',\n  iiiint: '\\u2A0C',\n  iiint: '\\u222D',\n  iinfin: '\\u29DC',\n  iiota: '\\u2129',\n  IJlig: '\\u0132',\n  ijlig: '\\u0133',\n  Im: '\\u2111',\n  Imacr: '\\u012A',\n  imacr: '\\u012B',\n  image: '\\u2111',\n  ImaginaryI: '\\u2148',\n  imagline: '\\u2110',\n  imagpart: '\\u2111',\n  imath: '\\u0131',\n  imof: '\\u22B7',\n  imped: '\\u01B5',\n  Implies: '\\u21D2',\n  in: '\\u2208',\n  incare: '\\u2105',\n  infin: '\\u221E',\n  infintie: '\\u29DD',\n  inodot: '\\u0131',\n  Int: '\\u222C',\n  int: '\\u222B',\n  intcal: '\\u22BA',\n  integers: '\\u2124',\n  Integral: '\\u222B',\n  intercal: '\\u22BA',\n  Intersection: '\\u22C2',\n  intlarhk: '\\u2A17',\n  intprod: '\\u2A3C',\n  InvisibleComma: '\\u2063',\n  InvisibleTimes: '\\u2062',\n  IOcy: '\\u0401',\n  iocy: '\\u0451',\n  Iogon: '\\u012E',\n  iogon: '\\u012F',\n  Iopf: '\\uD835\\uDD40',\n  iopf: '\\uD835\\uDD5A',\n  Iota: '\\u0399',\n  iota: '\\u03B9',\n  iprod: '\\u2A3C',\n  iquest: '\\u00BF',\n  Iscr: '\\u2110',\n  iscr: '\\uD835\\uDCBE',\n  isin: '\\u2208',\n  isindot: '\\u22F5',\n  isinE: '\\u22F9',\n  isins: '\\u22F4',\n  isinsv: '\\u22F3',\n  isinv: '\\u2208',\n  it: '\\u2062',\n  Itilde: '\\u0128',\n  itilde: '\\u0129',\n  Iukcy: '\\u0406',\n  iukcy: '\\u0456',\n  Iuml: '\\u00CF',\n  iuml: '\\u00EF',\n  Jcirc: '\\u0134',\n  jcirc: '\\u0135',\n  Jcy: '\\u0419',\n  jcy: '\\u0439',\n  Jfr: '\\uD835\\uDD0D',\n  jfr: '\\uD835\\uDD27',\n  jmath: '\\u0237',\n  Jopf: '\\uD835\\uDD41',\n  jopf: '\\uD835\\uDD5B',\n  Jscr: '\\uD835\\uDCA5',\n  jscr: '\\uD835\\uDCBF',\n  Jsercy: '\\u0408',\n  jsercy: '\\u0458',\n  Jukcy: '\\u0404',\n  jukcy: '\\u0454',\n  Kappa: '\\u039A',\n  kappa: '\\u03BA',\n  kappav: '\\u03F0',\n  Kcedil: '\\u0136',\n  kcedil: '\\u0137',\n  Kcy: '\\u041A',\n  kcy: '\\u043A',\n  Kfr: '\\uD835\\uDD0E',\n  kfr: '\\uD835\\uDD28',\n  kgreen: '\\u0138',\n  KHcy: '\\u0425',\n  khcy: '\\u0445',\n  KJcy: '\\u040C',\n  kjcy: '\\u045C',\n  Kopf: '\\uD835\\uDD42',\n  kopf: '\\uD835\\uDD5C',\n  Kscr: '\\uD835\\uDCA6',\n  kscr: '\\uD835\\uDCC0',\n  lAarr: '\\u21DA',\n  Lacute: '\\u0139',\n  lacute: '\\u013A',\n  laemptyv: '\\u29B4',\n  lagran: '\\u2112',\n  Lambda: '\\u039B',\n  lambda: '\\u03BB',\n  Lang: '\\u27EA',\n  lang: '\\u27E8',\n  langd: '\\u2991',\n  langle: '\\u27E8',\n  lap: '\\u2A85',\n  Laplacetrf: '\\u2112',\n  laquo: '\\u00AB',\n  Larr: '\\u219E',\n  lArr: '\\u21D0',\n  larr: '\\u2190',\n  larrb: '\\u21E4',\n  larrbfs: '\\u291F',\n  larrfs: '\\u291D',\n  larrhk: '\\u21A9',\n  larrlp: '\\u21AB',\n  larrpl: '\\u2939',\n  larrsim: '\\u2973',\n  larrtl: '\\u21A2',\n  lat: '\\u2AAB',\n  lAtail: '\\u291B',\n  latail: '\\u2919',\n  late: '\\u2AAD',\n  lates: '\\u2AAD\\uFE00',\n  lBarr: '\\u290E',\n  lbarr: '\\u290C',\n  lbbrk: '\\u2772',\n  lbrace: '\\u007B',\n  lbrack: '\\u005B',\n  lbrke: '\\u298B',\n  lbrksld: '\\u298F',\n  lbrkslu: '\\u298D',\n  Lcaron: '\\u013D',\n  lcaron: '\\u013E',\n  Lcedil: '\\u013B',\n  lcedil: '\\u013C',\n  lceil: '\\u2308',\n  lcub: '\\u007B',\n  Lcy: '\\u041B',\n  lcy: '\\u043B',\n  ldca: '\\u2936',\n  ldquo: '\\u201C',\n  ldquor: '\\u201E',\n  ldrdhar: '\\u2967',\n  ldrushar: '\\u294B',\n  ldsh: '\\u21B2',\n  lE: '\\u2266',\n  le: '\\u2264',\n  LeftAngleBracket: '\\u27E8',\n  LeftArrow: '\\u2190',\n  Leftarrow: '\\u21D0',\n  leftarrow: '\\u2190',\n  LeftArrowBar: '\\u21E4',\n  LeftArrowRightArrow: '\\u21C6',\n  leftarrowtail: '\\u21A2',\n  LeftCeiling: '\\u2308',\n  LeftDoubleBracket: '\\u27E6',\n  LeftDownTeeVector: '\\u2961',\n  LeftDownVector: '\\u21C3',\n  LeftDownVectorBar: '\\u2959',\n  LeftFloor: '\\u230A',\n  leftharpoondown: '\\u21BD',\n  leftharpoonup: '\\u21BC',\n  leftleftarrows: '\\u21C7',\n  LeftRightArrow: '\\u2194',\n  Leftrightarrow: '\\u21D4',\n  leftrightarrow: '\\u2194',\n  leftrightarrows: '\\u21C6',\n  leftrightharpoons: '\\u21CB',\n  leftrightsquigarrow: '\\u21AD',\n  LeftRightVector: '\\u294E',\n  LeftTee: '\\u22A3',\n  LeftTeeArrow: '\\u21A4',\n  LeftTeeVector: '\\u295A',\n  leftthreetimes: '\\u22CB',\n  LeftTriangle: '\\u22B2',\n  LeftTriangleBar: '\\u29CF',\n  LeftTriangleEqual: '\\u22B4',\n  LeftUpDownVector: '\\u2951',\n  LeftUpTeeVector: '\\u2960',\n  LeftUpVector: '\\u21BF',\n  LeftUpVectorBar: '\\u2958',\n  LeftVector: '\\u21BC',\n  LeftVectorBar: '\\u2952',\n  lEg: '\\u2A8B',\n  leg: '\\u22DA',\n  leq: '\\u2264',\n  leqq: '\\u2266',\n  leqslant: '\\u2A7D',\n  les: '\\u2A7D',\n  lescc: '\\u2AA8',\n  lesdot: '\\u2A7F',\n  lesdoto: '\\u2A81',\n  lesdotor: '\\u2A83',\n  lesg: '\\u22DA\\uFE00',\n  lesges: '\\u2A93',\n  lessapprox: '\\u2A85',\n  lessdot: '\\u22D6',\n  lesseqgtr: '\\u22DA',\n  lesseqqgtr: '\\u2A8B',\n  LessEqualGreater: '\\u22DA',\n  LessFullEqual: '\\u2266',\n  LessGreater: '\\u2276',\n  lessgtr: '\\u2276',\n  LessLess: '\\u2AA1',\n  lesssim: '\\u2272',\n  LessSlantEqual: '\\u2A7D',\n  LessTilde: '\\u2272',\n  lfisht: '\\u297C',\n  lfloor: '\\u230A',\n  Lfr: '\\uD835\\uDD0F',\n  lfr: '\\uD835\\uDD29',\n  lg: '\\u2276',\n  lgE: '\\u2A91',\n  lHar: '\\u2962',\n  lhard: '\\u21BD',\n  lharu: '\\u21BC',\n  lharul: '\\u296A',\n  lhblk: '\\u2584',\n  LJcy: '\\u0409',\n  ljcy: '\\u0459',\n  Ll: '\\u22D8',\n  ll: '\\u226A',\n  llarr: '\\u21C7',\n  llcorner: '\\u231E',\n  Lleftarrow: '\\u21DA',\n  llhard: '\\u296B',\n  lltri: '\\u25FA',\n  Lmidot: '\\u013F',\n  lmidot: '\\u0140',\n  lmoust: '\\u23B0',\n  lmoustache: '\\u23B0',\n  lnap: '\\u2A89',\n  lnapprox: '\\u2A89',\n  lnE: '\\u2268',\n  lne: '\\u2A87',\n  lneq: '\\u2A87',\n  lneqq: '\\u2268',\n  lnsim: '\\u22E6',\n  loang: '\\u27EC',\n  loarr: '\\u21FD',\n  lobrk: '\\u27E6',\n  LongLeftArrow: '\\u27F5',\n  Longleftarrow: '\\u27F8',\n  longleftarrow: '\\u27F5',\n  LongLeftRightArrow: '\\u27F7',\n  Longleftrightarrow: '\\u27FA',\n  longleftrightarrow: '\\u27F7',\n  longmapsto: '\\u27FC',\n  LongRightArrow: '\\u27F6',\n  Longrightarrow: '\\u27F9',\n  longrightarrow: '\\u27F6',\n  looparrowleft: '\\u21AB',\n  looparrowright: '\\u21AC',\n  lopar: '\\u2985',\n  Lopf: '\\uD835\\uDD43',\n  lopf: '\\uD835\\uDD5D',\n  loplus: '\\u2A2D',\n  lotimes: '\\u2A34',\n  lowast: '\\u2217',\n  lowbar: '\\u005F',\n  LowerLeftArrow: '\\u2199',\n  LowerRightArrow: '\\u2198',\n  loz: '\\u25CA',\n  lozenge: '\\u25CA',\n  lozf: '\\u29EB',\n  lpar: '\\u0028',\n  lparlt: '\\u2993',\n  lrarr: '\\u21C6',\n  lrcorner: '\\u231F',\n  lrhar: '\\u21CB',\n  lrhard: '\\u296D',\n  lrm: '\\u200E',\n  lrtri: '\\u22BF',\n  lsaquo: '\\u2039',\n  Lscr: '\\u2112',\n  lscr: '\\uD835\\uDCC1',\n  Lsh: '\\u21B0',\n  lsh: '\\u21B0',\n  lsim: '\\u2272',\n  lsime: '\\u2A8D',\n  lsimg: '\\u2A8F',\n  lsqb: '\\u005B',\n  lsquo: '\\u2018',\n  lsquor: '\\u201A',\n  Lstrok: '\\u0141',\n  lstrok: '\\u0142',\n  Lt: '\\u226A',\n  LT: '\\u003C',\n  lt: '\\u003C',\n  ltcc: '\\u2AA6',\n  ltcir: '\\u2A79',\n  ltdot: '\\u22D6',\n  lthree: '\\u22CB',\n  ltimes: '\\u22C9',\n  ltlarr: '\\u2976',\n  ltquest: '\\u2A7B',\n  ltri: '\\u25C3',\n  ltrie: '\\u22B4',\n  ltrif: '\\u25C2',\n  ltrPar: '\\u2996',\n  lurdshar: '\\u294A',\n  luruhar: '\\u2966',\n  lvertneqq: '\\u2268\\uFE00',\n  lvnE: '\\u2268\\uFE00',\n  macr: '\\u00AF',\n  male: '\\u2642',\n  malt: '\\u2720',\n  maltese: '\\u2720',\n  Map: '\\u2905',\n  map: '\\u21A6',\n  mapsto: '\\u21A6',\n  mapstodown: '\\u21A7',\n  mapstoleft: '\\u21A4',\n  mapstoup: '\\u21A5',\n  marker: '\\u25AE',\n  mcomma: '\\u2A29',\n  Mcy: '\\u041C',\n  mcy: '\\u043C',\n  mdash: '\\u2014',\n  mDDot: '\\u223A',\n  measuredangle: '\\u2221',\n  MediumSpace: '\\u205F',\n  Mellintrf: '\\u2133',\n  Mfr: '\\uD835\\uDD10',\n  mfr: '\\uD835\\uDD2A',\n  mho: '\\u2127',\n  micro: '\\u00B5',\n  mid: '\\u2223',\n  midast: '\\u002A',\n  midcir: '\\u2AF0',\n  middot: '\\u00B7',\n  minus: '\\u2212',\n  minusb: '\\u229F',\n  minusd: '\\u2238',\n  minusdu: '\\u2A2A',\n  MinusPlus: '\\u2213',\n  mlcp: '\\u2ADB',\n  mldr: '\\u2026',\n  mnplus: '\\u2213',\n  models: '\\u22A7',\n  Mopf: '\\uD835\\uDD44',\n  mopf: '\\uD835\\uDD5E',\n  mp: '\\u2213',\n  Mscr: '\\u2133',\n  mscr: '\\uD835\\uDCC2',\n  mstpos: '\\u223E',\n  Mu: '\\u039C',\n  mu: '\\u03BC',\n  multimap: '\\u22B8',\n  mumap: '\\u22B8',\n  nabla: '\\u2207',\n  Nacute: '\\u0143',\n  nacute: '\\u0144',\n  nang: '\\u2220\\u20D2',\n  nap: '\\u2249',\n  napE: '\\u2A70\\u0338',\n  napid: '\\u224B\\u0338',\n  napos: '\\u0149',\n  napprox: '\\u2249',\n  natur: '\\u266E',\n  natural: '\\u266E',\n  naturals: '\\u2115',\n  nbsp: '\\u00A0',\n  nbump: '\\u224E\\u0338',\n  nbumpe: '\\u224F\\u0338',\n  ncap: '\\u2A43',\n  Ncaron: '\\u0147',\n  ncaron: '\\u0148',\n  Ncedil: '\\u0145',\n  ncedil: '\\u0146',\n  ncong: '\\u2247',\n  ncongdot: '\\u2A6D\\u0338',\n  ncup: '\\u2A42',\n  Ncy: '\\u041D',\n  ncy: '\\u043D',\n  ndash: '\\u2013',\n  ne: '\\u2260',\n  nearhk: '\\u2924',\n  neArr: '\\u21D7',\n  nearr: '\\u2197',\n  nearrow: '\\u2197',\n  nedot: '\\u2250\\u0338',\n  NegativeMediumSpace: '\\u200B',\n  NegativeThickSpace: '\\u200B',\n  NegativeThinSpace: '\\u200B',\n  NegativeVeryThinSpace: '\\u200B',\n  nequiv: '\\u2262',\n  nesear: '\\u2928',\n  nesim: '\\u2242\\u0338',\n  NestedGreaterGreater: '\\u226B',\n  NestedLessLess: '\\u226A',\n  NewLine: '\\u000A',\n  nexist: '\\u2204',\n  nexists: '\\u2204',\n  Nfr: '\\uD835\\uDD11',\n  nfr: '\\uD835\\uDD2B',\n  ngE: '\\u2267\\u0338',\n  nge: '\\u2271',\n  ngeq: '\\u2271',\n  ngeqq: '\\u2267\\u0338',\n  ngeqslant: '\\u2A7E\\u0338',\n  nges: '\\u2A7E\\u0338',\n  nGg: '\\u22D9\\u0338',\n  ngsim: '\\u2275',\n  nGt: '\\u226B\\u20D2',\n  ngt: '\\u226F',\n  ngtr: '\\u226F',\n  nGtv: '\\u226B\\u0338',\n  nhArr: '\\u21CE',\n  nharr: '\\u21AE',\n  nhpar: '\\u2AF2',\n  ni: '\\u220B',\n  nis: '\\u22FC',\n  nisd: '\\u22FA',\n  niv: '\\u220B',\n  NJcy: '\\u040A',\n  njcy: '\\u045A',\n  nlArr: '\\u21CD',\n  nlarr: '\\u219A',\n  nldr: '\\u2025',\n  nlE: '\\u2266\\u0338',\n  nle: '\\u2270',\n  nLeftarrow: '\\u21CD',\n  nleftarrow: '\\u219A',\n  nLeftrightarrow: '\\u21CE',\n  nleftrightarrow: '\\u21AE',\n  nleq: '\\u2270',\n  nleqq: '\\u2266\\u0338',\n  nleqslant: '\\u2A7D\\u0338',\n  nles: '\\u2A7D\\u0338',\n  nless: '\\u226E',\n  nLl: '\\u22D8\\u0338',\n  nlsim: '\\u2274',\n  nLt: '\\u226A\\u20D2',\n  nlt: '\\u226E',\n  nltri: '\\u22EA',\n  nltrie: '\\u22EC',\n  nLtv: '\\u226A\\u0338',\n  nmid: '\\u2224',\n  NoBreak: '\\u2060',\n  NonBreakingSpace: '\\u00A0',\n  Nopf: '\\u2115',\n  nopf: '\\uD835\\uDD5F',\n  Not: '\\u2AEC',\n  not: '\\u00AC',\n  NotCongruent: '\\u2262',\n  NotCupCap: '\\u226D',\n  NotDoubleVerticalBar: '\\u2226',\n  NotElement: '\\u2209',\n  NotEqual: '\\u2260',\n  NotEqualTilde: '\\u2242\\u0338',\n  NotExists: '\\u2204',\n  NotGreater: '\\u226F',\n  NotGreaterEqual: '\\u2271',\n  NotGreaterFullEqual: '\\u2267\\u0338',\n  NotGreaterGreater: '\\u226B\\u0338',\n  NotGreaterLess: '\\u2279',\n  NotGreaterSlantEqual: '\\u2A7E\\u0338',\n  NotGreaterTilde: '\\u2275',\n  NotHumpDownHump: '\\u224E\\u0338',\n  NotHumpEqual: '\\u224F\\u0338',\n  notin: '\\u2209',\n  notindot: '\\u22F5\\u0338',\n  notinE: '\\u22F9\\u0338',\n  notinva: '\\u2209',\n  notinvb: '\\u22F7',\n  notinvc: '\\u22F6',\n  NotLeftTriangle: '\\u22EA',\n  NotLeftTriangleBar: '\\u29CF\\u0338',\n  NotLeftTriangleEqual: '\\u22EC',\n  NotLess: '\\u226E',\n  NotLessEqual: '\\u2270',\n  NotLessGreater: '\\u2278',\n  NotLessLess: '\\u226A\\u0338',\n  NotLessSlantEqual: '\\u2A7D\\u0338',\n  NotLessTilde: '\\u2274',\n  NotNestedGreaterGreater: '\\u2AA2\\u0338',\n  NotNestedLessLess: '\\u2AA1\\u0338',\n  notni: '\\u220C',\n  notniva: '\\u220C',\n  notnivb: '\\u22FE',\n  notnivc: '\\u22FD',\n  NotPrecedes: '\\u2280',\n  NotPrecedesEqual: '\\u2AAF\\u0338',\n  NotPrecedesSlantEqual: '\\u22E0',\n  NotReverseElement: '\\u220C',\n  NotRightTriangle: '\\u22EB',\n  NotRightTriangleBar: '\\u29D0\\u0338',\n  NotRightTriangleEqual: '\\u22ED',\n  NotSquareSubset: '\\u228F\\u0338',\n  NotSquareSubsetEqual: '\\u22E2',\n  NotSquareSuperset: '\\u2290\\u0338',\n  NotSquareSupersetEqual: '\\u22E3',\n  NotSubset: '\\u2282\\u20D2',\n  NotSubsetEqual: '\\u2288',\n  NotSucceeds: '\\u2281',\n  NotSucceedsEqual: '\\u2AB0\\u0338',\n  NotSucceedsSlantEqual: '\\u22E1',\n  NotSucceedsTilde: '\\u227F\\u0338',\n  NotSuperset: '\\u2283\\u20D2',\n  NotSupersetEqual: '\\u2289',\n  NotTilde: '\\u2241',\n  NotTildeEqual: '\\u2244',\n  NotTildeFullEqual: '\\u2247',\n  NotTildeTilde: '\\u2249',\n  NotVerticalBar: '\\u2224',\n  npar: '\\u2226',\n  nparallel: '\\u2226',\n  nparsl: '\\u2AFD\\u20E5',\n  npart: '\\u2202\\u0338',\n  npolint: '\\u2A14',\n  npr: '\\u2280',\n  nprcue: '\\u22E0',\n  npre: '\\u2AAF\\u0338',\n  nprec: '\\u2280',\n  npreceq: '\\u2AAF\\u0338',\n  nrArr: '\\u21CF',\n  nrarr: '\\u219B',\n  nrarrc: '\\u2933\\u0338',\n  nrarrw: '\\u219D\\u0338',\n  nRightarrow: '\\u21CF',\n  nrightarrow: '\\u219B',\n  nrtri: '\\u22EB',\n  nrtrie: '\\u22ED',\n  nsc: '\\u2281',\n  nsccue: '\\u22E1',\n  nsce: '\\u2AB0\\u0338',\n  Nscr: '\\uD835\\uDCA9',\n  nscr: '\\uD835\\uDCC3',\n  nshortmid: '\\u2224',\n  nshortparallel: '\\u2226',\n  nsim: '\\u2241',\n  nsime: '\\u2244',\n  nsimeq: '\\u2244',\n  nsmid: '\\u2224',\n  nspar: '\\u2226',\n  nsqsube: '\\u22E2',\n  nsqsupe: '\\u22E3',\n  nsub: '\\u2284',\n  nsubE: '\\u2AC5\\u0338',\n  nsube: '\\u2288',\n  nsubset: '\\u2282\\u20D2',\n  nsubseteq: '\\u2288',\n  nsubseteqq: '\\u2AC5\\u0338',\n  nsucc: '\\u2281',\n  nsucceq: '\\u2AB0\\u0338',\n  nsup: '\\u2285',\n  nsupE: '\\u2AC6\\u0338',\n  nsupe: '\\u2289',\n  nsupset: '\\u2283\\u20D2',\n  nsupseteq: '\\u2289',\n  nsupseteqq: '\\u2AC6\\u0338',\n  ntgl: '\\u2279',\n  Ntilde: '\\u00D1',\n  ntilde: '\\u00F1',\n  ntlg: '\\u2278',\n  ntriangleleft: '\\u22EA',\n  ntrianglelefteq: '\\u22EC',\n  ntriangleright: '\\u22EB',\n  ntrianglerighteq: '\\u22ED',\n  Nu: '\\u039D',\n  nu: '\\u03BD',\n  num: '\\u0023',\n  numero: '\\u2116',\n  numsp: '\\u2007',\n  nvap: '\\u224D\\u20D2',\n  nVDash: '\\u22AF',\n  nVdash: '\\u22AE',\n  nvDash: '\\u22AD',\n  nvdash: '\\u22AC',\n  nvge: '\\u2265\\u20D2',\n  nvgt: '\\u003E\\u20D2',\n  nvHarr: '\\u2904',\n  nvinfin: '\\u29DE',\n  nvlArr: '\\u2902',\n  nvle: '\\u2264\\u20D2',\n  nvlt: '\\u003C\\u20D2',\n  nvltrie: '\\u22B4\\u20D2',\n  nvrArr: '\\u2903',\n  nvrtrie: '\\u22B5\\u20D2',\n  nvsim: '\\u223C\\u20D2',\n  nwarhk: '\\u2923',\n  nwArr: '\\u21D6',\n  nwarr: '\\u2196',\n  nwarrow: '\\u2196',\n  nwnear: '\\u2927',\n  Oacute: '\\u00D3',\n  oacute: '\\u00F3',\n  oast: '\\u229B',\n  ocir: '\\u229A',\n  Ocirc: '\\u00D4',\n  ocirc: '\\u00F4',\n  Ocy: '\\u041E',\n  ocy: '\\u043E',\n  odash: '\\u229D',\n  Odblac: '\\u0150',\n  odblac: '\\u0151',\n  odiv: '\\u2A38',\n  odot: '\\u2299',\n  odsold: '\\u29BC',\n  OElig: '\\u0152',\n  oelig: '\\u0153',\n  ofcir: '\\u29BF',\n  Ofr: '\\uD835\\uDD12',\n  ofr: '\\uD835\\uDD2C',\n  ogon: '\\u02DB',\n  Ograve: '\\u00D2',\n  ograve: '\\u00F2',\n  ogt: '\\u29C1',\n  ohbar: '\\u29B5',\n  ohm: '\\u03A9',\n  oint: '\\u222E',\n  olarr: '\\u21BA',\n  olcir: '\\u29BE',\n  olcross: '\\u29BB',\n  oline: '\\u203E',\n  olt: '\\u29C0',\n  Omacr: '\\u014C',\n  omacr: '\\u014D',\n  Omega: '\\u03A9',\n  omega: '\\u03C9',\n  Omicron: '\\u039F',\n  omicron: '\\u03BF',\n  omid: '\\u29B6',\n  ominus: '\\u2296',\n  Oopf: '\\uD835\\uDD46',\n  oopf: '\\uD835\\uDD60',\n  opar: '\\u29B7',\n  OpenCurlyDoubleQuote: '\\u201C',\n  OpenCurlyQuote: '\\u2018',\n  operp: '\\u29B9',\n  oplus: '\\u2295',\n  Or: '\\u2A54',\n  or: '\\u2228',\n  orarr: '\\u21BB',\n  ord: '\\u2A5D',\n  order: '\\u2134',\n  orderof: '\\u2134',\n  ordf: '\\u00AA',\n  ordm: '\\u00BA',\n  origof: '\\u22B6',\n  oror: '\\u2A56',\n  orslope: '\\u2A57',\n  orv: '\\u2A5B',\n  oS: '\\u24C8',\n  Oscr: '\\uD835\\uDCAA',\n  oscr: '\\u2134',\n  Oslash: '\\u00D8',\n  oslash: '\\u00F8',\n  osol: '\\u2298',\n  Otilde: '\\u00D5',\n  otilde: '\\u00F5',\n  Otimes: '\\u2A37',\n  otimes: '\\u2297',\n  otimesas: '\\u2A36',\n  Ouml: '\\u00D6',\n  ouml: '\\u00F6',\n  ovbar: '\\u233D',\n  OverBar: '\\u203E',\n  OverBrace: '\\u23DE',\n  OverBracket: '\\u23B4',\n  OverParenthesis: '\\u23DC',\n  par: '\\u2225',\n  para: '\\u00B6',\n  parallel: '\\u2225',\n  parsim: '\\u2AF3',\n  parsl: '\\u2AFD',\n  part: '\\u2202',\n  PartialD: '\\u2202',\n  Pcy: '\\u041F',\n  pcy: '\\u043F',\n  percnt: '\\u0025',\n  period: '\\u002E',\n  permil: '\\u2030',\n  perp: '\\u22A5',\n  pertenk: '\\u2031',\n  Pfr: '\\uD835\\uDD13',\n  pfr: '\\uD835\\uDD2D',\n  Phi: '\\u03A6',\n  phi: '\\u03C6',\n  phiv: '\\u03D5',\n  phmmat: '\\u2133',\n  phone: '\\u260E',\n  Pi: '\\u03A0',\n  pi: '\\u03C0',\n  pitchfork: '\\u22D4',\n  piv: '\\u03D6',\n  planck: '\\u210F',\n  planckh: '\\u210E',\n  plankv: '\\u210F',\n  plus: '\\u002B',\n  plusacir: '\\u2A23',\n  plusb: '\\u229E',\n  pluscir: '\\u2A22',\n  plusdo: '\\u2214',\n  plusdu: '\\u2A25',\n  pluse: '\\u2A72',\n  PlusMinus: '\\u00B1',\n  plusmn: '\\u00B1',\n  plussim: '\\u2A26',\n  plustwo: '\\u2A27',\n  pm: '\\u00B1',\n  Poincareplane: '\\u210C',\n  pointint: '\\u2A15',\n  Popf: '\\u2119',\n  popf: '\\uD835\\uDD61',\n  pound: '\\u00A3',\n  Pr: '\\u2ABB',\n  pr: '\\u227A',\n  prap: '\\u2AB7',\n  prcue: '\\u227C',\n  prE: '\\u2AB3',\n  pre: '\\u2AAF',\n  prec: '\\u227A',\n  precapprox: '\\u2AB7',\n  preccurlyeq: '\\u227C',\n  Precedes: '\\u227A',\n  PrecedesEqual: '\\u2AAF',\n  PrecedesSlantEqual: '\\u227C',\n  PrecedesTilde: '\\u227E',\n  preceq: '\\u2AAF',\n  precnapprox: '\\u2AB9',\n  precneqq: '\\u2AB5',\n  precnsim: '\\u22E8',\n  precsim: '\\u227E',\n  Prime: '\\u2033',\n  prime: '\\u2032',\n  primes: '\\u2119',\n  prnap: '\\u2AB9',\n  prnE: '\\u2AB5',\n  prnsim: '\\u22E8',\n  prod: '\\u220F',\n  Product: '\\u220F',\n  profalar: '\\u232E',\n  profline: '\\u2312',\n  profsurf: '\\u2313',\n  prop: '\\u221D',\n  Proportion: '\\u2237',\n  Proportional: '\\u221D',\n  propto: '\\u221D',\n  prsim: '\\u227E',\n  prurel: '\\u22B0',\n  Pscr: '\\uD835\\uDCAB',\n  pscr: '\\uD835\\uDCC5',\n  Psi: '\\u03A8',\n  psi: '\\u03C8',\n  puncsp: '\\u2008',\n  Qfr: '\\uD835\\uDD14',\n  qfr: '\\uD835\\uDD2E',\n  qint: '\\u2A0C',\n  Qopf: '\\u211A',\n  qopf: '\\uD835\\uDD62',\n  qprime: '\\u2057',\n  Qscr: '\\uD835\\uDCAC',\n  qscr: '\\uD835\\uDCC6',\n  quaternions: '\\u210D',\n  quatint: '\\u2A16',\n  quest: '\\u003F',\n  questeq: '\\u225F',\n  QUOT: '\\u0022',\n  quot: '\\u0022',\n  rAarr: '\\u21DB',\n  race: '\\u223D\\u0331',\n  Racute: '\\u0154',\n  racute: '\\u0155',\n  radic: '\\u221A',\n  raemptyv: '\\u29B3',\n  Rang: '\\u27EB',\n  rang: '\\u27E9',\n  rangd: '\\u2992',\n  range: '\\u29A5',\n  rangle: '\\u27E9',\n  raquo: '\\u00BB',\n  Rarr: '\\u21A0',\n  rArr: '\\u21D2',\n  rarr: '\\u2192',\n  rarrap: '\\u2975',\n  rarrb: '\\u21E5',\n  rarrbfs: '\\u2920',\n  rarrc: '\\u2933',\n  rarrfs: '\\u291E',\n  rarrhk: '\\u21AA',\n  rarrlp: '\\u21AC',\n  rarrpl: '\\u2945',\n  rarrsim: '\\u2974',\n  Rarrtl: '\\u2916',\n  rarrtl: '\\u21A3',\n  rarrw: '\\u219D',\n  rAtail: '\\u291C',\n  ratail: '\\u291A',\n  ratio: '\\u2236',\n  rationals: '\\u211A',\n  RBarr: '\\u2910',\n  rBarr: '\\u290F',\n  rbarr: '\\u290D',\n  rbbrk: '\\u2773',\n  rbrace: '\\u007D',\n  rbrack: '\\u005D',\n  rbrke: '\\u298C',\n  rbrksld: '\\u298E',\n  rbrkslu: '\\u2990',\n  Rcaron: '\\u0158',\n  rcaron: '\\u0159',\n  Rcedil: '\\u0156',\n  rcedil: '\\u0157',\n  rceil: '\\u2309',\n  rcub: '\\u007D',\n  Rcy: '\\u0420',\n  rcy: '\\u0440',\n  rdca: '\\u2937',\n  rdldhar: '\\u2969',\n  rdquo: '\\u201D',\n  rdquor: '\\u201D',\n  rdsh: '\\u21B3',\n  Re: '\\u211C',\n  real: '\\u211C',\n  realine: '\\u211B',\n  realpart: '\\u211C',\n  reals: '\\u211D',\n  rect: '\\u25AD',\n  REG: '\\u00AE',\n  reg: '\\u00AE',\n  ReverseElement: '\\u220B',\n  ReverseEquilibrium: '\\u21CB',\n  ReverseUpEquilibrium: '\\u296F',\n  rfisht: '\\u297D',\n  rfloor: '\\u230B',\n  Rfr: '\\u211C',\n  rfr: '\\uD835\\uDD2F',\n  rHar: '\\u2964',\n  rhard: '\\u21C1',\n  rharu: '\\u21C0',\n  rharul: '\\u296C',\n  Rho: '\\u03A1',\n  rho: '\\u03C1',\n  rhov: '\\u03F1',\n  RightAngleBracket: '\\u27E9',\n  RightArrow: '\\u2192',\n  Rightarrow: '\\u21D2',\n  rightarrow: '\\u2192',\n  RightArrowBar: '\\u21E5',\n  RightArrowLeftArrow: '\\u21C4',\n  rightarrowtail: '\\u21A3',\n  RightCeiling: '\\u2309',\n  RightDoubleBracket: '\\u27E7',\n  RightDownTeeVector: '\\u295D',\n  RightDownVector: '\\u21C2',\n  RightDownVectorBar: '\\u2955',\n  RightFloor: '\\u230B',\n  rightharpoondown: '\\u21C1',\n  rightharpoonup: '\\u21C0',\n  rightleftarrows: '\\u21C4',\n  rightleftharpoons: '\\u21CC',\n  rightrightarrows: '\\u21C9',\n  rightsquigarrow: '\\u219D',\n  RightTee: '\\u22A2',\n  RightTeeArrow: '\\u21A6',\n  RightTeeVector: '\\u295B',\n  rightthreetimes: '\\u22CC',\n  RightTriangle: '\\u22B3',\n  RightTriangleBar: '\\u29D0',\n  RightTriangleEqual: '\\u22B5',\n  RightUpDownVector: '\\u294F',\n  RightUpTeeVector: '\\u295C',\n  RightUpVector: '\\u21BE',\n  RightUpVectorBar: '\\u2954',\n  RightVector: '\\u21C0',\n  RightVectorBar: '\\u2953',\n  ring: '\\u02DA',\n  risingdotseq: '\\u2253',\n  rlarr: '\\u21C4',\n  rlhar: '\\u21CC',\n  rlm: '\\u200F',\n  rmoust: '\\u23B1',\n  rmoustache: '\\u23B1',\n  rnmid: '\\u2AEE',\n  roang: '\\u27ED',\n  roarr: '\\u21FE',\n  robrk: '\\u27E7',\n  ropar: '\\u2986',\n  Ropf: '\\u211D',\n  ropf: '\\uD835\\uDD63',\n  roplus: '\\u2A2E',\n  rotimes: '\\u2A35',\n  RoundImplies: '\\u2970',\n  rpar: '\\u0029',\n  rpargt: '\\u2994',\n  rppolint: '\\u2A12',\n  rrarr: '\\u21C9',\n  Rrightarrow: '\\u21DB',\n  rsaquo: '\\u203A',\n  Rscr: '\\u211B',\n  rscr: '\\uD835\\uDCC7',\n  Rsh: '\\u21B1',\n  rsh: '\\u21B1',\n  rsqb: '\\u005D',\n  rsquo: '\\u2019',\n  rsquor: '\\u2019',\n  rthree: '\\u22CC',\n  rtimes: '\\u22CA',\n  rtri: '\\u25B9',\n  rtrie: '\\u22B5',\n  rtrif: '\\u25B8',\n  rtriltri: '\\u29CE',\n  RuleDelayed: '\\u29F4',\n  ruluhar: '\\u2968',\n  rx: '\\u211E',\n  Sacute: '\\u015A',\n  sacute: '\\u015B',\n  sbquo: '\\u201A',\n  Sc: '\\u2ABC',\n  sc: '\\u227B',\n  scap: '\\u2AB8',\n  Scaron: '\\u0160',\n  scaron: '\\u0161',\n  sccue: '\\u227D',\n  scE: '\\u2AB4',\n  sce: '\\u2AB0',\n  Scedil: '\\u015E',\n  scedil: '\\u015F',\n  Scirc: '\\u015C',\n  scirc: '\\u015D',\n  scnap: '\\u2ABA',\n  scnE: '\\u2AB6',\n  scnsim: '\\u22E9',\n  scpolint: '\\u2A13',\n  scsim: '\\u227F',\n  Scy: '\\u0421',\n  scy: '\\u0441',\n  sdot: '\\u22C5',\n  sdotb: '\\u22A1',\n  sdote: '\\u2A66',\n  searhk: '\\u2925',\n  seArr: '\\u21D8',\n  searr: '\\u2198',\n  searrow: '\\u2198',\n  sect: '\\u00A7',\n  semi: '\\u003B',\n  seswar: '\\u2929',\n  setminus: '\\u2216',\n  setmn: '\\u2216',\n  sext: '\\u2736',\n  Sfr: '\\uD835\\uDD16',\n  sfr: '\\uD835\\uDD30',\n  sfrown: '\\u2322',\n  sharp: '\\u266F',\n  SHCHcy: '\\u0429',\n  shchcy: '\\u0449',\n  SHcy: '\\u0428',\n  shcy: '\\u0448',\n  ShortDownArrow: '\\u2193',\n  ShortLeftArrow: '\\u2190',\n  shortmid: '\\u2223',\n  shortparallel: '\\u2225',\n  ShortRightArrow: '\\u2192',\n  ShortUpArrow: '\\u2191',\n  shy: '\\u00AD',\n  Sigma: '\\u03A3',\n  sigma: '\\u03C3',\n  sigmaf: '\\u03C2',\n  sigmav: '\\u03C2',\n  sim: '\\u223C',\n  simdot: '\\u2A6A',\n  sime: '\\u2243',\n  simeq: '\\u2243',\n  simg: '\\u2A9E',\n  simgE: '\\u2AA0',\n  siml: '\\u2A9D',\n  simlE: '\\u2A9F',\n  simne: '\\u2246',\n  simplus: '\\u2A24',\n  simrarr: '\\u2972',\n  slarr: '\\u2190',\n  SmallCircle: '\\u2218',\n  smallsetminus: '\\u2216',\n  smashp: '\\u2A33',\n  smeparsl: '\\u29E4',\n  smid: '\\u2223',\n  smile: '\\u2323',\n  smt: '\\u2AAA',\n  smte: '\\u2AAC',\n  smtes: '\\u2AAC\\uFE00',\n  SOFTcy: '\\u042C',\n  softcy: '\\u044C',\n  sol: '\\u002F',\n  solb: '\\u29C4',\n  solbar: '\\u233F',\n  Sopf: '\\uD835\\uDD4A',\n  sopf: '\\uD835\\uDD64',\n  spades: '\\u2660',\n  spadesuit: '\\u2660',\n  spar: '\\u2225',\n  sqcap: '\\u2293',\n  sqcaps: '\\u2293\\uFE00',\n  sqcup: '\\u2294',\n  sqcups: '\\u2294\\uFE00',\n  Sqrt: '\\u221A',\n  sqsub: '\\u228F',\n  sqsube: '\\u2291',\n  sqsubset: '\\u228F',\n  sqsubseteq: '\\u2291',\n  sqsup: '\\u2290',\n  sqsupe: '\\u2292',\n  sqsupset: '\\u2290',\n  sqsupseteq: '\\u2292',\n  squ: '\\u25A1',\n  Square: '\\u25A1',\n  square: '\\u25A1',\n  SquareIntersection: '\\u2293',\n  SquareSubset: '\\u228F',\n  SquareSubsetEqual: '\\u2291',\n  SquareSuperset: '\\u2290',\n  SquareSupersetEqual: '\\u2292',\n  SquareUnion: '\\u2294',\n  squarf: '\\u25AA',\n  squf: '\\u25AA',\n  srarr: '\\u2192',\n  Sscr: '\\uD835\\uDCAE',\n  sscr: '\\uD835\\uDCC8',\n  ssetmn: '\\u2216',\n  ssmile: '\\u2323',\n  sstarf: '\\u22C6',\n  Star: '\\u22C6',\n  star: '\\u2606',\n  starf: '\\u2605',\n  straightepsilon: '\\u03F5',\n  straightphi: '\\u03D5',\n  strns: '\\u00AF',\n  Sub: '\\u22D0',\n  sub: '\\u2282',\n  subdot: '\\u2ABD',\n  subE: '\\u2AC5',\n  sube: '\\u2286',\n  subedot: '\\u2AC3',\n  submult: '\\u2AC1',\n  subnE: '\\u2ACB',\n  subne: '\\u228A',\n  subplus: '\\u2ABF',\n  subrarr: '\\u2979',\n  Subset: '\\u22D0',\n  subset: '\\u2282',\n  subseteq: '\\u2286',\n  subseteqq: '\\u2AC5',\n  SubsetEqual: '\\u2286',\n  subsetneq: '\\u228A',\n  subsetneqq: '\\u2ACB',\n  subsim: '\\u2AC7',\n  subsub: '\\u2AD5',\n  subsup: '\\u2AD3',\n  succ: '\\u227B',\n  succapprox: '\\u2AB8',\n  succcurlyeq: '\\u227D',\n  Succeeds: '\\u227B',\n  SucceedsEqual: '\\u2AB0',\n  SucceedsSlantEqual: '\\u227D',\n  SucceedsTilde: '\\u227F',\n  succeq: '\\u2AB0',\n  succnapprox: '\\u2ABA',\n  succneqq: '\\u2AB6',\n  succnsim: '\\u22E9',\n  succsim: '\\u227F',\n  SuchThat: '\\u220B',\n  Sum: '\\u2211',\n  sum: '\\u2211',\n  sung: '\\u266A',\n  Sup: '\\u22D1',\n  sup: '\\u2283',\n  sup1: '\\u00B9',\n  sup2: '\\u00B2',\n  sup3: '\\u00B3',\n  supdot: '\\u2ABE',\n  supdsub: '\\u2AD8',\n  supE: '\\u2AC6',\n  supe: '\\u2287',\n  supedot: '\\u2AC4',\n  Superset: '\\u2283',\n  SupersetEqual: '\\u2287',\n  suphsol: '\\u27C9',\n  suphsub: '\\u2AD7',\n  suplarr: '\\u297B',\n  supmult: '\\u2AC2',\n  supnE: '\\u2ACC',\n  supne: '\\u228B',\n  supplus: '\\u2AC0',\n  Supset: '\\u22D1',\n  supset: '\\u2283',\n  supseteq: '\\u2287',\n  supseteqq: '\\u2AC6',\n  supsetneq: '\\u228B',\n  supsetneqq: '\\u2ACC',\n  supsim: '\\u2AC8',\n  supsub: '\\u2AD4',\n  supsup: '\\u2AD6',\n  swarhk: '\\u2926',\n  swArr: '\\u21D9',\n  swarr: '\\u2199',\n  swarrow: '\\u2199',\n  swnwar: '\\u292A',\n  szlig: '\\u00DF',\n  Tab: '\\u0009',\n  target: '\\u2316',\n  Tau: '\\u03A4',\n  tau: '\\u03C4',\n  tbrk: '\\u23B4',\n  Tcaron: '\\u0164',\n  tcaron: '\\u0165',\n  Tcedil: '\\u0162',\n  tcedil: '\\u0163',\n  Tcy: '\\u0422',\n  tcy: '\\u0442',\n  tdot: '\\u20DB',\n  telrec: '\\u2315',\n  Tfr: '\\uD835\\uDD17',\n  tfr: '\\uD835\\uDD31',\n  there4: '\\u2234',\n  Therefore: '\\u2234',\n  therefore: '\\u2234',\n  Theta: '\\u0398',\n  theta: '\\u03B8',\n  thetasym: '\\u03D1',\n  thetav: '\\u03D1',\n  thickapprox: '\\u2248',\n  thicksim: '\\u223C',\n  ThickSpace: '\\u205F\\u200A',\n  thinsp: '\\u2009',\n  ThinSpace: '\\u2009',\n  thkap: '\\u2248',\n  thksim: '\\u223C',\n  THORN: '\\u00DE',\n  thorn: '\\u00FE',\n  Tilde: '\\u223C',\n  tilde: '\\u02DC',\n  TildeEqual: '\\u2243',\n  TildeFullEqual: '\\u2245',\n  TildeTilde: '\\u2248',\n  times: '\\u00D7',\n  timesb: '\\u22A0',\n  timesbar: '\\u2A31',\n  timesd: '\\u2A30',\n  tint: '\\u222D',\n  toea: '\\u2928',\n  top: '\\u22A4',\n  topbot: '\\u2336',\n  topcir: '\\u2AF1',\n  Topf: '\\uD835\\uDD4B',\n  topf: '\\uD835\\uDD65',\n  topfork: '\\u2ADA',\n  tosa: '\\u2929',\n  tprime: '\\u2034',\n  TRADE: '\\u2122',\n  trade: '\\u2122',\n  triangle: '\\u25B5',\n  triangledown: '\\u25BF',\n  triangleleft: '\\u25C3',\n  trianglelefteq: '\\u22B4',\n  triangleq: '\\u225C',\n  triangleright: '\\u25B9',\n  trianglerighteq: '\\u22B5',\n  tridot: '\\u25EC',\n  trie: '\\u225C',\n  triminus: '\\u2A3A',\n  TripleDot: '\\u20DB',\n  triplus: '\\u2A39',\n  trisb: '\\u29CD',\n  tritime: '\\u2A3B',\n  trpezium: '\\u23E2',\n  Tscr: '\\uD835\\uDCAF',\n  tscr: '\\uD835\\uDCC9',\n  TScy: '\\u0426',\n  tscy: '\\u0446',\n  TSHcy: '\\u040B',\n  tshcy: '\\u045B',\n  Tstrok: '\\u0166',\n  tstrok: '\\u0167',\n  twixt: '\\u226C',\n  twoheadleftarrow: '\\u219E',\n  twoheadrightarrow: '\\u21A0',\n  Uacute: '\\u00DA',\n  uacute: '\\u00FA',\n  Uarr: '\\u219F',\n  uArr: '\\u21D1',\n  uarr: '\\u2191',\n  Uarrocir: '\\u2949',\n  Ubrcy: '\\u040E',\n  ubrcy: '\\u045E',\n  Ubreve: '\\u016C',\n  ubreve: '\\u016D',\n  Ucirc: '\\u00DB',\n  ucirc: '\\u00FB',\n  Ucy: '\\u0423',\n  ucy: '\\u0443',\n  udarr: '\\u21C5',\n  Udblac: '\\u0170',\n  udblac: '\\u0171',\n  udhar: '\\u296E',\n  ufisht: '\\u297E',\n  Ufr: '\\uD835\\uDD18',\n  ufr: '\\uD835\\uDD32',\n  Ugrave: '\\u00D9',\n  ugrave: '\\u00F9',\n  uHar: '\\u2963',\n  uharl: '\\u21BF',\n  uharr: '\\u21BE',\n  uhblk: '\\u2580',\n  ulcorn: '\\u231C',\n  ulcorner: '\\u231C',\n  ulcrop: '\\u230F',\n  ultri: '\\u25F8',\n  Umacr: '\\u016A',\n  umacr: '\\u016B',\n  uml: '\\u00A8',\n  UnderBar: '\\u005F',\n  UnderBrace: '\\u23DF',\n  UnderBracket: '\\u23B5',\n  UnderParenthesis: '\\u23DD',\n  Union: '\\u22C3',\n  UnionPlus: '\\u228E',\n  Uogon: '\\u0172',\n  uogon: '\\u0173',\n  Uopf: '\\uD835\\uDD4C',\n  uopf: '\\uD835\\uDD66',\n  UpArrow: '\\u2191',\n  Uparrow: '\\u21D1',\n  uparrow: '\\u2191',\n  UpArrowBar: '\\u2912',\n  UpArrowDownArrow: '\\u21C5',\n  UpDownArrow: '\\u2195',\n  Updownarrow: '\\u21D5',\n  updownarrow: '\\u2195',\n  UpEquilibrium: '\\u296E',\n  upharpoonleft: '\\u21BF',\n  upharpoonright: '\\u21BE',\n  uplus: '\\u228E',\n  UpperLeftArrow: '\\u2196',\n  UpperRightArrow: '\\u2197',\n  Upsi: '\\u03D2',\n  upsi: '\\u03C5',\n  upsih: '\\u03D2',\n  Upsilon: '\\u03A5',\n  upsilon: '\\u03C5',\n  UpTee: '\\u22A5',\n  UpTeeArrow: '\\u21A5',\n  upuparrows: '\\u21C8',\n  urcorn: '\\u231D',\n  urcorner: '\\u231D',\n  urcrop: '\\u230E',\n  Uring: '\\u016E',\n  uring: '\\u016F',\n  urtri: '\\u25F9',\n  Uscr: '\\uD835\\uDCB0',\n  uscr: '\\uD835\\uDCCA',\n  utdot: '\\u22F0',\n  Utilde: '\\u0168',\n  utilde: '\\u0169',\n  utri: '\\u25B5',\n  utrif: '\\u25B4',\n  uuarr: '\\u21C8',\n  Uuml: '\\u00DC',\n  uuml: '\\u00FC',\n  uwangle: '\\u29A7',\n  vangrt: '\\u299C',\n  varepsilon: '\\u03F5',\n  varkappa: '\\u03F0',\n  varnothing: '\\u2205',\n  varphi: '\\u03D5',\n  varpi: '\\u03D6',\n  varpropto: '\\u221D',\n  vArr: '\\u21D5',\n  varr: '\\u2195',\n  varrho: '\\u03F1',\n  varsigma: '\\u03C2',\n  varsubsetneq: '\\u228A\\uFE00',\n  varsubsetneqq: '\\u2ACB\\uFE00',\n  varsupsetneq: '\\u228B\\uFE00',\n  varsupsetneqq: '\\u2ACC\\uFE00',\n  vartheta: '\\u03D1',\n  vartriangleleft: '\\u22B2',\n  vartriangleright: '\\u22B3',\n  Vbar: '\\u2AEB',\n  vBar: '\\u2AE8',\n  vBarv: '\\u2AE9',\n  Vcy: '\\u0412',\n  vcy: '\\u0432',\n  VDash: '\\u22AB',\n  Vdash: '\\u22A9',\n  vDash: '\\u22A8',\n  vdash: '\\u22A2',\n  Vdashl: '\\u2AE6',\n  Vee: '\\u22C1',\n  vee: '\\u2228',\n  veebar: '\\u22BB',\n  veeeq: '\\u225A',\n  vellip: '\\u22EE',\n  Verbar: '\\u2016',\n  verbar: '\\u007C',\n  Vert: '\\u2016',\n  vert: '\\u007C',\n  VerticalBar: '\\u2223',\n  VerticalLine: '\\u007C',\n  VerticalSeparator: '\\u2758',\n  VerticalTilde: '\\u2240',\n  VeryThinSpace: '\\u200A',\n  Vfr: '\\uD835\\uDD19',\n  vfr: '\\uD835\\uDD33',\n  vltri: '\\u22B2',\n  vnsub: '\\u2282\\u20D2',\n  vnsup: '\\u2283\\u20D2',\n  Vopf: '\\uD835\\uDD4D',\n  vopf: '\\uD835\\uDD67',\n  vprop: '\\u221D',\n  vrtri: '\\u22B3',\n  Vscr: '\\uD835\\uDCB1',\n  vscr: '\\uD835\\uDCCB',\n  vsubnE: '\\u2ACB\\uFE00',\n  vsubne: '\\u228A\\uFE00',\n  vsupnE: '\\u2ACC\\uFE00',\n  vsupne: '\\u228B\\uFE00',\n  Vvdash: '\\u22AA',\n  vzigzag: '\\u299A',\n  Wcirc: '\\u0174',\n  wcirc: '\\u0175',\n  wedbar: '\\u2A5F',\n  Wedge: '\\u22C0',\n  wedge: '\\u2227',\n  wedgeq: '\\u2259',\n  weierp: '\\u2118',\n  Wfr: '\\uD835\\uDD1A',\n  wfr: '\\uD835\\uDD34',\n  Wopf: '\\uD835\\uDD4E',\n  wopf: '\\uD835\\uDD68',\n  wp: '\\u2118',\n  wr: '\\u2240',\n  wreath: '\\u2240',\n  Wscr: '\\uD835\\uDCB2',\n  wscr: '\\uD835\\uDCCC',\n  xcap: '\\u22C2',\n  xcirc: '\\u25EF',\n  xcup: '\\u22C3',\n  xdtri: '\\u25BD',\n  Xfr: '\\uD835\\uDD1B',\n  xfr: '\\uD835\\uDD35',\n  xhArr: '\\u27FA',\n  xharr: '\\u27F7',\n  Xi: '\\u039E',\n  xi: '\\u03BE',\n  xlArr: '\\u27F8',\n  xlarr: '\\u27F5',\n  xmap: '\\u27FC',\n  xnis: '\\u22FB',\n  xodot: '\\u2A00',\n  Xopf: '\\uD835\\uDD4F',\n  xopf: '\\uD835\\uDD69',\n  xoplus: '\\u2A01',\n  xotime: '\\u2A02',\n  xrArr: '\\u27F9',\n  xrarr: '\\u27F6',\n  Xscr: '\\uD835\\uDCB3',\n  xscr: '\\uD835\\uDCCD',\n  xsqcup: '\\u2A06',\n  xuplus: '\\u2A04',\n  xutri: '\\u25B3',\n  xvee: '\\u22C1',\n  xwedge: '\\u22C0',\n  Yacute: '\\u00DD',\n  yacute: '\\u00FD',\n  YAcy: '\\u042F',\n  yacy: '\\u044F',\n  Ycirc: '\\u0176',\n  ycirc: '\\u0177',\n  Ycy: '\\u042B',\n  ycy: '\\u044B',\n  yen: '\\u00A5',\n  Yfr: '\\uD835\\uDD1C',\n  yfr: '\\uD835\\uDD36',\n  YIcy: '\\u0407',\n  yicy: '\\u0457',\n  Yopf: '\\uD835\\uDD50',\n  yopf: '\\uD835\\uDD6A',\n  Yscr: '\\uD835\\uDCB4',\n  yscr: '\\uD835\\uDCCE',\n  YUcy: '\\u042E',\n  yucy: '\\u044E',\n  Yuml: '\\u0178',\n  yuml: '\\u00FF',\n  Zacute: '\\u0179',\n  zacute: '\\u017A',\n  Zcaron: '\\u017D',\n  zcaron: '\\u017E',\n  Zcy: '\\u0417',\n  zcy: '\\u0437',\n  Zdot: '\\u017B',\n  zdot: '\\u017C',\n  zeetrf: '\\u2128',\n  ZeroWidthSpace: '\\u200B',\n  Zeta: '\\u0396',\n  zeta: '\\u03B6',\n  Zfr: '\\u2128',\n  zfr: '\\uD835\\uDD37',\n  ZHcy: '\\u0416',\n  zhcy: '\\u0436',\n  zigrarr: '\\u21DD',\n  Zopf: '\\u2124',\n  zopf: '\\uD835\\uDD6B',\n  Zscr: '\\uD835\\uDCB5',\n  zscr: '\\uD835\\uDCCF',\n  zwj: '\\u200D',\n  zwnj: '\\u200C'\n});\n\n/**\n * @deprecated use `HTML_ENTITIES` instead\n * @see HTML_ENTITIES\n */\nexports.entityMap = exports.HTML_ENTITIES;\n\n//# sourceURL=webpack://my-app/../../@xmldom/xmldom/lib/entities.js?");

/***/ }),

/***/ "../../@xmldom/xmldom/lib/index.js":
/*!*****************************************!*\
  !*** ../../@xmldom/xmldom/lib/index.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var dom = __webpack_require__(/*! ./dom */ \"../../@xmldom/xmldom/lib/dom.js\");\nexports.DOMImplementation = dom.DOMImplementation;\nexports.XMLSerializer = dom.XMLSerializer;\nexports.DOMParser = __webpack_require__(/*! ./dom-parser */ \"../../@xmldom/xmldom/lib/dom-parser.js\").DOMParser;\n\n//# sourceURL=webpack://my-app/../../@xmldom/xmldom/lib/index.js?");

/***/ }),

/***/ "../../@xmldom/xmldom/lib/sax.js":
/*!***************************************!*\
  !*** ../../@xmldom/xmldom/lib/sax.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var NAMESPACE = (__webpack_require__(/*! ./conventions */ \"../../@xmldom/xmldom/lib/conventions.js\").NAMESPACE);\n\n//[4]   \tNameStartChar\t   ::=   \t\":\" | [A-Z] | \"_\" | [a-z] | [#xC0-#xD6] | [#xD8-#xF6] | [#xF8-#x2FF] | [#x370-#x37D] | [#x37F-#x1FFF] | [#x200C-#x200D] | [#x2070-#x218F] | [#x2C00-#x2FEF] | [#x3001-#xD7FF] | [#xF900-#xFDCF] | [#xFDF0-#xFFFD] | [#x10000-#xEFFFF]\n//[4a]   \tNameChar\t   ::=   \tNameStartChar | \"-\" | \".\" | [0-9] | #xB7 | [#x0300-#x036F] | [#x203F-#x2040]\n//[5]   \tName\t   ::=   \tNameStartChar (NameChar)*\nvar nameStartChar = /[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/; //\\u10000-\\uEFFFF\nvar nameChar = new RegExp(\"[\\\\-\\\\.0-9\" + nameStartChar.source.slice(1, -1) + \"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");\nvar tagNamePattern = new RegExp('^' + nameStartChar.source + nameChar.source + '*(?:\\:' + nameStartChar.source + nameChar.source + '*)?$');\n//var tagNamePattern = /^[a-zA-Z_][\\w\\-\\.]*(?:\\:[a-zA-Z_][\\w\\-\\.]*)?$/\n//var handlers = 'resolveEntity,getExternalSubset,characters,endDocument,endElement,endPrefixMapping,ignorableWhitespace,processingInstruction,setDocumentLocator,skippedEntity,startDocument,startElement,startPrefixMapping,notationDecl,unparsedEntityDecl,error,fatalError,warning,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,comment,endCDATA,endDTD,endEntity,startCDATA,startDTD,startEntity'.split(',')\n\n//S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\n//S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\nvar S_TAG = 0; //tag name offerring\nvar S_ATTR = 1; //attr name offerring\nvar S_ATTR_SPACE = 2; //attr name end and space offer\nvar S_EQ = 3; //=space?\nvar S_ATTR_NOQUOT_VALUE = 4; //attr value(no quot value only)\nvar S_ATTR_END = 5; //attr value end and no space(quot end)\nvar S_TAG_SPACE = 6; //(attr value end || tag end ) && (space offer)\nvar S_TAG_CLOSE = 7; //closed el<el />\n\n/**\n * Creates an error that will not be caught by XMLReader aka the SAX parser.\n *\n * @param {string} message\n * @param {any?} locator Optional, can provide details about the location in the source\n * @constructor\n */\nfunction ParseError(message, locator) {\n  this.message = message;\n  this.locator = locator;\n  if (Error.captureStackTrace) Error.captureStackTrace(this, ParseError);\n}\nParseError.prototype = new Error();\nParseError.prototype.name = ParseError.name;\nfunction XMLReader() {}\nXMLReader.prototype = {\n  parse: function (source, defaultNSMap, entityMap) {\n    var domBuilder = this.domBuilder;\n    domBuilder.startDocument();\n    _copy(defaultNSMap, defaultNSMap = {});\n    parse(source, defaultNSMap, entityMap, domBuilder, this.errorHandler);\n    domBuilder.endDocument();\n  }\n};\nfunction parse(source, defaultNSMapCopy, entityMap, domBuilder, errorHandler) {\n  function fixedFromCharCode(code) {\n    // String.prototype.fromCharCode does not supports\n    // > 2 bytes unicode chars directly\n    if (code > 0xffff) {\n      code -= 0x10000;\n      var surrogate1 = 0xd800 + (code >> 10),\n        surrogate2 = 0xdc00 + (code & 0x3ff);\n      return String.fromCharCode(surrogate1, surrogate2);\n    } else {\n      return String.fromCharCode(code);\n    }\n  }\n  function entityReplacer(a) {\n    var k = a.slice(1, -1);\n    if (Object.hasOwnProperty.call(entityMap, k)) {\n      return entityMap[k];\n    } else if (k.charAt(0) === '#') {\n      return fixedFromCharCode(parseInt(k.substr(1).replace('x', '0x')));\n    } else {\n      errorHandler.error('entity not found:' + a);\n      return a;\n    }\n  }\n  function appendText(end) {\n    //has some bugs\n    if (end > start) {\n      var xt = source.substring(start, end).replace(/&#?\\w+;/g, entityReplacer);\n      locator && position(start);\n      domBuilder.characters(xt, 0, end - start);\n      start = end;\n    }\n  }\n  function position(p, m) {\n    while (p >= lineEnd && (m = linePattern.exec(source))) {\n      lineStart = m.index;\n      lineEnd = lineStart + m[0].length;\n      locator.lineNumber++;\n      //console.log('line++:',locator,startPos,endPos)\n    }\n    locator.columnNumber = p - lineStart + 1;\n  }\n  var lineStart = 0;\n  var lineEnd = 0;\n  var linePattern = /.*(?:\\r\\n?|\\n)|.*$/g;\n  var locator = domBuilder.locator;\n  var parseStack = [{\n    currentNSMap: defaultNSMapCopy\n  }];\n  var closeMap = {};\n  var start = 0;\n  while (true) {\n    try {\n      var tagStart = source.indexOf('<', start);\n      if (tagStart < 0) {\n        if (!source.substr(start).match(/^\\s*$/)) {\n          var doc = domBuilder.doc;\n          var text = doc.createTextNode(source.substr(start));\n          doc.appendChild(text);\n          domBuilder.currentElement = text;\n        }\n        return;\n      }\n      if (tagStart > start) {\n        appendText(tagStart);\n      }\n      switch (source.charAt(tagStart + 1)) {\n        case '/':\n          var end = source.indexOf('>', tagStart + 3);\n          var tagName = source.substring(tagStart + 2, end).replace(/[ \\t\\n\\r]+$/g, '');\n          var config = parseStack.pop();\n          if (end < 0) {\n            tagName = source.substring(tagStart + 2).replace(/[\\s<].*/, '');\n            errorHandler.error(\"end tag name: \" + tagName + ' is not complete:' + config.tagName);\n            end = tagStart + 1 + tagName.length;\n          } else if (tagName.match(/\\s</)) {\n            tagName = tagName.replace(/[\\s<].*/, '');\n            errorHandler.error(\"end tag name: \" + tagName + ' maybe not complete');\n            end = tagStart + 1 + tagName.length;\n          }\n          var localNSMap = config.localNSMap;\n          var endMatch = config.tagName == tagName;\n          var endIgnoreCaseMach = endMatch || config.tagName && config.tagName.toLowerCase() == tagName.toLowerCase();\n          if (endIgnoreCaseMach) {\n            domBuilder.endElement(config.uri, config.localName, tagName);\n            if (localNSMap) {\n              for (var prefix in localNSMap) {\n                if (Object.prototype.hasOwnProperty.call(localNSMap, prefix)) {\n                  domBuilder.endPrefixMapping(prefix);\n                }\n              }\n            }\n            if (!endMatch) {\n              errorHandler.fatalError(\"end tag name: \" + tagName + ' is not match the current start tagName:' + config.tagName); // No known test case\n            }\n          } else {\n            parseStack.push(config);\n          }\n          end++;\n          break;\n        // end elment\n        case '?':\n          // <?...?>\n          locator && position(tagStart);\n          end = parseInstruction(source, tagStart, domBuilder);\n          break;\n        case '!':\n          // <!doctype,<![CDATA,<!--\n          locator && position(tagStart);\n          end = parseDCC(source, tagStart, domBuilder, errorHandler);\n          break;\n        default:\n          locator && position(tagStart);\n          var el = new ElementAttributes();\n          var currentNSMap = parseStack[parseStack.length - 1].currentNSMap;\n          //elStartEnd\n          var end = parseElementStartPart(source, tagStart, el, currentNSMap, entityReplacer, errorHandler);\n          var len = el.length;\n          if (!el.closed && fixSelfClosed(source, end, el.tagName, closeMap)) {\n            el.closed = true;\n            if (!entityMap.nbsp) {\n              errorHandler.warning('unclosed xml attribute');\n            }\n          }\n          if (locator && len) {\n            var locator2 = copyLocator(locator, {});\n            //try{//attribute position fixed\n            for (var i = 0; i < len; i++) {\n              var a = el[i];\n              position(a.offset);\n              a.locator = copyLocator(locator, {});\n            }\n            domBuilder.locator = locator2;\n            if (appendElement(el, domBuilder, currentNSMap)) {\n              parseStack.push(el);\n            }\n            domBuilder.locator = locator;\n          } else {\n            if (appendElement(el, domBuilder, currentNSMap)) {\n              parseStack.push(el);\n            }\n          }\n          if (NAMESPACE.isHTML(el.uri) && !el.closed) {\n            end = parseHtmlSpecialContent(source, end, el.tagName, entityReplacer, domBuilder);\n          } else {\n            end++;\n          }\n      }\n    } catch (e) {\n      if (e instanceof ParseError) {\n        throw e;\n      }\n      errorHandler.error('element parse error: ' + e);\n      end = -1;\n    }\n    if (end > start) {\n      start = end;\n    } else {\n      //TODO: 这里有可能sax回退，有位置错误风险\n      appendText(Math.max(tagStart, start) + 1);\n    }\n  }\n}\nfunction copyLocator(f, t) {\n  t.lineNumber = f.lineNumber;\n  t.columnNumber = f.columnNumber;\n  return t;\n}\n\n/**\n * @see #appendElement(source,elStartEnd,el,selfClosed,entityReplacer,domBuilder,parseStack);\n * @return end of the elementStartPart(end of elementEndPart for selfClosed el)\n */\nfunction parseElementStartPart(source, start, el, currentNSMap, entityReplacer, errorHandler) {\n  /**\n   * @param {string} qname\n   * @param {string} value\n   * @param {number} startIndex\n   */\n  function addAttribute(qname, value, startIndex) {\n    if (el.attributeNames.hasOwnProperty(qname)) {\n      errorHandler.fatalError('Attribute ' + qname + ' redefined');\n    }\n    el.addValue(qname,\n    // @see https://www.w3.org/TR/xml/#AVNormalize\n    // since the xmldom sax parser does not \"interpret\" DTD the following is not implemented:\n    // - recursive replacement of (DTD) entity references\n    // - trimming and collapsing multiple spaces into a single one for attributes that are not of type CDATA\n    value.replace(/[\\t\\n\\r]/g, ' ').replace(/&#?\\w+;/g, entityReplacer), startIndex);\n  }\n  var attrName;\n  var value;\n  var p = ++start;\n  var s = S_TAG; //status\n  while (true) {\n    var c = source.charAt(p);\n    switch (c) {\n      case '=':\n        if (s === S_ATTR) {\n          //attrName\n          attrName = source.slice(start, p);\n          s = S_EQ;\n        } else if (s === S_ATTR_SPACE) {\n          s = S_EQ;\n        } else {\n          //fatalError: equal must after attrName or space after attrName\n          throw new Error('attribute equal must after attrName'); // No known test case\n        }\n        break;\n      case '\\'':\n      case '\"':\n        if (s === S_EQ || s === S_ATTR //|| s == S_ATTR_SPACE\n        ) {\n          //equal\n          if (s === S_ATTR) {\n            errorHandler.warning('attribute value must after \"=\"');\n            attrName = source.slice(start, p);\n          }\n          start = p + 1;\n          p = source.indexOf(c, start);\n          if (p > 0) {\n            value = source.slice(start, p);\n            addAttribute(attrName, value, start - 1);\n            s = S_ATTR_END;\n          } else {\n            //fatalError: no end quot match\n            throw new Error('attribute value no end \\'' + c + '\\' match');\n          }\n        } else if (s == S_ATTR_NOQUOT_VALUE) {\n          value = source.slice(start, p);\n          addAttribute(attrName, value, start);\n          errorHandler.warning('attribute \"' + attrName + '\" missed start quot(' + c + ')!!');\n          start = p + 1;\n          s = S_ATTR_END;\n        } else {\n          //fatalError: no equal before\n          throw new Error('attribute value must after \"=\"'); // No known test case\n        }\n        break;\n      case '/':\n        switch (s) {\n          case S_TAG:\n            el.setTagName(source.slice(start, p));\n          case S_ATTR_END:\n          case S_TAG_SPACE:\n          case S_TAG_CLOSE:\n            s = S_TAG_CLOSE;\n            el.closed = true;\n          case S_ATTR_NOQUOT_VALUE:\n          case S_ATTR:\n            break;\n          case S_ATTR_SPACE:\n            el.closed = true;\n            break;\n          //case S_EQ:\n          default:\n            throw new Error(\"attribute invalid close char('/')\");\n          // No known test case\n        }\n        break;\n      case '':\n        //end document\n        errorHandler.error('unexpected end of input');\n        if (s == S_TAG) {\n          el.setTagName(source.slice(start, p));\n        }\n        return p;\n      case '>':\n        switch (s) {\n          case S_TAG:\n            el.setTagName(source.slice(start, p));\n          case S_ATTR_END:\n          case S_TAG_SPACE:\n          case S_TAG_CLOSE:\n            break;\n          //normal\n          case S_ATTR_NOQUOT_VALUE: //Compatible state\n          case S_ATTR:\n            value = source.slice(start, p);\n            if (value.slice(-1) === '/') {\n              el.closed = true;\n              value = value.slice(0, -1);\n            }\n          case S_ATTR_SPACE:\n            if (s === S_ATTR_SPACE) {\n              value = attrName;\n            }\n            if (s == S_ATTR_NOQUOT_VALUE) {\n              errorHandler.warning('attribute \"' + value + '\" missed quot(\")!');\n              addAttribute(attrName, value, start);\n            } else {\n              if (!NAMESPACE.isHTML(currentNSMap['']) || !value.match(/^(?:disabled|checked|selected)$/i)) {\n                errorHandler.warning('attribute \"' + value + '\" missed value!! \"' + value + '\" instead!!');\n              }\n              addAttribute(value, value, start);\n            }\n            break;\n          case S_EQ:\n            throw new Error('attribute value missed!!');\n        }\n        //\t\t\tconsole.log(tagName,tagNamePattern,tagNamePattern.test(tagName))\n        return p;\n      /*xml space '\\x20' | #x9 | #xD | #xA; */\n      case '\\u0080':\n        c = ' ';\n      default:\n        if (c <= ' ') {\n          //space\n          switch (s) {\n            case S_TAG:\n              el.setTagName(source.slice(start, p)); //tagName\n              s = S_TAG_SPACE;\n              break;\n            case S_ATTR:\n              attrName = source.slice(start, p);\n              s = S_ATTR_SPACE;\n              break;\n            case S_ATTR_NOQUOT_VALUE:\n              var value = source.slice(start, p);\n              errorHandler.warning('attribute \"' + value + '\" missed quot(\")!!');\n              addAttribute(attrName, value, start);\n            case S_ATTR_END:\n              s = S_TAG_SPACE;\n              break;\n            //case S_TAG_SPACE:\n            //case S_EQ:\n            //case S_ATTR_SPACE:\n            //\tvoid();break;\n            //case S_TAG_CLOSE:\n            //ignore warning\n          }\n        } else {\n          //not space\n          //S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\n          //S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\n          switch (s) {\n            //case S_TAG:void();break;\n            //case S_ATTR:void();break;\n            //case S_ATTR_NOQUOT_VALUE:void();break;\n            case S_ATTR_SPACE:\n              var tagName = el.tagName;\n              if (!NAMESPACE.isHTML(currentNSMap['']) || !attrName.match(/^(?:disabled|checked|selected)$/i)) {\n                errorHandler.warning('attribute \"' + attrName + '\" missed value!! \"' + attrName + '\" instead2!!');\n              }\n              addAttribute(attrName, attrName, start);\n              start = p;\n              s = S_ATTR;\n              break;\n            case S_ATTR_END:\n              errorHandler.warning('attribute space is required\"' + attrName + '\"!!');\n            case S_TAG_SPACE:\n              s = S_ATTR;\n              start = p;\n              break;\n            case S_EQ:\n              s = S_ATTR_NOQUOT_VALUE;\n              start = p;\n              break;\n            case S_TAG_CLOSE:\n              throw new Error(\"elements closed character '/' and '>' must be connected to\");\n          }\n        }\n    } //end outer switch\n    //console.log('p++',p)\n    p++;\n  }\n}\n/**\n * @return true if has new namespace define\n */\nfunction appendElement(el, domBuilder, currentNSMap) {\n  var tagName = el.tagName;\n  var localNSMap = null;\n  //var currentNSMap = parseStack[parseStack.length-1].currentNSMap;\n  var i = el.length;\n  while (i--) {\n    var a = el[i];\n    var qName = a.qName;\n    var value = a.value;\n    var nsp = qName.indexOf(':');\n    if (nsp > 0) {\n      var prefix = a.prefix = qName.slice(0, nsp);\n      var localName = qName.slice(nsp + 1);\n      var nsPrefix = prefix === 'xmlns' && localName;\n    } else {\n      localName = qName;\n      prefix = null;\n      nsPrefix = qName === 'xmlns' && '';\n    }\n    //can not set prefix,because prefix !== ''\n    a.localName = localName;\n    //prefix == null for no ns prefix attribute\n    if (nsPrefix !== false) {\n      //hack!!\n      if (localNSMap == null) {\n        localNSMap = {};\n        //console.log(currentNSMap,0)\n        _copy(currentNSMap, currentNSMap = {});\n        //console.log(currentNSMap,1)\n      }\n      currentNSMap[nsPrefix] = localNSMap[nsPrefix] = value;\n      a.uri = NAMESPACE.XMLNS;\n      domBuilder.startPrefixMapping(nsPrefix, value);\n    }\n  }\n  var i = el.length;\n  while (i--) {\n    a = el[i];\n    var prefix = a.prefix;\n    if (prefix) {\n      //no prefix attribute has no namespace\n      if (prefix === 'xml') {\n        a.uri = NAMESPACE.XML;\n      }\n      if (prefix !== 'xmlns') {\n        a.uri = currentNSMap[prefix || ''];\n\n        //{console.log('###'+a.qName,domBuilder.locator.systemId+'',currentNSMap,a.uri)}\n      }\n    }\n  }\n  var nsp = tagName.indexOf(':');\n  if (nsp > 0) {\n    prefix = el.prefix = tagName.slice(0, nsp);\n    localName = el.localName = tagName.slice(nsp + 1);\n  } else {\n    prefix = null; //important!!\n    localName = el.localName = tagName;\n  }\n  //no prefix element has default namespace\n  var ns = el.uri = currentNSMap[prefix || ''];\n  domBuilder.startElement(ns, localName, tagName, el);\n  //endPrefixMapping and startPrefixMapping have not any help for dom builder\n  //localNSMap = null\n  if (el.closed) {\n    domBuilder.endElement(ns, localName, tagName);\n    if (localNSMap) {\n      for (prefix in localNSMap) {\n        if (Object.prototype.hasOwnProperty.call(localNSMap, prefix)) {\n          domBuilder.endPrefixMapping(prefix);\n        }\n      }\n    }\n  } else {\n    el.currentNSMap = currentNSMap;\n    el.localNSMap = localNSMap;\n    //parseStack.push(el);\n    return true;\n  }\n}\nfunction parseHtmlSpecialContent(source, elStartEnd, tagName, entityReplacer, domBuilder) {\n  if (/^(?:script|textarea)$/i.test(tagName)) {\n    var elEndStart = source.indexOf('</' + tagName + '>', elStartEnd);\n    var text = source.substring(elStartEnd + 1, elEndStart);\n    if (/[&<]/.test(text)) {\n      if (/^script$/i.test(tagName)) {\n        //if(!/\\]\\]>/.test(text)){\n        //lexHandler.startCDATA();\n        domBuilder.characters(text, 0, text.length);\n        //lexHandler.endCDATA();\n        return elEndStart;\n        //}\n      } //}else{//text area\n      text = text.replace(/&#?\\w+;/g, entityReplacer);\n      domBuilder.characters(text, 0, text.length);\n      return elEndStart;\n      //}\n    }\n  }\n  return elStartEnd + 1;\n}\nfunction fixSelfClosed(source, elStartEnd, tagName, closeMap) {\n  //if(tagName in closeMap){\n  var pos = closeMap[tagName];\n  if (pos == null) {\n    //console.log(tagName)\n    pos = source.lastIndexOf('</' + tagName + '>');\n    if (pos < elStartEnd) {\n      //忘记闭合\n      pos = source.lastIndexOf('</' + tagName);\n    }\n    closeMap[tagName] = pos;\n  }\n  return pos < elStartEnd;\n  //}\n}\nfunction _copy(source, target) {\n  for (var n in source) {\n    if (Object.prototype.hasOwnProperty.call(source, n)) {\n      target[n] = source[n];\n    }\n  }\n}\nfunction parseDCC(source, start, domBuilder, errorHandler) {\n  //sure start with '<!'\n  var next = source.charAt(start + 2);\n  switch (next) {\n    case '-':\n      if (source.charAt(start + 3) === '-') {\n        var end = source.indexOf('-->', start + 4);\n        //append comment source.substring(4,end)//<!--\n        if (end > start) {\n          domBuilder.comment(source, start + 4, end - start - 4);\n          return end + 3;\n        } else {\n          errorHandler.error(\"Unclosed comment\");\n          return -1;\n        }\n      } else {\n        //error\n        return -1;\n      }\n    default:\n      if (source.substr(start + 3, 6) == 'CDATA[') {\n        var end = source.indexOf(']]>', start + 9);\n        domBuilder.startCDATA();\n        domBuilder.characters(source, start + 9, end - start - 9);\n        domBuilder.endCDATA();\n        return end + 3;\n      }\n      //<!DOCTYPE\n      //startDTD(java.lang.String name, java.lang.String publicId, java.lang.String systemId)\n      var matchs = split(source, start);\n      var len = matchs.length;\n      if (len > 1 && /!doctype/i.test(matchs[0][0])) {\n        var name = matchs[1][0];\n        var pubid = false;\n        var sysid = false;\n        if (len > 3) {\n          if (/^public$/i.test(matchs[2][0])) {\n            pubid = matchs[3][0];\n            sysid = len > 4 && matchs[4][0];\n          } else if (/^system$/i.test(matchs[2][0])) {\n            sysid = matchs[3][0];\n          }\n        }\n        var lastMatch = matchs[len - 1];\n        domBuilder.startDTD(name, pubid, sysid);\n        domBuilder.endDTD();\n        return lastMatch.index + lastMatch[0].length;\n      }\n  }\n  return -1;\n}\nfunction parseInstruction(source, start, domBuilder) {\n  var end = source.indexOf('?>', start);\n  if (end) {\n    var match = source.substring(start, end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);\n    if (match) {\n      var len = match[0].length;\n      domBuilder.processingInstruction(match[1], match[2]);\n      return end + 2;\n    } else {\n      //error\n      return -1;\n    }\n  }\n  return -1;\n}\nfunction ElementAttributes() {\n  this.attributeNames = {};\n}\nElementAttributes.prototype = {\n  setTagName: function (tagName) {\n    if (!tagNamePattern.test(tagName)) {\n      throw new Error('invalid tagName:' + tagName);\n    }\n    this.tagName = tagName;\n  },\n  addValue: function (qName, value, offset) {\n    if (!tagNamePattern.test(qName)) {\n      throw new Error('invalid attribute:' + qName);\n    }\n    this.attributeNames[qName] = this.length;\n    this[this.length++] = {\n      qName: qName,\n      value: value,\n      offset: offset\n    };\n  },\n  length: 0,\n  getLocalName: function (i) {\n    return this[i].localName;\n  },\n  getLocator: function (i) {\n    return this[i].locator;\n  },\n  getQName: function (i) {\n    return this[i].qName;\n  },\n  getURI: function (i) {\n    return this[i].uri;\n  },\n  getValue: function (i) {\n    return this[i].value;\n  }\n  //\t,getIndex:function(uri, localName)){\n  //\t\tif(localName){\n  //\n  //\t\t}else{\n  //\t\t\tvar qName = uri\n  //\t\t}\n  //\t},\n  //\tgetValue:function(){return this.getValue(this.getIndex.apply(this,arguments))},\n  //\tgetType:function(uri,localName){}\n  //\tgetType:function(i){},\n};\nfunction split(source, start) {\n  var match;\n  var buf = [];\n  var reg = /'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;\n  reg.lastIndex = start;\n  reg.exec(source); //skip <\n  while (match = reg.exec(source)) {\n    buf.push(match);\n    if (match[1]) return buf;\n  }\n}\nexports.XMLReader = XMLReader;\nexports.ParseError = ParseError;\n\n//# sourceURL=webpack://my-app/../../@xmldom/xmldom/lib/sax.js?");

/***/ }),

/***/ "../../call-bind/callBound.js":
/*!************************************!*\
  !*** ../../call-bind/callBound.js ***!
  \************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar GetIntrinsic = __webpack_require__(/*! get-intrinsic */ \"../../get-intrinsic/index.js\");\nvar callBind = __webpack_require__(/*! ./ */ \"../../call-bind/index.js\");\nvar $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));\nmodule.exports = function callBoundIntrinsic(name, allowMissing) {\n  var intrinsic = GetIntrinsic(name, !!allowMissing);\n  if (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {\n    return callBind(intrinsic);\n  }\n  return intrinsic;\n};\n\n//# sourceURL=webpack://my-app/../../call-bind/callBound.js?");

/***/ }),

/***/ "../../call-bind/index.js":
/*!********************************!*\
  !*** ../../call-bind/index.js ***!
  \********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar bind = __webpack_require__(/*! function-bind */ \"../../function-bind/index.js\");\nvar GetIntrinsic = __webpack_require__(/*! get-intrinsic */ \"../../get-intrinsic/index.js\");\nvar setFunctionLength = __webpack_require__(/*! set-function-length */ \"../../set-function-length/index.js\");\nvar $TypeError = __webpack_require__(/*! es-errors/type */ \"../../es-errors/type.js\");\nvar $apply = GetIntrinsic('%Function.prototype.apply%');\nvar $call = GetIntrinsic('%Function.prototype.call%');\nvar $reflectApply = GetIntrinsic('%Reflect.apply%', true) || bind.call($call, $apply);\nvar $defineProperty = __webpack_require__(/*! es-define-property */ \"../../es-define-property/index.js\");\nvar $max = GetIntrinsic('%Math.max%');\nmodule.exports = function callBind(originalFunction) {\n  if (typeof originalFunction !== 'function') {\n    throw new $TypeError('a function is required');\n  }\n  var func = $reflectApply(bind, $call, arguments);\n  return setFunctionLength(func, 1 + $max(0, originalFunction.length - (arguments.length - 1)), true);\n};\nvar applyBind = function applyBind() {\n  return $reflectApply(bind, $apply, arguments);\n};\nif ($defineProperty) {\n  $defineProperty(module.exports, 'apply', {\n    value: applyBind\n  });\n} else {\n  module.exports.apply = applyBind;\n}\n\n//# sourceURL=webpack://my-app/../../call-bind/index.js?");

/***/ }),

/***/ "../../css-loader/dist/runtime/api.js":
/*!********************************************!*\
  !*** ../../css-loader/dist/runtime/api.js ***!
  \********************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item);\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n      return content;\n    }).join(\"\");\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === \"string\") {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, \"\"]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};\n\n//# sourceURL=webpack://my-app/../../css-loader/dist/runtime/api.js?");

/***/ }),

/***/ "../../debug/src/browser.js":
/*!**********************************!*\
  !*** ../../debug/src/browser.js ***!
  \**********************************/
/***/ ((module, exports, __webpack_require__) => {

eval("/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n  let warned = false;\n  return () => {\n    if (!warned) {\n      warned = true;\n      console.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n    }\n  };\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = ['#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC', '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF', '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC', '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF', '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC', '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033', '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366', '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933', '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC', '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF', '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n    return true;\n  }\n\n  // Internet Explorer and Edge do not support colors.\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  }\n\n  // Is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance ||\n  // Is firebug? http://stackoverflow.com/a/398120/376773\n  typeof window !== 'undefined' && window.console && (window.console.firebug || window.console.exception && window.console.table) ||\n  // Is firefox >= v31?\n  // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31 ||\n  // Double check webkit in userAgent just in case we are in a worker\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/);\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  args[0] = (this.useColors ? '%c' : '') + this.namespace + (this.useColors ? ' %c' : ' ') + args[0] + (this.useColors ? '%c ' : ' ') + '+' + module.exports.humanize(this.diff);\n  if (!this.useColors) {\n    return;\n  }\n  const c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit');\n\n  // The final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  let index = 0;\n  let lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, match => {\n    if (match === '%%') {\n      return;\n    }\n    index++;\n    if (match === '%c') {\n      // We only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n  try {\n    if (namespaces) {\n      exports.storage.setItem('debug', namespaces);\n    } else {\n      exports.storage.removeItem('debug');\n    }\n  } catch (error) {\n    // Swallow\n    // XXX (@Qix-) should we be logging these?\n  }\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n  let r;\n  try {\n    r = exports.storage.getItem('debug');\n  } catch (error) {\n    // Swallow\n    // XXX (@Qix-) should we be logging these?\n  }\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n  return r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    // TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n    // The Browser also has localStorage in the global context.\n    return localStorage;\n  } catch (error) {\n    // Swallow\n    // XXX (@Qix-) should we be logging these?\n  }\n}\nmodule.exports = __webpack_require__(/*! ./common */ \"../../debug/src/common.js\")(exports);\nconst {\n  formatters\n} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n  try {\n    return JSON.stringify(v);\n  } catch (error) {\n    return '[UnexpectedJSONParseError]: ' + error.message;\n  }\n};\n\n//# sourceURL=webpack://my-app/../../debug/src/browser.js?");

/***/ }),

/***/ "../../debug/src/common.js":
/*!*********************************!*\
  !*** ../../debug/src/common.js ***!
  \*********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n  createDebug.debug = createDebug;\n  createDebug.default = createDebug;\n  createDebug.coerce = coerce;\n  createDebug.disable = disable;\n  createDebug.enable = enable;\n  createDebug.enabled = enabled;\n  createDebug.humanize = __webpack_require__(/*! ms */ \"../../ms/index.js\");\n  createDebug.destroy = destroy;\n  Object.keys(env).forEach(key => {\n    createDebug[key] = env[key];\n  });\n\n  /**\n  * The currently active debug mode names, and names to skip.\n  */\n\n  createDebug.names = [];\n  createDebug.skips = [];\n\n  /**\n  * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n  *\n  * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n  */\n  createDebug.formatters = {};\n\n  /**\n  * Selects a color for a debug namespace\n  * @param {String} namespace The namespace string for the debug instance to be colored\n  * @return {Number|String} An ANSI color code for the given namespace\n  * @api private\n  */\n  function selectColor(namespace) {\n    let hash = 0;\n    for (let i = 0; i < namespace.length; i++) {\n      hash = (hash << 5) - hash + namespace.charCodeAt(i);\n      hash |= 0; // Convert to 32bit integer\n    }\n    return createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n  }\n  createDebug.selectColor = selectColor;\n\n  /**\n  * Create a debugger with the given `namespace`.\n  *\n  * @param {String} namespace\n  * @return {Function}\n  * @api public\n  */\n  function createDebug(namespace) {\n    let prevTime;\n    let enableOverride = null;\n    let namespacesCache;\n    let enabledCache;\n    function debug(...args) {\n      // Disabled?\n      if (!debug.enabled) {\n        return;\n      }\n      const self = debug;\n\n      // Set `diff` timestamp\n      const curr = Number(new Date());\n      const ms = curr - (prevTime || curr);\n      self.diff = ms;\n      self.prev = prevTime;\n      self.curr = curr;\n      prevTime = curr;\n      args[0] = createDebug.coerce(args[0]);\n      if (typeof args[0] !== 'string') {\n        // Anything else let's inspect with %O\n        args.unshift('%O');\n      }\n\n      // Apply any `formatters` transformations\n      let index = 0;\n      args[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n        // If we encounter an escaped % then don't increase the array index\n        if (match === '%%') {\n          return '%';\n        }\n        index++;\n        const formatter = createDebug.formatters[format];\n        if (typeof formatter === 'function') {\n          const val = args[index];\n          match = formatter.call(self, val);\n\n          // Now we need to remove `args[index]` since it's inlined in the `format`\n          args.splice(index, 1);\n          index--;\n        }\n        return match;\n      });\n\n      // Apply env-specific formatting (colors, etc.)\n      createDebug.formatArgs.call(self, args);\n      const logFn = self.log || createDebug.log;\n      logFn.apply(self, args);\n    }\n    debug.namespace = namespace;\n    debug.useColors = createDebug.useColors();\n    debug.color = createDebug.selectColor(namespace);\n    debug.extend = extend;\n    debug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n    Object.defineProperty(debug, 'enabled', {\n      enumerable: true,\n      configurable: false,\n      get: () => {\n        if (enableOverride !== null) {\n          return enableOverride;\n        }\n        if (namespacesCache !== createDebug.namespaces) {\n          namespacesCache = createDebug.namespaces;\n          enabledCache = createDebug.enabled(namespace);\n        }\n        return enabledCache;\n      },\n      set: v => {\n        enableOverride = v;\n      }\n    });\n\n    // Env-specific initialization logic for debug instances\n    if (typeof createDebug.init === 'function') {\n      createDebug.init(debug);\n    }\n    return debug;\n  }\n  function extend(namespace, delimiter) {\n    const newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n    newDebug.log = this.log;\n    return newDebug;\n  }\n\n  /**\n  * Enables a debug mode by namespaces. This can include modes\n  * separated by a colon and wildcards.\n  *\n  * @param {String} namespaces\n  * @api public\n  */\n  function enable(namespaces) {\n    createDebug.save(namespaces);\n    createDebug.namespaces = namespaces;\n    createDebug.names = [];\n    createDebug.skips = [];\n    let i;\n    const split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n    const len = split.length;\n    for (i = 0; i < len; i++) {\n      if (!split[i]) {\n        // ignore empty strings\n        continue;\n      }\n      namespaces = split[i].replace(/\\*/g, '.*?');\n      if (namespaces[0] === '-') {\n        createDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));\n      } else {\n        createDebug.names.push(new RegExp('^' + namespaces + '$'));\n      }\n    }\n  }\n\n  /**\n  * Disable debug output.\n  *\n  * @return {String} namespaces\n  * @api public\n  */\n  function disable() {\n    const namespaces = [...createDebug.names.map(toNamespace), ...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)].join(',');\n    createDebug.enable('');\n    return namespaces;\n  }\n\n  /**\n  * Returns true if the given mode name is enabled, false otherwise.\n  *\n  * @param {String} name\n  * @return {Boolean}\n  * @api public\n  */\n  function enabled(name) {\n    if (name[name.length - 1] === '*') {\n      return true;\n    }\n    let i;\n    let len;\n    for (i = 0, len = createDebug.skips.length; i < len; i++) {\n      if (createDebug.skips[i].test(name)) {\n        return false;\n      }\n    }\n    for (i = 0, len = createDebug.names.length; i < len; i++) {\n      if (createDebug.names[i].test(name)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n  * Convert regexp to namespace\n  *\n  * @param {RegExp} regxep\n  * @return {String} namespace\n  * @api private\n  */\n  function toNamespace(regexp) {\n    return regexp.toString().substring(2, regexp.toString().length - 2).replace(/\\.\\*\\?$/, '*');\n  }\n\n  /**\n  * Coerce `val`.\n  *\n  * @param {Mixed} val\n  * @return {Mixed}\n  * @api private\n  */\n  function coerce(val) {\n    if (val instanceof Error) {\n      return val.stack || val.message;\n    }\n    return val;\n  }\n\n  /**\n  * XXX DO NOT USE. This is a temporary stub function.\n  * XXX It WILL be removed in the next major release.\n  */\n  function destroy() {\n    console.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n  }\n  createDebug.enable(createDebug.load());\n  return createDebug;\n}\nmodule.exports = setup;\n\n//# sourceURL=webpack://my-app/../../debug/src/common.js?");

/***/ }),

/***/ "../../define-data-property/index.js":
/*!*******************************************!*\
  !*** ../../define-data-property/index.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar $defineProperty = __webpack_require__(/*! es-define-property */ \"../../es-define-property/index.js\");\nvar $SyntaxError = __webpack_require__(/*! es-errors/syntax */ \"../../es-errors/syntax.js\");\nvar $TypeError = __webpack_require__(/*! es-errors/type */ \"../../es-errors/type.js\");\nvar gopd = __webpack_require__(/*! gopd */ \"../../gopd/index.js\");\n\n/** @type {import('.')} */\nmodule.exports = function defineDataProperty(obj, property, value) {\n  if (!obj || typeof obj !== 'object' && typeof obj !== 'function') {\n    throw new $TypeError('`obj` must be an object or a function`');\n  }\n  if (typeof property !== 'string' && typeof property !== 'symbol') {\n    throw new $TypeError('`property` must be a string or a symbol`');\n  }\n  if (arguments.length > 3 && typeof arguments[3] !== 'boolean' && arguments[3] !== null) {\n    throw new $TypeError('`nonEnumerable`, if provided, must be a boolean or null');\n  }\n  if (arguments.length > 4 && typeof arguments[4] !== 'boolean' && arguments[4] !== null) {\n    throw new $TypeError('`nonWritable`, if provided, must be a boolean or null');\n  }\n  if (arguments.length > 5 && typeof arguments[5] !== 'boolean' && arguments[5] !== null) {\n    throw new $TypeError('`nonConfigurable`, if provided, must be a boolean or null');\n  }\n  if (arguments.length > 6 && typeof arguments[6] !== 'boolean') {\n    throw new $TypeError('`loose`, if provided, must be a boolean');\n  }\n  var nonEnumerable = arguments.length > 3 ? arguments[3] : null;\n  var nonWritable = arguments.length > 4 ? arguments[4] : null;\n  var nonConfigurable = arguments.length > 5 ? arguments[5] : null;\n  var loose = arguments.length > 6 ? arguments[6] : false;\n\n  /* @type {false | TypedPropertyDescriptor<unknown>} */\n  var desc = !!gopd && gopd(obj, property);\n  if ($defineProperty) {\n    $defineProperty(obj, property, {\n      configurable: nonConfigurable === null && desc ? desc.configurable : !nonConfigurable,\n      enumerable: nonEnumerable === null && desc ? desc.enumerable : !nonEnumerable,\n      value: value,\n      writable: nonWritable === null && desc ? desc.writable : !nonWritable\n    });\n  } else if (loose || !nonEnumerable && !nonWritable && !nonConfigurable) {\n    // must fall back to [[Set]], and was not explicitly asked to make non-enumerable, non-writable, or non-configurable\n    obj[property] = value; // eslint-disable-line no-param-reassign\n  } else {\n    throw new $SyntaxError('This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.');\n  }\n};\n\n//# sourceURL=webpack://my-app/../../define-data-property/index.js?");

/***/ }),

/***/ "../../ember-page-title/dist/_app_/helpers/page-title.js":
/*!***************************************************************!*\
  !*** ../../ember-page-title/dist/_app_/helpers/page-title.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* reexport safe */ ember_page_title_helpers_page_title__WEBPACK_IMPORTED_MODULE_0__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var ember_page_title_helpers_page_title__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ember-page-title/helpers/page-title */ \"../../ember-page-title/dist/helpers/page-title.js\");\n\n\n//# sourceURL=webpack://my-app/../../ember-page-title/dist/_app_/helpers/page-title.js?");

/***/ }),

/***/ "../../ember-page-title/dist/_app_/services/page-title.js":
/*!****************************************************************!*\
  !*** ../../ember-page-title/dist/_app_/services/page-title.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* reexport safe */ ember_page_title_services_page_title__WEBPACK_IMPORTED_MODULE_0__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var ember_page_title_services_page_title__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ember-page-title/services/page-title */ \"../../ember-page-title/dist/services/page-title.js\");\n\n\n//# sourceURL=webpack://my-app/../../ember-page-title/dist/_app_/services/page-title.js?");

/***/ }),

/***/ "../../ember-page-title/dist/_rollupPluginBabelHelpers-9wjJaosZ.js":
/*!*************************************************************************!*\
  !*** ../../ember-page-title/dist/_rollupPluginBabelHelpers-9wjJaosZ.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _: () => (/* binding */ _applyDecoratedDescriptor),\n/* harmony export */   a: () => (/* binding */ _initializerDefineProperty),\n/* harmony export */   b: () => (/* binding */ _defineProperty)\n/* harmony export */ });\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : String(i);\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _initializerDefineProperty(target, property, descriptor, context) {\n  if (!descriptor) return;\n  Object.defineProperty(target, property, {\n    enumerable: descriptor.enumerable,\n    configurable: descriptor.configurable,\n    writable: descriptor.writable,\n    value: descriptor.initializer ? descriptor.initializer.call(context) : void 0\n  });\n}\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object.keys(descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n  if (desc.initializer === void 0) {\n    Object.defineProperty(target, property, desc);\n    desc = null;\n  }\n  return desc;\n}\n\n\n//# sourceURL=webpack://my-app/../../ember-page-title/dist/_rollupPluginBabelHelpers-9wjJaosZ.js?");

/***/ }),

/***/ "../../ember-page-title/dist/helpers/page-title.js":
/*!*********************************************************!*\
  !*** ../../ember-page-title/dist/helpers/page-title.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ PageTitle)\n/* harmony export */ });\n/* harmony import */ var _rollupPluginBabelHelpers_9wjJaosZ_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_rollupPluginBabelHelpers-9wjJaosZ.js */ \"../../ember-page-title/dist/_rollupPluginBabelHelpers-9wjJaosZ.js\");\n/* harmony import */ var _ember_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember/service */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fservice&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_service__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_ember_service__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _ember_component_helper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ember/component/helper */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fcomponent%2Fhelper&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_component_helper__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_ember_component_helper__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _ember_object_internals__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ember/object/internals */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fobject%2Finternals&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_object_internals__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_ember_object_internals__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\nvar _dec, _class, _descriptor;\n/**\n * `{{pageTitle}}` helper used to set the title of the current route context.\n *\n * ```gjs\n * import { pageTitle } from 'ember-page-title';\n *\n * <template>\n *   {{pageTitle \"the text to set the tab's title to\"}}\n *   {{pageTitle \\@model.post.title}}\n * </template>\n * ```\n */\nlet PageTitle = (_dec = (0,_ember_service__WEBPACK_IMPORTED_MODULE_1__.inject)('page-title'), (_class = class PageTitle extends (_ember_component_helper__WEBPACK_IMPORTED_MODULE_2___default()) {\n  constructor(owner) {\n    super(owner);\n    (0,_rollupPluginBabelHelpers_9wjJaosZ_js__WEBPACK_IMPORTED_MODULE_0__.a)(this, \"tokens\", _descriptor, this);\n    (0,_rollupPluginBabelHelpers_9wjJaosZ_js__WEBPACK_IMPORTED_MODULE_0__.b)(this, \"tokenId\", (0,_ember_object_internals__WEBPACK_IMPORTED_MODULE_3__.guidFor)(this));\n    this.tokens.push({\n      id: this.tokenId\n    });\n  }\n  compute(params, userOptions) {\n    const options = {\n      ...userOptions,\n      id: this.tokenId,\n      title: params.join('')\n    };\n    this.tokens.push(options);\n    this.tokens.scheduleTitleUpdate();\n    // We must return an empty value here because otherwise\n    // invoking the pageTitle helper will render something\n    // in the component it's used in, and we don't want that.\n    //\n    // pageTitle is a side-effecting helper.\n    // We *synchronize* the document.title with our internal state.\n    return '';\n  }\n  willDestroy() {\n    super.willDestroy();\n    this.tokens.remove(this.tokenId);\n    this.tokens.scheduleTitleUpdate();\n  }\n}, _descriptor = (0,_rollupPluginBabelHelpers_9wjJaosZ_js__WEBPACK_IMPORTED_MODULE_0__._)(_class.prototype, \"tokens\", [_dec], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _class));\n\n\n//# sourceURL=webpack://my-app/../../ember-page-title/dist/helpers/page-title.js?");

/***/ }),

/***/ "../../ember-page-title/dist/services/page-title.js":
/*!**********************************************************!*\
  !*** ../../ember-page-title/dist/services/page-title.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ PageTitleService)\n/* harmony export */ });\n/* harmony import */ var _rollupPluginBabelHelpers_9wjJaosZ_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_rollupPluginBabelHelpers-9wjJaosZ.js */ \"../../ember-page-title/dist/_rollupPluginBabelHelpers-9wjJaosZ.js\");\n/* harmony import */ var _ember_runloop__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember/runloop */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Frunloop&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_runloop__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_ember_runloop__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _ember_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ember/service */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fservice&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_service__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_ember_service__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _ember_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ember/utils */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Futils&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_utils__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_ember_utils__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ember/debug */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fdebug&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_debug__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_ember_debug__WEBPACK_IMPORTED_MODULE_4__);\n\n\n\n\n\nvar _dec, _dec2, _class, _descriptor, _descriptor2;\nconst isFastBoot = typeof FastBoot !== 'undefined';\nconst RouterEvent = {\n  ROUTE_DID_CHANGE: 'routeDidChange'\n};\nfunction hasResolveRegistration(owner) {\n  return `resolveRegistration` in owner;\n}\nfunction hasPageTitleConfig(fromEnv) {\n  if (typeof fromEnv !== 'object') return false;\n  if (fromEnv === null) return false;\n\n  // all properties on the pageTitle config are optional,\n  // so we can't check for more\n  return 'pageTitle' in fromEnv;\n}\nconst configKeys = ['separator', 'prepend', 'replace'];\n\n/**\n  @class page-title\n  @extends Ember.Service\n */\nlet PageTitleService = (_dec = (0,_ember_service__WEBPACK_IMPORTED_MODULE_2__.inject)('router'), _dec2 = (0,_ember_service__WEBPACK_IMPORTED_MODULE_2__.inject)('-document'), (_class = class PageTitleService extends (_ember_service__WEBPACK_IMPORTED_MODULE_2___default()) {\n  constructor(owner) {\n    super(owner);\n    (0,_rollupPluginBabelHelpers_9wjJaosZ_js__WEBPACK_IMPORTED_MODULE_0__.a)(this, \"router\", _descriptor, this);\n    // in fastboot context \"document\" is instance of\n    // ember-fastboot/simple-dom document\n    (0,_rollupPluginBabelHelpers_9wjJaosZ_js__WEBPACK_IMPORTED_MODULE_0__.a)(this, \"document\", _descriptor2, this);\n    (0,_rollupPluginBabelHelpers_9wjJaosZ_js__WEBPACK_IMPORTED_MODULE_0__.b)(this, \"tokens\", []);\n    (0,_rollupPluginBabelHelpers_9wjJaosZ_js__WEBPACK_IMPORTED_MODULE_0__.b)(this, \"_defaultConfig\", {\n      // The default separator to use between tokens.\n      separator: ' | ',\n      // The default prepend value to use.\n      prepend: true,\n      // The default replace value to use.\n      replace: null\n    });\n    (0,_rollupPluginBabelHelpers_9wjJaosZ_js__WEBPACK_IMPORTED_MODULE_0__.b)(this, \"scheduleTitleUpdate\", () => {\n      (0,_ember_runloop__WEBPACK_IMPORTED_MODULE_1__.scheduleOnce)('afterRender', this, this._updateTitle);\n    });\n    this._validateExistingTitleElement();\n    if (hasResolveRegistration(owner)) {\n      const config = owner.resolveRegistration('config:environment');\n      if (hasPageTitleConfig(config)) {\n        configKeys.forEach(key => {\n          if (!(0,_ember_utils__WEBPACK_IMPORTED_MODULE_3__.isEmpty)(config.pageTitle[key])) {\n            const configValue = config.pageTitle[key];\n\n            // SAFETY: how is one supposed to iterate over keys for an object and have it\n            //         known to the compiler that both objects, having the same shape,\n            //         will have the same type per-value?\n            //         as-is, the `configValue` is a union of all value-types from the object.\n            this._defaultConfig[key] = configValue;\n          }\n        });\n      }\n    }\n    this.router.on(RouterEvent.ROUTE_DID_CHANGE, this.scheduleTitleUpdate);\n  }\n  applyTokenDefaults(token) {\n    const defaultSeparator = this._defaultConfig.separator;\n    const defaultPrepend = this._defaultConfig.prepend;\n    const defaultReplace = this._defaultConfig.replace;\n    token.previous ??= null;\n    token.next ??= null;\n    if (token.separator == null) {\n      token.separator = defaultSeparator;\n    }\n    if (token.prepend == null && defaultPrepend != null) {\n      token.prepend = defaultPrepend;\n    }\n    if (token.replace == null && defaultReplace != null) {\n      token.replace = defaultReplace;\n    }\n  }\n  inheritFromPrevious(token) {\n    const previous = token.previous;\n    if (previous) {\n      if (token.separator == null) {\n        token.separator = previous.separator;\n      }\n      if (token.prepend == null) {\n        token.prepend = previous.prepend;\n      }\n    }\n  }\n  push(token) {\n    const tokenForId = this._findTokenById(token.id);\n    if (tokenForId) {\n      const index = this.tokens.indexOf(tokenForId);\n      const tokens = [...this.tokens];\n      const previous = tokenForId.previous;\n      token.previous = previous;\n      token.next = tokenForId.next;\n      this.inheritFromPrevious(token);\n      this.applyTokenDefaults(token);\n      tokens.splice(index, 1, token);\n      this.tokens = tokens;\n      return;\n    }\n    const previous = this.tokens.slice(-1)[0];\n    if (previous) {\n      token.previous = previous ?? null;\n      previous.next = token;\n      this.inheritFromPrevious(token);\n    }\n    this.applyTokenDefaults(token);\n    this.tokens = [...this.tokens, token];\n  }\n  remove(id) {\n    const token = this._findTokenById(id);\n    if (!token) return;\n    const {\n      next,\n      previous\n    } = token;\n    if (next) {\n      next.previous = previous;\n    }\n    if (previous) {\n      previous.next = next;\n    }\n    token.previous = token.next = null;\n    const tokens = [...this.tokens];\n    tokens.splice(tokens.indexOf(token), 1);\n    this.tokens = tokens;\n  }\n  get visibleTokens() {\n    const tokens = this.tokens;\n    let i = tokens ? tokens.length : 0;\n    const visible = [];\n    while (i--) {\n      const token = tokens[i];\n      if (!token) continue;\n      if (token.replace) {\n        visible.unshift(token);\n        break;\n      } else {\n        visible.unshift(token);\n      }\n    }\n    return visible;\n  }\n  get sortedTokens() {\n    const visible = this.visibleTokens;\n    if (!visible) return [];\n    let appending = true;\n    let group = [];\n    const groups = [group];\n    const frontGroups = [];\n    visible.forEach(token => {\n      if (token.front) {\n        frontGroups.unshift(token);\n      } else if (token.prepend) {\n        if (appending) {\n          appending = false;\n          group = [];\n          groups.push(group);\n        }\n        const lastToken = group[0];\n        if (lastToken) {\n          token = {\n            ...token\n          };\n          token.separator = lastToken.separator;\n        }\n        group.unshift(token);\n      } else {\n        if (!appending) {\n          appending = true;\n          group = [];\n          groups.push(group);\n        }\n        group.push(token);\n      }\n    });\n    return frontGroups.concat(groups.reduce((E, group) => E.concat(group), []));\n  }\n  toString() {\n    const tokens = this.sortedTokens;\n    const title = [];\n    for (let i = 0, len = tokens.length; i < len; i++) {\n      const token = tokens[i];\n      if (!token) continue;\n      if (token.title) {\n        title.push(token.title);\n        if (i + 1 < len) {\n          title.push(token.separator);\n        }\n      }\n    }\n    return title.join('');\n  }\n  willDestroy() {\n    super.willDestroy();\n    this.router.off(RouterEvent.ROUTE_DID_CHANGE, this.scheduleTitleUpdate);\n  }\n  _updateTitle() {\n    const toBeTitle = this.toString();\n    if (isFastBoot) {\n      this.updateFastbootTitle(toBeTitle);\n    } else {\n      /**\n       * When rendering app with \"?fastboot=false\" (http://ember-fastboot.com/docs/user-guide#disabling-fastboot)\n       * We will not have <title> element present in DOM.\n       *\n       * But this is fine as by HTML spec,\n       * one is created upon assigning \"document.title\" value;\n       *\n       * https://html.spec.whatwg.org/multipage/dom.html#dom-tree-accessors\n       */\n      this.document.title = toBeTitle;\n    }\n    this.titleDidUpdate(toBeTitle);\n  }\n\n  /**\n   * Validate if there's more than one title element present.\n   *\n   * Example: ember-cli-head can cause conflicting updates.\n   * @private\n   */\n  _validateExistingTitleElement() {\n    if (isFastBoot) {\n      return;\n    }\n    ( true && !(document.head.querySelectorAll('title').length <= 1) && (0,_ember_debug__WEBPACK_IMPORTED_MODULE_4__.assert)('[ember-page-title]: Multiple title elements found. Check for other addons like ember-cli-head updating <title> as well.', document.head.querySelectorAll('title').length <= 1));\n  }\n\n  /**\n   * Find token by id\n   *\n   * @param {String} id\n   * @private\n   */\n  _findTokenById(id) {\n    return this.tokens.find(token => token.id === id);\n  }\n  updateFastbootTitle(toBeTitle) {\n    if (!isFastBoot) {\n      return;\n    }\n    const headElement = this.document.head;\n    const headChildNodes = headElement.childNodes;\n\n    // Remove existing title elements from previous render cycle\n    for (let i = 0; i < headChildNodes.length; i++) {\n      const node = headChildNodes[i];\n      if (!node) continue;\n      if (node.nodeName.toLowerCase() === 'title') {\n        headElement.removeChild(node);\n      }\n    }\n\n    // Add title element with latest value\n    const titleEl = this.document.createElement('title');\n    const titleContents = this.document.createTextNode(toBeTitle);\n    titleEl.appendChild(titleContents);\n    headElement.appendChild(titleEl);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  titleDidUpdate(_title) {\n    // default is empty, meant to be overriden by user if desired\n  }\n}, (_descriptor = (0,_rollupPluginBabelHelpers_9wjJaosZ_js__WEBPACK_IMPORTED_MODULE_0__._)(_class.prototype, \"router\", [_dec], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor2 = (0,_rollupPluginBabelHelpers_9wjJaosZ_js__WEBPACK_IMPORTED_MODULE_0__._)(_class.prototype, \"document\", [_dec2], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class));\n\n\n//# sourceURL=webpack://my-app/../../ember-page-title/dist/services/page-title.js?");

/***/ }),

/***/ "../../ember-welcome-page/dist/_app_/components/welcome-page.js":
/*!**********************************************************************!*\
  !*** ../../ember-welcome-page/dist/_app_/components/welcome-page.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* reexport safe */ ember_welcome_page_components_welcome_page__WEBPACK_IMPORTED_MODULE_0__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var ember_welcome_page_components_welcome_page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ember-welcome-page/components/welcome-page */ \"../../ember-welcome-page/dist/components/welcome-page.js\");\n\n\n//# sourceURL=webpack://my-app/../../ember-welcome-page/dist/_app_/components/welcome-page.js?");

/***/ }),

/***/ "../../ember-welcome-page/dist/components/welcome-page.js":
/*!****************************************************************!*\
  !*** ../../ember-welcome-page/dist/components/welcome-page.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ WelcomePageComponent)\n/* harmony export */ });\n/* harmony import */ var _ember_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/component */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fcomponent&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_component__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_component__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _ember_application__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember/application */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fapplication&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_application__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_ember_application__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _ember_version__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ember/version */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Fversion&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_version__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_ember_version__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _glimmer_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @glimmer/component */ \"../rewritten-packages/@glimmer/component.9a0d5824/node_modules/@glimmer/component/index.js\");\n/* harmony import */ var _welcome_page_css__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./welcome-page.css */ \"../../ember-welcome-page/dist/components/welcome-page.css\");\n/* harmony import */ var _ember_template_factory__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ember/template-factory */ \"../../@embroider/babel-loader-9/index.js?{\\\"variant\\\":{\\\"name\\\":\\\"dev\\\",\\\"runtime\\\":\\\"browser\\\",\\\"optimizeForProduction\\\":false},\\\"appBabelConfigPath\\\":\\\"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/.embroider/rewritten-app/_babel_config_.js\\\",\\\"cacheDirectory\\\":\\\"/private/var/folders/72/318g9xvj35v1rf1f4rgy4ngr0000gn/T/embroider/webpack-babel-loader\\\"}!../../@embroider/webpack/src/virtual-loader.js?f=%2F%40embroider%2Fext-cjs%2F%40ember%2Ftemplate-factory&a=%2FUsers%2Fpconejo%2FDesktop%2FPROYECTOS%2FinternshipPabloConejo%2FEmber-tutorial!\");\n/* harmony import */ var _ember_template_factory__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_ember_template_factory__WEBPACK_IMPORTED_MODULE_5__);\n\n\n\n\n\n\nvar TEMPLATE = (0,_ember_template_factory__WEBPACK_IMPORTED_MODULE_5__.createTemplateFactory)(\n/*\n  <main id=\"ember-welcome-page-id-selector\">\n  <div class=\"columns\">\n    <div class=\"tomster\">\n      <img src=\"{{this.rootURL}}ember-welcome-page/images/construction.png\" alt=\"Under construction\">\n    </div>\n    <div class=\"welcome\">\n      <h1 id=\"title\">Congratulations, you made it!</h1>\n\n      <p>You&rsquo;ve officially spun up your Ember app. You&rsquo;ve got one more decision to make: what do you want to do next? We&rsquo;d suggest one of the following to help you get going:</p>\n      <ul>\n        <li><a href=\"{{this.urlForEmberGuides}}/getting-started/quick-start/\">Quick Start</a> - a quick introduction to how Ember works. Learn about defining your first route, writing a UI component and deploying your application.</li>\n        <li><a href=\"{{this.urlForEmberGuides}}/tutorial/\">Tutorial</a> - this is our more thorough, hands-on intro to Ember. Your crash course in Ember philosophy, background and some in-depth discussion of how things work (and why they work the way they do).</li>\n      </ul>\n      <p>If you run into problems, please join <a href=\"https://discord.gg/emberjs\">our community's Discord server</a> or visit <a href=\"http://discuss.emberjs.com/\">our forums</a> for ideas and answers— our community is filled with friendly folks who are willing to help! We enjoy helping new Ember developers get started, and our <a href=\"https://emberjs.com/community/\">Ember Community</a> is incredibly supportive.</p>\n    </div>\n  </div>\n  <p class=\"postscript\">To remove this welcome message, remove the\n    <code>\n      &lt;WelcomePage /&gt;\n    </code>\n    component from your\n    <code>\n      app/templates/application.hbs\n    </code>\n    file and save it...you'll see this page update soon after!\n  </p>\n</main>\n\n\n*/\n{\n  \"id\": \"GDK0rhwS\",\n  \"block\": \"[[[10,\\\"main\\\"],[14,1,\\\"ember-welcome-page-id-selector\\\"],[12],[1,\\\"\\\\n  \\\"],[10,0],[14,0,\\\"columns\\\"],[12],[1,\\\"\\\\n    \\\"],[10,0],[14,0,\\\"tomster\\\"],[12],[1,\\\"\\\\n      \\\"],[10,\\\"img\\\"],[15,\\\"src\\\",[29,[[30,0,[\\\"rootURL\\\"]],\\\"ember-welcome-page/images/construction.png\\\"]]],[14,\\\"alt\\\",\\\"Under construction\\\"],[12],[13],[1,\\\"\\\\n    \\\"],[13],[1,\\\"\\\\n    \\\"],[10,0],[14,0,\\\"welcome\\\"],[12],[1,\\\"\\\\n      \\\"],[10,\\\"h1\\\"],[14,1,\\\"title\\\"],[12],[1,\\\"Congratulations, you made it!\\\"],[13],[1,\\\"\\\\n\\\\n      \\\"],[10,2],[12],[1,\\\"You’ve officially spun up your Ember app. You’ve got one more decision to make: what do you want to do next? We’d suggest one of the following to help you get going:\\\"],[13],[1,\\\"\\\\n      \\\"],[10,\\\"ul\\\"],[12],[1,\\\"\\\\n        \\\"],[10,\\\"li\\\"],[12],[10,3],[15,6,[29,[[30,0,[\\\"urlForEmberGuides\\\"]],\\\"/getting-started/quick-start/\\\"]]],[12],[1,\\\"Quick Start\\\"],[13],[1,\\\" - a quick introduction to how Ember works. Learn about defining your first route, writing a UI component and deploying your application.\\\"],[13],[1,\\\"\\\\n        \\\"],[10,\\\"li\\\"],[12],[10,3],[15,6,[29,[[30,0,[\\\"urlForEmberGuides\\\"]],\\\"/tutorial/\\\"]]],[12],[1,\\\"Tutorial\\\"],[13],[1,\\\" - this is our more thorough, hands-on intro to Ember. Your crash course in Ember philosophy, background and some in-depth discussion of how things work (and why they work the way they do).\\\"],[13],[1,\\\"\\\\n      \\\"],[13],[1,\\\"\\\\n      \\\"],[10,2],[12],[1,\\\"If you run into problems, please join \\\"],[10,3],[14,6,\\\"https://discord.gg/emberjs\\\"],[12],[1,\\\"our community's Discord server\\\"],[13],[1,\\\" or visit \\\"],[10,3],[14,6,\\\"http://discuss.emberjs.com/\\\"],[12],[1,\\\"our forums\\\"],[13],[1,\\\" for ideas and answers— our community is filled with friendly folks who are willing to help! We enjoy helping new Ember developers get started, and our \\\"],[10,3],[14,6,\\\"https://emberjs.com/community/\\\"],[12],[1,\\\"Ember Community\\\"],[13],[1,\\\" is incredibly supportive.\\\"],[13],[1,\\\"\\\\n    \\\"],[13],[1,\\\"\\\\n  \\\"],[13],[1,\\\"\\\\n  \\\"],[10,2],[14,0,\\\"postscript\\\"],[12],[1,\\\"To remove this welcome message, remove the\\\\n    \\\"],[10,\\\"code\\\"],[12],[1,\\\"\\\\n      <WelcomePage />\\\\n    \\\"],[13],[1,\\\"\\\\n    component from your\\\\n    \\\"],[10,\\\"code\\\"],[12],[1,\\\"\\\\n      app/templates/application.hbs\\\\n    \\\"],[13],[1,\\\"\\\\n    file and save it...you'll see this page update soon after!\\\\n  \\\"],[13],[1,\\\"\\\\n\\\"],[13],[1,\\\"\\\\n\\\\n\\\"]],[],false,[\\\"main\\\",\\\"div\\\",\\\"img\\\",\\\"h1\\\",\\\"p\\\",\\\"ul\\\",\\\"li\\\",\\\"a\\\",\\\"code\\\"]]\",\n  \"moduleName\": \"/Users/pconejo/Desktop/PROYECTOS/internshipPabloConejo/Ember-tutorial/node_modules/ember-welcome-page/dist/components/welcome-page.js\",\n  \"isStrictMode\": false\n});\nfunction isLatestVersion() {\n  const stableRegex = /^\\d+\\.\\d+\\.\\d+$/;\n  return !stableRegex.test(_ember_version__WEBPACK_IMPORTED_MODULE_2__.VERSION);\n}\n\n/* eslint-disable-next-line @typescript-eslint/no-empty-interface */\n\nclass WelcomePageComponent extends _glimmer_component__WEBPACK_IMPORTED_MODULE_3__[\"default\"] {\n  get rootURL() {\n    const config = (0,_ember_application__WEBPACK_IMPORTED_MODULE_1__.getOwner)(this).factoryFor('config:environment');\n    if (config) {\n      return config.class.rootURL;\n    }\n    return '/';\n  }\n  get urlForEmberGuides() {\n    if (isLatestVersion()) {\n      return `https://guides.emberjs.com/release`;\n    }\n    const [majorVersion, minorVersion] = _ember_version__WEBPACK_IMPORTED_MODULE_2__.VERSION.split('.');\n    const emberVersion = `${majorVersion}.${minorVersion}.0`;\n    return `https://guides.emberjs.com/v${emberVersion}`;\n  }\n}\n(0,_ember_component__WEBPACK_IMPORTED_MODULE_0__.setComponentTemplate)(TEMPLATE, WelcomePageComponent);\n\n\n//# sourceURL=webpack://my-app/../../ember-welcome-page/dist/components/welcome-page.js?");

/***/ }),

/***/ "../../es-define-property/index.js":
/*!*****************************************!*\
  !*** ../../es-define-property/index.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar GetIntrinsic = __webpack_require__(/*! get-intrinsic */ \"../../get-intrinsic/index.js\");\n\n/** @type {import('.')} */\nvar $defineProperty = GetIntrinsic('%Object.defineProperty%', true) || false;\nif ($defineProperty) {\n  try {\n    $defineProperty({}, 'a', {\n      value: 1\n    });\n  } catch (e) {\n    // IE 8 has a broken defineProperty\n    $defineProperty = false;\n  }\n}\nmodule.exports = $defineProperty;\n\n//# sourceURL=webpack://my-app/../../es-define-property/index.js?");

/***/ }),

/***/ "../../es-errors/eval.js":
/*!*******************************!*\
  !*** ../../es-errors/eval.js ***!
  \*******************************/
/***/ ((module) => {

"use strict";
eval("\n\n/** @type {import('./eval')} */\nmodule.exports = EvalError;\n\n//# sourceURL=webpack://my-app/../../es-errors/eval.js?");

/***/ }),

/***/ "../../es-errors/index.js":
/*!********************************!*\
  !*** ../../es-errors/index.js ***!
  \********************************/
/***/ ((module) => {

"use strict";
eval("\n\n/** @type {import('.')} */\nmodule.exports = Error;\n\n//# sourceURL=webpack://my-app/../../es-errors/index.js?");

/***/ }),

/***/ "../../es-errors/range.js":
/*!********************************!*\
  !*** ../../es-errors/range.js ***!
  \********************************/
/***/ ((module) => {

"use strict";
eval("\n\n/** @type {import('./range')} */\nmodule.exports = RangeError;\n\n//# sourceURL=webpack://my-app/../../es-errors/range.js?");

/***/ }),

/***/ "../../es-errors/ref.js":
/*!******************************!*\
  !*** ../../es-errors/ref.js ***!
  \******************************/
/***/ ((module) => {

"use strict";
eval("\n\n/** @type {import('./ref')} */\nmodule.exports = ReferenceError;\n\n//# sourceURL=webpack://my-app/../../es-errors/ref.js?");

/***/ }),

/***/ "../../es-errors/syntax.js":
/*!*********************************!*\
  !*** ../../es-errors/syntax.js ***!
  \*********************************/
/***/ ((module) => {

"use strict";
eval("\n\n/** @type {import('./syntax')} */\nmodule.exports = SyntaxError;\n\n//# sourceURL=webpack://my-app/../../es-errors/syntax.js?");

/***/ }),

/***/ "../../es-errors/type.js":
/*!*******************************!*\
  !*** ../../es-errors/type.js ***!
  \*******************************/
/***/ ((module) => {

"use strict";
eval("\n\n/** @type {import('./type')} */\nmodule.exports = TypeError;\n\n//# sourceURL=webpack://my-app/../../es-errors/type.js?");

/***/ }),

/***/ "../../es-errors/uri.js":
/*!******************************!*\
  !*** ../../es-errors/uri.js ***!
  \******************************/
/***/ ((module) => {

"use strict";
eval("\n\n/** @type {import('./uri')} */\nmodule.exports = URIError;\n\n//# sourceURL=webpack://my-app/../../es-errors/uri.js?");

/***/ }),

/***/ "../../events/events.js":
/*!******************************!*\
  !*** ../../events/events.js ***!
  \******************************/
/***/ ((module) => {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\nvar R = typeof Reflect === 'object' ? Reflect : null;\nvar ReflectApply = R && typeof R.apply === 'function' ? R.apply : function ReflectApply(target, receiver, args) {\n  return Function.prototype.apply.call(target, receiver, args);\n};\nvar ReflectOwnKeys;\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys;\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target).concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n};\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function () {\n    return defaultMaxListeners;\n  },\n  set: function (arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\nEventEmitter.init = function () {\n  if (this._events === undefined || this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined) return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = type === 'error';\n  var events = this._events;\n  if (events !== undefined) doError = doError && events.error === undefined;else if (!doError) return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0) er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n  var handler = events[type];\n  if (handler === undefined) return false;\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i) ReflectApply(listeners[i], this, args);\n  }\n  return true;\n};\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n  checkListener(listener);\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type, listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] = prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' + existing.length + ' ' + String(type) + ' listeners ' + 'added. Use emitter.setMaxListeners() to ' + 'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n  return target;\n}\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\nEventEmitter.prototype.prependListener = function prependListener(type, listener) {\n  return _addListener(this, type, listener, true);\n};\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0) return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\nfunction _onceWrap(target, type, listener) {\n  var state = {\n    fired: false,\n    wrapFn: undefined,\n    target: target,\n    type: type,\n    listener: listener\n  };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\nEventEmitter.prototype.prependOnceListener = function prependOnceListener(type, listener) {\n  checkListener(listener);\n  this.prependListener(type, _onceWrap(this, type, listener));\n  return this;\n};\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener = function removeListener(type, listener) {\n  var list, events, position, i, originalListener;\n  checkListener(listener);\n  events = this._events;\n  if (events === undefined) return this;\n  list = events[type];\n  if (list === undefined) return this;\n  if (list === listener || list.listener === listener) {\n    if (--this._eventsCount === 0) this._events = Object.create(null);else {\n      delete events[type];\n      if (events.removeListener) this.emit('removeListener', type, list.listener || listener);\n    }\n  } else if (typeof list !== 'function') {\n    position = -1;\n    for (i = list.length - 1; i >= 0; i--) {\n      if (list[i] === listener || list[i].listener === listener) {\n        originalListener = list[i].listener;\n        position = i;\n        break;\n      }\n    }\n    if (position < 0) return this;\n    if (position === 0) list.shift();else {\n      spliceOne(list, position);\n    }\n    if (list.length === 1) events[type] = list[0];\n    if (events.removeListener !== undefined) this.emit('removeListener', type, originalListener || listener);\n  }\n  return this;\n};\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(type) {\n  var listeners, events, i;\n  events = this._events;\n  if (events === undefined) return this;\n\n  // not listening for removeListener, no need to emit\n  if (events.removeListener === undefined) {\n    if (arguments.length === 0) {\n      this._events = Object.create(null);\n      this._eventsCount = 0;\n    } else if (events[type] !== undefined) {\n      if (--this._eventsCount === 0) this._events = Object.create(null);else delete events[type];\n    }\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    var keys = Object.keys(events);\n    var key;\n    for (i = 0; i < keys.length; ++i) {\n      key = keys[i];\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n    return this;\n  }\n  listeners = events[type];\n  if (typeof listeners === 'function') {\n    this.removeListener(type, listeners);\n  } else if (listeners !== undefined) {\n    // LIFO order\n    for (i = listeners.length - 1; i >= 0; i--) {\n      this.removeListener(type, listeners[i]);\n    }\n  }\n  return this;\n};\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n  if (events === undefined) return [];\n  var evlistener = events[type];\n  if (evlistener === undefined) return [];\n  if (typeof evlistener === 'function') return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n  return unwrap ? unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\nEventEmitter.listenerCount = function (emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n  if (events !== undefined) {\n    var evlistener = events[type];\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n  return 0;\n}\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i) copy[i] = arr[i];\n  return copy;\n}\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++) list[index] = list[index + 1];\n  list.pop();\n}\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    }\n    ;\n    eventTargetAgnosticAddListener(emitter, name, resolver, {\n      once: true\n    });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, {\n        once: true\n      });\n    }\n  });\n}\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n\n//# sourceURL=webpack://my-app/../../events/events.js?");

/***/ }),

/***/ "../../for-each/index.js":
/*!*******************************!*\
  !*** ../../for-each/index.js ***!
  \*******************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar isCallable = __webpack_require__(/*! is-callable */ \"../../is-callable/index.js\");\nvar toStr = Object.prototype.toString;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar forEachArray = function forEachArray(array, iterator, receiver) {\n  for (var i = 0, len = array.length; i < len; i++) {\n    if (hasOwnProperty.call(array, i)) {\n      if (receiver == null) {\n        iterator(array[i], i, array);\n      } else {\n        iterator.call(receiver, array[i], i, array);\n      }\n    }\n  }\n};\nvar forEachString = function forEachString(string, iterator, receiver) {\n  for (var i = 0, len = string.length; i < len; i++) {\n    // no such thing as a sparse string.\n    if (receiver == null) {\n      iterator(string.charAt(i), i, string);\n    } else {\n      iterator.call(receiver, string.charAt(i), i, string);\n    }\n  }\n};\nvar forEachObject = function forEachObject(object, iterator, receiver) {\n  for (var k in object) {\n    if (hasOwnProperty.call(object, k)) {\n      if (receiver == null) {\n        iterator(object[k], k, object);\n      } else {\n        iterator.call(receiver, object[k], k, object);\n      }\n    }\n  }\n};\nvar forEach = function forEach(list, iterator, thisArg) {\n  if (!isCallable(iterator)) {\n    throw new TypeError('iterator must be a function');\n  }\n  var receiver;\n  if (arguments.length >= 3) {\n    receiver = thisArg;\n  }\n  if (toStr.call(list) === '[object Array]') {\n    forEachArray(list, iterator, receiver);\n  } else if (typeof list === 'string') {\n    forEachString(list, iterator, receiver);\n  } else {\n    forEachObject(list, iterator, receiver);\n  }\n};\nmodule.exports = forEach;\n\n//# sourceURL=webpack://my-app/../../for-each/index.js?");

/***/ }),

/***/ "../../function-bind/implementation.js":
/*!*********************************************!*\
  !*** ../../function-bind/implementation.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/* eslint no-invalid-this: 1 */\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar toStr = Object.prototype.toString;\nvar max = Math.max;\nvar funcType = '[object Function]';\nvar concatty = function concatty(a, b) {\n  var arr = [];\n  for (var i = 0; i < a.length; i += 1) {\n    arr[i] = a[i];\n  }\n  for (var j = 0; j < b.length; j += 1) {\n    arr[j + a.length] = b[j];\n  }\n  return arr;\n};\nvar slicy = function slicy(arrLike, offset) {\n  var arr = [];\n  for (var i = offset || 0, j = 0; i < arrLike.length; i += 1, j += 1) {\n    arr[j] = arrLike[i];\n  }\n  return arr;\n};\nvar joiny = function (arr, joiner) {\n  var str = '';\n  for (var i = 0; i < arr.length; i += 1) {\n    str += arr[i];\n    if (i + 1 < arr.length) {\n      str += joiner;\n    }\n  }\n  return str;\n};\nmodule.exports = function bind(that) {\n  var target = this;\n  if (typeof target !== 'function' || toStr.apply(target) !== funcType) {\n    throw new TypeError(ERROR_MESSAGE + target);\n  }\n  var args = slicy(arguments, 1);\n  var bound;\n  var binder = function () {\n    if (this instanceof bound) {\n      var result = target.apply(this, concatty(args, arguments));\n      if (Object(result) === result) {\n        return result;\n      }\n      return this;\n    }\n    return target.apply(that, concatty(args, arguments));\n  };\n  var boundLength = max(0, target.length - args.length);\n  var boundArgs = [];\n  for (var i = 0; i < boundLength; i++) {\n    boundArgs[i] = '$' + i;\n  }\n  bound = Function('binder', 'return function (' + joiny(boundArgs, ',') + '){ return binder.apply(this,arguments); }')(binder);\n  if (target.prototype) {\n    var Empty = function Empty() {};\n    Empty.prototype = target.prototype;\n    bound.prototype = new Empty();\n    Empty.prototype = null;\n  }\n  return bound;\n};\n\n//# sourceURL=webpack://my-app/../../function-bind/implementation.js?");

/***/ }),

/***/ "../../function-bind/index.js":
/*!************************************!*\
  !*** ../../function-bind/index.js ***!
  \************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar implementation = __webpack_require__(/*! ./implementation */ \"../../function-bind/implementation.js\");\nmodule.exports = Function.prototype.bind || implementation;\n\n//# sourceURL=webpack://my-app/../../function-bind/index.js?");

/***/ }),

/***/ "../../get-intrinsic/index.js":
/*!************************************!*\
  !*** ../../get-intrinsic/index.js ***!
  \************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar undefined;\nvar $Error = __webpack_require__(/*! es-errors */ \"../../es-errors/index.js\");\nvar $EvalError = __webpack_require__(/*! es-errors/eval */ \"../../es-errors/eval.js\");\nvar $RangeError = __webpack_require__(/*! es-errors/range */ \"../../es-errors/range.js\");\nvar $ReferenceError = __webpack_require__(/*! es-errors/ref */ \"../../es-errors/ref.js\");\nvar $SyntaxError = __webpack_require__(/*! es-errors/syntax */ \"../../es-errors/syntax.js\");\nvar $TypeError = __webpack_require__(/*! es-errors/type */ \"../../es-errors/type.js\");\nvar $URIError = __webpack_require__(/*! es-errors/uri */ \"../../es-errors/uri.js\");\nvar $Function = Function;\n\n// eslint-disable-next-line consistent-return\nvar getEvalledConstructor = function (expressionSyntax) {\n  try {\n    return $Function('\"use strict\"; return (' + expressionSyntax + ').constructor;')();\n  } catch (e) {}\n};\nvar $gOPD = Object.getOwnPropertyDescriptor;\nif ($gOPD) {\n  try {\n    $gOPD({}, '');\n  } catch (e) {\n    $gOPD = null; // this is IE 8, which has a broken gOPD\n  }\n}\nvar throwTypeError = function () {\n  throw new $TypeError();\n};\nvar ThrowTypeError = $gOPD ? function () {\n  try {\n    // eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties\n    arguments.callee; // IE 8 does not throw here\n    return throwTypeError;\n  } catch (calleeThrows) {\n    try {\n      // IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')\n      return $gOPD(arguments, 'callee').get;\n    } catch (gOPDthrows) {\n      return throwTypeError;\n    }\n  }\n}() : throwTypeError;\nvar hasSymbols = __webpack_require__(/*! has-symbols */ \"../../has-symbols/index.js\")();\nvar hasProto = __webpack_require__(/*! has-proto */ \"../../has-proto/index.js\")();\nvar getProto = Object.getPrototypeOf || (hasProto ? function (x) {\n  return x.__proto__;\n} // eslint-disable-line no-proto\n: null);\nvar needsEval = {};\nvar TypedArray = typeof Uint8Array === 'undefined' || !getProto ? undefined : getProto(Uint8Array);\nvar INTRINSICS = {\n  __proto__: null,\n  '%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,\n  '%Array%': Array,\n  '%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n  '%ArrayIteratorPrototype%': hasSymbols && getProto ? getProto([][Symbol.iterator]()) : undefined,\n  '%AsyncFromSyncIteratorPrototype%': undefined,\n  '%AsyncFunction%': needsEval,\n  '%AsyncGenerator%': needsEval,\n  '%AsyncGeneratorFunction%': needsEval,\n  '%AsyncIteratorPrototype%': needsEval,\n  '%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n  '%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,\n  '%BigInt64Array%': typeof BigInt64Array === 'undefined' ? undefined : BigInt64Array,\n  '%BigUint64Array%': typeof BigUint64Array === 'undefined' ? undefined : BigUint64Array,\n  '%Boolean%': Boolean,\n  '%DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n  '%Date%': Date,\n  '%decodeURI%': decodeURI,\n  '%decodeURIComponent%': decodeURIComponent,\n  '%encodeURI%': encodeURI,\n  '%encodeURIComponent%': encodeURIComponent,\n  '%Error%': $Error,\n  '%eval%': eval,\n  // eslint-disable-line no-eval\n  '%EvalError%': $EvalError,\n  '%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n  '%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n  '%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,\n  '%Function%': $Function,\n  '%GeneratorFunction%': needsEval,\n  '%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n  '%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n  '%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n  '%isFinite%': isFinite,\n  '%isNaN%': isNaN,\n  '%IteratorPrototype%': hasSymbols && getProto ? getProto(getProto([][Symbol.iterator]())) : undefined,\n  '%JSON%': typeof JSON === 'object' ? JSON : undefined,\n  '%Map%': typeof Map === 'undefined' ? undefined : Map,\n  '%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Map()[Symbol.iterator]()),\n  '%Math%': Math,\n  '%Number%': Number,\n  '%Object%': Object,\n  '%parseFloat%': parseFloat,\n  '%parseInt%': parseInt,\n  '%Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n  '%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n  '%RangeError%': $RangeError,\n  '%ReferenceError%': $ReferenceError,\n  '%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n  '%RegExp%': RegExp,\n  '%Set%': typeof Set === 'undefined' ? undefined : Set,\n  '%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Set()[Symbol.iterator]()),\n  '%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n  '%String%': String,\n  '%StringIteratorPrototype%': hasSymbols && getProto ? getProto(''[Symbol.iterator]()) : undefined,\n  '%Symbol%': hasSymbols ? Symbol : undefined,\n  '%SyntaxError%': $SyntaxError,\n  '%ThrowTypeError%': ThrowTypeError,\n  '%TypedArray%': TypedArray,\n  '%TypeError%': $TypeError,\n  '%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n  '%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n  '%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n  '%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n  '%URIError%': $URIError,\n  '%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n  '%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,\n  '%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet\n};\nif (getProto) {\n  try {\n    null.error; // eslint-disable-line no-unused-expressions\n  } catch (e) {\n    // https://github.com/tc39/proposal-shadowrealm/pull/384#issuecomment-1364264229\n    var errorProto = getProto(getProto(e));\n    INTRINSICS['%Error.prototype%'] = errorProto;\n  }\n}\nvar doEval = function doEval(name) {\n  var value;\n  if (name === '%AsyncFunction%') {\n    value = getEvalledConstructor('async function () {}');\n  } else if (name === '%GeneratorFunction%') {\n    value = getEvalledConstructor('function* () {}');\n  } else if (name === '%AsyncGeneratorFunction%') {\n    value = getEvalledConstructor('async function* () {}');\n  } else if (name === '%AsyncGenerator%') {\n    var fn = doEval('%AsyncGeneratorFunction%');\n    if (fn) {\n      value = fn.prototype;\n    }\n  } else if (name === '%AsyncIteratorPrototype%') {\n    var gen = doEval('%AsyncGenerator%');\n    if (gen && getProto) {\n      value = getProto(gen.prototype);\n    }\n  }\n  INTRINSICS[name] = value;\n  return value;\n};\nvar LEGACY_ALIASES = {\n  __proto__: null,\n  '%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],\n  '%ArrayPrototype%': ['Array', 'prototype'],\n  '%ArrayProto_entries%': ['Array', 'prototype', 'entries'],\n  '%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],\n  '%ArrayProto_keys%': ['Array', 'prototype', 'keys'],\n  '%ArrayProto_values%': ['Array', 'prototype', 'values'],\n  '%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],\n  '%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],\n  '%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],\n  '%BooleanPrototype%': ['Boolean', 'prototype'],\n  '%DataViewPrototype%': ['DataView', 'prototype'],\n  '%DatePrototype%': ['Date', 'prototype'],\n  '%ErrorPrototype%': ['Error', 'prototype'],\n  '%EvalErrorPrototype%': ['EvalError', 'prototype'],\n  '%Float32ArrayPrototype%': ['Float32Array', 'prototype'],\n  '%Float64ArrayPrototype%': ['Float64Array', 'prototype'],\n  '%FunctionPrototype%': ['Function', 'prototype'],\n  '%Generator%': ['GeneratorFunction', 'prototype'],\n  '%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],\n  '%Int8ArrayPrototype%': ['Int8Array', 'prototype'],\n  '%Int16ArrayPrototype%': ['Int16Array', 'prototype'],\n  '%Int32ArrayPrototype%': ['Int32Array', 'prototype'],\n  '%JSONParse%': ['JSON', 'parse'],\n  '%JSONStringify%': ['JSON', 'stringify'],\n  '%MapPrototype%': ['Map', 'prototype'],\n  '%NumberPrototype%': ['Number', 'prototype'],\n  '%ObjectPrototype%': ['Object', 'prototype'],\n  '%ObjProto_toString%': ['Object', 'prototype', 'toString'],\n  '%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],\n  '%PromisePrototype%': ['Promise', 'prototype'],\n  '%PromiseProto_then%': ['Promise', 'prototype', 'then'],\n  '%Promise_all%': ['Promise', 'all'],\n  '%Promise_reject%': ['Promise', 'reject'],\n  '%Promise_resolve%': ['Promise', 'resolve'],\n  '%RangeErrorPrototype%': ['RangeError', 'prototype'],\n  '%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],\n  '%RegExpPrototype%': ['RegExp', 'prototype'],\n  '%SetPrototype%': ['Set', 'prototype'],\n  '%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],\n  '%StringPrototype%': ['String', 'prototype'],\n  '%SymbolPrototype%': ['Symbol', 'prototype'],\n  '%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],\n  '%TypedArrayPrototype%': ['TypedArray', 'prototype'],\n  '%TypeErrorPrototype%': ['TypeError', 'prototype'],\n  '%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],\n  '%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],\n  '%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],\n  '%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],\n  '%URIErrorPrototype%': ['URIError', 'prototype'],\n  '%WeakMapPrototype%': ['WeakMap', 'prototype'],\n  '%WeakSetPrototype%': ['WeakSet', 'prototype']\n};\nvar bind = __webpack_require__(/*! function-bind */ \"../../function-bind/index.js\");\nvar hasOwn = __webpack_require__(/*! hasown */ \"../../hasown/index.js\");\nvar $concat = bind.call(Function.call, Array.prototype.concat);\nvar $spliceApply = bind.call(Function.apply, Array.prototype.splice);\nvar $replace = bind.call(Function.call, String.prototype.replace);\nvar $strSlice = bind.call(Function.call, String.prototype.slice);\nvar $exec = bind.call(Function.call, RegExp.prototype.exec);\n\n/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */\nvar rePropName = /[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;\nvar reEscapeChar = /\\\\(\\\\)?/g; /** Used to match backslashes in property paths. */\nvar stringToPath = function stringToPath(string) {\n  var first = $strSlice(string, 0, 1);\n  var last = $strSlice(string, -1);\n  if (first === '%' && last !== '%') {\n    throw new $SyntaxError('invalid intrinsic syntax, expected closing `%`');\n  } else if (last === '%' && first !== '%') {\n    throw new $SyntaxError('invalid intrinsic syntax, expected opening `%`');\n  }\n  var result = [];\n  $replace(string, rePropName, function (match, number, quote, subString) {\n    result[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;\n  });\n  return result;\n};\n/* end adaptation */\n\nvar getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {\n  var intrinsicName = name;\n  var alias;\n  if (hasOwn(LEGACY_ALIASES, intrinsicName)) {\n    alias = LEGACY_ALIASES[intrinsicName];\n    intrinsicName = '%' + alias[0] + '%';\n  }\n  if (hasOwn(INTRINSICS, intrinsicName)) {\n    var value = INTRINSICS[intrinsicName];\n    if (value === needsEval) {\n      value = doEval(intrinsicName);\n    }\n    if (typeof value === 'undefined' && !allowMissing) {\n      throw new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n    }\n    return {\n      alias: alias,\n      name: intrinsicName,\n      value: value\n    };\n  }\n  throw new $SyntaxError('intrinsic ' + name + ' does not exist!');\n};\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n  if (typeof name !== 'string' || name.length === 0) {\n    throw new $TypeError('intrinsic name must be a non-empty string');\n  }\n  if (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n    throw new $TypeError('\"allowMissing\" argument must be a boolean');\n  }\n  if ($exec(/^%?[^%]*%?$/, name) === null) {\n    throw new $SyntaxError('`%` may not be present anywhere but at the beginning and end of the intrinsic name');\n  }\n  var parts = stringToPath(name);\n  var intrinsicBaseName = parts.length > 0 ? parts[0] : '';\n  var intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);\n  var intrinsicRealName = intrinsic.name;\n  var value = intrinsic.value;\n  var skipFurtherCaching = false;\n  var alias = intrinsic.alias;\n  if (alias) {\n    intrinsicBaseName = alias[0];\n    $spliceApply(parts, $concat([0, 1], alias));\n  }\n  for (var i = 1, isOwn = true; i < parts.length; i += 1) {\n    var part = parts[i];\n    var first = $strSlice(part, 0, 1);\n    var last = $strSlice(part, -1);\n    if ((first === '\"' || first === \"'\" || first === '`' || last === '\"' || last === \"'\" || last === '`') && first !== last) {\n      throw new $SyntaxError('property names with quotes must have matching quotes');\n    }\n    if (part === 'constructor' || !isOwn) {\n      skipFurtherCaching = true;\n    }\n    intrinsicBaseName += '.' + part;\n    intrinsicRealName = '%' + intrinsicBaseName + '%';\n    if (hasOwn(INTRINSICS, intrinsicRealName)) {\n      value = INTRINSICS[intrinsicRealName];\n    } else if (value != null) {\n      if (!(part in value)) {\n        if (!allowMissing) {\n          throw new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');\n        }\n        return void undefined;\n      }\n      if ($gOPD && i + 1 >= parts.length) {\n        var desc = $gOPD(value, part);\n        isOwn = !!desc;\n\n        // By convention, when a data property is converted to an accessor\n        // property to emulate a data property that does not suffer from\n        // the override mistake, that accessor's getter is marked with\n        // an `originalValue` property. Here, when we detect this, we\n        // uphold the illusion by pretending to see that original data\n        // property, i.e., returning the value rather than the getter\n        // itself.\n        if (isOwn && 'get' in desc && !('originalValue' in desc.get)) {\n          value = desc.get;\n        } else {\n          value = value[part];\n        }\n      } else {\n        isOwn = hasOwn(value, part);\n        value = value[part];\n      }\n      if (isOwn && !skipFurtherCaching) {\n        INTRINSICS[intrinsicRealName] = value;\n      }\n    }\n  }\n  return value;\n};\n\n//# sourceURL=webpack://my-app/../../get-intrinsic/index.js?");

/***/ }),

/***/ "../../gopd/index.js":
/*!***************************!*\
  !*** ../../gopd/index.js ***!
  \***************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar GetIntrinsic = __webpack_require__(/*! get-intrinsic */ \"../../get-intrinsic/index.js\");\nvar $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);\nif ($gOPD) {\n  try {\n    $gOPD([], 'length');\n  } catch (e) {\n    // IE 8 has a broken gOPD\n    $gOPD = null;\n  }\n}\nmodule.exports = $gOPD;\n\n//# sourceURL=webpack://my-app/../../gopd/index.js?");

/***/ }),

/***/ "../../has-property-descriptors/index.js":
/*!***********************************************!*\
  !*** ../../has-property-descriptors/index.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar $defineProperty = __webpack_require__(/*! es-define-property */ \"../../es-define-property/index.js\");\nvar hasPropertyDescriptors = function hasPropertyDescriptors() {\n  return !!$defineProperty;\n};\nhasPropertyDescriptors.hasArrayLengthDefineBug = function hasArrayLengthDefineBug() {\n  // node v0.6 has a bug where array lengths can be Set but not Defined\n  if (!$defineProperty) {\n    return null;\n  }\n  try {\n    return $defineProperty([], 'length', {\n      value: 1\n    }).length !== 1;\n  } catch (e) {\n    // In Firefox 4-22, defining length on an array throws an exception.\n    return true;\n  }\n};\nmodule.exports = hasPropertyDescriptors;\n\n//# sourceURL=webpack://my-app/../../has-property-descriptors/index.js?");

/***/ }),

/***/ "../../has-proto/index.js":
/*!********************************!*\
  !*** ../../has-proto/index.js ***!
  \********************************/
/***/ ((module) => {

"use strict";
eval("\n\nvar test = {\n  __proto__: null,\n  foo: {}\n};\nvar $Object = Object;\n\n/** @type {import('.')} */\nmodule.exports = function hasProto() {\n  // @ts-expect-error: TS errors on an inherited property for some reason\n  return {\n    __proto__: test\n  }.foo === test.foo && !(test instanceof $Object);\n};\n\n//# sourceURL=webpack://my-app/../../has-proto/index.js?");

/***/ }),

/***/ "../../has-symbols/index.js":
/*!**********************************!*\
  !*** ../../has-symbols/index.js ***!
  \**********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar origSymbol = typeof Symbol !== 'undefined' && Symbol;\nvar hasSymbolSham = __webpack_require__(/*! ./shams */ \"../../has-symbols/shams.js\");\nmodule.exports = function hasNativeSymbols() {\n  if (typeof origSymbol !== 'function') {\n    return false;\n  }\n  if (typeof Symbol !== 'function') {\n    return false;\n  }\n  if (typeof origSymbol('foo') !== 'symbol') {\n    return false;\n  }\n  if (typeof Symbol('bar') !== 'symbol') {\n    return false;\n  }\n  return hasSymbolSham();\n};\n\n//# sourceURL=webpack://my-app/../../has-symbols/index.js?");

/***/ }),

/***/ "../../has-symbols/shams.js":
/*!**********************************!*\
  !*** ../../has-symbols/shams.js ***!
  \**********************************/
/***/ ((module) => {

"use strict";
eval("\n\n/* eslint complexity: [2, 18], max-statements: [2, 33] */\nmodule.exports = function hasSymbols() {\n  if (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') {\n    return false;\n  }\n  if (typeof Symbol.iterator === 'symbol') {\n    return true;\n  }\n  var obj = {};\n  var sym = Symbol('test');\n  var symObj = Object(sym);\n  if (typeof sym === 'string') {\n    return false;\n  }\n  if (Object.prototype.toString.call(sym) !== '[object Symbol]') {\n    return false;\n  }\n  if (Object.prototype.toString.call(symObj) !== '[object Symbol]') {\n    return false;\n  }\n\n  // temp disabled per https://github.com/ljharb/object.assign/issues/17\n  // if (sym instanceof Symbol) { return false; }\n  // temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n  // if (!(symObj instanceof Symbol)) { return false; }\n\n  // if (typeof Symbol.prototype.toString !== 'function') { return false; }\n  // if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n  var symVal = 42;\n  obj[sym] = symVal;\n  for (sym in obj) {\n    return false;\n  } // eslint-disable-line no-restricted-syntax, no-unreachable-loop\n  if (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) {\n    return false;\n  }\n  if (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) {\n    return false;\n  }\n  var syms = Object.getOwnPropertySymbols(obj);\n  if (syms.length !== 1 || syms[0] !== sym) {\n    return false;\n  }\n  if (!Object.prototype.propertyIsEnumerable.call(obj, sym)) {\n    return false;\n  }\n  if (typeof Object.getOwnPropertyDescriptor === 'function') {\n    var descriptor = Object.getOwnPropertyDescriptor(obj, sym);\n    if (descriptor.value !== symVal || descriptor.enumerable !== true) {\n      return false;\n    }\n  }\n  return true;\n};\n\n//# sourceURL=webpack://my-app/../../has-symbols/shams.js?");

/***/ }),

/***/ "../../has-tostringtag/shams.js":
/*!**************************************!*\
  !*** ../../has-tostringtag/shams.js ***!
  \**************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar hasSymbols = __webpack_require__(/*! has-symbols/shams */ \"../../has-symbols/shams.js\");\n\n/** @type {import('.')} */\nmodule.exports = function hasToStringTagShams() {\n  return hasSymbols() && !!Symbol.toStringTag;\n};\n\n//# sourceURL=webpack://my-app/../../has-tostringtag/shams.js?");

/***/ }),

/***/ "../../hasown/index.js":
/*!*****************************!*\
  !*** ../../hasown/index.js ***!
  \*****************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar call = Function.prototype.call;\nvar $hasOwn = Object.prototype.hasOwnProperty;\nvar bind = __webpack_require__(/*! function-bind */ \"../../function-bind/index.js\");\n\n/** @type {import('.')} */\nmodule.exports = bind.call(call, $hasOwn);\n\n//# sourceURL=webpack://my-app/../../hasown/index.js?");

/***/ }),

/***/ "../../headers-polyfill/lib/index.js":
/*!*******************************************!*\
  !*** ../../headers-polyfill/lib/index.js ***!
  \*******************************************/
/***/ ((module) => {

eval("function _array_like_to_array(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _array_with_holes(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nfunction _class_call_check(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _instanceof(left, right) {\n  if (right != null && typeof Symbol !== \"undefined\" && right[Symbol.hasInstance]) {\n    return !!right[Symbol.hasInstance](left);\n  } else {\n    return left instanceof right;\n  }\n}\nfunction _iterable_to_array_limit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _s, _e;\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n  return _arr;\n}\nfunction _non_iterable_rest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _sliced_to_array(arr, i) {\n  return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nfunction _ts_generator(thisArg, body) {\n  var f,\n    y,\n    t,\n    g,\n    _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    };\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n}\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __commonJS = function (cb, mod) {\n  return function __require() {\n    return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = {\n      exports: {}\n    }).exports, mod), mod.exports;\n  };\n};\nvar __export = function (target, all) {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = function (to, from, except, desc) {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    var _iteratorNormalCompletion = true,\n      _didIteratorError = false,\n      _iteratorError = undefined;\n    try {\n      var _loop = function () {\n        var key = _step.value;\n        if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n          get: function () {\n            return from[key];\n          },\n          enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n        });\n      };\n      for (var _iterator = __getOwnPropNames(from)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) _loop();\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n  }\n  return to;\n};\nvar __toESM = function (mod, isNodeMode, target) {\n  return target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", {\n    value: mod,\n    enumerable: true\n  }) : target, mod);\n};\nvar __toCommonJS = function (mod) {\n  return __copyProps(__defProp({}, \"__esModule\", {\n    value: true\n  }), mod);\n};\n// node_modules/set-cookie-parser/lib/set-cookie.js\nvar require_set_cookie = __commonJS({\n  \"node_modules/set-cookie-parser/lib/set-cookie.js\": function (exports, module2) {\n    \"use strict\";\n\n    var isNonEmptyString = function isNonEmptyString(str) {\n      return typeof str === \"string\" && !!str.trim();\n    };\n    var parseString = function parseString(setCookieValue, options) {\n      var parts = setCookieValue.split(\";\").filter(isNonEmptyString);\n      var nameValuePairStr = parts.shift();\n      var parsed = parseNameValuePair(nameValuePairStr);\n      var name = parsed.name;\n      var value = parsed.value;\n      options = options ? Object.assign({}, defaultParseOptions, options) : defaultParseOptions;\n      try {\n        value = options.decodeValues ? decodeURIComponent(value) : value;\n      } catch (e) {\n        console.error(\"set-cookie-parser encountered an error while decoding a cookie with value '\" + value + \"'. Set options.decodeValues to false to disable this feature.\", e);\n      }\n      var cookie = {\n        name: name,\n        value: value\n      };\n      parts.forEach(function (part) {\n        var sides = part.split(\"=\");\n        var key = sides.shift().trimLeft().toLowerCase();\n        var value2 = sides.join(\"=\");\n        if (key === \"expires\") {\n          cookie.expires = new Date(value2);\n        } else if (key === \"max-age\") {\n          cookie.maxAge = parseInt(value2, 10);\n        } else if (key === \"secure\") {\n          cookie.secure = true;\n        } else if (key === \"httponly\") {\n          cookie.httpOnly = true;\n        } else if (key === \"samesite\") {\n          cookie.sameSite = value2;\n        } else {\n          cookie[key] = value2;\n        }\n      });\n      return cookie;\n    };\n    var parseNameValuePair = function parseNameValuePair(nameValuePairStr) {\n      var name = \"\";\n      var value = \"\";\n      var nameValueArr = nameValuePairStr.split(\"=\");\n      if (nameValueArr.length > 1) {\n        name = nameValueArr.shift();\n        value = nameValueArr.join(\"=\");\n      } else {\n        value = nameValuePairStr;\n      }\n      return {\n        name: name,\n        value: value\n      };\n    };\n    var parse = function parse(input, options) {\n      options = options ? Object.assign({}, defaultParseOptions, options) : defaultParseOptions;\n      if (!input) {\n        if (!options.map) {\n          return [];\n        } else {\n          return {};\n        }\n      }\n      if (input.headers) {\n        if (typeof input.headers.getSetCookie === \"function\") {\n          input = input.headers.getSetCookie();\n        } else if (input.headers[\"set-cookie\"]) {\n          input = input.headers[\"set-cookie\"];\n        } else {\n          var sch = input.headers[Object.keys(input.headers).find(function (key) {\n            return key.toLowerCase() === \"set-cookie\";\n          })];\n          if (!sch && input.headers.cookie && !options.silent) {\n            console.warn(\"Warning: set-cookie-parser appears to have been called on a request object. It is designed to parse Set-Cookie headers from responses, not Cookie headers from requests. Set the option {silent: true} to suppress this warning.\");\n          }\n          input = sch;\n        }\n      }\n      if (!Array.isArray(input)) {\n        input = [input];\n      }\n      options = options ? Object.assign({}, defaultParseOptions, options) : defaultParseOptions;\n      if (!options.map) {\n        return input.filter(isNonEmptyString).map(function (str) {\n          return parseString(str, options);\n        });\n      } else {\n        var cookies = {};\n        return input.filter(isNonEmptyString).reduce(function (cookies2, str) {\n          var cookie = parseString(str, options);\n          cookies2[cookie.name] = cookie;\n          return cookies2;\n        }, cookies);\n      }\n    };\n    var splitCookiesString2 = function splitCookiesString2(cookiesString) {\n      if (Array.isArray(cookiesString)) {\n        return cookiesString;\n      }\n      if (typeof cookiesString !== \"string\") {\n        return [];\n      }\n      var cookiesStrings = [];\n      var pos = 0;\n      var start;\n      var ch;\n      var lastComma;\n      var nextStart;\n      var cookiesSeparatorFound;\n      function skipWhitespace() {\n        while (pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))) {\n          pos += 1;\n        }\n        return pos < cookiesString.length;\n      }\n      function notSpecialChar() {\n        ch = cookiesString.charAt(pos);\n        return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n      }\n      while (pos < cookiesString.length) {\n        start = pos;\n        cookiesSeparatorFound = false;\n        while (skipWhitespace()) {\n          ch = cookiesString.charAt(pos);\n          if (ch === \",\") {\n            lastComma = pos;\n            pos += 1;\n            skipWhitespace();\n            nextStart = pos;\n            while (pos < cookiesString.length && notSpecialChar()) {\n              pos += 1;\n            }\n            if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n              cookiesSeparatorFound = true;\n              pos = nextStart;\n              cookiesStrings.push(cookiesString.substring(start, lastComma));\n              start = pos;\n            } else {\n              pos = lastComma + 1;\n            }\n          } else {\n            pos += 1;\n          }\n        }\n        if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n          cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n        }\n      }\n      return cookiesStrings;\n    };\n    var defaultParseOptions = {\n      decodeValues: true,\n      map: false,\n      silent: false\n    };\n    module2.exports = parse;\n    module2.exports.parse = parse;\n    module2.exports.parseString = parseString;\n    module2.exports.splitCookiesString = splitCookiesString2;\n  }\n});\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  Headers: function () {\n    return HeadersPolyfill;\n  },\n  flattenHeadersList: function () {\n    return flattenHeadersList;\n  },\n  flattenHeadersObject: function () {\n    return flattenHeadersObject;\n  },\n  headersToList: function () {\n    return headersToList;\n  },\n  headersToObject: function () {\n    return headersToObject;\n  },\n  headersToString: function () {\n    return headersToString;\n  },\n  listToHeaders: function () {\n    return listToHeaders;\n  },\n  objectToHeaders: function () {\n    return objectToHeaders;\n  },\n  reduceHeadersObject: function () {\n    return reduceHeadersObject;\n  },\n  stringToHeaders: function () {\n    return stringToHeaders;\n  }\n});\nmodule.exports = __toCommonJS(src_exports);\n// src/Headers.ts\nvar import_set_cookie_parser = __toESM(require_set_cookie());\n// src/utils/normalizeHeaderName.ts\nvar HEADERS_INVALID_CHARACTERS = /[^a-z0-9\\-#$%&'*+.^_`|~]/i;\nfunction normalizeHeaderName(name) {\n  if (HEADERS_INVALID_CHARACTERS.test(name) || name.trim() === \"\") {\n    throw new TypeError(\"Invalid character in header field name\");\n  }\n  return name.trim().toLowerCase();\n}\n// src/utils/normalizeHeaderValue.ts\nvar charCodesToRemove = [String.fromCharCode(10), String.fromCharCode(13), String.fromCharCode(9), String.fromCharCode(32)];\nvar HEADER_VALUE_REMOVE_REGEXP = new RegExp(\"(^[\".concat(charCodesToRemove.join(\"\"), \"]|$[\").concat(charCodesToRemove.join(\"\"), \"])\"), \"g\");\nfunction normalizeHeaderValue(value) {\n  var nextValue = value.replace(HEADER_VALUE_REMOVE_REGEXP, \"\");\n  return nextValue;\n}\n// src/utils/isValidHeaderName.ts\nfunction isValidHeaderName(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  if (value.length === 0) {\n    return false;\n  }\n  for (var i = 0; i < value.length; i++) {\n    var character = value.charCodeAt(i);\n    if (character > 127 || !isToken(character)) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction isToken(value) {\n  return ![127, 32, \"(\", \")\", \"<\", \">\", \"@\", \",\", \";\", \":\", \"\\\\\", '\"', \"/\", \"[\", \"]\", \"?\", \"=\", \"{\", \"}\"].includes(value);\n}\n// src/utils/isValidHeaderValue.ts\nfunction isValidHeaderValue(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  if (value.trim() !== value) {\n    return false;\n  }\n  for (var i = 0; i < value.length; i++) {\n    var character = value.charCodeAt(i);\n    if (character === 0 || character === 10 || character === 13) {\n      return false;\n    }\n  }\n  return true;\n}\n// src/Headers.ts\nvar NORMALIZED_HEADERS = Symbol(\"normalizedHeaders\");\nvar RAW_HEADER_NAMES = Symbol(\"rawHeaderNames\");\nvar HEADER_VALUE_DELIMITER = \", \";\nvar _a, _b;\nvar HeadersPolyfill = /*#__PURE__*/function () {\n  \"use strict\";\n\n  function HeadersPolyfill1(init) {\n    var _this = this;\n    _class_call_check(this, HeadersPolyfill1);\n    var _init;\n    this[_a] = {};\n    this[_b] = /* @__PURE__ */new Map();\n    if ([\"Headers\", \"HeadersPolyfill\"].includes((_init = init) === null || _init === void 0 ? void 0 : _init.constructor.name) || _instanceof(init, HeadersPolyfill)) {\n      var initialHeaders = init;\n      initialHeaders.forEach(function (value, name) {\n        _this.append(name, value);\n      }, this);\n    } else if (Array.isArray(init)) {\n      init.forEach(function (param) {\n        var _param = _sliced_to_array(param, 2),\n          name = _param[0],\n          value = _param[1];\n        _this.append(name, Array.isArray(value) ? value.join(HEADER_VALUE_DELIMITER) : value);\n      });\n    } else if (init) {\n      Object.getOwnPropertyNames(init).forEach(function (name) {\n        var value = init[name];\n        _this.append(name, Array.isArray(value) ? value.join(HEADER_VALUE_DELIMITER) : value);\n      });\n    }\n  }\n  _create_class(HeadersPolyfill1, [{\n    key: (_a = NORMALIZED_HEADERS, _b = RAW_HEADER_NAMES, Symbol.iterator),\n    value: function value() {\n      return this.entries();\n    }\n  }, {\n    key: \"keys\",\n    value: function keys() {\n      var _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, _step_value, name, err;\n      return _ts_generator(this, function (_state) {\n        switch (_state.label) {\n          case 0:\n            _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n            _state.label = 1;\n          case 1:\n            _state.trys.push([1, 6, 7, 8]);\n            _iterator = this.entries()[Symbol.iterator]();\n            _state.label = 2;\n          case 2:\n            if (!!(_iteratorNormalCompletion = (_step = _iterator.next()).done)) return [3, 5];\n            _step_value = _sliced_to_array(_step.value, 1), name = _step_value[0];\n            return [4, name];\n          case 3:\n            _state.sent();\n            _state.label = 4;\n          case 4:\n            _iteratorNormalCompletion = true;\n            return [3, 2];\n          case 5:\n            return [3, 8];\n          case 6:\n            err = _state.sent();\n            _didIteratorError = true;\n            _iteratorError = err;\n            return [3, 8];\n          case 7:\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n            return [7];\n          case 8:\n            return [2];\n        }\n      });\n    }\n  }, {\n    key: \"values\",\n    value: function values() {\n      var _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, _step_value, value, err;\n      return _ts_generator(this, function (_state) {\n        switch (_state.label) {\n          case 0:\n            _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n            _state.label = 1;\n          case 1:\n            _state.trys.push([1, 6, 7, 8]);\n            _iterator = this.entries()[Symbol.iterator]();\n            _state.label = 2;\n          case 2:\n            if (!!(_iteratorNormalCompletion = (_step = _iterator.next()).done)) return [3, 5];\n            _step_value = _sliced_to_array(_step.value, 2), value = _step_value[1];\n            return [4, value];\n          case 3:\n            _state.sent();\n            _state.label = 4;\n          case 4:\n            _iteratorNormalCompletion = true;\n            return [3, 2];\n          case 5:\n            return [3, 8];\n          case 6:\n            err = _state.sent();\n            _didIteratorError = true;\n            _iteratorError = err;\n            return [3, 8];\n          case 7:\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n            return [7];\n          case 8:\n            return [2];\n        }\n      });\n    }\n  }, {\n    key: \"entries\",\n    value: function entries() {\n      var sortedKeys, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, name, _iteratorNormalCompletion1, _didIteratorError1, _iteratorError1, _iterator1, _step1, value, err, err;\n      return _ts_generator(this, function (_state) {\n        switch (_state.label) {\n          case 0:\n            sortedKeys = Object.keys(this[NORMALIZED_HEADERS]).sort(function (a, b) {\n              return a.localeCompare(b);\n            });\n            _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n            _state.label = 1;\n          case 1:\n            _state.trys.push([1, 15, 16, 17]);\n            _iterator = sortedKeys[Symbol.iterator]();\n            _state.label = 2;\n          case 2:\n            if (!!(_iteratorNormalCompletion = (_step = _iterator.next()).done)) return [3, 14];\n            name = _step.value;\n            if (!(name === \"set-cookie\")) return [3, 11];\n            _iteratorNormalCompletion1 = true, _didIteratorError1 = false, _iteratorError1 = undefined;\n            _state.label = 3;\n          case 3:\n            _state.trys.push([3, 8, 9, 10]);\n            _iterator1 = this.getSetCookie()[Symbol.iterator]();\n            _state.label = 4;\n          case 4:\n            if (!!(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done)) return [3, 7];\n            value = _step1.value;\n            return [4, [name, value]];\n          case 5:\n            _state.sent();\n            _state.label = 6;\n          case 6:\n            _iteratorNormalCompletion1 = true;\n            return [3, 4];\n          case 7:\n            return [3, 10];\n          case 8:\n            err = _state.sent();\n            _didIteratorError1 = true;\n            _iteratorError1 = err;\n            return [3, 10];\n          case 9:\n            try {\n              if (!_iteratorNormalCompletion1 && _iterator1.return != null) {\n                _iterator1.return();\n              }\n            } finally {\n              if (_didIteratorError1) {\n                throw _iteratorError1;\n              }\n            }\n            return [7];\n          case 10:\n            return [3, 13];\n          case 11:\n            return [4, [name, this.get(name)]];\n          case 12:\n            _state.sent();\n            _state.label = 13;\n          case 13:\n            _iteratorNormalCompletion = true;\n            return [3, 2];\n          case 14:\n            return [3, 17];\n          case 15:\n            err = _state.sent();\n            _didIteratorError = true;\n            _iteratorError = err;\n            return [3, 17];\n          case 16:\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n            return [7];\n          case 17:\n            return [2];\n        }\n      });\n    }\n  }, {\n    key: \"has\",\n    value: function has(name) {\n      if (!isValidHeaderName(name)) {\n        throw new TypeError('Invalid header name \"'.concat(name, '\"'));\n      }\n      return this[NORMALIZED_HEADERS].hasOwnProperty(normalizeHeaderName(name));\n    }\n  }, {\n    key: \"get\",\n    value: function get(name) {\n      if (!isValidHeaderName(name)) {\n        throw TypeError('Invalid header name \"'.concat(name, '\"'));\n      }\n      var _this_NORMALIZED_HEADERS_normalizeHeaderName;\n      return (_this_NORMALIZED_HEADERS_normalizeHeaderName = this[NORMALIZED_HEADERS][normalizeHeaderName(name)]) !== null && _this_NORMALIZED_HEADERS_normalizeHeaderName !== void 0 ? _this_NORMALIZED_HEADERS_normalizeHeaderName : null;\n    }\n  }, {\n    key: \"set\",\n    value: function set(name, value) {\n      if (!isValidHeaderName(name) || !isValidHeaderValue(value)) {\n        return;\n      }\n      var normalizedName = normalizeHeaderName(name);\n      var normalizedValue = normalizeHeaderValue(value);\n      this[NORMALIZED_HEADERS][normalizedName] = normalizeHeaderValue(normalizedValue);\n      this[RAW_HEADER_NAMES].set(normalizedName, name);\n    }\n  }, {\n    key: \"append\",\n    value: function append(name, value) {\n      if (!isValidHeaderName(name) || !isValidHeaderValue(value)) {\n        return;\n      }\n      var normalizedName = normalizeHeaderName(name);\n      var normalizedValue = normalizeHeaderValue(value);\n      var resolvedValue = this.has(normalizedName) ? \"\".concat(this.get(normalizedName), \", \").concat(normalizedValue) : normalizedValue;\n      this.set(name, resolvedValue);\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(name) {\n      if (!isValidHeaderName(name)) {\n        return;\n      }\n      if (!this.has(name)) {\n        return;\n      }\n      var normalizedName = normalizeHeaderName(name);\n      delete this[NORMALIZED_HEADERS][normalizedName];\n      this[RAW_HEADER_NAMES].delete(normalizedName);\n    }\n  }, {\n    key: \"all\",\n    value: function all() {\n      return this[NORMALIZED_HEADERS];\n    }\n  }, {\n    key: \"raw\",\n    value: function raw() {\n      var rawHeaders = {};\n      var _iteratorNormalCompletion = true,\n        _didIteratorError = false,\n        _iteratorError = undefined;\n      try {\n        for (var _iterator = this.entries()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var _step_value = _sliced_to_array(_step.value, 2),\n            name = _step_value[0],\n            value = _step_value[1];\n          rawHeaders[this[RAW_HEADER_NAMES].get(name)] = value;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n      return rawHeaders;\n    }\n  }, {\n    key: \"forEach\",\n    value: function forEach(callback, thisArg) {\n      var _iteratorNormalCompletion = true,\n        _didIteratorError = false,\n        _iteratorError = undefined;\n      try {\n        for (var _iterator = this.entries()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var _step_value = _sliced_to_array(_step.value, 2),\n            name = _step_value[0],\n            value = _step_value[1];\n          callback.call(thisArg, value, name, this);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"getSetCookie\",\n    value: function getSetCookie() {\n      var setCookieHeader = this.get(\"set-cookie\");\n      if (setCookieHeader === null) {\n        return [];\n      }\n      if (setCookieHeader === \"\") {\n        return [\"\"];\n      }\n      return (0, import_set_cookie_parser.splitCookiesString)(setCookieHeader);\n    }\n  }]);\n  return HeadersPolyfill1;\n}();\n// src/transformers/headersToList.ts\nfunction headersToList(headers) {\n  var headersList = [];\n  headers.forEach(function (value, name) {\n    var resolvedValue = value.includes(\",\") ? value.split(\",\").map(function (value2) {\n      return value2.trim();\n    }) : value;\n    headersList.push([name, resolvedValue]);\n  });\n  return headersList;\n}\n// src/transformers/headersToString.ts\nfunction headersToString(headers) {\n  var list = headersToList(headers);\n  var lines = list.map(function (param) {\n    var _param = _sliced_to_array(param, 2),\n      name = _param[0],\n      value = _param[1];\n    var values = [].concat(value);\n    return \"\".concat(name, \": \").concat(values.join(\", \"));\n  });\n  return lines.join(\"\\r\\n\");\n}\n// src/transformers/headersToObject.ts\nvar singleValueHeaders = [\"user-agent\"];\nfunction headersToObject(headers) {\n  var headersObject = {};\n  headers.forEach(function (value, name) {\n    var isMultiValue = !singleValueHeaders.includes(name.toLowerCase()) && value.includes(\",\");\n    headersObject[name] = isMultiValue ? value.split(\",\").map(function (s) {\n      return s.trim();\n    }) : value;\n  });\n  return headersObject;\n}\n// src/transformers/stringToHeaders.ts\nfunction stringToHeaders(str) {\n  var lines = str.trim().split(/[\\r\\n]+/);\n  return lines.reduce(function (headers, line) {\n    if (line.trim() === \"\") {\n      return headers;\n    }\n    var parts = line.split(\": \");\n    var name = parts.shift();\n    var value = parts.join(\": \");\n    headers.append(name, value);\n    return headers;\n  }, new HeadersPolyfill());\n}\n// src/transformers/listToHeaders.ts\nfunction listToHeaders(list) {\n  var headers = new HeadersPolyfill();\n  list.forEach(function (param) {\n    var _param = _sliced_to_array(param, 2),\n      name = _param[0],\n      value = _param[1];\n    var values = [].concat(value);\n    values.forEach(function (value2) {\n      headers.append(name, value2);\n    });\n  });\n  return headers;\n}\n// src/transformers/reduceHeadersObject.ts\nfunction reduceHeadersObject(headers, reducer, initialState) {\n  return Object.keys(headers).reduce(function (nextHeaders, name) {\n    return reducer(nextHeaders, name, headers[name]);\n  }, initialState);\n}\n// src/transformers/objectToHeaders.ts\nfunction objectToHeaders(headersObject) {\n  return reduceHeadersObject(headersObject, function (headers, name, value) {\n    var values = [].concat(value).filter(Boolean);\n    values.forEach(function (value2) {\n      headers.append(name, value2);\n    });\n    return headers;\n  }, new HeadersPolyfill());\n}\n// src/transformers/flattenHeadersList.ts\nfunction flattenHeadersList(list) {\n  return list.map(function (param) {\n    var _param = _sliced_to_array(param, 2),\n      name = _param[0],\n      values = _param[1];\n    return [name, [].concat(values).join(\", \")];\n  });\n}\n// src/transformers/flattenHeadersObject.ts\nfunction flattenHeadersObject(headersObject) {\n  return reduceHeadersObject(headersObject, function (headers, name, value) {\n    headers[name] = [].concat(value).join(\", \");\n    return headers;\n  }, {});\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (0);\n\n//# sourceURL=webpack://my-app/../../headers-polyfill/lib/index.js?");

/***/ }),

/***/ "../../inherits/inherits_browser.js":
/*!******************************************!*\
  !*** ../../inherits/inherits_browser.js ***!
  \******************************************/
/***/ ((module) => {

eval("if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor;\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      });\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor;\n      var TempCtor = function () {};\n      TempCtor.prototype = superCtor.prototype;\n      ctor.prototype = new TempCtor();\n      ctor.prototype.constructor = ctor;\n    }\n  };\n}\n\n//# sourceURL=webpack://my-app/../../inherits/inherits_browser.js?");

/***/ }),

/***/ "../../is-arguments/index.js":
/*!***********************************!*\
  !*** ../../is-arguments/index.js ***!
  \***********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar hasToStringTag = __webpack_require__(/*! has-tostringtag/shams */ \"../../has-tostringtag/shams.js\")();\nvar callBound = __webpack_require__(/*! call-bind/callBound */ \"../../call-bind/callBound.js\");\nvar $toString = callBound('Object.prototype.toString');\nvar isStandardArguments = function isArguments(value) {\n  if (hasToStringTag && value && typeof value === 'object' && Symbol.toStringTag in value) {\n    return false;\n  }\n  return $toString(value) === '[object Arguments]';\n};\nvar isLegacyArguments = function isArguments(value) {\n  if (isStandardArguments(value)) {\n    return true;\n  }\n  return value !== null && typeof value === 'object' && typeof value.length === 'number' && value.length >= 0 && $toString(value) !== '[object Array]' && $toString(value.callee) === '[object Function]';\n};\nvar supportsStandardArguments = function () {\n  return isStandardArguments(arguments);\n}();\nisStandardArguments.isLegacyArguments = isLegacyArguments; // for tests\n\nmodule.exports = supportsStandardArguments ? isStandardArguments : isLegacyArguments;\n\n//# sourceURL=webpack://my-app/../../is-arguments/index.js?");

/***/ }),

/***/ "../../is-callable/index.js":
/*!**********************************!*\
  !*** ../../is-callable/index.js ***!
  \**********************************/
/***/ ((module) => {

"use strict";
eval("\n\nvar fnToStr = Function.prototype.toString;\nvar reflectApply = typeof Reflect === 'object' && Reflect !== null && Reflect.apply;\nvar badArrayLike;\nvar isCallableMarker;\nif (typeof reflectApply === 'function' && typeof Object.defineProperty === 'function') {\n  try {\n    badArrayLike = Object.defineProperty({}, 'length', {\n      get: function () {\n        throw isCallableMarker;\n      }\n    });\n    isCallableMarker = {};\n    // eslint-disable-next-line no-throw-literal\n    reflectApply(function () {\n      throw 42;\n    }, null, badArrayLike);\n  } catch (_) {\n    if (_ !== isCallableMarker) {\n      reflectApply = null;\n    }\n  }\n} else {\n  reflectApply = null;\n}\nvar constructorRegex = /^\\s*class\\b/;\nvar isES6ClassFn = function isES6ClassFunction(value) {\n  try {\n    var fnStr = fnToStr.call(value);\n    return constructorRegex.test(fnStr);\n  } catch (e) {\n    return false; // not a function\n  }\n};\nvar tryFunctionObject = function tryFunctionToStr(value) {\n  try {\n    if (isES6ClassFn(value)) {\n      return false;\n    }\n    fnToStr.call(value);\n    return true;\n  } catch (e) {\n    return false;\n  }\n};\nvar toStr = Object.prototype.toString;\nvar objectClass = '[object Object]';\nvar fnClass = '[object Function]';\nvar genClass = '[object GeneratorFunction]';\nvar ddaClass = '[object HTMLAllCollection]'; // IE 11\nvar ddaClass2 = '[object HTML document.all class]';\nvar ddaClass3 = '[object HTMLCollection]'; // IE 9-10\nvar hasToStringTag = typeof Symbol === 'function' && !!Symbol.toStringTag; // better: use `has-tostringtag`\n\nvar isIE68 = !(0 in [,]); // eslint-disable-line no-sparse-arrays, comma-spacing\n\nvar isDDA = function isDocumentDotAll() {\n  return false;\n};\nif (typeof document === 'object') {\n  // Firefox 3 canonicalizes DDA to undefined when it's not accessed directly\n  var all = document.all;\n  if (toStr.call(all) === toStr.call(document.all)) {\n    isDDA = function isDocumentDotAll(value) {\n      /* globals document: false */\n      // in IE 6-8, typeof document.all is \"object\" and it's truthy\n      if ((isIE68 || !value) && (typeof value === 'undefined' || typeof value === 'object')) {\n        try {\n          var str = toStr.call(value);\n          return (str === ddaClass || str === ddaClass2 || str === ddaClass3 // opera 12.16\n          || str === objectClass // IE 6-8\n          ) && value('') == null; // eslint-disable-line eqeqeq\n        } catch (e) {/**/}\n      }\n      return false;\n    };\n  }\n}\nmodule.exports = reflectApply ? function isCallable(value) {\n  if (isDDA(value)) {\n    return true;\n  }\n  if (!value) {\n    return false;\n  }\n  if (typeof value !== 'function' && typeof value !== 'object') {\n    return false;\n  }\n  try {\n    reflectApply(value, null, badArrayLike);\n  } catch (e) {\n    if (e !== isCallableMarker) {\n      return false;\n    }\n  }\n  return !isES6ClassFn(value) && tryFunctionObject(value);\n} : function isCallable(value) {\n  if (isDDA(value)) {\n    return true;\n  }\n  if (!value) {\n    return false;\n  }\n  if (typeof value !== 'function' && typeof value !== 'object') {\n    return false;\n  }\n  if (hasToStringTag) {\n    return tryFunctionObject(value);\n  }\n  if (isES6ClassFn(value)) {\n    return false;\n  }\n  var strClass = toStr.call(value);\n  if (strClass !== fnClass && strClass !== genClass && !/^\\[object HTML/.test(strClass)) {\n    return false;\n  }\n  return tryFunctionObject(value);\n};\n\n//# sourceURL=webpack://my-app/../../is-callable/index.js?");

/***/ }),

/***/ "../../is-generator-function/index.js":
/*!********************************************!*\
  !*** ../../is-generator-function/index.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar toStr = Object.prototype.toString;\nvar fnToStr = Function.prototype.toString;\nvar isFnRegex = /^\\s*(?:function)?\\*/;\nvar hasToStringTag = __webpack_require__(/*! has-tostringtag/shams */ \"../../has-tostringtag/shams.js\")();\nvar getProto = Object.getPrototypeOf;\nvar getGeneratorFunc = function () {\n  // eslint-disable-line consistent-return\n  if (!hasToStringTag) {\n    return false;\n  }\n  try {\n    return Function('return function*() {}')();\n  } catch (e) {}\n};\nvar GeneratorFunction;\nmodule.exports = function isGeneratorFunction(fn) {\n  if (typeof fn !== 'function') {\n    return false;\n  }\n  if (isFnRegex.test(fnToStr.call(fn))) {\n    return true;\n  }\n  if (!hasToStringTag) {\n    var str = toStr.call(fn);\n    return str === '[object GeneratorFunction]';\n  }\n  if (!getProto) {\n    return false;\n  }\n  if (typeof GeneratorFunction === 'undefined') {\n    var generatorFunc = getGeneratorFunc();\n    GeneratorFunction = generatorFunc ? getProto(generatorFunc) : false;\n  }\n  return getProto(fn) === GeneratorFunction;\n};\n\n//# sourceURL=webpack://my-app/../../is-generator-function/index.js?");

/***/ }),

/***/ "../../is-node-process/lib/index.js":
/*!******************************************!*\
  !*** ../../is-node-process/lib/index.js ***!
  \******************************************/
/***/ ((module) => {

eval("var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n  return to;\n};\nvar __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n  value: true\n}), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  isNodeProcess: () => isNodeProcess\n});\nmodule.exports = __toCommonJS(src_exports);\nfunction isNodeProcess() {\n  if (typeof navigator !== \"undefined\" && navigator.product === \"ReactNative\") {\n    return true;\n  }\n  if (typeof process !== \"undefined\") {\n    const type = process.type;\n    if (type === \"renderer\" || type === \"worker\") {\n      return false;\n    }\n    return !!(process.versions && process.versions.node);\n  }\n  return false;\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (0);\n\n//# sourceURL=webpack://my-app/../../is-node-process/lib/index.js?");

/***/ }),

/***/ "../../is-typed-array/index.js":
/*!*************************************!*\
  !*** ../../is-typed-array/index.js ***!
  \*************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar whichTypedArray = __webpack_require__(/*! which-typed-array */ \"../../which-typed-array/index.js\");\n\n/** @type {import('.')} */\nmodule.exports = function isTypedArray(value) {\n  return !!whichTypedArray(value);\n};\n\n//# sourceURL=webpack://my-app/../../is-typed-array/index.js?");

/***/ }),

/***/ "../../js-levenshtein/index.js":
/*!*************************************!*\
  !*** ../../js-levenshtein/index.js ***!
  \*************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = function () {\n  function _min(d0, d1, d2, bx, ay) {\n    return d0 < d1 || d2 < d1 ? d0 > d2 ? d2 + 1 : d0 + 1 : bx === ay ? d1 : d1 + 1;\n  }\n  return function (a, b) {\n    if (a === b) {\n      return 0;\n    }\n    if (a.length > b.length) {\n      var tmp = a;\n      a = b;\n      b = tmp;\n    }\n    var la = a.length;\n    var lb = b.length;\n    while (la > 0 && a.charCodeAt(la - 1) === b.charCodeAt(lb - 1)) {\n      la--;\n      lb--;\n    }\n    var offset = 0;\n    while (offset < la && a.charCodeAt(offset) === b.charCodeAt(offset)) {\n      offset++;\n    }\n    la -= offset;\n    lb -= offset;\n    if (la === 0 || lb < 3) {\n      return lb;\n    }\n    var x = 0;\n    var y;\n    var d0;\n    var d1;\n    var d2;\n    var d3;\n    var dd;\n    var dy;\n    var ay;\n    var bx0;\n    var bx1;\n    var bx2;\n    var bx3;\n    var vector = [];\n    for (y = 0; y < la; y++) {\n      vector.push(y + 1);\n      vector.push(a.charCodeAt(offset + y));\n    }\n    var len = vector.length - 1;\n    for (; x < lb - 3;) {\n      bx0 = b.charCodeAt(offset + (d0 = x));\n      bx1 = b.charCodeAt(offset + (d1 = x + 1));\n      bx2 = b.charCodeAt(offset + (d2 = x + 2));\n      bx3 = b.charCodeAt(offset + (d3 = x + 3));\n      dd = x += 4;\n      for (y = 0; y < len; y += 2) {\n        dy = vector[y];\n        ay = vector[y + 1];\n        d0 = _min(dy, d0, d1, bx0, ay);\n        d1 = _min(d0, d1, d2, bx1, ay);\n        d2 = _min(d1, d2, d3, bx2, ay);\n        dd = _min(d2, d3, dd, bx3, ay);\n        vector[y] = dd;\n        d3 = d2;\n        d2 = d1;\n        d1 = d0;\n        d0 = dy;\n      }\n    }\n    for (; x < lb;) {\n      bx0 = b.charCodeAt(offset + (d0 = x));\n      dd = ++x;\n      for (y = 0; y < len; y += 2) {\n        dy = vector[y];\n        vector[y] = dd = _min(dy, d0, dd, bx0, vector[y + 1]);\n        d0 = dy;\n      }\n    }\n    return dd;\n  };\n}();\n\n//# sourceURL=webpack://my-app/../../js-levenshtein/index.js?");

/***/ }),

/***/ "../../ms/index.js":
/*!*************************!*\
  !*** ../../ms/index.js ***!
  \*************************/
/***/ ((module) => {

eval("/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error('val is not a non-empty string or a valid number. val=' + JSON.stringify(val));\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(str);\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n\n//# sourceURL=webpack://my-app/../../ms/index.js?");

/***/ }),

/***/ "../../msw/lib/index.js":
/*!******************************!*\
  !*** ../../msw/lib/index.js ***!
  \******************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", {\n  value: mod,\n  enumerable: true\n}) : target, mod));\nvar __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n  value: true\n}), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  GraphQLHandler: () => GraphQLHandler,\n  MockedRequest: () => MockedRequest,\n  RESTMethods: () => RESTMethods,\n  RequestHandler: () => RequestHandler,\n  RestHandler: () => RestHandler,\n  SetupApi: () => SetupApi,\n  SetupWorkerApi: () => SetupWorkerApi,\n  cleanUrl: () => cleanUrl,\n  compose: () => compose,\n  context: () => context_exports,\n  createResponseComposition: () => createResponseComposition,\n  defaultContext: () => defaultContext,\n  defaultResponse: () => defaultResponse,\n  graphql: () => graphql,\n  graphqlContext: () => graphqlContext,\n  handleRequest: () => handleRequest,\n  matchRequestUrl: () => matchRequestUrl,\n  response: () => response,\n  rest: () => rest,\n  restContext: () => restContext,\n  setupWorker: () => setupWorker\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/context/index.ts\nvar context_exports = {};\n__export(context_exports, {\n  body: () => body,\n  cookie: () => cookie,\n  data: () => data,\n  delay: () => delay,\n  errors: () => errors,\n  extensions: () => extensions,\n  fetch: () => fetch,\n  json: () => json,\n  set: () => set,\n  status: () => status,\n  text: () => text,\n  xml: () => xml\n});\n\n// node_modules/.pnpm/statuses@2.0.1/node_modules/statuses/codes.json\nvar codes_default = {\n  \"100\": \"Continue\",\n  \"101\": \"Switching Protocols\",\n  \"102\": \"Processing\",\n  \"103\": \"Early Hints\",\n  \"200\": \"OK\",\n  \"201\": \"Created\",\n  \"202\": \"Accepted\",\n  \"203\": \"Non-Authoritative Information\",\n  \"204\": \"No Content\",\n  \"205\": \"Reset Content\",\n  \"206\": \"Partial Content\",\n  \"207\": \"Multi-Status\",\n  \"208\": \"Already Reported\",\n  \"226\": \"IM Used\",\n  \"300\": \"Multiple Choices\",\n  \"301\": \"Moved Permanently\",\n  \"302\": \"Found\",\n  \"303\": \"See Other\",\n  \"304\": \"Not Modified\",\n  \"305\": \"Use Proxy\",\n  \"307\": \"Temporary Redirect\",\n  \"308\": \"Permanent Redirect\",\n  \"400\": \"Bad Request\",\n  \"401\": \"Unauthorized\",\n  \"402\": \"Payment Required\",\n  \"403\": \"Forbidden\",\n  \"404\": \"Not Found\",\n  \"405\": \"Method Not Allowed\",\n  \"406\": \"Not Acceptable\",\n  \"407\": \"Proxy Authentication Required\",\n  \"408\": \"Request Timeout\",\n  \"409\": \"Conflict\",\n  \"410\": \"Gone\",\n  \"411\": \"Length Required\",\n  \"412\": \"Precondition Failed\",\n  \"413\": \"Payload Too Large\",\n  \"414\": \"URI Too Long\",\n  \"415\": \"Unsupported Media Type\",\n  \"416\": \"Range Not Satisfiable\",\n  \"417\": \"Expectation Failed\",\n  \"418\": \"I'm a Teapot\",\n  \"421\": \"Misdirected Request\",\n  \"422\": \"Unprocessable Entity\",\n  \"423\": \"Locked\",\n  \"424\": \"Failed Dependency\",\n  \"425\": \"Too Early\",\n  \"426\": \"Upgrade Required\",\n  \"428\": \"Precondition Required\",\n  \"429\": \"Too Many Requests\",\n  \"431\": \"Request Header Fields Too Large\",\n  \"451\": \"Unavailable For Legal Reasons\",\n  \"500\": \"Internal Server Error\",\n  \"501\": \"Not Implemented\",\n  \"502\": \"Bad Gateway\",\n  \"503\": \"Service Unavailable\",\n  \"504\": \"Gateway Timeout\",\n  \"505\": \"HTTP Version Not Supported\",\n  \"506\": \"Variant Also Negotiates\",\n  \"507\": \"Insufficient Storage\",\n  \"508\": \"Loop Detected\",\n  \"509\": \"Bandwidth Limit Exceeded\",\n  \"510\": \"Not Extended\",\n  \"511\": \"Network Authentication Required\"\n};\n\n// src/context/status.ts\nvar status = (statusCode, statusText) => {\n  return res => {\n    res.status = statusCode;\n    res.statusText = statusText || codes_default[String(statusCode)];\n    return res;\n  };\n};\n\n// src/context/set.ts\nvar import_headers_polyfill = __webpack_require__(/*! headers-polyfill */ \"../../headers-polyfill/lib/index.js\");\nfunction set(...args) {\n  return res => {\n    const [name, value] = args;\n    if (typeof name === \"string\") {\n      res.headers.append(name, value);\n    } else {\n      const headers = (0, import_headers_polyfill.objectToHeaders)(name);\n      headers.forEach((value2, name2) => {\n        res.headers.append(name2, value2);\n      });\n    }\n    return res;\n  };\n}\n\n// src/context/cookie.ts\nvar cookieUtils = __toESM(__webpack_require__(/*! cookie */ \"../../msw/node_modules/cookie/index.js\"));\nvar cookie = (name, value, options) => {\n  return res => {\n    const serializedCookie = cookieUtils.serialize(name, value, options);\n    res.headers.append(\"Set-Cookie\", serializedCookie);\n    if (typeof document !== \"undefined\") {\n      document.cookie = serializedCookie;\n    }\n    return res;\n  };\n};\n\n// src/context/body.ts\nvar body = value => {\n  return res => {\n    res.body = value;\n    return res;\n  };\n};\n\n// src/utils/internal/jsonParse.ts\nfunction jsonParse(value) {\n  try {\n    return JSON.parse(value);\n  } catch (error2) {\n    return void 0;\n  }\n}\n\n// src/utils/internal/isObject.ts\nfunction isObject(value) {\n  return value != null && typeof value === \"object\" && !Array.isArray(value);\n}\n\n// src/utils/internal/mergeRight.ts\nfunction mergeRight(left, right) {\n  return Object.entries(right).reduce((result, [key, rightValue]) => {\n    const leftValue = result[key];\n    if (Array.isArray(leftValue) && Array.isArray(rightValue)) {\n      result[key] = leftValue.concat(rightValue);\n      return result;\n    }\n    if (isObject(leftValue) && isObject(rightValue)) {\n      result[key] = mergeRight(leftValue, rightValue);\n      return result;\n    }\n    result[key] = rightValue;\n    return result;\n  }, Object.assign({}, left));\n}\n\n// src/context/json.ts\nvar json = body2 => {\n  return res => {\n    res.headers.set(\"Content-Type\", \"application/json\");\n    res.body = JSON.stringify(body2);\n    return res;\n  };\n};\n\n// src/context/data.ts\nvar data = payload => {\n  return res => {\n    const prevBody = jsonParse(res.body) || {};\n    const nextBody = mergeRight(prevBody, {\n      data: payload\n    });\n    return json(nextBody)(res);\n  };\n};\n\n// src/context/extensions.ts\nvar extensions = payload => {\n  return res => {\n    const prevBody = jsonParse(res.body) || {};\n    const nextBody = mergeRight(prevBody, {\n      extensions: payload\n    });\n    return json(nextBody)(res);\n  };\n};\n\n// src/context/delay.ts\nvar import_is_node_process = __webpack_require__(/*! is-node-process */ \"../../is-node-process/lib/index.js\");\nvar SET_TIMEOUT_MAX_ALLOWED_INT = 2147483647;\nvar MIN_SERVER_RESPONSE_TIME = 100;\nvar MAX_SERVER_RESPONSE_TIME = 400;\nvar NODE_SERVER_RESPONSE_TIME = 5;\nvar getRandomServerResponseTime = () => {\n  if ((0, import_is_node_process.isNodeProcess)()) {\n    return NODE_SERVER_RESPONSE_TIME;\n  }\n  return Math.floor(Math.random() * (MAX_SERVER_RESPONSE_TIME - MIN_SERVER_RESPONSE_TIME) + MIN_SERVER_RESPONSE_TIME);\n};\nvar delay = durationOrMode => {\n  return res => {\n    let delayTime;\n    if (typeof durationOrMode === \"string\") {\n      switch (durationOrMode) {\n        case \"infinite\":\n          {\n            delayTime = SET_TIMEOUT_MAX_ALLOWED_INT;\n            break;\n          }\n        case \"real\":\n          {\n            delayTime = getRandomServerResponseTime();\n            break;\n          }\n        default:\n          {\n            throw new Error(`Failed to delay a response: unknown delay mode \"${durationOrMode}\". Please make sure you provide one of the supported modes (\"real\", \"infinite\") or a number to \"ctx.delay\".`);\n          }\n      }\n    } else if (typeof durationOrMode === \"undefined\") {\n      delayTime = getRandomServerResponseTime();\n    } else {\n      if (durationOrMode > SET_TIMEOUT_MAX_ALLOWED_INT) {\n        throw new Error(`Failed to delay a response: provided delay duration (${durationOrMode}) exceeds the maximum allowed duration for \"setTimeout\" (${SET_TIMEOUT_MAX_ALLOWED_INT}). This will cause the response to be returned immediately. Please use a number within the allowed range to delay the response by exact duration, or consider the \"infinite\" delay mode to delay the response indefinitely.`);\n      }\n      delayTime = durationOrMode;\n    }\n    res.delay = delayTime;\n    return res;\n  };\n};\n\n// src/context/errors.ts\nvar errors = errorsList => {\n  return res => {\n    if (errorsList == null) {\n      return res;\n    }\n    const prevBody = jsonParse(res.body) || {};\n    const nextBody = mergeRight(prevBody, {\n      errors: errorsList\n    });\n    return json(nextBody)(res);\n  };\n};\n\n// src/context/fetch.ts\nvar import_is_node_process2 = __webpack_require__(/*! is-node-process */ \"../../is-node-process/lib/index.js\");\nvar import_headers_polyfill2 = __webpack_require__(/*! headers-polyfill */ \"../../headers-polyfill/lib/index.js\");\nvar useFetch = (0, import_is_node_process2.isNodeProcess)() ? (input, init) => Promise.resolve().then(() => __toESM(__webpack_require__(/*! node-fetch */ \"../../node-fetch/browser.js\"))).then(({\n  default: nodeFetch\n}) => nodeFetch(input, init)) : globalThis.fetch;\nvar augmentRequestInit = requestInit => {\n  const headers = new import_headers_polyfill2.Headers(requestInit.headers);\n  headers.set(\"x-msw-bypass\", \"true\");\n  return {\n    ...requestInit,\n    headers: headers.all()\n  };\n};\nvar createFetchRequestParameters = input => {\n  const {\n    body: body2,\n    method\n  } = input;\n  const requestParameters = {\n    ...input,\n    body: void 0\n  };\n  if ([\"GET\", \"HEAD\"].includes(method)) {\n    return requestParameters;\n  }\n  if (typeof body2 === \"object\" || typeof body2 === \"number\" || typeof body2 === \"boolean\") {\n    requestParameters.body = JSON.stringify(body2);\n  } else {\n    requestParameters.body = body2;\n  }\n  return requestParameters;\n};\nvar fetch = (input, requestInit = {}) => {\n  if (typeof input === \"string\") {\n    return useFetch(input, augmentRequestInit(requestInit));\n  }\n  const requestParameters = createFetchRequestParameters(input);\n  const derivedRequestInit = augmentRequestInit(requestParameters);\n  return useFetch(input.url.href, derivedRequestInit);\n};\n\n// src/context/text.ts\nvar text = body2 => {\n  return res => {\n    res.headers.set(\"Content-Type\", \"text/plain\");\n    res.body = body2;\n    return res;\n  };\n};\n\n// src/context/xml.ts\nvar xml = body2 => {\n  return res => {\n    res.headers.set(\"Content-Type\", \"text/xml\");\n    res.body = body2;\n    return res;\n  };\n};\n\n// src/utils/internal/checkGlobals.ts\nvar import_outvariant2 = __webpack_require__(/*! outvariant */ \"../../outvariant/lib/index.js\");\n\n// src/utils/internal/devUtils.ts\nvar import_outvariant = __webpack_require__(/*! outvariant */ \"../../outvariant/lib/index.js\");\nvar LIBRARY_PREFIX = \"[MSW]\";\nfunction formatMessage(message, ...positionals) {\n  const interpolatedMessage = (0, import_outvariant.format)(message, ...positionals);\n  return `${LIBRARY_PREFIX} ${interpolatedMessage}`;\n}\nfunction warn(message, ...positionals) {\n  console.warn(formatMessage(message, ...positionals));\n}\nfunction error(message, ...positionals) {\n  console.error(formatMessage(message, ...positionals));\n}\nvar devUtils = {\n  formatMessage,\n  warn,\n  error\n};\n\n// src/utils/internal/checkGlobals.ts\nfunction checkGlobals() {\n  (0, import_outvariant2.invariant)(typeof URL !== \"undefined\", devUtils.formatMessage(`Global \"URL\" class is not defined. This likely means that you're running MSW in an environment that doesn't support all Node.js standard API (e.g. React Native). If that's the case, please use an appropriate polyfill for the \"URL\" class, like \"react-native-url-polyfill\".`));\n}\n\n// src/setupWorker/setupWorker.ts\nvar import_outvariant5 = __webpack_require__(/*! outvariant */ \"../../outvariant/lib/index.js\");\nvar import_is_node_process3 = __webpack_require__(/*! is-node-process */ \"../../is-node-process/lib/index.js\");\n\n// src/setupWorker/start/createStartHandler.ts\nvar import_until4 = __webpack_require__(/*! @open-draft/until */ \"../../@open-draft/until/lib/index.js\");\n\n// src/setupWorker/start/utils/getWorkerInstance.ts\nvar import_until = __webpack_require__(/*! @open-draft/until */ \"../../@open-draft/until/lib/index.js\");\n\n// src/setupWorker/start/utils/getWorkerByRegistration.ts\nfunction getWorkerByRegistration(registration, absoluteWorkerUrl, findWorker) {\n  const allStates = [registration.active, registration.installing, registration.waiting];\n  const relevantStates = allStates.filter(state => {\n    return state != null;\n  });\n  const worker = relevantStates.find(worker2 => {\n    return findWorker(worker2.scriptURL, absoluteWorkerUrl);\n  });\n  return worker || null;\n}\n\n// src/utils/url/getAbsoluteWorkerUrl.ts\nfunction getAbsoluteWorkerUrl(workerUrl) {\n  return new URL(workerUrl, location.href).href;\n}\n\n// src/setupWorker/start/utils/getWorkerInstance.ts\nvar getWorkerInstance = async (url, options = {}, findWorker) => {\n  const absoluteWorkerUrl = getAbsoluteWorkerUrl(url);\n  const mockRegistrations = await navigator.serviceWorker.getRegistrations().then(registrations => registrations.filter(registration => getWorkerByRegistration(registration, absoluteWorkerUrl, findWorker)));\n  if (!navigator.serviceWorker.controller && mockRegistrations.length > 0) {\n    location.reload();\n  }\n  const [existingRegistration] = mockRegistrations;\n  if (existingRegistration) {\n    return existingRegistration.update().then(() => {\n      return [getWorkerByRegistration(existingRegistration, absoluteWorkerUrl, findWorker), existingRegistration];\n    });\n  }\n  const [error2, instance] = await (0, import_until.until)(async () => {\n    const registration = await navigator.serviceWorker.register(url, options);\n    return [getWorkerByRegistration(registration, absoluteWorkerUrl, findWorker), registration];\n  });\n  if (error2) {\n    const isWorkerMissing = error2.message.includes(\"(404)\");\n    if (isWorkerMissing) {\n      const scopeUrl = new URL((options == null ? void 0 : options.scope) || \"/\", location.href);\n      throw new Error(devUtils.formatMessage(`Failed to register a Service Worker for scope ('${scopeUrl.href}') with script ('${absoluteWorkerUrl}'): Service Worker script does not exist at the given path.\n\nDid you forget to run \"npx msw init <PUBLIC_DIR>\"?\n\nLearn more about creating the Service Worker script: https://mswjs.io/docs/cli/init`));\n    }\n    throw new Error(devUtils.formatMessage(\"Failed to register the Service Worker:\\n\\n%s\", error2.message));\n  }\n  return instance;\n};\n\n// src/setupWorker/start/utils/printStartMessage.ts\nfunction printStartMessage(args = {}) {\n  if (args.quiet) {\n    return;\n  }\n  const message = args.message || \"Mocking enabled.\";\n  console.groupCollapsed(`%c${devUtils.formatMessage(message)}`, \"color:orangered;font-weight:bold;\");\n  console.log(\"%cDocumentation: %chttps://mswjs.io/docs\", \"font-weight:bold\", \"font-weight:normal\");\n  console.log(\"Found an issue? https://github.com/mswjs/msw/issues\");\n  if (args.workerUrl) {\n    console.log(\"Worker script URL:\", args.workerUrl);\n  }\n  if (args.workerScope) {\n    console.log(\"Worker scope:\", args.workerScope);\n  }\n  console.groupEnd();\n}\n\n// src/setupWorker/start/utils/enableMocking.ts\nasync function enableMocking(context, options) {\n  var _a, _b;\n  context.workerChannel.send(\"MOCK_ACTIVATE\");\n  await context.events.once(\"MOCKING_ENABLED\");\n  if (context.isMockingEnabled) {\n    devUtils.warn(`Found a redundant \"worker.start()\" call. Note that starting the worker while mocking is already enabled will have no effect. Consider removing this \"worker.start()\" call.`);\n    return;\n  }\n  context.isMockingEnabled = true;\n  printStartMessage({\n    quiet: options.quiet,\n    workerScope: (_a = context.registration) == null ? void 0 : _a.scope,\n    workerUrl: (_b = context.worker) == null ? void 0 : _b.scriptURL\n  });\n}\n\n// src/setupWorker/start/utils/createMessageChannel.ts\nvar WorkerChannel = class {\n  constructor(port) {\n    this.port = port;\n  }\n  postMessage(event, ...rest2) {\n    const [data2, transfer] = rest2;\n    this.port.postMessage({\n      type: event,\n      data: data2\n    }, {\n      transfer\n    });\n  }\n};\n\n// src/utils/NetworkError.ts\nvar NetworkError = class extends Error {\n  constructor(message) {\n    super(message);\n    this.name = \"NetworkError\";\n  }\n};\n\n// src/utils/request/parseWorkerRequest.ts\nvar import_interceptors2 = __webpack_require__(/*! @mswjs/interceptors */ \"../../@mswjs/interceptors/lib/index.js\");\nvar import_headers_polyfill5 = __webpack_require__(/*! headers-polyfill */ \"../../headers-polyfill/lib/index.js\");\n\n// src/utils/request/MockedRequest.ts\nvar cookieUtils3 = __toESM(__webpack_require__(/*! cookie */ \"../../msw/node_modules/cookie/index.js\"));\nvar import_cookies = __webpack_require__(/*! @mswjs/cookies */ \"../../@mswjs/cookies/lib/index.js\");\nvar import_interceptors = __webpack_require__(/*! @mswjs/interceptors */ \"../../@mswjs/interceptors/lib/index.js\");\nvar import_bufferUtils = __webpack_require__(/*! @mswjs/interceptors/lib/utils/bufferUtils.js */ \"../../@mswjs/interceptors/lib/utils/bufferUtils.js\");\nvar import_headers_polyfill4 = __webpack_require__(/*! headers-polyfill */ \"../../headers-polyfill/lib/index.js\");\n\n// src/utils/request/getRequestCookies.ts\nvar cookieUtils2 = __toESM(__webpack_require__(/*! cookie */ \"../../msw/node_modules/cookie/index.js\"));\nfunction getAllCookies() {\n  return cookieUtils2.parse(document.cookie);\n}\nfunction getRequestCookies(request) {\n  if (typeof document === \"undefined\" || typeof location === \"undefined\") {\n    return {};\n  }\n  switch (request.credentials) {\n    case \"same-origin\":\n      {\n        return location.origin === request.url.origin ? getAllCookies() : {};\n      }\n    case \"include\":\n      {\n        return getAllCookies();\n      }\n    default:\n      {\n        return {};\n      }\n  }\n}\n\n// src/utils/internal/parseMultipartData.ts\nvar import_headers_polyfill3 = __webpack_require__(/*! headers-polyfill */ \"../../headers-polyfill/lib/index.js\");\nfunction parseContentHeaders(headersString) {\n  var _a, _b;\n  const headers = (0, import_headers_polyfill3.stringToHeaders)(headersString);\n  const contentType = headers.get(\"content-type\") || \"text/plain\";\n  const disposition = headers.get(\"content-disposition\");\n  if (!disposition) {\n    throw new Error('\"Content-Disposition\" header is required.');\n  }\n  const directives = disposition.split(\";\").reduce((acc, chunk) => {\n    const [name2, ...rest2] = chunk.trim().split(\"=\");\n    acc[name2] = rest2.join(\"=\");\n    return acc;\n  }, {});\n  const name = (_a = directives.name) == null ? void 0 : _a.slice(1, -1);\n  const filename = (_b = directives.filename) == null ? void 0 : _b.slice(1, -1);\n  return {\n    name,\n    filename,\n    contentType\n  };\n}\nfunction parseMultipartData(data2, headers) {\n  const contentType = headers == null ? void 0 : headers.get(\"content-type\");\n  if (!contentType) {\n    return void 0;\n  }\n  const [, ...directives] = contentType.split(/; */);\n  const boundary = directives.filter(d => d.startsWith(\"boundary=\")).map(s => s.replace(/^boundary=/, \"\"))[0];\n  if (!boundary) {\n    return void 0;\n  }\n  const boundaryRegExp = new RegExp(`--+${boundary}`);\n  const fields = data2.split(boundaryRegExp).filter(chunk => chunk.startsWith(\"\\r\\n\") && chunk.endsWith(\"\\r\\n\")).map(chunk => chunk.trimStart().replace(/\\r\\n$/, \"\"));\n  if (!fields.length) {\n    return void 0;\n  }\n  const parsedBody = {};\n  try {\n    for (const field2 of fields) {\n      const [contentHeaders, ...rest2] = field2.split(\"\\r\\n\\r\\n\");\n      const contentBody = rest2.join(\"\\r\\n\\r\\n\");\n      const {\n        contentType: contentType2,\n        filename,\n        name\n      } = parseContentHeaders(contentHeaders);\n      const value = filename === void 0 ? contentBody : new File([contentBody], filename, {\n        type: contentType2\n      });\n      const parsedValue = parsedBody[name];\n      if (parsedValue === void 0) {\n        parsedBody[name] = value;\n      } else if (Array.isArray(parsedValue)) {\n        parsedBody[name] = [...parsedValue, value];\n      } else {\n        parsedBody[name] = [parsedValue, value];\n      }\n    }\n    return parsedBody;\n  } catch (error2) {\n    return void 0;\n  }\n}\n\n// src/utils/request/parseBody.ts\nfunction parseBody(body2, headers) {\n  var _a;\n  if (!body2) {\n    return body2;\n  }\n  const contentType = ((_a = headers == null ? void 0 : headers.get(\"content-type\")) == null ? void 0 : _a.toLowerCase()) || \"\";\n  const hasMultipartContent = contentType.startsWith(\"multipart/form-data\");\n  if (hasMultipartContent && typeof body2 !== \"object\") {\n    return parseMultipartData(body2.toString(), headers) || body2;\n  }\n  const hasJsonContent = contentType.includes(\"json\");\n  if (hasJsonContent && typeof body2 !== \"object\") {\n    return jsonParse(body2.toString()) || body2;\n  }\n  return body2;\n}\n\n// src/utils/internal/isStringEqual.ts\nfunction isStringEqual(actual, expected) {\n  return actual.toLowerCase() === expected.toLowerCase();\n}\n\n// src/utils/request/MockedRequest.ts\nvar MockedRequest = class extends import_interceptors.IsomorphicRequest {\n  constructor(url, init = {}) {\n    super(url, init);\n    if (init.id) {\n      this.id = init.id;\n    }\n    this.cache = init.cache || \"default\";\n    this.destination = init.destination || \"\";\n    this.integrity = init.integrity || \"\";\n    this.keepalive = init.keepalive || false;\n    this.mode = init.mode || \"cors\";\n    this.priority = init.priority || \"auto\";\n    this.redirect = init.redirect || \"follow\";\n    this.referrer = init.referrer || \"\";\n    this.referrerPolicy = init.referrerPolicy || \"no-referrer\";\n    this.cookies = init.cookies || this.getCookies();\n  }\n  get body() {\n    const text2 = (0, import_bufferUtils.decodeBuffer)(this[\"_body\"]);\n    const body2 = parseBody(text2, this.headers);\n    if (isStringEqual(this.method, \"GET\") && body2 === \"\") {\n      return void 0;\n    }\n    return body2;\n  }\n  passthrough() {\n    return {\n      status: 101,\n      statusText: \"Continue\",\n      headers: new import_headers_polyfill4.Headers(),\n      body: null,\n      passthrough: true,\n      once: false\n    };\n  }\n  getCookies() {\n    var _a;\n    const requestCookiesString = this.headers.get(\"cookie\");\n    const ownCookies = requestCookiesString ? cookieUtils3.parse(requestCookiesString) : {};\n    import_cookies.store.hydrate();\n    const cookiesFromStore = Array.from((_a = import_cookies.store.get({\n      ...this,\n      url: this.url.href\n    })) == null ? void 0 : _a.entries()).reduce((cookies, [name, {\n      value\n    }]) => {\n      return Object.assign(cookies, {\n        [name.trim()]: value\n      });\n    }, {});\n    const cookiesFromDocument = getRequestCookies(this);\n    const forwardedCookies = {\n      ...cookiesFromDocument,\n      ...cookiesFromStore\n    };\n    for (const [name, value] of Object.entries(forwardedCookies)) {\n      this.headers.append(\"cookie\", `${name}=${value}`);\n    }\n    return {\n      ...forwardedCookies,\n      ...ownCookies\n    };\n  }\n};\n\n// src/utils/request/parseWorkerRequest.ts\nfunction parseWorkerRequest(rawRequest) {\n  const url = new URL(rawRequest.url);\n  const headers = new import_headers_polyfill5.Headers(rawRequest.headers);\n  return new MockedRequest(url, {\n    ...rawRequest,\n    body: (0, import_interceptors2.encodeBuffer)(rawRequest.body || \"\"),\n    headers\n  });\n}\n\n// src/utils/handleRequest.ts\nvar import_until2 = __webpack_require__(/*! @open-draft/until */ \"../../@open-draft/until/lib/index.js\");\n\n// src/utils/getResponse.ts\nvar getResponse = async (request, handlers, resolutionContext) => {\n  const relevantHandlers = handlers.filter(handler => {\n    return handler.test(request, resolutionContext);\n  });\n  if (relevantHandlers.length === 0) {\n    return {\n      handler: void 0,\n      response: void 0\n    };\n  }\n  const result = await relevantHandlers.reduce(async (executionResult, handler) => {\n    const previousResults = await executionResult;\n    if (!!(previousResults == null ? void 0 : previousResults.response)) {\n      return executionResult;\n    }\n    const result2 = await handler.run(request, resolutionContext);\n    if (result2 === null || result2.handler.shouldSkip) {\n      return null;\n    }\n    if (!result2.response) {\n      return {\n        request: result2.request,\n        handler: result2.handler,\n        response: void 0,\n        parsedResult: result2.parsedResult\n      };\n    }\n    if (result2.response.once) {\n      handler.markAsSkipped(true);\n    }\n    return result2;\n  }, Promise.resolve(null));\n  if (!result) {\n    return {\n      handler: void 0,\n      response: void 0\n    };\n  }\n  return {\n    handler: result.handler,\n    publicRequest: result.request,\n    parsedRequest: result.parsedResult,\n    response: result.response\n  };\n};\n\n// src/utils/request/onUnhandledRequest.ts\nvar import_js_levenshtein = __toESM(__webpack_require__(/*! js-levenshtein */ \"../../js-levenshtein/index.js\"));\n\n// src/utils/internal/parseGraphQLRequest.ts\nvar import_graphql = __webpack_require__(/*! graphql */ \"../../graphql/index.mjs\");\n\n// src/utils/request/getPublicUrlFromRequest.ts\nvar getPublicUrlFromRequest = request => {\n  return request.referrer.startsWith(request.url.origin) ? request.url.pathname : new URL(request.url.pathname, `${request.url.protocol}//${request.url.host}`).href;\n};\n\n// src/utils/internal/parseGraphQLRequest.ts\nfunction parseDocumentNode(node) {\n  var _a;\n  const operationDef = node.definitions.find(def => {\n    return def.kind === \"OperationDefinition\";\n  });\n  return {\n    operationType: operationDef == null ? void 0 : operationDef.operation,\n    operationName: (_a = operationDef == null ? void 0 : operationDef.name) == null ? void 0 : _a.value\n  };\n}\nfunction parseQuery(query) {\n  try {\n    const ast = (0, import_graphql.parse)(query);\n    return parseDocumentNode(ast);\n  } catch (error2) {\n    return error2;\n  }\n}\nfunction extractMultipartVariables(variables, map, files) {\n  const operations = {\n    variables\n  };\n  for (const [key, pathArray] of Object.entries(map)) {\n    if (!(key in files)) {\n      throw new Error(`Given files do not have a key '${key}' .`);\n    }\n    for (const dotPath of pathArray) {\n      const [lastPath, ...reversedPaths] = dotPath.split(\".\").reverse();\n      const paths = reversedPaths.reverse();\n      let target = operations;\n      for (const path of paths) {\n        if (!(path in target)) {\n          throw new Error(`Property '${paths}' is not in operations.`);\n        }\n        target = target[path];\n      }\n      target[lastPath] = files[key];\n    }\n  }\n  return operations.variables;\n}\nfunction getGraphQLInput(request) {\n  var _a, _b;\n  switch (request.method) {\n    case \"GET\":\n      {\n        const query = request.url.searchParams.get(\"query\");\n        const variables = request.url.searchParams.get(\"variables\") || \"\";\n        return {\n          query,\n          variables: jsonParse(variables)\n        };\n      }\n    case \"POST\":\n      {\n        if ((_a = request.body) == null ? void 0 : _a.query) {\n          const {\n            query,\n            variables\n          } = request.body;\n          return {\n            query,\n            variables\n          };\n        }\n        if ((_b = request.body) == null ? void 0 : _b.operations) {\n          const {\n            operations,\n            map,\n            ...files\n          } = request.body;\n          const parsedOperations = jsonParse(operations) || {};\n          if (!parsedOperations.query) {\n            return null;\n          }\n          const parsedMap = jsonParse(map || \"\") || {};\n          const variables = parsedOperations.variables ? extractMultipartVariables(parsedOperations.variables, parsedMap, files) : {};\n          return {\n            query: parsedOperations.query,\n            variables\n          };\n        }\n      }\n    default:\n      return null;\n  }\n}\nfunction parseGraphQLRequest(request) {\n  const input = getGraphQLInput(request);\n  if (!input || !input.query) {\n    return void 0;\n  }\n  const {\n    query,\n    variables\n  } = input;\n  const parsedResult = parseQuery(query);\n  if (parsedResult instanceof Error) {\n    const requestPublicUrl = getPublicUrlFromRequest(request);\n    throw new Error(devUtils.formatMessage('Failed to intercept a GraphQL request to \"%s %s\": cannot parse query. See the error message from the parser below.\\n\\n%s', request.method, requestPublicUrl, parsedResult.message));\n  }\n  return {\n    operationType: parsedResult.operationType,\n    operationName: parsedResult.operationName,\n    variables\n  };\n}\n\n// src/utils/logging/getStatusCodeColor.ts\nfunction getStatusCodeColor(status2) {\n  if (status2 < 300) {\n    return \"#69AB32\" /* Success */;\n  }\n  if (status2 < 400) {\n    return \"#F0BB4B\" /* Warning */;\n  }\n  return \"#E95F5D\" /* Danger */;\n}\n\n// src/utils/logging/getTimestamp.ts\nfunction getTimestamp() {\n  const now = new Date();\n  return [now.getHours(), now.getMinutes(), now.getSeconds()].map(String).map(chunk => chunk.slice(0, 2)).map(chunk => chunk.padStart(2, \"0\")).join(\":\");\n}\n\n// src/utils/logging/prepareRequest.ts\nfunction prepareRequest(request) {\n  return {\n    ...request,\n    body: request.body,\n    headers: request.headers.all()\n  };\n}\n\n// src/utils/logging/prepareResponse.ts\nvar import_headers_polyfill6 = __webpack_require__(/*! headers-polyfill */ \"../../headers-polyfill/lib/index.js\");\nfunction prepareResponse(res) {\n  const responseHeaders = (0, import_headers_polyfill6.objectToHeaders)(res.headers);\n  const parsedBody = parseBody(res.body, responseHeaders);\n  return {\n    ...res,\n    body: parsedBody\n  };\n}\n\n// src/utils/matching/matchRequestUrl.ts\nvar import_path_to_regexp = __webpack_require__(/*! path-to-regexp */ \"../../msw/node_modules/path-to-regexp/dist.es2015/index.js\");\nvar import_getCleanUrl = __webpack_require__(/*! @mswjs/interceptors/lib/utils/getCleanUrl.js */ \"../../@mswjs/interceptors/lib/utils/getCleanUrl.js\");\n\n// src/utils/url/cleanUrl.ts\nvar REDUNDANT_CHARACTERS_EXP = /[\\?|#].*$/g;\nfunction getSearchParams(path) {\n  return new URL(`/${path}`, \"http://localhost\").searchParams;\n}\nfunction cleanUrl(path) {\n  return path.replace(REDUNDANT_CHARACTERS_EXP, \"\");\n}\n\n// src/utils/url/isAbsoluteUrl.ts\nfunction isAbsoluteUrl(url) {\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n}\n\n// src/utils/url/getAbsoluteUrl.ts\nfunction getAbsoluteUrl(path, baseUrl) {\n  if (isAbsoluteUrl(path)) {\n    return path;\n  }\n  if (path.startsWith(\"*\")) {\n    return path;\n  }\n  const origin = baseUrl || typeof document !== \"undefined\" && document.baseURI;\n  return origin ? decodeURI(new URL(encodeURI(path), origin).href) : path;\n}\n\n// src/utils/matching/normalizePath.ts\nfunction normalizePath(path, baseUrl) {\n  if (path instanceof RegExp) {\n    return path;\n  }\n  const maybeAbsoluteUrl = getAbsoluteUrl(path, baseUrl);\n  return cleanUrl(maybeAbsoluteUrl);\n}\n\n// src/utils/matching/matchRequestUrl.ts\nfunction coercePath(path) {\n  return path.replace(/([:a-zA-Z_-]*)(\\*{1,2})+/g, (_, parameterName, wildcard) => {\n    const expression = \"(.*)\";\n    if (!parameterName) {\n      return expression;\n    }\n    return parameterName.startsWith(\":\") ? `${parameterName}${wildcard}` : `${parameterName}${expression}`;\n  }).replace(/([^\\/])(:)(?=\\d+)/, \"$1\\\\$2\").replace(/^([^\\/]+)(:)(?=\\/\\/)/, \"$1\\\\$2\");\n}\nfunction matchRequestUrl(url, path, baseUrl) {\n  const normalizedPath = normalizePath(path, baseUrl);\n  const cleanPath = typeof normalizedPath === \"string\" ? coercePath(normalizedPath) : normalizedPath;\n  const cleanUrl2 = (0, import_getCleanUrl.getCleanUrl)(url);\n  const result = (0, import_path_to_regexp.match)(cleanPath, {\n    decode: decodeURIComponent\n  })(cleanUrl2);\n  const params = result && result.params || {};\n  return {\n    matches: result !== false,\n    params\n  };\n}\n\n// src/handlers/RequestHandler.ts\nvar import_headers_polyfill8 = __webpack_require__(/*! headers-polyfill */ \"../../headers-polyfill/lib/index.js\");\n\n// src/response.ts\nvar import_headers_polyfill7 = __webpack_require__(/*! headers-polyfill */ \"../../headers-polyfill/lib/index.js\");\n\n// src/utils/internal/compose.ts\nfunction compose(...fns) {\n  return (...args) => {\n    return fns.reduceRight((leftFn, rightFn) => {\n      return leftFn instanceof Promise ? Promise.resolve(leftFn).then(rightFn) : rightFn(leftFn);\n    }, args[0]);\n  };\n}\n\n// src/response.ts\nvar defaultResponse = {\n  status: 200,\n  statusText: \"OK\",\n  body: null,\n  delay: 0,\n  once: false,\n  passthrough: false\n};\nvar defaultResponseTransformers = [];\nfunction createResponseComposition(responseOverrides, defaultTransformers = defaultResponseTransformers) {\n  return async (...transformers) => {\n    const initialResponse = Object.assign({}, defaultResponse, {\n      headers: new import_headers_polyfill7.Headers({\n        \"x-powered-by\": \"msw\"\n      })\n    }, responseOverrides);\n    const resolvedTransformers = [...defaultTransformers, ...transformers].filter(Boolean);\n    const resolvedResponse = resolvedTransformers.length > 0 ? compose(...resolvedTransformers)(initialResponse) : initialResponse;\n    return resolvedResponse;\n  };\n}\nvar response = Object.assign(createResponseComposition(), {\n  once: createResponseComposition({\n    once: true\n  }),\n  networkError(message) {\n    throw new NetworkError(message);\n  }\n});\n\n// src/utils/internal/getCallFrame.ts\nvar SOURCE_FRAME = /[\\/\\\\]msw[\\/\\\\]src[\\/\\\\](.+)/;\nvar BUILD_FRAME = /(node_modules)?[\\/\\\\]lib[\\/\\\\](umd|esm|iief|cjs)[\\/\\\\]|^[^\\/\\\\]*$/;\nfunction getCallFrame(error2) {\n  const stack = error2.stack;\n  if (!stack) {\n    return;\n  }\n  const frames = stack.split(\"\\n\").slice(1);\n  const declarationFrame = frames.find(frame => {\n    return !(SOURCE_FRAME.test(frame) || BUILD_FRAME.test(frame));\n  });\n  if (!declarationFrame) {\n    return;\n  }\n  const declarationPath = declarationFrame.replace(/\\s*at [^()]*\\(([^)]+)\\)/, \"$1\").replace(/^@/, \"\");\n  return declarationPath;\n}\n\n// src/utils/internal/isIterable.ts\nfunction isIterable(fn) {\n  if (!fn) {\n    return false;\n  }\n  return typeof fn[Symbol.iterator] == \"function\";\n}\n\n// src/handlers/RequestHandler.ts\nvar defaultContext = {\n  status,\n  set,\n  delay,\n  fetch\n};\nvar RequestHandler = class {\n  constructor(options) {\n    this.shouldSkip = false;\n    this.ctx = options.ctx || defaultContext;\n    this.resolver = options.resolver;\n    const callFrame = getCallFrame(new Error());\n    this.info = {\n      ...options.info,\n      callFrame\n    };\n  }\n  parse(_request, _resolutionContext) {\n    return null;\n  }\n  test(request, resolutionContext) {\n    return this.predicate(request, this.parse(request, resolutionContext), resolutionContext);\n  }\n  getPublicRequest(request, _parsedResult) {\n    return request;\n  }\n  markAsSkipped(shouldSkip = true) {\n    this.shouldSkip = shouldSkip;\n  }\n  async run(request, resolutionContext) {\n    if (this.shouldSkip) {\n      return null;\n    }\n    const parsedResult = this.parse(request, resolutionContext);\n    const shouldIntercept = this.predicate(request, parsedResult, resolutionContext);\n    if (!shouldIntercept) {\n      return null;\n    }\n    const publicRequest = this.getPublicRequest(request, parsedResult);\n    const executeResolver = this.wrapResolver(this.resolver);\n    const mockedResponse = await executeResolver(publicRequest, response, this.ctx);\n    return this.createExecutionResult(parsedResult, publicRequest, mockedResponse);\n  }\n  wrapResolver(resolver) {\n    return async (req, res, ctx) => {\n      const result = this.resolverGenerator || (await resolver(req, res, ctx));\n      if (isIterable(result)) {\n        const {\n          value,\n          done\n        } = result[Symbol.iterator]().next();\n        const nextResponse = await value;\n        if (!nextResponse && done) {\n          return this.resolverGeneratorResult;\n        }\n        if (!this.resolverGenerator) {\n          this.resolverGenerator = result;\n        }\n        this.resolverGeneratorResult = nextResponse;\n        return nextResponse;\n      }\n      return result;\n    };\n  }\n  createExecutionResult(parsedResult, request, response2) {\n    return {\n      handler: this,\n      parsedResult: parsedResult || null,\n      request,\n      response: response2 || null\n    };\n  }\n};\n\n// src/handlers/RestHandler.ts\nvar RESTMethods = /* @__PURE__ */(RESTMethods2 => {\n  RESTMethods2[\"HEAD\"] = \"HEAD\";\n  RESTMethods2[\"GET\"] = \"GET\";\n  RESTMethods2[\"POST\"] = \"POST\";\n  RESTMethods2[\"PUT\"] = \"PUT\";\n  RESTMethods2[\"PATCH\"] = \"PATCH\";\n  RESTMethods2[\"OPTIONS\"] = \"OPTIONS\";\n  RESTMethods2[\"DELETE\"] = \"DELETE\";\n  return RESTMethods2;\n})(RESTMethods || {});\nvar restContext = {\n  ...defaultContext,\n  cookie,\n  body,\n  text,\n  json,\n  xml\n};\nvar RestRequest = class extends MockedRequest {\n  constructor(request, params) {\n    super(request.url, {\n      ...request,\n      body: request[\"_body\"]\n    });\n    this.params = params;\n    this.id = request.id;\n  }\n};\nvar RestHandler = class extends RequestHandler {\n  constructor(method, path, resolver) {\n    super({\n      info: {\n        header: `${method} ${path}`,\n        path,\n        method\n      },\n      ctx: restContext,\n      resolver\n    });\n    this.checkRedundantQueryParameters();\n  }\n  checkRedundantQueryParameters() {\n    const {\n      method,\n      path\n    } = this.info;\n    if (path instanceof RegExp) {\n      return;\n    }\n    const url = cleanUrl(path);\n    if (url === path) {\n      return;\n    }\n    const searchParams = getSearchParams(path);\n    const queryParams = [];\n    searchParams.forEach((_, paramName) => {\n      queryParams.push(paramName);\n    });\n    devUtils.warn(`Found a redundant usage of query parameters in the request handler URL for \"${method} ${path}\". Please match against a path instead and access query parameters in the response resolver function using \"req.url.searchParams\".`);\n  }\n  parse(request, resolutionContext) {\n    return matchRequestUrl(request.url, this.info.path, resolutionContext == null ? void 0 : resolutionContext.baseUrl);\n  }\n  getPublicRequest(request, parsedResult) {\n    return new RestRequest(request, parsedResult.params || {});\n  }\n  predicate(request, parsedResult) {\n    const matchesMethod = this.info.method instanceof RegExp ? this.info.method.test(request.method) : isStringEqual(this.info.method, request.method);\n    return matchesMethod && parsedResult.matches;\n  }\n  log(request, response2) {\n    const publicUrl = getPublicUrlFromRequest(request);\n    const loggedRequest = prepareRequest(request);\n    const loggedResponse = prepareResponse(response2);\n    const statusColor = getStatusCodeColor(response2.status);\n    console.groupCollapsed(devUtils.formatMessage(\"%s %s %s (%c%s%c)\"), getTimestamp(), request.method, publicUrl, `color:${statusColor}`, `${response2.status} ${response2.statusText}`, \"color:inherit\");\n    console.log(\"Request\", loggedRequest);\n    console.log(\"Handler:\", this);\n    console.log(\"Response\", loggedResponse);\n    console.groupEnd();\n  }\n};\n\n// src/context/field.ts\nvar import_outvariant3 = __webpack_require__(/*! outvariant */ \"../../outvariant/lib/index.js\");\nvar field = (fieldName, fieldValue) => {\n  return res => {\n    validateFieldName(fieldName);\n    const prevBody = jsonParse(res.body) || {};\n    const nextBody = mergeRight(prevBody, {\n      [fieldName]: fieldValue\n    });\n    return json(nextBody)(res);\n  };\n};\nfunction validateFieldName(fieldName) {\n  (0, import_outvariant3.invariant)(fieldName.trim() !== \"\", devUtils.formatMessage(\"Failed to set a custom field on a GraphQL response: field name cannot be empty.\"));\n  (0, import_outvariant3.invariant)(fieldName !== \"data\", devUtils.formatMessage('Failed to set a custom \"%s\" field on a mocked GraphQL response: forbidden field name. Did you mean to call \"ctx.data()\" instead?', fieldName));\n  (0, import_outvariant3.invariant)(fieldName !== \"errors\", devUtils.formatMessage('Failed to set a custom \"%s\" field on a mocked GraphQL response: forbidden field name. Did you mean to call \"ctx.errors()\" instead?', fieldName));\n  (0, import_outvariant3.invariant)(fieldName !== \"extensions\", devUtils.formatMessage('Failed to set a custom \"%s\" field on a mocked GraphQL response: forbidden field name. Did you mean to call \"ctx.extensions()\" instead?', fieldName));\n}\n\n// src/utils/internal/tryCatch.ts\nfunction tryCatch(fn, onException) {\n  try {\n    const result = fn();\n    return result;\n  } catch (error2) {\n    onException == null ? void 0 : onException(error2);\n  }\n}\n\n// src/handlers/GraphQLHandler.ts\nvar graphqlContext = {\n  ...defaultContext,\n  data,\n  extensions,\n  errors,\n  cookie,\n  field\n};\nfunction isDocumentNode(value) {\n  if (value == null) {\n    return false;\n  }\n  return typeof value === \"object\" && \"kind\" in value && \"definitions\" in value;\n}\nvar GraphQLRequest = class extends MockedRequest {\n  constructor(request, variables, operationName) {\n    super(request.url, {\n      ...request,\n      body: request[\"_body\"]\n    });\n    this.variables = variables;\n    this.operationName = operationName;\n  }\n};\nvar GraphQLHandler = class extends RequestHandler {\n  constructor(operationType, operationName, endpoint, resolver) {\n    let resolvedOperationName = operationName;\n    if (isDocumentNode(operationName)) {\n      const parsedNode = parseDocumentNode(operationName);\n      if (parsedNode.operationType !== operationType) {\n        throw new Error(`Failed to create a GraphQL handler: provided a DocumentNode with a mismatched operation type (expected \"${operationType}\", but got \"${parsedNode.operationType}\").`);\n      }\n      if (!parsedNode.operationName) {\n        throw new Error(`Failed to create a GraphQL handler: provided a DocumentNode with no operation name.`);\n      }\n      resolvedOperationName = parsedNode.operationName;\n    }\n    const header = operationType === \"all\" ? `${operationType} (origin: ${endpoint.toString()})` : `${operationType} ${resolvedOperationName} (origin: ${endpoint.toString()})`;\n    super({\n      info: {\n        header,\n        operationType,\n        operationName: resolvedOperationName\n      },\n      ctx: graphqlContext,\n      resolver\n    });\n    this.endpoint = endpoint;\n  }\n  parse(request) {\n    return tryCatch(() => parseGraphQLRequest(request), error2 => console.error(error2.message));\n  }\n  getPublicRequest(request, parsedResult) {\n    var _a, _b;\n    return new GraphQLRequest(request, (_a = parsedResult == null ? void 0 : parsedResult.variables) != null ? _a : {}, (_b = parsedResult == null ? void 0 : parsedResult.operationName) != null ? _b : \"\");\n  }\n  predicate(request, parsedResult) {\n    if (!parsedResult) {\n      return false;\n    }\n    if (!parsedResult.operationName && this.info.operationType !== \"all\") {\n      const publicUrl = getPublicUrlFromRequest(request);\n      devUtils.warn(`Failed to intercept a GraphQL request at \"${request.method} ${publicUrl}\": anonymous GraphQL operations are not supported.\n\nConsider naming this operation or using \"graphql.operation()\" request handler to intercept GraphQL requests regardless of their operation name/type. Read more: https://mswjs.io/docs/api/graphql/operation      `);\n      return false;\n    }\n    const hasMatchingUrl = matchRequestUrl(request.url, this.endpoint);\n    const hasMatchingOperationType = this.info.operationType === \"all\" || parsedResult.operationType === this.info.operationType;\n    const hasMatchingOperationName = this.info.operationName instanceof RegExp ? this.info.operationName.test(parsedResult.operationName || \"\") : parsedResult.operationName === this.info.operationName;\n    return hasMatchingUrl.matches && hasMatchingOperationType && hasMatchingOperationName;\n  }\n  log(request, response2, parsedRequest) {\n    const loggedRequest = prepareRequest(request);\n    const loggedResponse = prepareResponse(response2);\n    const statusColor = getStatusCodeColor(response2.status);\n    const requestInfo = (parsedRequest == null ? void 0 : parsedRequest.operationName) ? `${parsedRequest == null ? void 0 : parsedRequest.operationType} ${parsedRequest == null ? void 0 : parsedRequest.operationName}` : `anonymous ${parsedRequest == null ? void 0 : parsedRequest.operationType}`;\n    console.groupCollapsed(devUtils.formatMessage(\"%s %s (%c%s%c)\"), getTimestamp(), `${requestInfo}`, `color:${statusColor}`, `${response2.status} ${response2.statusText}`, \"color:inherit\");\n    console.log(\"Request:\", loggedRequest);\n    console.log(\"Handler:\", this);\n    console.log(\"Response:\", loggedResponse);\n    console.groupEnd();\n  }\n};\n\n// src/utils/request/onUnhandledRequest.ts\nvar MAX_MATCH_SCORE = 3;\nvar MAX_SUGGESTION_COUNT = 4;\nvar TYPE_MATCH_DELTA = 0.5;\nfunction groupHandlersByType(handlers) {\n  return handlers.reduce((groups, handler) => {\n    if (handler instanceof RestHandler) {\n      groups.rest.push(handler);\n    }\n    if (handler instanceof GraphQLHandler) {\n      groups.graphql.push(handler);\n    }\n    return groups;\n  }, {\n    rest: [],\n    graphql: []\n  });\n}\nfunction getRestHandlerScore() {\n  return (request, handler) => {\n    const {\n      path,\n      method\n    } = handler.info;\n    if (path instanceof RegExp || method instanceof RegExp) {\n      return Infinity;\n    }\n    const hasSameMethod = isStringEqual(request.method, method);\n    const methodScoreDelta = hasSameMethod ? TYPE_MATCH_DELTA : 0;\n    const requestPublicUrl = getPublicUrlFromRequest(request);\n    const score = (0, import_js_levenshtein.default)(requestPublicUrl, path);\n    return score - methodScoreDelta;\n  };\n}\nfunction getGraphQLHandlerScore(parsedQuery) {\n  return (_, handler) => {\n    if (typeof parsedQuery.operationName === \"undefined\") {\n      return Infinity;\n    }\n    const {\n      operationType,\n      operationName\n    } = handler.info;\n    if (typeof operationName !== \"string\") {\n      return Infinity;\n    }\n    const hasSameOperationType = parsedQuery.operationType === operationType;\n    const operationTypeScoreDelta = hasSameOperationType ? TYPE_MATCH_DELTA : 0;\n    const score = (0, import_js_levenshtein.default)(parsedQuery.operationName, operationName);\n    return score - operationTypeScoreDelta;\n  };\n}\nfunction getSuggestedHandler(request, handlers, getScore) {\n  const suggestedHandlers = handlers.reduce((suggestions, handler) => {\n    const score = getScore(request, handler);\n    return suggestions.concat([[score, handler]]);\n  }, []).sort(([leftScore], [rightScore]) => leftScore - rightScore).filter(([score]) => score <= MAX_MATCH_SCORE).slice(0, MAX_SUGGESTION_COUNT).map(([, handler]) => handler);\n  return suggestedHandlers;\n}\nfunction getSuggestedHandlersMessage(handlers) {\n  if (handlers.length > 1) {\n    return `Did you mean to request one of the following resources instead?\n\n${handlers.map(handler => `  \\u2022 ${handler.info.header}`).join(\"\\n\")}`;\n  }\n  return `Did you mean to request \"${handlers[0].info.header}\" instead?`;\n}\nfunction onUnhandledRequest(request, handlers, strategy = \"warn\") {\n  const parsedGraphQLQuery = tryCatch(() => parseGraphQLRequest(request));\n  function generateHandlerSuggestion() {\n    const handlerGroups = groupHandlersByType(handlers);\n    const relevantHandlers = parsedGraphQLQuery ? handlerGroups.graphql : handlerGroups.rest;\n    const suggestedHandlers = getSuggestedHandler(request, relevantHandlers, parsedGraphQLQuery ? getGraphQLHandlerScore(parsedGraphQLQuery) : getRestHandlerScore());\n    return suggestedHandlers.length > 0 ? getSuggestedHandlersMessage(suggestedHandlers) : \"\";\n  }\n  function generateUnhandledRequestMessage() {\n    const publicUrl = getPublicUrlFromRequest(request);\n    const requestHeader = parsedGraphQLQuery ? `${parsedGraphQLQuery.operationType} ${parsedGraphQLQuery.operationName} (${request.method} ${publicUrl})` : `${request.method} ${publicUrl}`;\n    const handlerSuggestion = generateHandlerSuggestion();\n    const messageTemplate = [`captured a request without a matching request handler:`, `  \\u2022 ${requestHeader}`, handlerSuggestion, `If you still wish to intercept this unhandled request, please create a request handler for it.\nRead more: https://mswjs.io/docs/getting-started/mocks`].filter(Boolean);\n    return messageTemplate.join(\"\\n\\n\");\n  }\n  function applyStrategy(strategy2) {\n    const message = generateUnhandledRequestMessage();\n    switch (strategy2) {\n      case \"error\":\n        {\n          devUtils.error(\"Error: %s\", message);\n          throw new Error(devUtils.formatMessage('Cannot bypass a request when using the \"error\" strategy for the \"onUnhandledRequest\" option.'));\n        }\n      case \"warn\":\n        {\n          devUtils.warn(\"Warning: %s\", message);\n          break;\n        }\n      case \"bypass\":\n        break;\n      default:\n        throw new Error(devUtils.formatMessage('Failed to react to an unhandled request: unknown strategy \"%s\". Please provide one of the supported strategies (\"bypass\", \"warn\", \"error\") or a custom callback function as the value of the \"onUnhandledRequest\" option.', strategy2));\n    }\n  }\n  if (typeof strategy === \"function\") {\n    strategy(request, {\n      warning: applyStrategy.bind(null, \"warn\"),\n      error: applyStrategy.bind(null, \"error\")\n    });\n    return;\n  }\n  applyStrategy(strategy);\n}\n\n// src/utils/request/readResponseCookies.ts\nvar import_cookies2 = __webpack_require__(/*! @mswjs/cookies */ \"../../@mswjs/cookies/lib/index.js\");\nfunction readResponseCookies(request, response2) {\n  import_cookies2.store.add({\n    ...request,\n    url: request.url.toString()\n  }, response2);\n  import_cookies2.store.persist();\n}\n\n// src/utils/handleRequest.ts\nasync function handleRequest(request, handlers, options, emitter, handleRequestOptions) {\n  var _a, _b, _c, _d, _e, _f;\n  emitter.emit(\"request:start\", request);\n  if (request.headers.get(\"x-msw-bypass\") === \"true\") {\n    emitter.emit(\"request:end\", request);\n    (_a = handleRequestOptions == null ? void 0 : handleRequestOptions.onPassthroughResponse) == null ? void 0 : _a.call(handleRequestOptions, request);\n    return;\n  }\n  const [lookupError, lookupResult] = await (0, import_until2.until)(() => {\n    return getResponse(request, handlers, handleRequestOptions == null ? void 0 : handleRequestOptions.resolutionContext);\n  });\n  if (lookupError) {\n    emitter.emit(\"unhandledException\", lookupError, request);\n    throw lookupError;\n  }\n  const {\n    handler,\n    response: response2\n  } = lookupResult;\n  if (!handler) {\n    onUnhandledRequest(request, handlers, options.onUnhandledRequest);\n    emitter.emit(\"request:unhandled\", request);\n    emitter.emit(\"request:end\", request);\n    (_b = handleRequestOptions == null ? void 0 : handleRequestOptions.onPassthroughResponse) == null ? void 0 : _b.call(handleRequestOptions, request);\n    return;\n  }\n  if (!response2) {\n    devUtils.warn(`Expected response resolver to return a mocked response Object, but got %s. The original response is going to be used instead.\n\n  \\u2022 %s\n    %s`, response2, handler.info.header, handler.info.callFrame);\n    emitter.emit(\"request:end\", request);\n    (_c = handleRequestOptions == null ? void 0 : handleRequestOptions.onPassthroughResponse) == null ? void 0 : _c.call(handleRequestOptions, request);\n    return;\n  }\n  if (response2.passthrough) {\n    emitter.emit(\"request:end\", request);\n    (_d = handleRequestOptions == null ? void 0 : handleRequestOptions.onPassthroughResponse) == null ? void 0 : _d.call(handleRequestOptions, request);\n    return;\n  }\n  readResponseCookies(request, response2);\n  emitter.emit(\"request:match\", request);\n  const requiredLookupResult = lookupResult;\n  const transformedResponse = ((_e = handleRequestOptions == null ? void 0 : handleRequestOptions.transformResponse) == null ? void 0 : _e.call(handleRequestOptions, response2)) || response2;\n  (_f = handleRequestOptions == null ? void 0 : handleRequestOptions.onMockedResponse) == null ? void 0 : _f.call(handleRequestOptions, transformedResponse, requiredLookupResult);\n  emitter.emit(\"request:end\", request);\n  return transformedResponse;\n}\n\n// src/utils/logging/serializeResponse.ts\nvar import_headers_polyfill9 = __webpack_require__(/*! headers-polyfill */ \"../../headers-polyfill/lib/index.js\");\nasync function serializeResponse(response2) {\n  return {\n    status: response2.status,\n    statusText: response2.statusText,\n    headers: (0, import_headers_polyfill9.flattenHeadersObject)((0, import_headers_polyfill9.headersToObject)(response2.headers)),\n    body: await response2.clone().text()\n  };\n}\n\n// src/setupWorker/start/createRequestListener.ts\nvar createRequestListener = (context, options) => {\n  return async (event, message) => {\n    var _a;\n    const messageChannel = new WorkerChannel(event.ports[0]);\n    const request = parseWorkerRequest(message.payload);\n    try {\n      await handleRequest(request, context.requestHandlers, options, context.emitter, {\n        transformResponse,\n        onPassthroughResponse() {\n          messageChannel.postMessage(\"NOT_FOUND\");\n        },\n        async onMockedResponse(response2, {\n          handler,\n          publicRequest,\n          parsedRequest\n        }) {\n          if (response2.body instanceof ReadableStream) {\n            throw new Error(devUtils.formatMessage('Failed to construct a mocked response with a \"ReadableStream\" body: mocked streams are not supported. Follow https://github.com/mswjs/msw/issues/1336 for more details.'));\n          }\n          const responseInstance = new Response(response2.body, response2);\n          const responseForLogs = responseInstance.clone();\n          const responseBodyBuffer = await responseInstance.arrayBuffer();\n          const responseBody = response2.body == null ? null : responseBodyBuffer;\n          messageChannel.postMessage(\"MOCK_RESPONSE\", {\n            ...response2,\n            body: responseBody\n          }, [responseBodyBuffer]);\n          if (!options.quiet) {\n            context.emitter.once(\"response:mocked\", async () => {\n              handler.log(publicRequest, await serializeResponse(responseForLogs), parsedRequest);\n            });\n          }\n        }\n      });\n    } catch (error2) {\n      if (error2 instanceof NetworkError) {\n        messageChannel.postMessage(\"NETWORK_ERROR\", {\n          name: error2.name,\n          message: error2.message\n        });\n        return;\n      }\n      if (error2 instanceof Error) {\n        devUtils.error(`Uncaught exception in the request handler for \"%s %s\":\n\n%s\n\nThis exception has been gracefully handled as a 500 response, however, it's strongly recommended to resolve this error, as it indicates a mistake in your code. If you wish to mock an error response, please see this guide: https://mswjs.io/docs/recipes/mocking-error-responses`, request.method, request.url, (_a = error2.stack) != null ? _a : error2);\n        messageChannel.postMessage(\"MOCK_RESPONSE\", {\n          status: 500,\n          statusText: \"Request Handler Error\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            name: error2.name,\n            message: error2.message,\n            stack: error2.stack\n          })\n        });\n      }\n    }\n  };\n};\nfunction transformResponse(response2) {\n  return {\n    status: response2.status,\n    statusText: response2.statusText,\n    headers: response2.headers.all(),\n    body: response2.body,\n    delay: response2.delay\n  };\n}\n\n// src/utils/internal/requestIntegrityCheck.ts\nasync function requestIntegrityCheck(context, serviceWorker) {\n  context.workerChannel.send(\"INTEGRITY_CHECK_REQUEST\");\n  const {\n    payload: actualChecksum\n  } = await context.events.once(\"INTEGRITY_CHECK_RESPONSE\");\n  if (actualChecksum !== \"3d6b9f06410d179a7f7404d4bf4c3c70\") {\n    throw new Error(`Currently active Service Worker (${actualChecksum}) is behind the latest published one (${\"3d6b9f06410d179a7f7404d4bf4c3c70\"}).`);\n  }\n  return serviceWorker;\n}\n\n// src/utils/deferNetworkRequestsUntil.ts\nvar import_until3 = __webpack_require__(/*! @open-draft/until */ \"../../@open-draft/until/lib/index.js\");\nfunction deferNetworkRequestsUntil(predicatePromise) {\n  const originalXhrSend = window.XMLHttpRequest.prototype.send;\n  window.XMLHttpRequest.prototype.send = function (...args) {\n    (0, import_until3.until)(() => predicatePromise).then(() => {\n      window.XMLHttpRequest.prototype.send = originalXhrSend;\n      this.send(...args);\n    });\n  };\n  const originalFetch = window.fetch;\n  window.fetch = async (...args) => {\n    await (0, import_until3.until)(() => predicatePromise);\n    window.fetch = originalFetch;\n    return window.fetch(...args);\n  };\n}\n\n// src/setupWorker/start/createResponseListener.ts\nfunction createResponseListener(context) {\n  return (_, message) => {\n    var _a;\n    const {\n      payload: responseJson\n    } = message;\n    if ((_a = responseJson.type) == null ? void 0 : _a.includes(\"opaque\")) {\n      return;\n    }\n    const response2 = new Response(responseJson.body || null, responseJson);\n    const isMockedResponse = response2.headers.get(\"x-powered-by\") === \"msw\";\n    if (isMockedResponse) {\n      context.emitter.emit(\"response:mocked\", response2, responseJson.requestId);\n    } else {\n      context.emitter.emit(\"response:bypass\", response2, responseJson.requestId);\n    }\n  };\n}\n\n// src/setupWorker/start/utils/validateWorkerScope.ts\nfunction validateWorkerScope(registration, options) {\n  if (!(options == null ? void 0 : options.quiet) && !location.href.startsWith(registration.scope)) {\n    devUtils.warn(`Cannot intercept requests on this page because it's outside of the worker's scope (\"${registration.scope}\"). If you wish to mock API requests on this page, you must resolve this scope issue.\n\n- (Recommended) Register the worker at the root level (\"/\") of your application.\n- Set the \"Service-Worker-Allowed\" response header to allow out-of-scope workers.`);\n  }\n}\n\n// src/setupWorker/start/createStartHandler.ts\nvar createStartHandler = context => {\n  return function start(options, customOptions) {\n    const startWorkerInstance = async () => {\n      context.events.removeAllListeners();\n      context.workerChannel.on(\"REQUEST\", createRequestListener(context, options));\n      context.workerChannel.on(\"RESPONSE\", createResponseListener(context));\n      const instance = await getWorkerInstance(options.serviceWorker.url, options.serviceWorker.options, options.findWorker);\n      const [worker, registration] = instance;\n      if (!worker) {\n        const missingWorkerMessage = (customOptions == null ? void 0 : customOptions.findWorker) ? devUtils.formatMessage(`Failed to locate the Service Worker registration using a custom \"findWorker\" predicate.\n\nPlease ensure that the custom predicate properly locates the Service Worker registration at \"%s\".\nMore details: https://mswjs.io/docs/api/setup-worker/start#findworker\n`, options.serviceWorker.url) : devUtils.formatMessage(`Failed to locate the Service Worker registration.\n\nThis most likely means that the worker script URL \"%s\" cannot resolve against the actual public hostname (%s). This may happen if your application runs behind a proxy, or has a dynamic hostname.\n\nPlease consider using a custom \"serviceWorker.url\" option to point to the actual worker script location, or a custom \"findWorker\" option to resolve the Service Worker registration manually. More details: https://mswjs.io/docs/api/setup-worker/start`, options.serviceWorker.url, location.host);\n        throw new Error(missingWorkerMessage);\n      }\n      context.worker = worker;\n      context.registration = registration;\n      context.events.addListener(window, \"beforeunload\", () => {\n        if (worker.state !== \"redundant\") {\n          context.workerChannel.send(\"CLIENT_CLOSED\");\n        }\n        window.clearInterval(context.keepAliveInterval);\n      });\n      const [integrityError] = await (0, import_until4.until)(() => requestIntegrityCheck(context, worker));\n      if (integrityError) {\n        devUtils.error(`Detected outdated Service Worker: ${integrityError.message}\n\nThe mocking is still enabled, but it's highly recommended that you update your Service Worker by running:\n\n$ npx msw init <PUBLIC_DIR>\n\nThis is necessary to ensure that the Service Worker is in sync with the library to guarantee its stability.\nIf this message still persists after updating, please report an issue: https://github.com/open-draft/msw/issues      `);\n      }\n      context.keepAliveInterval = window.setInterval(() => context.workerChannel.send(\"KEEPALIVE_REQUEST\"), 5e3);\n      validateWorkerScope(registration, context.startOptions);\n      return registration;\n    };\n    const workerRegistration = startWorkerInstance().then(async registration => {\n      const pendingInstance = registration.installing || registration.waiting;\n      if (pendingInstance) {\n        await new Promise(resolve => {\n          pendingInstance.addEventListener(\"statechange\", () => {\n            if (pendingInstance.state === \"activated\") {\n              return resolve();\n            }\n          });\n        });\n      }\n      await enableMocking(context, options).catch(error2 => {\n        throw new Error(`Failed to enable mocking: ${error2 == null ? void 0 : error2.message}`);\n      });\n      return registration;\n    });\n    if (options.waitUntilReady) {\n      deferNetworkRequestsUntil(workerRegistration);\n    }\n    return workerRegistration;\n  };\n};\n\n// src/setupWorker/stop/utils/printStopMessage.ts\nfunction printStopMessage(args = {}) {\n  if (args.quiet) {\n    return;\n  }\n  console.log(`%c${devUtils.formatMessage(\"Mocking disabled.\")}`, \"color:orangered;font-weight:bold;\");\n}\n\n// src/setupWorker/stop/createStop.ts\nvar createStop = context => {\n  return function stop() {\n    var _a;\n    if (!context.isMockingEnabled) {\n      devUtils.warn('Found a redundant \"worker.stop()\" call. Note that stopping the worker while mocking already stopped has no effect. Consider removing this \"worker.stop()\" call.');\n      return;\n    }\n    context.workerChannel.send(\"MOCK_DEACTIVATE\");\n    context.isMockingEnabled = false;\n    window.clearInterval(context.keepAliveInterval);\n    printStopMessage({\n      quiet: (_a = context.startOptions) == null ? void 0 : _a.quiet\n    });\n  };\n};\n\n// src/setupWorker/start/utils/prepareStartHandler.ts\nvar DEFAULT_START_OPTIONS = {\n  serviceWorker: {\n    url: \"/mockServiceWorker.js\",\n    options: null\n  },\n  quiet: false,\n  waitUntilReady: true,\n  onUnhandledRequest: \"warn\",\n  findWorker(scriptURL, mockServiceWorkerUrl) {\n    return scriptURL === mockServiceWorkerUrl;\n  }\n};\n\n// src/setupWorker/start/createFallbackRequestListener.ts\nvar import_interceptors3 = __webpack_require__(/*! @mswjs/interceptors */ \"../../@mswjs/interceptors/lib/index.js\");\nvar import_fetch3 = __webpack_require__(/*! @mswjs/interceptors/lib/interceptors/fetch */ \"../../@mswjs/interceptors/lib/interceptors/fetch/index.js\");\nvar import_XMLHttpRequest = __webpack_require__(/*! @mswjs/interceptors/lib/interceptors/XMLHttpRequest */ \"../../@mswjs/interceptors/lib/interceptors/XMLHttpRequest/index.js\");\n\n// src/utils/request/createResponseFromIsomorphicResponse.ts\nfunction createResponseFromIsomorphicResponse(response2) {\n  return new Response(response2.body, {\n    status: response2.status,\n    statusText: response2.statusText,\n    headers: response2.headers\n  });\n}\n\n// src/setupWorker/start/createFallbackRequestListener.ts\nfunction createFallbackRequestListener(context, options) {\n  const interceptor = new import_interceptors3.BatchInterceptor({\n    name: \"fallback\",\n    interceptors: [new import_fetch3.FetchInterceptor(), new import_XMLHttpRequest.XMLHttpRequestInterceptor()]\n  });\n  interceptor.on(\"request\", async request => {\n    const mockedRequest = new MockedRequest(request.url, {\n      ...request,\n      body: await request.arrayBuffer()\n    });\n    const response2 = await handleRequest(mockedRequest, context.requestHandlers, options, context.emitter, {\n      transformResponse(response3) {\n        return {\n          status: response3.status,\n          statusText: response3.statusText,\n          headers: response3.headers.all(),\n          body: response3.body,\n          delay: response3.delay\n        };\n      },\n      onMockedResponse(_, {\n        handler,\n        publicRequest,\n        parsedRequest\n      }) {\n        if (!options.quiet) {\n          context.emitter.once(\"response:mocked\", async response3 => {\n            handler.log(publicRequest, await serializeResponse(response3), parsedRequest);\n          });\n        }\n      }\n    });\n    if (response2) {\n      request.respondWith(response2);\n    }\n  });\n  interceptor.on(\"response\", (request, response2) => {\n    if (!request.id) {\n      return;\n    }\n    const browserResponse = createResponseFromIsomorphicResponse(response2);\n    if (response2.headers.get(\"x-powered-by\") === \"msw\") {\n      context.emitter.emit(\"response:mocked\", browserResponse, request.id);\n    } else {\n      context.emitter.emit(\"response:bypass\", browserResponse, request.id);\n    }\n  });\n  interceptor.apply();\n  return interceptor;\n}\n\n// src/setupWorker/start/createFallbackStart.ts\nfunction createFallbackStart(context) {\n  return async function start(options) {\n    context.fallbackInterceptor = createFallbackRequestListener(context, options);\n    printStartMessage({\n      message: \"Mocking enabled (fallback mode).\",\n      quiet: options.quiet\n    });\n    return void 0;\n  };\n}\n\n// src/setupWorker/stop/createFallbackStop.ts\nfunction createFallbackStop(context) {\n  return function stop() {\n    var _a, _b;\n    (_a = context.fallbackInterceptor) == null ? void 0 : _a.dispose();\n    printStopMessage({\n      quiet: (_b = context.startOptions) == null ? void 0 : _b.quiet\n    });\n  };\n}\n\n// src/SetupApi.ts\nvar import_outvariant4 = __webpack_require__(/*! outvariant */ \"../../outvariant/lib/index.js\");\nvar import_strict_event_emitter = __webpack_require__(/*! strict-event-emitter */ \"../../strict-event-emitter/lib/index.js\");\n\n// src/utils/internal/pipeEvents.ts\nfunction pipeEvents(source, destination) {\n  const rawEmit = source.emit;\n  if (rawEmit._isPiped) {\n    return;\n  }\n  source.emit = function (event, ...data2) {\n    destination.emit(event, ...data2);\n    return rawEmit.call(this, event, ...data2);\n  };\n  source.emit._isPiped = true;\n}\n\n// src/utils/internal/toReadonlyArray.ts\nfunction toReadonlyArray(source) {\n  const clone = [...source];\n  Object.freeze(clone);\n  return clone;\n}\n\n// src/SetupApi.ts\nvar SetupApi = class {\n  constructor(...initialHandlers) {\n    this.validateHandlers(...initialHandlers);\n    this.initialHandlers = toReadonlyArray(initialHandlers);\n    this.currentHandlers = [...initialHandlers];\n    this.emitter = new import_strict_event_emitter.Emitter();\n    this.publicEmitter = new import_strict_event_emitter.Emitter();\n    pipeEvents(this.emitter, this.publicEmitter);\n    this.events = this.createLifeCycleEvents();\n  }\n  validateHandlers(...handlers) {\n    for (const handler of handlers) {\n      (0, import_outvariant4.invariant)(!Array.isArray(handler), devUtils.formatMessage('Failed to construct \"%s\" given an Array of request handlers. Make sure you spread the request handlers when calling the respective setup function.'), this.constructor.name);\n    }\n  }\n  dispose() {\n    this.emitter.removeAllListeners();\n    this.publicEmitter.removeAllListeners();\n  }\n  use(...runtimeHandlers) {\n    this.currentHandlers.unshift(...runtimeHandlers);\n  }\n  restoreHandlers() {\n    this.currentHandlers.forEach(handler => {\n      handler.markAsSkipped(false);\n    });\n  }\n  resetHandlers(...nextHandlers) {\n    this.currentHandlers = nextHandlers.length > 0 ? [...nextHandlers] : [...this.initialHandlers];\n  }\n  listHandlers() {\n    return toReadonlyArray(this.currentHandlers);\n  }\n  createLifeCycleEvents() {\n    return {\n      on: (...args) => {\n        return this.publicEmitter.on(...args);\n      },\n      removeListener: (...args) => {\n        return this.publicEmitter.removeListener(...args);\n      },\n      removeAllListeners: (...args) => {\n        return this.publicEmitter.removeAllListeners(...args);\n      }\n    };\n  }\n};\n\n// src/setupWorker/setupWorker.ts\nvar SetupWorkerApi = class extends SetupApi {\n  constructor(...handlers) {\n    super(...handlers);\n    this.startHandler = null;\n    this.stopHandler = null;\n    (0, import_outvariant5.invariant)(!(0, import_is_node_process3.isNodeProcess)(), devUtils.formatMessage(\"Failed to execute `setupWorker` in a non-browser environment. Consider using `setupServer` for Node.js environment instead.\"));\n    this.listeners = [];\n    this.context = this.createWorkerContext();\n  }\n  createWorkerContext() {\n    const context = {\n      isMockingEnabled: false,\n      startOptions: null,\n      worker: null,\n      registration: null,\n      requestHandlers: this.currentHandlers,\n      emitter: this.emitter,\n      workerChannel: {\n        on: (eventType, callback) => {\n          this.context.events.addListener(navigator.serviceWorker, \"message\", event => {\n            if (event.source !== this.context.worker) {\n              return;\n            }\n            const message = event.data;\n            if (!message) {\n              return;\n            }\n            if (message.type === eventType) {\n              callback(event, message);\n            }\n          });\n        },\n        send: type => {\n          var _a;\n          (_a = this.context.worker) == null ? void 0 : _a.postMessage(type);\n        }\n      },\n      events: {\n        addListener: (target, eventType, callback) => {\n          target.addEventListener(eventType, callback);\n          this.listeners.push({\n            eventType,\n            target,\n            callback\n          });\n          return () => {\n            target.removeEventListener(eventType, callback);\n          };\n        },\n        removeAllListeners: () => {\n          for (const {\n            target,\n            eventType,\n            callback\n          } of this.listeners) {\n            target.removeEventListener(eventType, callback);\n          }\n          this.listeners = [];\n        },\n        once: eventType => {\n          const bindings = [];\n          return new Promise((resolve, reject) => {\n            const handleIncomingMessage = event => {\n              try {\n                const message = event.data;\n                if (message.type === eventType) {\n                  resolve(message);\n                }\n              } catch (error2) {\n                reject(error2);\n              }\n            };\n            bindings.push(this.context.events.addListener(navigator.serviceWorker, \"message\", handleIncomingMessage), this.context.events.addListener(navigator.serviceWorker, \"messageerror\", reject));\n          }).finally(() => {\n            bindings.forEach(unbind => unbind());\n          });\n        }\n      },\n      useFallbackMode: !(\"serviceWorker\" in navigator) || location.protocol === \"file:\"\n    };\n    Object.defineProperties(context, {\n      requestHandlers: {\n        get: () => this.currentHandlers\n      }\n    });\n    this.startHandler = context.useFallbackMode ? createFallbackStart(context) : createStartHandler(context);\n    this.stopHandler = context.useFallbackMode ? createFallbackStop(context) : createStop(context);\n    return context;\n  }\n  async start(options = {}) {\n    this.context.startOptions = mergeRight(DEFAULT_START_OPTIONS, options);\n    return await this.startHandler(this.context.startOptions, options);\n  }\n  printHandlers() {\n    const handlers = this.listHandlers();\n    handlers.forEach(handler => {\n      const {\n        header,\n        callFrame\n      } = handler.info;\n      const pragma = handler.info.hasOwnProperty(\"operationType\") ? \"[graphql]\" : \"[rest]\";\n      console.groupCollapsed(`${pragma} ${header}`);\n      if (callFrame) {\n        console.log(`Declaration: ${callFrame}`);\n      }\n      console.log(\"Handler:\", handler);\n      console.groupEnd();\n    });\n  }\n  stop() {\n    super.dispose();\n    this.context.events.removeAllListeners();\n    this.context.emitter.removeAllListeners();\n    this.stopHandler();\n  }\n};\nfunction setupWorker(...handlers) {\n  return new SetupWorkerApi(...handlers);\n}\n\n// src/rest.ts\nfunction createRestHandler(method) {\n  return (path, resolver) => {\n    return new RestHandler(method, path, resolver);\n  };\n}\nvar rest = {\n  all: createRestHandler(/.+/),\n  head: createRestHandler(\"HEAD\" /* HEAD */),\n  get: createRestHandler(\"GET\" /* GET */),\n  post: createRestHandler(\"POST\" /* POST */),\n  put: createRestHandler(\"PUT\" /* PUT */),\n  delete: createRestHandler(\"DELETE\" /* DELETE */),\n  patch: createRestHandler(\"PATCH\" /* PATCH */),\n  options: createRestHandler(\"OPTIONS\" /* OPTIONS */)\n};\n\n// src/graphql.ts\nfunction createScopedGraphQLHandler(operationType, url) {\n  return (operationName, resolver) => {\n    return new GraphQLHandler(operationType, operationName, url, resolver);\n  };\n}\nfunction createGraphQLOperationHandler(url) {\n  return resolver => {\n    return new GraphQLHandler(\"all\", new RegExp(\".*\"), url, resolver);\n  };\n}\nvar standardGraphQLHandlers = {\n  operation: createGraphQLOperationHandler(\"*\"),\n  query: createScopedGraphQLHandler(\"query\", \"*\"),\n  mutation: createScopedGraphQLHandler(\"mutation\", \"*\")\n};\nfunction createGraphQLLink(url) {\n  return {\n    operation: createGraphQLOperationHandler(url),\n    query: createScopedGraphQLHandler(\"query\", url),\n    mutation: createScopedGraphQLHandler(\"mutation\", url)\n  };\n}\nvar graphql = {\n  ...standardGraphQLHandlers,\n  link: createGraphQLLink\n};\n\n// src/index.ts\ncheckGlobals();\n// Annotate the CommonJS export names for ESM import in node:\n0 && (0);\n\n//# sourceURL=webpack://my-app/../../msw/lib/index.js?");

/***/ }),

/***/ "../../msw/node_modules/cookie/index.js":
/*!**********************************************!*\
  !*** ../../msw/node_modules/cookie/index.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n\n\n/**\n * Module exports.\n * @public\n */\nexports.parse = parse;\nexports.serialize = serialize;\n\n/**\n * Module variables.\n * @private\n */\n\nvar decode = decodeURIComponent;\nvar encode = encodeURIComponent;\n\n/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */\n\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [options]\n * @return {object}\n * @public\n */\n\nfunction parse(str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string');\n  }\n  var obj = {};\n  var opt = options || {};\n  var pairs = str.split(';');\n  var dec = opt.decode || decode;\n  for (var i = 0; i < pairs.length; i++) {\n    var pair = pairs[i];\n    var index = pair.indexOf('=');\n\n    // skip things that don't look like key=value\n    if (index < 0) {\n      continue;\n    }\n    var key = pair.substring(0, index).trim();\n\n    // only assign once\n    if (undefined == obj[key]) {\n      var val = pair.substring(index + 1, pair.length).trim();\n\n      // quoted values\n      if (val[0] === '\"') {\n        val = val.slice(1, -1);\n      }\n      obj[key] = tryDecode(val, dec);\n    }\n  }\n  return obj;\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize the a name value pair into a cookie string suitable for\n * http headers. An optional options object specified cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [options]\n * @return {string}\n * @public\n */\n\nfunction serialize(name, val, options) {\n  var opt = options || {};\n  var enc = opt.encode || encode;\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n  var value = enc(val);\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n  var str = name + '=' + value;\n  if (null != opt.maxAge) {\n    var maxAge = opt.maxAge - 0;\n    if (isNaN(maxAge) || !isFinite(maxAge)) {\n      throw new TypeError('option maxAge is invalid');\n    }\n    str += '; Max-Age=' + Math.floor(maxAge);\n  }\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n    str += '; Domain=' + opt.domain;\n  }\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n    str += '; Path=' + opt.path;\n  }\n  if (opt.expires) {\n    if (typeof opt.expires.toUTCString !== 'function') {\n      throw new TypeError('option expires is invalid');\n    }\n    str += '; Expires=' + opt.expires.toUTCString();\n  }\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n  if (opt.secure) {\n    str += '; Secure';\n  }\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string' ? opt.sameSite.toLowerCase() : opt.sameSite;\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n      case 'none':\n        str += '; SameSite=None';\n        break;\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n  return str;\n}\n\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */\n\nfunction tryDecode(str, decode) {\n  try {\n    return decode(str);\n  } catch (e) {\n    return str;\n  }\n}\n\n//# sourceURL=webpack://my-app/../../msw/node_modules/cookie/index.js?");

/***/ }),

/***/ "../../msw/node_modules/path-to-regexp/dist.es2015/index.js":
/*!******************************************************************!*\
  !*** ../../msw/node_modules/path-to-regexp/dist.es2015/index.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   compile: () => (/* binding */ compile),\n/* harmony export */   match: () => (/* binding */ match),\n/* harmony export */   parse: () => (/* binding */ parse),\n/* harmony export */   pathToRegexp: () => (/* binding */ pathToRegexp),\n/* harmony export */   regexpToFunction: () => (/* binding */ regexpToFunction),\n/* harmony export */   tokensToFunction: () => (/* binding */ tokensToFunction),\n/* harmony export */   tokensToRegexp: () => (/* binding */ tokensToRegexp)\n/* harmony export */ });\n/**\n * Tokenize input string.\n */\nfunction lexer(str) {\n  var tokens = [];\n  var i = 0;\n  while (i < str.length) {\n    var char = str[i];\n    if (char === \"*\" || char === \"+\" || char === \"?\") {\n      tokens.push({\n        type: \"MODIFIER\",\n        index: i,\n        value: str[i++]\n      });\n      continue;\n    }\n    if (char === \"\\\\\") {\n      tokens.push({\n        type: \"ESCAPED_CHAR\",\n        index: i++,\n        value: str[i++]\n      });\n      continue;\n    }\n    if (char === \"{\") {\n      tokens.push({\n        type: \"OPEN\",\n        index: i,\n        value: str[i++]\n      });\n      continue;\n    }\n    if (char === \"}\") {\n      tokens.push({\n        type: \"CLOSE\",\n        index: i,\n        value: str[i++]\n      });\n      continue;\n    }\n    if (char === \":\") {\n      var name = \"\";\n      var j = i + 1;\n      while (j < str.length) {\n        var code = str.charCodeAt(j);\n        if (\n        // `0-9`\n        code >= 48 && code <= 57 ||\n        // `A-Z`\n        code >= 65 && code <= 90 ||\n        // `a-z`\n        code >= 97 && code <= 122 ||\n        // `_`\n        code === 95) {\n          name += str[j++];\n          continue;\n        }\n        break;\n      }\n      if (!name) throw new TypeError(\"Missing parameter name at \".concat(i));\n      tokens.push({\n        type: \"NAME\",\n        index: i,\n        value: name\n      });\n      i = j;\n      continue;\n    }\n    if (char === \"(\") {\n      var count = 1;\n      var pattern = \"\";\n      var j = i + 1;\n      if (str[j] === \"?\") {\n        throw new TypeError(\"Pattern cannot start with \\\"?\\\" at \".concat(j));\n      }\n      while (j < str.length) {\n        if (str[j] === \"\\\\\") {\n          pattern += str[j++] + str[j++];\n          continue;\n        }\n        if (str[j] === \")\") {\n          count--;\n          if (count === 0) {\n            j++;\n            break;\n          }\n        } else if (str[j] === \"(\") {\n          count++;\n          if (str[j + 1] !== \"?\") {\n            throw new TypeError(\"Capturing groups are not allowed at \".concat(j));\n          }\n        }\n        pattern += str[j++];\n      }\n      if (count) throw new TypeError(\"Unbalanced pattern at \".concat(i));\n      if (!pattern) throw new TypeError(\"Missing pattern at \".concat(i));\n      tokens.push({\n        type: \"PATTERN\",\n        index: i,\n        value: pattern\n      });\n      i = j;\n      continue;\n    }\n    tokens.push({\n      type: \"CHAR\",\n      index: i,\n      value: str[i++]\n    });\n  }\n  tokens.push({\n    type: \"END\",\n    index: i,\n    value: \"\"\n  });\n  return tokens;\n}\n/**\n * Parse a string for the raw tokens.\n */\nfunction parse(str, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  var tokens = lexer(str);\n  var _a = options.prefixes,\n    prefixes = _a === void 0 ? \"./\" : _a;\n  var defaultPattern = \"[^\".concat(escapeString(options.delimiter || \"/#?\"), \"]+?\");\n  var result = [];\n  var key = 0;\n  var i = 0;\n  var path = \"\";\n  var tryConsume = function (type) {\n    if (i < tokens.length && tokens[i].type === type) return tokens[i++].value;\n  };\n  var mustConsume = function (type) {\n    var value = tryConsume(type);\n    if (value !== undefined) return value;\n    var _a = tokens[i],\n      nextType = _a.type,\n      index = _a.index;\n    throw new TypeError(\"Unexpected \".concat(nextType, \" at \").concat(index, \", expected \").concat(type));\n  };\n  var consumeText = function () {\n    var result = \"\";\n    var value;\n    while (value = tryConsume(\"CHAR\") || tryConsume(\"ESCAPED_CHAR\")) {\n      result += value;\n    }\n    return result;\n  };\n  while (i < tokens.length) {\n    var char = tryConsume(\"CHAR\");\n    var name = tryConsume(\"NAME\");\n    var pattern = tryConsume(\"PATTERN\");\n    if (name || pattern) {\n      var prefix = char || \"\";\n      if (prefixes.indexOf(prefix) === -1) {\n        path += prefix;\n        prefix = \"\";\n      }\n      if (path) {\n        result.push(path);\n        path = \"\";\n      }\n      result.push({\n        name: name || key++,\n        prefix: prefix,\n        suffix: \"\",\n        pattern: pattern || defaultPattern,\n        modifier: tryConsume(\"MODIFIER\") || \"\"\n      });\n      continue;\n    }\n    var value = char || tryConsume(\"ESCAPED_CHAR\");\n    if (value) {\n      path += value;\n      continue;\n    }\n    if (path) {\n      result.push(path);\n      path = \"\";\n    }\n    var open = tryConsume(\"OPEN\");\n    if (open) {\n      var prefix = consumeText();\n      var name_1 = tryConsume(\"NAME\") || \"\";\n      var pattern_1 = tryConsume(\"PATTERN\") || \"\";\n      var suffix = consumeText();\n      mustConsume(\"CLOSE\");\n      result.push({\n        name: name_1 || (pattern_1 ? key++ : \"\"),\n        pattern: name_1 && !pattern_1 ? defaultPattern : pattern_1,\n        prefix: prefix,\n        suffix: suffix,\n        modifier: tryConsume(\"MODIFIER\") || \"\"\n      });\n      continue;\n    }\n    mustConsume(\"END\");\n  }\n  return result;\n}\n/**\n * Compile a string to a template function for the path.\n */\nfunction compile(str, options) {\n  return tokensToFunction(parse(str, options), options);\n}\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction(tokens, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  var reFlags = flags(options);\n  var _a = options.encode,\n    encode = _a === void 0 ? function (x) {\n      return x;\n    } : _a,\n    _b = options.validate,\n    validate = _b === void 0 ? true : _b;\n  // Compile all the tokens into regexps.\n  var matches = tokens.map(function (token) {\n    if (typeof token === \"object\") {\n      return new RegExp(\"^(?:\".concat(token.pattern, \")$\"), reFlags);\n    }\n  });\n  return function (data) {\n    var path = \"\";\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n      if (typeof token === \"string\") {\n        path += token;\n        continue;\n      }\n      var value = data ? data[token.name] : undefined;\n      var optional = token.modifier === \"?\" || token.modifier === \"*\";\n      var repeat = token.modifier === \"*\" || token.modifier === \"+\";\n      if (Array.isArray(value)) {\n        if (!repeat) {\n          throw new TypeError(\"Expected \\\"\".concat(token.name, \"\\\" to not repeat, but got an array\"));\n        }\n        if (value.length === 0) {\n          if (optional) continue;\n          throw new TypeError(\"Expected \\\"\".concat(token.name, \"\\\" to not be empty\"));\n        }\n        for (var j = 0; j < value.length; j++) {\n          var segment = encode(value[j], token);\n          if (validate && !matches[i].test(segment)) {\n            throw new TypeError(\"Expected all \\\"\".concat(token.name, \"\\\" to match \\\"\").concat(token.pattern, \"\\\", but got \\\"\").concat(segment, \"\\\"\"));\n          }\n          path += token.prefix + segment + token.suffix;\n        }\n        continue;\n      }\n      if (typeof value === \"string\" || typeof value === \"number\") {\n        var segment = encode(String(value), token);\n        if (validate && !matches[i].test(segment)) {\n          throw new TypeError(\"Expected \\\"\".concat(token.name, \"\\\" to match \\\"\").concat(token.pattern, \"\\\", but got \\\"\").concat(segment, \"\\\"\"));\n        }\n        path += token.prefix + segment + token.suffix;\n        continue;\n      }\n      if (optional) continue;\n      var typeOfMessage = repeat ? \"an array\" : \"a string\";\n      throw new TypeError(\"Expected \\\"\".concat(token.name, \"\\\" to be \").concat(typeOfMessage));\n    }\n    return path;\n  };\n}\n/**\n * Create path match function from `path-to-regexp` spec.\n */\nfunction match(str, options) {\n  var keys = [];\n  var re = pathToRegexp(str, keys, options);\n  return regexpToFunction(re, keys, options);\n}\n/**\n * Create a path match function from `path-to-regexp` output.\n */\nfunction regexpToFunction(re, keys, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  var _a = options.decode,\n    decode = _a === void 0 ? function (x) {\n      return x;\n    } : _a;\n  return function (pathname) {\n    var m = re.exec(pathname);\n    if (!m) return false;\n    var path = m[0],\n      index = m.index;\n    var params = Object.create(null);\n    var _loop_1 = function (i) {\n      if (m[i] === undefined) return \"continue\";\n      var key = keys[i - 1];\n      if (key.modifier === \"*\" || key.modifier === \"+\") {\n        params[key.name] = m[i].split(key.prefix + key.suffix).map(function (value) {\n          return decode(value, key);\n        });\n      } else {\n        params[key.name] = decode(m[i], key);\n      }\n    };\n    for (var i = 1; i < m.length; i++) {\n      _loop_1(i);\n    }\n    return {\n      path: path,\n      index: index,\n      params: params\n    };\n  };\n}\n/**\n * Escape a regular expression string.\n */\nfunction escapeString(str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n}\n/**\n * Get the flags for a regexp from the options.\n */\nfunction flags(options) {\n  return options && options.sensitive ? \"\" : \"i\";\n}\n/**\n * Pull out keys from a regexp.\n */\nfunction regexpToRegexp(path, keys) {\n  if (!keys) return path;\n  var groupsRegex = /\\((?:\\?<(.*?)>)?(?!\\?)/g;\n  var index = 0;\n  var execResult = groupsRegex.exec(path.source);\n  while (execResult) {\n    keys.push({\n      // Use parenthesized substring match if available, index otherwise\n      name: execResult[1] || index++,\n      prefix: \"\",\n      suffix: \"\",\n      modifier: \"\",\n      pattern: \"\"\n    });\n    execResult = groupsRegex.exec(path.source);\n  }\n  return path;\n}\n/**\n * Transform an array into a regexp.\n */\nfunction arrayToRegexp(paths, keys, options) {\n  var parts = paths.map(function (path) {\n    return pathToRegexp(path, keys, options).source;\n  });\n  return new RegExp(\"(?:\".concat(parts.join(\"|\"), \")\"), flags(options));\n}\n/**\n * Create a path regexp from string input.\n */\nfunction stringToRegexp(path, keys, options) {\n  return tokensToRegexp(parse(path, options), keys, options);\n}\n/**\n * Expose a function for taking tokens and returning a RegExp.\n */\nfunction tokensToRegexp(tokens, keys, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  var _a = options.strict,\n    strict = _a === void 0 ? false : _a,\n    _b = options.start,\n    start = _b === void 0 ? true : _b,\n    _c = options.end,\n    end = _c === void 0 ? true : _c,\n    _d = options.encode,\n    encode = _d === void 0 ? function (x) {\n      return x;\n    } : _d,\n    _e = options.delimiter,\n    delimiter = _e === void 0 ? \"/#?\" : _e,\n    _f = options.endsWith,\n    endsWith = _f === void 0 ? \"\" : _f;\n  var endsWithRe = \"[\".concat(escapeString(endsWith), \"]|$\");\n  var delimiterRe = \"[\".concat(escapeString(delimiter), \"]\");\n  var route = start ? \"^\" : \"\";\n  // Iterate over the tokens and create our regexp string.\n  for (var _i = 0, tokens_1 = tokens; _i < tokens_1.length; _i++) {\n    var token = tokens_1[_i];\n    if (typeof token === \"string\") {\n      route += escapeString(encode(token));\n    } else {\n      var prefix = escapeString(encode(token.prefix));\n      var suffix = escapeString(encode(token.suffix));\n      if (token.pattern) {\n        if (keys) keys.push(token);\n        if (prefix || suffix) {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            var mod = token.modifier === \"*\" ? \"?\" : \"\";\n            route += \"(?:\".concat(prefix, \"((?:\").concat(token.pattern, \")(?:\").concat(suffix).concat(prefix, \"(?:\").concat(token.pattern, \"))*)\").concat(suffix, \")\").concat(mod);\n          } else {\n            route += \"(?:\".concat(prefix, \"(\").concat(token.pattern, \")\").concat(suffix, \")\").concat(token.modifier);\n          }\n        } else {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            route += \"((?:\".concat(token.pattern, \")\").concat(token.modifier, \")\");\n          } else {\n            route += \"(\".concat(token.pattern, \")\").concat(token.modifier);\n          }\n        }\n      } else {\n        route += \"(?:\".concat(prefix).concat(suffix, \")\").concat(token.modifier);\n      }\n    }\n  }\n  if (end) {\n    if (!strict) route += \"\".concat(delimiterRe, \"?\");\n    route += !options.endsWith ? \"$\" : \"(?=\".concat(endsWithRe, \")\");\n  } else {\n    var endToken = tokens[tokens.length - 1];\n    var isEndDelimited = typeof endToken === \"string\" ? delimiterRe.indexOf(endToken[endToken.length - 1]) > -1 : endToken === undefined;\n    if (!strict) {\n      route += \"(?:\".concat(delimiterRe, \"(?=\").concat(endsWithRe, \"))?\");\n    }\n    if (!isEndDelimited) {\n      route += \"(?=\".concat(delimiterRe, \"|\").concat(endsWithRe, \")\");\n    }\n  }\n  return new RegExp(route, flags(options));\n}\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n */\nfunction pathToRegexp(path, keys, options) {\n  if (path instanceof RegExp) return regexpToRegexp(path, keys);\n  if (Array.isArray(path)) return arrayToRegexp(path, keys, options);\n  return stringToRegexp(path, keys, options);\n}\n\n//# sourceURL=webpack://my-app/../../msw/node_modules/path-to-regexp/dist.es2015/index.js?");

/***/ }),

/***/ "../../node-fetch/browser.js":
/*!***********************************!*\
  !*** ../../node-fetch/browser.js ***!
  \***********************************/
/***/ ((module, exports) => {

"use strict";
eval("\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function () {\n  // the only reliable means to get the global object is\n  // `Function('return this')()`\n  // However, this causes CSP violations in Chrome apps.\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('unable to locate global object');\n};\nvar globalObject = getGlobal();\nmodule.exports = exports = globalObject.fetch;\n\n// Needed for TypeScript and Webpack.\nif (globalObject.fetch) {\n  exports[\"default\"] = globalObject.fetch.bind(globalObject);\n}\nexports.Headers = globalObject.Headers;\nexports.Request = globalObject.Request;\nexports.Response = globalObject.Response;\n\n//# sourceURL=webpack://my-app/../../node-fetch/browser.js?");

/***/ }),

/***/ "../../outvariant/lib/index.js":
/*!*************************************!*\
  !*** ../../outvariant/lib/index.js ***!
  \*************************************/
/***/ ((module) => {

"use strict";
eval("\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n  return to;\n};\nvar __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n  value: true\n}), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  InvariantError: () => InvariantError,\n  format: () => format,\n  invariant: () => invariant\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/format.ts\nvar POSITIONALS_EXP = /(%?)(%([sdijo]))/g;\nfunction serializePositional(positional, flag) {\n  switch (flag) {\n    case \"s\":\n      return positional;\n    case \"d\":\n    case \"i\":\n      return Number(positional);\n    case \"j\":\n      return JSON.stringify(positional);\n    case \"o\":\n      {\n        if (typeof positional === \"string\") {\n          return positional;\n        }\n        const json = JSON.stringify(positional);\n        if (json === \"{}\" || json === \"[]\" || /^\\[object .+?\\]$/.test(json)) {\n          return positional;\n        }\n        return json;\n      }\n  }\n}\nfunction format(message, ...positionals) {\n  if (positionals.length === 0) {\n    return message;\n  }\n  let positionalIndex = 0;\n  let formattedMessage = message.replace(POSITIONALS_EXP, (match, isEscaped, _, flag) => {\n    const positional = positionals[positionalIndex];\n    const value = serializePositional(positional, flag);\n    if (!isEscaped) {\n      positionalIndex++;\n      return value;\n    }\n    return match;\n  });\n  if (positionalIndex < positionals.length) {\n    formattedMessage += ` ${positionals.slice(positionalIndex).join(\" \")}`;\n  }\n  formattedMessage = formattedMessage.replace(/%{2,2}/g, \"%\");\n  return formattedMessage;\n}\n\n// src/invariant.ts\nvar STACK_FRAMES_TO_IGNORE = 2;\nfunction cleanErrorStack(error) {\n  if (!error.stack) {\n    return;\n  }\n  const nextStack = error.stack.split(\"\\n\");\n  nextStack.splice(1, STACK_FRAMES_TO_IGNORE);\n  error.stack = nextStack.join(\"\\n\");\n}\nvar InvariantError = class extends Error {\n  constructor(message, ...positionals) {\n    super(message);\n    this.message = message;\n    this.name = \"Invariant Violation\";\n    this.message = format(message, ...positionals);\n    cleanErrorStack(this);\n  }\n};\nvar invariant = (predicate, message, ...positionals) => {\n  if (!predicate) {\n    throw new InvariantError(message, ...positionals);\n  }\n};\ninvariant.as = (ErrorConstructor, predicate, message, ...positionals) => {\n  if (!predicate) {\n    const formatMessage = positionals.length === 0 ? message : format(message, positionals);\n    let error;\n    try {\n      error = Reflect.construct(ErrorConstructor, [formatMessage]);\n    } catch (err) {\n      error = ErrorConstructor(formatMessage);\n    }\n    throw error;\n  }\n};\n// Annotate the CommonJS export names for ESM import in node:\n0 && (0);\n\n//# sourceURL=webpack://my-app/../../outvariant/lib/index.js?");

/***/ }),

/***/ "../../possible-typed-array-names/index.js":
/*!*************************************************!*\
  !*** ../../possible-typed-array-names/index.js ***!
  \*************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/** @type {import('.')} */\nmodule.exports = ['Float32Array', 'Float64Array', 'Int8Array', 'Int16Array', 'Int32Array', 'Uint8Array', 'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'BigInt64Array', 'BigUint64Array'];\n\n//# sourceURL=webpack://my-app/../../possible-typed-array-names/index.js?");

/***/ }),

/***/ "../../set-cookie-parser/lib/set-cookie.js":
/*!*************************************************!*\
  !*** ../../set-cookie-parser/lib/set-cookie.js ***!
  \*************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nvar defaultParseOptions = {\n  decodeValues: true,\n  map: false,\n  silent: false\n};\nfunction isNonEmptyString(str) {\n  return typeof str === \"string\" && !!str.trim();\n}\nfunction parseString(setCookieValue, options) {\n  var parts = setCookieValue.split(\";\").filter(isNonEmptyString);\n  var nameValuePairStr = parts.shift();\n  var parsed = parseNameValuePair(nameValuePairStr);\n  var name = parsed.name;\n  var value = parsed.value;\n  options = options ? Object.assign({}, defaultParseOptions, options) : defaultParseOptions;\n  try {\n    value = options.decodeValues ? decodeURIComponent(value) : value; // decode cookie value\n  } catch (e) {\n    console.error(\"set-cookie-parser encountered an error while decoding a cookie with value '\" + value + \"'. Set options.decodeValues to false to disable this feature.\", e);\n  }\n  var cookie = {\n    name: name,\n    value: value\n  };\n  parts.forEach(function (part) {\n    var sides = part.split(\"=\");\n    var key = sides.shift().trimLeft().toLowerCase();\n    var value = sides.join(\"=\");\n    if (key === \"expires\") {\n      cookie.expires = new Date(value);\n    } else if (key === \"max-age\") {\n      cookie.maxAge = parseInt(value, 10);\n    } else if (key === \"secure\") {\n      cookie.secure = true;\n    } else if (key === \"httponly\") {\n      cookie.httpOnly = true;\n    } else if (key === \"samesite\") {\n      cookie.sameSite = value;\n    } else {\n      cookie[key] = value;\n    }\n  });\n  return cookie;\n}\nfunction parseNameValuePair(nameValuePairStr) {\n  // Parses name-value-pair according to rfc6265bis draft\n\n  var name = \"\";\n  var value = \"\";\n  var nameValueArr = nameValuePairStr.split(\"=\");\n  if (nameValueArr.length > 1) {\n    name = nameValueArr.shift();\n    value = nameValueArr.join(\"=\"); // everything after the first =, joined by a \"=\" if there was more than one part\n  } else {\n    value = nameValuePairStr;\n  }\n  return {\n    name: name,\n    value: value\n  };\n}\nfunction parse(input, options) {\n  options = options ? Object.assign({}, defaultParseOptions, options) : defaultParseOptions;\n  if (!input) {\n    if (!options.map) {\n      return [];\n    } else {\n      return {};\n    }\n  }\n  if (input.headers) {\n    if (typeof input.headers.getSetCookie === \"function\") {\n      // for fetch responses - they combine headers of the same type in the headers array,\n      // but getSetCookie returns an uncombined array\n      input = input.headers.getSetCookie();\n    } else if (input.headers[\"set-cookie\"]) {\n      // fast-path for node.js (which automatically normalizes header names to lower-case\n      input = input.headers[\"set-cookie\"];\n    } else {\n      // slow-path for other environments - see #25\n      var sch = input.headers[Object.keys(input.headers).find(function (key) {\n        return key.toLowerCase() === \"set-cookie\";\n      })];\n      // warn if called on a request-like object with a cookie header rather than a set-cookie header - see #34, 36\n      if (!sch && input.headers.cookie && !options.silent) {\n        console.warn(\"Warning: set-cookie-parser appears to have been called on a request object. It is designed to parse Set-Cookie headers from responses, not Cookie headers from requests. Set the option {silent: true} to suppress this warning.\");\n      }\n      input = sch;\n    }\n  }\n  if (!Array.isArray(input)) {\n    input = [input];\n  }\n  options = options ? Object.assign({}, defaultParseOptions, options) : defaultParseOptions;\n  if (!options.map) {\n    return input.filter(isNonEmptyString).map(function (str) {\n      return parseString(str, options);\n    });\n  } else {\n    var cookies = {};\n    return input.filter(isNonEmptyString).reduce(function (cookies, str) {\n      var cookie = parseString(str, options);\n      cookies[cookie.name] = cookie;\n      return cookies;\n    }, cookies);\n  }\n}\n\n/*\n  Set-Cookie header field-values are sometimes comma joined in one string. This splits them without choking on commas\n  that are within a single set-cookie field-value, such as in the Expires portion.\n\n  This is uncommon, but explicitly allowed - see https://tools.ietf.org/html/rfc2616#section-4.2\n  Node.js does this for every header *except* set-cookie - see https://github.com/nodejs/node/blob/d5e363b77ebaf1caf67cd7528224b651c86815c1/lib/_http_incoming.js#L128\n  React Native's fetch does this for *every* header, including set-cookie.\n\n  Based on: https://github.com/google/j2objc/commit/16820fdbc8f76ca0c33472810ce0cb03d20efe25\n  Credits to: https://github.com/tomball for original and https://github.com/chrusart for JavaScript implementation\n*/\nfunction splitCookiesString(cookiesString) {\n  if (Array.isArray(cookiesString)) {\n    return cookiesString;\n  }\n  if (typeof cookiesString !== \"string\") {\n    return [];\n  }\n  var cookiesStrings = [];\n  var pos = 0;\n  var start;\n  var ch;\n  var lastComma;\n  var nextStart;\n  var cookiesSeparatorFound;\n  function skipWhitespace() {\n    while (pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))) {\n      pos += 1;\n    }\n    return pos < cookiesString.length;\n  }\n  function notSpecialChar() {\n    ch = cookiesString.charAt(pos);\n    return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n  }\n  while (pos < cookiesString.length) {\n    start = pos;\n    cookiesSeparatorFound = false;\n    while (skipWhitespace()) {\n      ch = cookiesString.charAt(pos);\n      if (ch === \",\") {\n        // ',' is a cookie separator if we have later first '=', not ';' or ','\n        lastComma = pos;\n        pos += 1;\n        skipWhitespace();\n        nextStart = pos;\n        while (pos < cookiesString.length && notSpecialChar()) {\n          pos += 1;\n        }\n\n        // currently special character\n        if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n          // we found cookies separator\n          cookiesSeparatorFound = true;\n          // pos is inside the next cookie, so back up and return it.\n          pos = nextStart;\n          cookiesStrings.push(cookiesString.substring(start, lastComma));\n          start = pos;\n        } else {\n          // in param ',' or param separator ';',\n          // we continue from that comma\n          pos = lastComma + 1;\n        }\n      } else {\n        pos += 1;\n      }\n    }\n    if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n      cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n    }\n  }\n  return cookiesStrings;\n}\nmodule.exports = parse;\nmodule.exports.parse = parse;\nmodule.exports.parseString = parseString;\nmodule.exports.splitCookiesString = splitCookiesString;\n\n//# sourceURL=webpack://my-app/../../set-cookie-parser/lib/set-cookie.js?");

/***/ }),

/***/ "../../set-function-length/index.js":
/*!******************************************!*\
  !*** ../../set-function-length/index.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar GetIntrinsic = __webpack_require__(/*! get-intrinsic */ \"../../get-intrinsic/index.js\");\nvar define = __webpack_require__(/*! define-data-property */ \"../../define-data-property/index.js\");\nvar hasDescriptors = __webpack_require__(/*! has-property-descriptors */ \"../../has-property-descriptors/index.js\")();\nvar gOPD = __webpack_require__(/*! gopd */ \"../../gopd/index.js\");\nvar $TypeError = __webpack_require__(/*! es-errors/type */ \"../../es-errors/type.js\");\nvar $floor = GetIntrinsic('%Math.floor%');\n\n/** @type {import('.')} */\nmodule.exports = function setFunctionLength(fn, length) {\n  if (typeof fn !== 'function') {\n    throw new $TypeError('`fn` is not a function');\n  }\n  if (typeof length !== 'number' || length < 0 || length > 0xFFFFFFFF || $floor(length) !== length) {\n    throw new $TypeError('`length` must be a positive 32-bit integer');\n  }\n  var loose = arguments.length > 2 && !!arguments[2];\n  var functionLengthIsConfigurable = true;\n  var functionLengthIsWritable = true;\n  if ('length' in fn && gOPD) {\n    var desc = gOPD(fn, 'length');\n    if (desc && !desc.configurable) {\n      functionLengthIsConfigurable = false;\n    }\n    if (desc && !desc.writable) {\n      functionLengthIsWritable = false;\n    }\n  }\n  if (functionLengthIsConfigurable || functionLengthIsWritable || !loose) {\n    if (hasDescriptors) {\n      define( /** @type {Parameters<define>[0]} */fn, 'length', length, true, true);\n    } else {\n      define( /** @type {Parameters<define>[0]} */fn, 'length', length);\n    }\n  }\n  return fn;\n};\n\n//# sourceURL=webpack://my-app/../../set-function-length/index.js?");

/***/ }),

/***/ "../../strict-event-emitter/lib/Emitter.js":
/*!*************************************************!*\
  !*** ../../strict-event-emitter/lib/Emitter.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.Emitter = void 0;\nconst MemoryLeakError_1 = __webpack_require__(/*! ./MemoryLeakError */ \"../../strict-event-emitter/lib/MemoryLeakError.js\");\n/**\n * Node.js-compatible implementation of `EventEmitter`.\n *\n * @example\n * const emitter = new Emitter<{ hello: [string] }>()\n * emitter.on('hello', (name) => console.log(name))\n * emitter.emit('hello', 'John')\n */\nclass Emitter {\n  constructor() {\n    this.events = new Map();\n    this.maxListeners = Emitter.defaultMaxListeners;\n    this.hasWarnedAboutPotentialMemoryLeak = false;\n  }\n  static listenerCount(emitter, eventName) {\n    return emitter.listenerCount(eventName);\n  }\n  _emitInternalEvent(internalEventName, eventName, listener) {\n    this.emit(internalEventName,\n    // Anything to make TypeScript happy.\n    ...[eventName, listener]);\n  }\n  _getListeners(eventName) {\n    return this.events.get(eventName) || [];\n  }\n  _removeListener(listeners, listener) {\n    const index = listeners.indexOf(listener);\n    if (index > -1) {\n      listeners.splice(index, 1);\n    }\n    return [];\n  }\n  _wrapOnceListener(eventName, listener) {\n    const onceListener = (...data) => {\n      this.removeListener(eventName, onceListener);\n      listener.apply(this, data);\n    };\n    return onceListener;\n  }\n  setMaxListeners(maxListeners) {\n    this.maxListeners = maxListeners;\n    return this;\n  }\n  /**\n   * Returns the current max listener value for the `Emitter` which is\n   * either set by `emitter.setMaxListeners(n)` or defaults to\n   * `Emitter.defaultMaxListeners`.\n   */\n  getMaxListeners() {\n    return this.maxListeners;\n  }\n  /**\n   * Returns an array listing the events for which the emitter has registered listeners.\n   * The values in the array will be strings or Symbols.\n   */\n  eventNames() {\n    return Array.from(this.events.keys());\n  }\n  /**\n   * Synchronously calls each of the listeners registered for the event named `eventName`,\n   * in the order they were registered, passing the supplied arguments to each.\n   * Returns `true` if the event has listeners, `false` otherwise.\n   *\n   * @example\n   * const emitter = new Emitter<{ hello: [string] }>()\n   * emitter.emit('hello', 'John')\n   */\n  emit(eventName, ...data) {\n    const listeners = this._getListeners(eventName);\n    listeners.forEach(listener => {\n      listener.apply(this, data);\n    });\n    return listeners.length > 0;\n  }\n  addListener(eventName, listener) {\n    // Emit the `newListener` event before adding the listener.\n    this._emitInternalEvent('newListener', eventName, listener);\n    const nextListeners = this._getListeners(eventName).concat(listener);\n    this.events.set(eventName, nextListeners);\n    if (this.maxListeners > 0 && this.listenerCount(eventName) > this.maxListeners && !this.hasWarnedAboutPotentialMemoryLeak) {\n      this.hasWarnedAboutPotentialMemoryLeak = true;\n      const memoryLeakWarning = new MemoryLeakError_1.MemoryLeakError(this, eventName, this.listenerCount(eventName));\n      console.warn(memoryLeakWarning);\n    }\n    return this;\n  }\n  on(eventName, listener) {\n    return this.addListener(eventName, listener);\n  }\n  once(eventName, listener) {\n    return this.addListener(eventName, this._wrapOnceListener(eventName, listener));\n  }\n  prependListener(eventName, listener) {\n    const listeners = this._getListeners(eventName);\n    if (listeners.length > 0) {\n      const nextListeners = [listener].concat(listeners);\n      this.events.set(eventName, nextListeners);\n    } else {\n      this.events.set(eventName, listeners.concat(listener));\n    }\n    return this;\n  }\n  prependOnceListener(eventName, listener) {\n    return this.prependListener(eventName, this._wrapOnceListener(eventName, listener));\n  }\n  removeListener(eventName, listener) {\n    const listeners = this._getListeners(eventName);\n    if (listeners.length > 0) {\n      this._removeListener(listeners, listener);\n      this.events.set(eventName, listeners);\n      // Emit the `removeListener` event after removing the listener.\n      this._emitInternalEvent('removeListener', eventName, listener);\n    }\n    return this;\n  }\n  /**\n   * Alias for `emitter.removeListener()`.\n   *\n   * @example\n   * emitter.off('hello', listener)\n   */\n  off(eventName, listener) {\n    return this.removeListener(eventName, listener);\n  }\n  removeAllListeners(eventName) {\n    if (eventName) {\n      this.events.delete(eventName);\n    } else {\n      this.events.clear();\n    }\n    return this;\n  }\n  /**\n   * Returns a copy of the array of listeners for the event named `eventName`.\n   */\n  listeners(eventName) {\n    return Array.from(this._getListeners(eventName));\n  }\n  /**\n   * Returns the number of listeners listening to the event named `eventName`.\n   */\n  listenerCount(eventName) {\n    return this._getListeners(eventName).length;\n  }\n  rawListeners(eventName) {\n    return this.listeners(eventName);\n  }\n}\nexports.Emitter = Emitter;\nEmitter.defaultMaxListeners = 10;\n\n//# sourceURL=webpack://my-app/../../strict-event-emitter/lib/Emitter.js?");

/***/ }),

/***/ "../../strict-event-emitter/lib/MemoryLeakError.js":
/*!*********************************************************!*\
  !*** ../../strict-event-emitter/lib/MemoryLeakError.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.MemoryLeakError = void 0;\nclass MemoryLeakError extends Error {\n  constructor(emitter, type, count) {\n    super(`Possible EventEmitter memory leak detected. ${count} ${type.toString()} listeners added. Use emitter.setMaxListeners() to increase limit`);\n    this.emitter = emitter;\n    this.type = type;\n    this.count = count;\n    this.name = 'MaxListenersExceededWarning';\n  }\n}\nexports.MemoryLeakError = MemoryLeakError;\n\n//# sourceURL=webpack://my-app/../../strict-event-emitter/lib/MemoryLeakError.js?");

/***/ }),

/***/ "../../strict-event-emitter/lib/index.js":
/*!***********************************************!*\
  !*** ../../strict-event-emitter/lib/index.js ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __exportStar = this && this.__exportStar || function (m, exports) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\n__exportStar(__webpack_require__(/*! ./Emitter */ \"../../strict-event-emitter/lib/Emitter.js\"), exports);\n__exportStar(__webpack_require__(/*! ./MemoryLeakError */ \"../../strict-event-emitter/lib/MemoryLeakError.js\"), exports);\n\n//# sourceURL=webpack://my-app/../../strict-event-emitter/lib/index.js?");

/***/ }),

/***/ "../../util/support/isBufferBrowser.js":
/*!*********************************************!*\
  !*** ../../util/support/isBufferBrowser.js ***!
  \*********************************************/
/***/ ((module) => {

eval("module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object' && typeof arg.copy === 'function' && typeof arg.fill === 'function' && typeof arg.readUInt8 === 'function';\n};\n\n//# sourceURL=webpack://my-app/../../util/support/isBufferBrowser.js?");

/***/ }),

/***/ "../../util/support/types.js":
/*!***********************************!*\
  !*** ../../util/support/types.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("// Currently in sync with Node.js lib/internal/util/types.js\n// https://github.com/nodejs/node/commit/112cc7c27551254aa2b17098fb774867f05ed0d9\n\n\n\nvar isArgumentsObject = __webpack_require__(/*! is-arguments */ \"../../is-arguments/index.js\");\nvar isGeneratorFunction = __webpack_require__(/*! is-generator-function */ \"../../is-generator-function/index.js\");\nvar whichTypedArray = __webpack_require__(/*! which-typed-array */ \"../../which-typed-array/index.js\");\nvar isTypedArray = __webpack_require__(/*! is-typed-array */ \"../../is-typed-array/index.js\");\nfunction uncurryThis(f) {\n  return f.call.bind(f);\n}\nvar BigIntSupported = typeof BigInt !== 'undefined';\nvar SymbolSupported = typeof Symbol !== 'undefined';\nvar ObjectToString = uncurryThis(Object.prototype.toString);\nvar numberValue = uncurryThis(Number.prototype.valueOf);\nvar stringValue = uncurryThis(String.prototype.valueOf);\nvar booleanValue = uncurryThis(Boolean.prototype.valueOf);\nif (BigIntSupported) {\n  var bigIntValue = uncurryThis(BigInt.prototype.valueOf);\n}\nif (SymbolSupported) {\n  var symbolValue = uncurryThis(Symbol.prototype.valueOf);\n}\nfunction checkBoxedPrimitive(value, prototypeValueOf) {\n  if (typeof value !== 'object') {\n    return false;\n  }\n  try {\n    prototypeValueOf(value);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nexports.isArgumentsObject = isArgumentsObject;\nexports.isGeneratorFunction = isGeneratorFunction;\nexports.isTypedArray = isTypedArray;\n\n// Taken from here and modified for better browser support\n// https://github.com/sindresorhus/p-is-promise/blob/cda35a513bda03f977ad5cde3a079d237e82d7ef/index.js\nfunction isPromise(input) {\n  return typeof Promise !== 'undefined' && input instanceof Promise || input !== null && typeof input === 'object' && typeof input.then === 'function' && typeof input.catch === 'function';\n}\nexports.isPromise = isPromise;\nfunction isArrayBufferView(value) {\n  if (typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView) {\n    return ArrayBuffer.isView(value);\n  }\n  return isTypedArray(value) || isDataView(value);\n}\nexports.isArrayBufferView = isArrayBufferView;\nfunction isUint8Array(value) {\n  return whichTypedArray(value) === 'Uint8Array';\n}\nexports.isUint8Array = isUint8Array;\nfunction isUint8ClampedArray(value) {\n  return whichTypedArray(value) === 'Uint8ClampedArray';\n}\nexports.isUint8ClampedArray = isUint8ClampedArray;\nfunction isUint16Array(value) {\n  return whichTypedArray(value) === 'Uint16Array';\n}\nexports.isUint16Array = isUint16Array;\nfunction isUint32Array(value) {\n  return whichTypedArray(value) === 'Uint32Array';\n}\nexports.isUint32Array = isUint32Array;\nfunction isInt8Array(value) {\n  return whichTypedArray(value) === 'Int8Array';\n}\nexports.isInt8Array = isInt8Array;\nfunction isInt16Array(value) {\n  return whichTypedArray(value) === 'Int16Array';\n}\nexports.isInt16Array = isInt16Array;\nfunction isInt32Array(value) {\n  return whichTypedArray(value) === 'Int32Array';\n}\nexports.isInt32Array = isInt32Array;\nfunction isFloat32Array(value) {\n  return whichTypedArray(value) === 'Float32Array';\n}\nexports.isFloat32Array = isFloat32Array;\nfunction isFloat64Array(value) {\n  return whichTypedArray(value) === 'Float64Array';\n}\nexports.isFloat64Array = isFloat64Array;\nfunction isBigInt64Array(value) {\n  return whichTypedArray(value) === 'BigInt64Array';\n}\nexports.isBigInt64Array = isBigInt64Array;\nfunction isBigUint64Array(value) {\n  return whichTypedArray(value) === 'BigUint64Array';\n}\nexports.isBigUint64Array = isBigUint64Array;\nfunction isMapToString(value) {\n  return ObjectToString(value) === '[object Map]';\n}\nisMapToString.working = typeof Map !== 'undefined' && isMapToString(new Map());\nfunction isMap(value) {\n  if (typeof Map === 'undefined') {\n    return false;\n  }\n  return isMapToString.working ? isMapToString(value) : value instanceof Map;\n}\nexports.isMap = isMap;\nfunction isSetToString(value) {\n  return ObjectToString(value) === '[object Set]';\n}\nisSetToString.working = typeof Set !== 'undefined' && isSetToString(new Set());\nfunction isSet(value) {\n  if (typeof Set === 'undefined') {\n    return false;\n  }\n  return isSetToString.working ? isSetToString(value) : value instanceof Set;\n}\nexports.isSet = isSet;\nfunction isWeakMapToString(value) {\n  return ObjectToString(value) === '[object WeakMap]';\n}\nisWeakMapToString.working = typeof WeakMap !== 'undefined' && isWeakMapToString(new WeakMap());\nfunction isWeakMap(value) {\n  if (typeof WeakMap === 'undefined') {\n    return false;\n  }\n  return isWeakMapToString.working ? isWeakMapToString(value) : value instanceof WeakMap;\n}\nexports.isWeakMap = isWeakMap;\nfunction isWeakSetToString(value) {\n  return ObjectToString(value) === '[object WeakSet]';\n}\nisWeakSetToString.working = typeof WeakSet !== 'undefined' && isWeakSetToString(new WeakSet());\nfunction isWeakSet(value) {\n  return isWeakSetToString(value);\n}\nexports.isWeakSet = isWeakSet;\nfunction isArrayBufferToString(value) {\n  return ObjectToString(value) === '[object ArrayBuffer]';\n}\nisArrayBufferToString.working = typeof ArrayBuffer !== 'undefined' && isArrayBufferToString(new ArrayBuffer());\nfunction isArrayBuffer(value) {\n  if (typeof ArrayBuffer === 'undefined') {\n    return false;\n  }\n  return isArrayBufferToString.working ? isArrayBufferToString(value) : value instanceof ArrayBuffer;\n}\nexports.isArrayBuffer = isArrayBuffer;\nfunction isDataViewToString(value) {\n  return ObjectToString(value) === '[object DataView]';\n}\nisDataViewToString.working = typeof ArrayBuffer !== 'undefined' && typeof DataView !== 'undefined' && isDataViewToString(new DataView(new ArrayBuffer(1), 0, 1));\nfunction isDataView(value) {\n  if (typeof DataView === 'undefined') {\n    return false;\n  }\n  return isDataViewToString.working ? isDataViewToString(value) : value instanceof DataView;\n}\nexports.isDataView = isDataView;\n\n// Store a copy of SharedArrayBuffer in case it's deleted elsewhere\nvar SharedArrayBufferCopy = typeof SharedArrayBuffer !== 'undefined' ? SharedArrayBuffer : undefined;\nfunction isSharedArrayBufferToString(value) {\n  return ObjectToString(value) === '[object SharedArrayBuffer]';\n}\nfunction isSharedArrayBuffer(value) {\n  if (typeof SharedArrayBufferCopy === 'undefined') {\n    return false;\n  }\n  if (typeof isSharedArrayBufferToString.working === 'undefined') {\n    isSharedArrayBufferToString.working = isSharedArrayBufferToString(new SharedArrayBufferCopy());\n  }\n  return isSharedArrayBufferToString.working ? isSharedArrayBufferToString(value) : value instanceof SharedArrayBufferCopy;\n}\nexports.isSharedArrayBuffer = isSharedArrayBuffer;\nfunction isAsyncFunction(value) {\n  return ObjectToString(value) === '[object AsyncFunction]';\n}\nexports.isAsyncFunction = isAsyncFunction;\nfunction isMapIterator(value) {\n  return ObjectToString(value) === '[object Map Iterator]';\n}\nexports.isMapIterator = isMapIterator;\nfunction isSetIterator(value) {\n  return ObjectToString(value) === '[object Set Iterator]';\n}\nexports.isSetIterator = isSetIterator;\nfunction isGeneratorObject(value) {\n  return ObjectToString(value) === '[object Generator]';\n}\nexports.isGeneratorObject = isGeneratorObject;\nfunction isWebAssemblyCompiledModule(value) {\n  return ObjectToString(value) === '[object WebAssembly.Module]';\n}\nexports.isWebAssemblyCompiledModule = isWebAssemblyCompiledModule;\nfunction isNumberObject(value) {\n  return checkBoxedPrimitive(value, numberValue);\n}\nexports.isNumberObject = isNumberObject;\nfunction isStringObject(value) {\n  return checkBoxedPrimitive(value, stringValue);\n}\nexports.isStringObject = isStringObject;\nfunction isBooleanObject(value) {\n  return checkBoxedPrimitive(value, booleanValue);\n}\nexports.isBooleanObject = isBooleanObject;\nfunction isBigIntObject(value) {\n  return BigIntSupported && checkBoxedPrimitive(value, bigIntValue);\n}\nexports.isBigIntObject = isBigIntObject;\nfunction isSymbolObject(value) {\n  return SymbolSupported && checkBoxedPrimitive(value, symbolValue);\n}\nexports.isSymbolObject = isSymbolObject;\nfunction isBoxedPrimitive(value) {\n  return isNumberObject(value) || isStringObject(value) || isBooleanObject(value) || isBigIntObject(value) || isSymbolObject(value);\n}\nexports.isBoxedPrimitive = isBoxedPrimitive;\nfunction isAnyArrayBuffer(value) {\n  return typeof Uint8Array !== 'undefined' && (isArrayBuffer(value) || isSharedArrayBuffer(value));\n}\nexports.isAnyArrayBuffer = isAnyArrayBuffer;\n['isProxy', 'isExternal', 'isModuleNamespaceObject'].forEach(function (method) {\n  Object.defineProperty(exports, method, {\n    enumerable: false,\n    value: function () {\n      throw new Error(method + ' is not supported in userland');\n    }\n  });\n});\n\n//# sourceURL=webpack://my-app/../../util/support/types.js?");

/***/ }),

/***/ "../../util/util.js":
/*!**************************!*\
  !*** ../../util/util.js ***!
  \**************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors || function getOwnPropertyDescriptors(obj) {\n  var keys = Object.keys(obj);\n  var descriptors = {};\n  for (var i = 0; i < keys.length; i++) {\n    descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n  }\n  return descriptors;\n};\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function (f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function (x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s':\n        return String(args[i++]);\n      case '%d':\n        return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function (fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Allow for deprecating things in the process of starting up.\n  if (typeof process === 'undefined') {\n    return function () {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n  return deprecated;\n};\nvar debugs = {};\nvar debugEnvRegex = /^$/;\nif (process.env.NODE_DEBUG) {\n  var debugEnv = process.env.NODE_DEBUG;\n  debugEnv = debugEnv.replace(/[|\\\\{}()[\\]^$+?.]/g, '\\\\$&').replace(/\\*/g, '.*').replace(/,/g, '$|^').toUpperCase();\n  debugEnvRegex = new RegExp('^' + debugEnv + '$', 'i');\n}\nexports.debuglog = function (set) {\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (debugEnvRegex.test(set)) {\n      var pid = process.pid;\n      debugs[set] = function () {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function () {};\n    }\n  }\n  return debugs[set];\n};\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold': [1, 22],\n  'italic': [3, 23],\n  'underline': [4, 24],\n  'inverse': [7, 27],\n  'white': [37, 39],\n  'grey': [90, 39],\n  'black': [30, 39],\n  'blue': [34, 39],\n  'cyan': [36, 39],\n  'green': [32, 39],\n  'magenta': [35, 39],\n  'red': [31, 39],\n  'yellow': [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str + '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\nfunction arrayToHash(array) {\n  var hash = {};\n  array.forEach(function (val, idx) {\n    hash[val] = true;\n  });\n  return hash;\n}\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect && value && isFunction(value.inspect) &&\n  // Filter out the util module, it's inspect function is special\n  value.inspect !== exports.inspect &&\n  // Also filter out any prototype objects using the circular check.\n  !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value) && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n  var base = '',\n    array = false,\n    braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n  ctx.seen.push(value);\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function (key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n  ctx.seen.pop();\n  return reduceToSingleString(output, base, braces);\n}\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value)) return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '').replace(/'/g, \"\\\\'\").replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value)) return ctx.stylize('' + value, 'number');\n  if (isBoolean(value)) return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value)) return ctx.stylize('null', 'null');\n}\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function (key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, key, true));\n    }\n  });\n  return output;\n}\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || {\n    value: value[key]\n  };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function (line) {\n            return '  ' + line;\n          }).join('\\n').slice(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function (line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.slice(1, -1);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\").replace(/\\\\\"/g, '\"').replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n  return name + ': ' + str;\n}\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function (prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n  if (length > 60) {\n    return braces[0] + (base === '' ? '' : base + '\\n ') + ' ' + output.join(',\\n  ') + ' ' + braces[1];\n  }\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nexports.types = __webpack_require__(/*! ./support/types */ \"../../util/support/types.js\");\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\nexports.types.isRegExp = isRegExp;\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\nexports.types.isDate = isDate;\nfunction isError(e) {\n  return isObject(e) && (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\nexports.types.isNativeError = isError;\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\nfunction isPrimitive(arg) {\n  return arg === null || typeof arg === 'boolean' || typeof arg === 'number' || typeof arg === 'string' || typeof arg === 'symbol' ||\n  // ES6 symbol\n  typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\nexports.isBuffer = __webpack_require__(/*! ./support/isBuffer */ \"../../util/support/isBufferBrowser.js\");\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()), pad(d.getMinutes()), pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function () {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = __webpack_require__(/*! inherits */ \"../../inherits/inherits_browser.js\");\nexports._extend = function (origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function') throw new TypeError('The \"original\" argument must be of type Function');\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn,\n      enumerable: false,\n      writable: false,\n      configurable: true\n    });\n    return fn;\n  }\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n    return promise;\n  }\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn,\n    enumerable: false,\n    writable: false,\n    configurable: true\n  });\n  return Object.defineProperties(fn, getOwnPropertyDescriptors(original));\n};\nexports.promisify.custom = kCustomPromisifiedSymbol;\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function () {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args).then(function (ret) {\n      process.nextTick(cb.bind(null, null, ret));\n    }, function (rej) {\n      process.nextTick(callbackifyOnRejected.bind(null, rej, cb));\n    });\n  }\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified, getOwnPropertyDescriptors(original));\n  return callbackified;\n}\nexports.callbackify = callbackify;\n\n//# sourceURL=webpack://my-app/../../util/util.js?");

/***/ }),

/***/ "../../web-encoding/src/lib.js":
/*!*************************************!*\
  !*** ../../web-encoding/src/lib.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nexports.TextEncoder = typeof TextEncoder !== \"undefined\" ? TextEncoder : (__webpack_require__(/*! util */ \"../../util/util.js\").TextEncoder);\nexports.TextDecoder = typeof TextDecoder !== \"undefined\" ? TextDecoder : (__webpack_require__(/*! util */ \"../../util/util.js\").TextDecoder);\n\n//# sourceURL=webpack://my-app/../../web-encoding/src/lib.js?");

/***/ }),

/***/ "../../which-typed-array/index.js":
/*!****************************************!*\
  !*** ../../which-typed-array/index.js ***!
  \****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar forEach = __webpack_require__(/*! for-each */ \"../../for-each/index.js\");\nvar availableTypedArrays = __webpack_require__(/*! available-typed-arrays */ \"../../available-typed-arrays/index.js\");\nvar callBind = __webpack_require__(/*! call-bind */ \"../../call-bind/index.js\");\nvar callBound = __webpack_require__(/*! call-bind/callBound */ \"../../call-bind/callBound.js\");\nvar gOPD = __webpack_require__(/*! gopd */ \"../../gopd/index.js\");\n\n/** @type {(O: object) => string} */\nvar $toString = callBound('Object.prototype.toString');\nvar hasToStringTag = __webpack_require__(/*! has-tostringtag/shams */ \"../../has-tostringtag/shams.js\")();\nvar g = typeof globalThis === 'undefined' ? global : globalThis;\nvar typedArrays = availableTypedArrays();\nvar $slice = callBound('String.prototype.slice');\nvar getPrototypeOf = Object.getPrototypeOf; // require('getprototypeof');\n\n/** @type {<T = unknown>(array: readonly T[], value: unknown) => number} */\nvar $indexOf = callBound('Array.prototype.indexOf', true) || function indexOf(array, value) {\n  for (var i = 0; i < array.length; i += 1) {\n    if (array[i] === value) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n/** @typedef {(receiver: import('.').TypedArray) => string | typeof Uint8Array.prototype.slice.call | typeof Uint8Array.prototype.set.call} Getter */\n/** @type {{ [k in `\\$${import('.').TypedArrayName}`]?: Getter } & { __proto__: null }} */\nvar cache = {\n  __proto__: null\n};\nif (hasToStringTag && gOPD && getPrototypeOf) {\n  forEach(typedArrays, function (typedArray) {\n    var arr = new g[typedArray]();\n    if (Symbol.toStringTag in arr) {\n      var proto = getPrototypeOf(arr);\n      // @ts-expect-error TS won't narrow inside a closure\n      var descriptor = gOPD(proto, Symbol.toStringTag);\n      if (!descriptor) {\n        var superProto = getPrototypeOf(proto);\n        // @ts-expect-error TS won't narrow inside a closure\n        descriptor = gOPD(superProto, Symbol.toStringTag);\n      }\n      // @ts-expect-error TODO: fix\n      cache['$' + typedArray] = callBind(descriptor.get);\n    }\n  });\n} else {\n  forEach(typedArrays, function (typedArray) {\n    var arr = new g[typedArray]();\n    var fn = arr.slice || arr.set;\n    if (fn) {\n      // @ts-expect-error TODO: fix\n      cache['$' + typedArray] = callBind(fn);\n    }\n  });\n}\n\n/** @type {(value: object) => false | import('.').TypedArrayName} */\nvar tryTypedArrays = function tryAllTypedArrays(value) {\n  /** @type {ReturnType<typeof tryAllTypedArrays>} */var found = false;\n  forEach(\n  // eslint-disable-next-line no-extra-parens\n  /** @type {Record<`\\$${TypedArrayName}`, Getter>} */ /** @type {any} */\n  cache, /** @type {(getter: Getter, name: `\\$${import('.').TypedArrayName}`) => void} */\n  function (getter, typedArray) {\n    if (!found) {\n      try {\n        // @ts-expect-error TODO: fix\n        if ('$' + getter(value) === typedArray) {\n          found = $slice(typedArray, 1);\n        }\n      } catch (e) {/**/}\n    }\n  });\n  return found;\n};\n\n/** @type {(value: object) => false | import('.').TypedArrayName} */\nvar trySlices = function tryAllSlices(value) {\n  /** @type {ReturnType<typeof tryAllSlices>} */var found = false;\n  forEach(\n  // eslint-disable-next-line no-extra-parens\n  /** @type {Record<`\\$${TypedArrayName}`, Getter>} */ /** @type {any} */\n  cache, /** @type {(getter: typeof cache, name: `\\$${import('.').TypedArrayName}`) => void} */function (getter, name) {\n    if (!found) {\n      try {\n        // @ts-expect-error TODO: fix\n        getter(value);\n        found = $slice(name, 1);\n      } catch (e) {/**/}\n    }\n  });\n  return found;\n};\n\n/** @type {import('.')} */\nmodule.exports = function whichTypedArray(value) {\n  if (!value || typeof value !== 'object') {\n    return false;\n  }\n  if (!hasToStringTag) {\n    /** @type {string} */\n    var tag = $slice($toString(value), 8, -1);\n    if ($indexOf(typedArrays, tag) > -1) {\n      return tag;\n    }\n    if (tag !== 'Object') {\n      return false;\n    }\n    // node < 0.6 hits here on real Typed Arrays\n    return trySlices(value);\n  }\n  if (!gOPD) {\n    return null;\n  } // unknown engine\n  return tryTypedArrays(value);\n};\n\n//# sourceURL=webpack://my-app/../../which-typed-array/index.js?");

/***/ }),

/***/ "../../available-typed-arrays/index.js":
/*!*********************************************!*\
  !*** ../../available-typed-arrays/index.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar possibleNames = __webpack_require__(/*! possible-typed-array-names */ \"../../possible-typed-array-names/index.js\");\nvar g = typeof globalThis === 'undefined' ? global : globalThis;\n\n/** @type {import('.')} */\nmodule.exports = function availableTypedArrays() {\n  var /** @type {ReturnType<typeof availableTypedArrays>} */out = [];\n  for (var i = 0; i < possibleNames.length; i++) {\n    if (typeof g[possibleNames[i]] === 'function') {\n      // @ts-expect-error\n      out[out.length] = possibleNames[i];\n    }\n  }\n  return out;\n};\n\n//# sourceURL=webpack://my-app/../../available-typed-arrays/index.js?");

/***/ }),

/***/ "../../@babel/runtime/helpers/esm/applyDecoratedDescriptor.js":
/*!********************************************************************!*\
  !*** ../../@babel/runtime/helpers/esm/applyDecoratedDescriptor.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ _applyDecoratedDescriptor)\n/* harmony export */ });\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object.keys(descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n  if (desc.initializer === void 0) {\n    Object.defineProperty(target, property, desc);\n    desc = null;\n  }\n  return desc;\n}\n\n//# sourceURL=webpack://my-app/../../@babel/runtime/helpers/esm/applyDecoratedDescriptor.js?");

/***/ }),

/***/ "../../@babel/runtime/helpers/esm/defineProperty.js":
/*!**********************************************************!*\
  !*** ../../@babel/runtime/helpers/esm/defineProperty.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ _defineProperty)\n/* harmony export */ });\n/* harmony import */ var _toPropertyKey_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./toPropertyKey.js */ \"../../@babel/runtime/helpers/esm/toPropertyKey.js\");\n\nfunction _defineProperty(obj, key, value) {\n  key = (0,_toPropertyKey_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n//# sourceURL=webpack://my-app/../../@babel/runtime/helpers/esm/defineProperty.js?");

/***/ }),

/***/ "../../@babel/runtime/helpers/esm/initializerDefineProperty.js":
/*!*********************************************************************!*\
  !*** ../../@babel/runtime/helpers/esm/initializerDefineProperty.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ _initializerDefineProperty)\n/* harmony export */ });\nfunction _initializerDefineProperty(target, property, descriptor, context) {\n  if (!descriptor) return;\n  Object.defineProperty(target, property, {\n    enumerable: descriptor.enumerable,\n    configurable: descriptor.configurable,\n    writable: descriptor.writable,\n    value: descriptor.initializer ? descriptor.initializer.call(context) : void 0\n  });\n}\n\n//# sourceURL=webpack://my-app/../../@babel/runtime/helpers/esm/initializerDefineProperty.js?");

/***/ }),

/***/ "../../@babel/runtime/helpers/esm/initializerWarningHelper.js":
/*!********************************************************************!*\
  !*** ../../@babel/runtime/helpers/esm/initializerWarningHelper.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ _initializerWarningHelper)\n/* harmony export */ });\nfunction _initializerWarningHelper(descriptor, context) {\n  throw new Error('Decorating class property failed. Please ensure that ' + 'transform-class-properties is enabled and runs after the decorators transform.');\n}\n\n//# sourceURL=webpack://my-app/../../@babel/runtime/helpers/esm/initializerWarningHelper.js?");

/***/ }),

/***/ "../../@babel/runtime/helpers/esm/toPrimitive.js":
/*!*******************************************************!*\
  !*** ../../@babel/runtime/helpers/esm/toPrimitive.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ toPrimitive)\n/* harmony export */ });\n/* harmony import */ var _typeof_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./typeof.js */ \"../../@babel/runtime/helpers/esm/typeof.js\");\n\nfunction toPrimitive(t, r) {\n  if (\"object\" != (0,_typeof_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != (0,_typeof_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\n\n//# sourceURL=webpack://my-app/../../@babel/runtime/helpers/esm/toPrimitive.js?");

/***/ }),

/***/ "../../@babel/runtime/helpers/esm/toPropertyKey.js":
/*!*********************************************************!*\
  !*** ../../@babel/runtime/helpers/esm/toPropertyKey.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ toPropertyKey)\n/* harmony export */ });\n/* harmony import */ var _typeof_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./typeof.js */ \"../../@babel/runtime/helpers/esm/typeof.js\");\n/* harmony import */ var _toPrimitive_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./toPrimitive.js */ \"../../@babel/runtime/helpers/esm/toPrimitive.js\");\n\n\nfunction toPropertyKey(t) {\n  var i = (0,_toPrimitive_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(t, \"string\");\n  return \"symbol\" == (0,_typeof_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(i) ? i : i + \"\";\n}\n\n//# sourceURL=webpack://my-app/../../@babel/runtime/helpers/esm/toPropertyKey.js?");

/***/ }),

/***/ "../../@babel/runtime/helpers/esm/typeof.js":
/*!**************************************************!*\
  !*** ../../@babel/runtime/helpers/esm/typeof.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ _typeof)\n/* harmony export */ });\nfunction _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\n\n//# sourceURL=webpack://my-app/../../@babel/runtime/helpers/esm/typeof.js?");

/***/ }),

/***/ "../../graphql/error/GraphQLError.mjs":
/*!********************************************!*\
  !*** ../../graphql/error/GraphQLError.mjs ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GraphQLError: () => (/* binding */ GraphQLError),\n/* harmony export */   formatError: () => (/* binding */ formatError),\n/* harmony export */   printError: () => (/* binding */ printError)\n/* harmony export */ });\n/* harmony import */ var _jsutils_isObjectLike_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../jsutils/isObjectLike.mjs */ \"../../graphql/jsutils/isObjectLike.mjs\");\n/* harmony import */ var _language_location_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../language/location.mjs */ \"../../graphql/language/location.mjs\");\n/* harmony import */ var _language_printLocation_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../language/printLocation.mjs */ \"../../graphql/language/printLocation.mjs\");\n\n\n\nfunction toNormalizedOptions(args) {\n  const firstArg = args[0];\n  if (firstArg == null || 'kind' in firstArg || 'length' in firstArg) {\n    return {\n      nodes: firstArg,\n      source: args[1],\n      positions: args[2],\n      path: args[3],\n      originalError: args[4],\n      extensions: args[5]\n    };\n  }\n  return firstArg;\n}\n/**\n * A GraphQLError describes an Error found during the parse, validate, or\n * execute phases of performing a GraphQL operation. In addition to a message\n * and stack trace, it also includes information about the locations in a\n * GraphQL document and/or execution result that correspond to the Error.\n */\n\nclass GraphQLError extends Error {\n  /**\n   * An array of `{ line, column }` locations within the source GraphQL document\n   * which correspond to this error.\n   *\n   * Errors during validation often contain multiple locations, for example to\n   * point out two things with the same name. Errors during execution include a\n   * single location, the field which produced the error.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array describing the JSON-path into the execution response which\n   * corresponds to this error. Only included for errors during execution.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array of GraphQL AST Nodes corresponding to this error.\n   */\n\n  /**\n   * The source GraphQL document for the first location of this error.\n   *\n   * Note that if this Error represents more than one node, the source may not\n   * represent nodes after the first node.\n   */\n\n  /**\n   * An array of character offsets within the source GraphQL document\n   * which correspond to this error.\n   */\n\n  /**\n   * The original error thrown from a field resolver during execution.\n   */\n\n  /**\n   * Extension fields to add to the formatted error.\n   */\n\n  /**\n   * @deprecated Please use the `GraphQLErrorOptions` constructor overload instead.\n   */\n  constructor(message, ...rawArgs) {\n    var _this$nodes, _nodeLocations$, _ref;\n    const {\n      nodes,\n      source,\n      positions,\n      path,\n      originalError,\n      extensions\n    } = toNormalizedOptions(rawArgs);\n    super(message);\n    this.name = 'GraphQLError';\n    this.path = path !== null && path !== void 0 ? path : undefined;\n    this.originalError = originalError !== null && originalError !== void 0 ? originalError : undefined; // Compute list of blame nodes.\n\n    this.nodes = undefinedIfEmpty(Array.isArray(nodes) ? nodes : nodes ? [nodes] : undefined);\n    const nodeLocations = undefinedIfEmpty((_this$nodes = this.nodes) === null || _this$nodes === void 0 ? void 0 : _this$nodes.map(node => node.loc).filter(loc => loc != null)); // Compute locations in the source for the given nodes/positions.\n\n    this.source = source !== null && source !== void 0 ? source : nodeLocations === null || nodeLocations === void 0 ? void 0 : (_nodeLocations$ = nodeLocations[0]) === null || _nodeLocations$ === void 0 ? void 0 : _nodeLocations$.source;\n    this.positions = positions !== null && positions !== void 0 ? positions : nodeLocations === null || nodeLocations === void 0 ? void 0 : nodeLocations.map(loc => loc.start);\n    this.locations = positions && source ? positions.map(pos => (0,_language_location_mjs__WEBPACK_IMPORTED_MODULE_0__.getLocation)(source, pos)) : nodeLocations === null || nodeLocations === void 0 ? void 0 : nodeLocations.map(loc => (0,_language_location_mjs__WEBPACK_IMPORTED_MODULE_0__.getLocation)(loc.source, loc.start));\n    const originalExtensions = (0,_jsutils_isObjectLike_mjs__WEBPACK_IMPORTED_MODULE_1__.isObjectLike)(originalError === null || originalError === void 0 ? void 0 : originalError.extensions) ? originalError === null || originalError === void 0 ? void 0 : originalError.extensions : undefined;\n    this.extensions = (_ref = extensions !== null && extensions !== void 0 ? extensions : originalExtensions) !== null && _ref !== void 0 ? _ref : Object.create(null); // Only properties prescribed by the spec should be enumerable.\n    // Keep the rest as non-enumerable.\n\n    Object.defineProperties(this, {\n      message: {\n        writable: true,\n        enumerable: true\n      },\n      name: {\n        enumerable: false\n      },\n      nodes: {\n        enumerable: false\n      },\n      source: {\n        enumerable: false\n      },\n      positions: {\n        enumerable: false\n      },\n      originalError: {\n        enumerable: false\n      }\n    }); // Include (non-enumerable) stack trace.\n\n    /* c8 ignore start */\n    // FIXME: https://github.com/graphql/graphql-js/issues/2317\n\n    if (originalError !== null && originalError !== void 0 && originalError.stack) {\n      Object.defineProperty(this, 'stack', {\n        value: originalError.stack,\n        writable: true,\n        configurable: true\n      });\n    } else if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, GraphQLError);\n    } else {\n      Object.defineProperty(this, 'stack', {\n        value: Error().stack,\n        writable: true,\n        configurable: true\n      });\n    }\n    /* c8 ignore stop */\n  }\n  get [Symbol.toStringTag]() {\n    return 'GraphQLError';\n  }\n  toString() {\n    let output = this.message;\n    if (this.nodes) {\n      for (const node of this.nodes) {\n        if (node.loc) {\n          output += '\\n\\n' + (0,_language_printLocation_mjs__WEBPACK_IMPORTED_MODULE_2__.printLocation)(node.loc);\n        }\n      }\n    } else if (this.source && this.locations) {\n      for (const location of this.locations) {\n        output += '\\n\\n' + (0,_language_printLocation_mjs__WEBPACK_IMPORTED_MODULE_2__.printSourceLocation)(this.source, location);\n      }\n    }\n    return output;\n  }\n  toJSON() {\n    const formattedError = {\n      message: this.message\n    };\n    if (this.locations != null) {\n      formattedError.locations = this.locations;\n    }\n    if (this.path != null) {\n      formattedError.path = this.path;\n    }\n    if (this.extensions != null && Object.keys(this.extensions).length > 0) {\n      formattedError.extensions = this.extensions;\n    }\n    return formattedError;\n  }\n}\nfunction undefinedIfEmpty(array) {\n  return array === undefined || array.length === 0 ? undefined : array;\n}\n/**\n * See: https://spec.graphql.org/draft/#sec-Errors\n */\n\n/**\n * Prints a GraphQLError to a string, representing useful location information\n * about the error's position in the source.\n *\n * @deprecated Please use `error.toString` instead. Will be removed in v17\n */\nfunction printError(error) {\n  return error.toString();\n}\n/**\n * Given a GraphQLError, format it according to the rules described by the\n * Response Format, Errors section of the GraphQL Specification.\n *\n * @deprecated Please use `error.toJSON` instead. Will be removed in v17\n */\n\nfunction formatError(error) {\n  return error.toJSON();\n}\n\n//# sourceURL=webpack://my-app/../../graphql/error/GraphQLError.mjs?");

/***/ }),

/***/ "../../graphql/error/locatedError.mjs":
/*!********************************************!*\
  !*** ../../graphql/error/locatedError.mjs ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   locatedError: () => (/* binding */ locatedError)\n/* harmony export */ });\n/* harmony import */ var _jsutils_toError_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../jsutils/toError.mjs */ \"../../graphql/jsutils/toError.mjs\");\n/* harmony import */ var _GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./GraphQLError.mjs */ \"../../graphql/error/GraphQLError.mjs\");\n\n\n/**\n * Given an arbitrary value, presumably thrown while attempting to execute a\n * GraphQL operation, produce a new GraphQLError aware of the location in the\n * document responsible for the original Error.\n */\n\nfunction locatedError(rawOriginalError, nodes, path) {\n  var _nodes;\n  const originalError = (0,_jsutils_toError_mjs__WEBPACK_IMPORTED_MODULE_0__.toError)(rawOriginalError); // Note: this uses a brand-check to support GraphQL errors originating from other contexts.\n\n  if (isLocatedGraphQLError(originalError)) {\n    return originalError;\n  }\n  return new _GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_1__.GraphQLError(originalError.message, {\n    nodes: (_nodes = originalError.nodes) !== null && _nodes !== void 0 ? _nodes : nodes,\n    source: originalError.source,\n    positions: originalError.positions,\n    path,\n    originalError\n  });\n}\nfunction isLocatedGraphQLError(error) {\n  return Array.isArray(error.path);\n}\n\n//# sourceURL=webpack://my-app/../../graphql/error/locatedError.mjs?");

/***/ }),

/***/ "../../graphql/error/syntaxError.mjs":
/*!*******************************************!*\
  !*** ../../graphql/error/syntaxError.mjs ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   syntaxError: () => (/* binding */ syntaxError)\n/* harmony export */ });\n/* harmony import */ var _GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GraphQLError.mjs */ \"../../graphql/error/GraphQLError.mjs\");\n\n/**\n * Produces a GraphQLError representing a syntax error, containing useful\n * descriptive information about the syntax error's position in the source.\n */\n\nfunction syntaxError(source, position, description) {\n  return new _GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLError(`Syntax Error: ${description}`, {\n    source,\n    positions: [position]\n  });\n}\n\n//# sourceURL=webpack://my-app/../../graphql/error/syntaxError.mjs?");

/***/ }),

/***/ "../../graphql/execution/collectFields.mjs":
/*!*************************************************!*\
  !*** ../../graphql/execution/collectFields.mjs ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   collectFields: () => (/* binding */ collectFields),\n/* harmony export */   collectSubfields: () => (/* binding */ collectSubfields)\n/* harmony export */ });\n/* harmony import */ var _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../language/kinds.mjs */ \"../../graphql/language/kinds.mjs\");\n/* harmony import */ var _type_definition_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../type/definition.mjs */ \"../../graphql/type/definition.mjs\");\n/* harmony import */ var _type_directives_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../type/directives.mjs */ \"../../graphql/type/directives.mjs\");\n/* harmony import */ var _utilities_typeFromAST_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utilities/typeFromAST.mjs */ \"../../graphql/utilities/typeFromAST.mjs\");\n/* harmony import */ var _values_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./values.mjs */ \"../../graphql/execution/values.mjs\");\n\n\n\n\n\n/**\n * Given a selectionSet, collects all of the fields and returns them.\n *\n * CollectFields requires the \"runtime type\" of an object. For a field that\n * returns an Interface or Union type, the \"runtime type\" will be the actual\n * object type returned by that field.\n *\n * @internal\n */\n\nfunction collectFields(schema, fragments, variableValues, runtimeType, selectionSet) {\n  const fields = new Map();\n  collectFieldsImpl(schema, fragments, variableValues, runtimeType, selectionSet, fields, new Set());\n  return fields;\n}\n/**\n * Given an array of field nodes, collects all of the subfields of the passed\n * in fields, and returns them at the end.\n *\n * CollectSubFields requires the \"return type\" of an object. For a field that\n * returns an Interface or Union type, the \"return type\" will be the actual\n * object type returned by that field.\n *\n * @internal\n */\n\nfunction collectSubfields(schema, fragments, variableValues, returnType, fieldNodes) {\n  const subFieldNodes = new Map();\n  const visitedFragmentNames = new Set();\n  for (const node of fieldNodes) {\n    if (node.selectionSet) {\n      collectFieldsImpl(schema, fragments, variableValues, returnType, node.selectionSet, subFieldNodes, visitedFragmentNames);\n    }\n  }\n  return subFieldNodes;\n}\nfunction collectFieldsImpl(schema, fragments, variableValues, runtimeType, selectionSet, fields, visitedFragmentNames) {\n  for (const selection of selectionSet.selections) {\n    switch (selection.kind) {\n      case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.FIELD:\n        {\n          if (!shouldIncludeNode(variableValues, selection)) {\n            continue;\n          }\n          const name = getFieldEntryKey(selection);\n          const fieldList = fields.get(name);\n          if (fieldList !== undefined) {\n            fieldList.push(selection);\n          } else {\n            fields.set(name, [selection]);\n          }\n          break;\n        }\n      case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.INLINE_FRAGMENT:\n        {\n          if (!shouldIncludeNode(variableValues, selection) || !doesFragmentConditionMatch(schema, selection, runtimeType)) {\n            continue;\n          }\n          collectFieldsImpl(schema, fragments, variableValues, runtimeType, selection.selectionSet, fields, visitedFragmentNames);\n          break;\n        }\n      case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.FRAGMENT_SPREAD:\n        {\n          const fragName = selection.name.value;\n          if (visitedFragmentNames.has(fragName) || !shouldIncludeNode(variableValues, selection)) {\n            continue;\n          }\n          visitedFragmentNames.add(fragName);\n          const fragment = fragments[fragName];\n          if (!fragment || !doesFragmentConditionMatch(schema, fragment, runtimeType)) {\n            continue;\n          }\n          collectFieldsImpl(schema, fragments, variableValues, runtimeType, fragment.selectionSet, fields, visitedFragmentNames);\n          break;\n        }\n    }\n  }\n}\n/**\n * Determines if a field should be included based on the `@include` and `@skip`\n * directives, where `@skip` has higher precedence than `@include`.\n */\n\nfunction shouldIncludeNode(variableValues, node) {\n  const skip = (0,_values_mjs__WEBPACK_IMPORTED_MODULE_1__.getDirectiveValues)(_type_directives_mjs__WEBPACK_IMPORTED_MODULE_2__.GraphQLSkipDirective, node, variableValues);\n  if ((skip === null || skip === void 0 ? void 0 : skip.if) === true) {\n    return false;\n  }\n  const include = (0,_values_mjs__WEBPACK_IMPORTED_MODULE_1__.getDirectiveValues)(_type_directives_mjs__WEBPACK_IMPORTED_MODULE_2__.GraphQLIncludeDirective, node, variableValues);\n  if ((include === null || include === void 0 ? void 0 : include.if) === false) {\n    return false;\n  }\n  return true;\n}\n/**\n * Determines if a fragment is applicable to the given type.\n */\n\nfunction doesFragmentConditionMatch(schema, fragment, type) {\n  const typeConditionNode = fragment.typeCondition;\n  if (!typeConditionNode) {\n    return true;\n  }\n  const conditionalType = (0,_utilities_typeFromAST_mjs__WEBPACK_IMPORTED_MODULE_3__.typeFromAST)(schema, typeConditionNode);\n  if (conditionalType === type) {\n    return true;\n  }\n  if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_4__.isAbstractType)(conditionalType)) {\n    return schema.isSubType(conditionalType, type);\n  }\n  return false;\n}\n/**\n * Implements the logic to compute the key of a given field's entry\n */\n\nfunction getFieldEntryKey(node) {\n  return node.alias ? node.alias.value : node.name.value;\n}\n\n//# sourceURL=webpack://my-app/../../graphql/execution/collectFields.mjs?");

/***/ }),

/***/ "../../graphql/execution/execute.mjs":
/*!*******************************************!*\
  !*** ../../graphql/execution/execute.mjs ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assertValidExecutionArguments: () => (/* binding */ assertValidExecutionArguments),\n/* harmony export */   buildExecutionContext: () => (/* binding */ buildExecutionContext),\n/* harmony export */   buildResolveInfo: () => (/* binding */ buildResolveInfo),\n/* harmony export */   defaultFieldResolver: () => (/* binding */ defaultFieldResolver),\n/* harmony export */   defaultTypeResolver: () => (/* binding */ defaultTypeResolver),\n/* harmony export */   execute: () => (/* binding */ execute),\n/* harmony export */   executeSync: () => (/* binding */ executeSync),\n/* harmony export */   getFieldDef: () => (/* binding */ getFieldDef)\n/* harmony export */ });\n/* harmony import */ var _jsutils_devAssert_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../jsutils/devAssert.mjs */ \"../../graphql/jsutils/devAssert.mjs\");\n/* harmony import */ var _jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../jsutils/inspect.mjs */ \"../../graphql/jsutils/inspect.mjs\");\n/* harmony import */ var _jsutils_invariant_mjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../jsutils/invariant.mjs */ \"../../graphql/jsutils/invariant.mjs\");\n/* harmony import */ var _jsutils_isIterableObject_mjs__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../jsutils/isIterableObject.mjs */ \"../../graphql/jsutils/isIterableObject.mjs\");\n/* harmony import */ var _jsutils_isObjectLike_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../jsutils/isObjectLike.mjs */ \"../../graphql/jsutils/isObjectLike.mjs\");\n/* harmony import */ var _jsutils_isPromise_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../jsutils/isPromise.mjs */ \"../../graphql/jsutils/isPromise.mjs\");\n/* harmony import */ var _jsutils_memoize3_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../jsutils/memoize3.mjs */ \"../../graphql/jsutils/memoize3.mjs\");\n/* harmony import */ var _jsutils_Path_mjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../jsutils/Path.mjs */ \"../../graphql/jsutils/Path.mjs\");\n/* harmony import */ var _jsutils_promiseForObject_mjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../jsutils/promiseForObject.mjs */ \"../../graphql/jsutils/promiseForObject.mjs\");\n/* harmony import */ var _jsutils_promiseReduce_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../jsutils/promiseReduce.mjs */ \"../../graphql/jsutils/promiseReduce.mjs\");\n/* harmony import */ var _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../error/GraphQLError.mjs */ \"../../graphql/error/GraphQLError.mjs\");\n/* harmony import */ var _error_locatedError_mjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../error/locatedError.mjs */ \"../../graphql/error/locatedError.mjs\");\n/* harmony import */ var _language_ast_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../language/ast.mjs */ \"../../graphql/language/ast.mjs\");\n/* harmony import */ var _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../language/kinds.mjs */ \"../../graphql/language/kinds.mjs\");\n/* harmony import */ var _type_definition_mjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../type/definition.mjs */ \"../../graphql/type/definition.mjs\");\n/* harmony import */ var _type_introspection_mjs__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../type/introspection.mjs */ \"../../graphql/type/introspection.mjs\");\n/* harmony import */ var _type_validate_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../type/validate.mjs */ \"../../graphql/type/validate.mjs\");\n/* harmony import */ var _collectFields_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./collectFields.mjs */ \"../../graphql/execution/collectFields.mjs\");\n/* harmony import */ var _values_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./values.mjs */ \"../../graphql/execution/values.mjs\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * A memoized collection of relevant subfields with regard to the return\n * type. Memoizing ensures the subfields are not repeatedly calculated, which\n * saves overhead when resolving lists of values.\n */\n\nconst collectSubfields = (0,_jsutils_memoize3_mjs__WEBPACK_IMPORTED_MODULE_0__.memoize3)((exeContext, returnType, fieldNodes) => (0,_collectFields_mjs__WEBPACK_IMPORTED_MODULE_1__.collectSubfields)(exeContext.schema, exeContext.fragments, exeContext.variableValues, returnType, fieldNodes));\n/**\n * Terminology\n *\n * \"Definitions\" are the generic name for top-level statements in the document.\n * Examples of this include:\n * 1) Operations (such as a query)\n * 2) Fragments\n *\n * \"Operations\" are a generic name for requests in the document.\n * Examples of this include:\n * 1) query,\n * 2) mutation\n *\n * \"Selections\" are the definitions that can appear legally and at\n * single level of the query. These include:\n * 1) field references e.g `a`\n * 2) fragment \"spreads\" e.g. `...c`\n * 3) inline fragment \"spreads\" e.g. `...on Type { a }`\n */\n\n/**\n * Data that must be available at all points during query execution.\n *\n * Namely, schema of the type system that is currently executing,\n * and the fragments defined in the query document\n */\n\n/**\n * Implements the \"Executing requests\" section of the GraphQL specification.\n *\n * Returns either a synchronous ExecutionResult (if all encountered resolvers\n * are synchronous), or a Promise of an ExecutionResult that will eventually be\n * resolved and never rejected.\n *\n * If the arguments to this function do not result in a legal execution context,\n * a GraphQLError will be thrown immediately explaining the invalid input.\n */\nfunction execute(args) {\n  // Temporary for v15 to v16 migration. Remove in v17\n  arguments.length < 2 || (0,_jsutils_devAssert_mjs__WEBPACK_IMPORTED_MODULE_2__.devAssert)(false, 'graphql@16 dropped long-deprecated support for positional arguments, please pass an object instead.');\n  const {\n    schema,\n    document,\n    variableValues,\n    rootValue\n  } = args; // If arguments are missing or incorrect, throw an error.\n\n  assertValidExecutionArguments(schema, document, variableValues); // If a valid execution context cannot be created due to incorrect arguments,\n  // a \"Response\" with only errors is returned.\n\n  const exeContext = buildExecutionContext(args); // Return early errors if execution context failed.\n\n  if (!('schema' in exeContext)) {\n    return {\n      errors: exeContext\n    };\n  } // Return a Promise that will eventually resolve to the data described by\n  // The \"Response\" section of the GraphQL specification.\n  //\n  // If errors are encountered while executing a GraphQL field, only that\n  // field and its descendants will be omitted, and sibling fields will still\n  // be executed. An execution which encounters errors will still result in a\n  // resolved Promise.\n  //\n  // Errors from sub-fields of a NonNull type may propagate to the top level,\n  // at which point we still log the error and null the parent field, which\n  // in this case is the entire response.\n\n  try {\n    const {\n      operation\n    } = exeContext;\n    const result = executeOperation(exeContext, operation, rootValue);\n    if ((0,_jsutils_isPromise_mjs__WEBPACK_IMPORTED_MODULE_3__.isPromise)(result)) {\n      return result.then(data => buildResponse(data, exeContext.errors), error => {\n        exeContext.errors.push(error);\n        return buildResponse(null, exeContext.errors);\n      });\n    }\n    return buildResponse(result, exeContext.errors);\n  } catch (error) {\n    exeContext.errors.push(error);\n    return buildResponse(null, exeContext.errors);\n  }\n}\n/**\n * Also implements the \"Executing requests\" section of the GraphQL specification.\n * However, it guarantees to complete synchronously (or throw an error) assuming\n * that all field resolvers are also synchronous.\n */\n\nfunction executeSync(args) {\n  const result = execute(args); // Assert that the execution was synchronous.\n\n  if ((0,_jsutils_isPromise_mjs__WEBPACK_IMPORTED_MODULE_3__.isPromise)(result)) {\n    throw new Error('GraphQL execution failed to complete synchronously.');\n  }\n  return result;\n}\n/**\n * Given a completed execution context and data, build the `{ errors, data }`\n * response defined by the \"Response\" section of the GraphQL specification.\n */\n\nfunction buildResponse(data, errors) {\n  return errors.length === 0 ? {\n    data\n  } : {\n    errors,\n    data\n  };\n}\n/**\n * Essential assertions before executing to provide developer feedback for\n * improper use of the GraphQL library.\n *\n * @internal\n */\n\nfunction assertValidExecutionArguments(schema, document, rawVariableValues) {\n  document || (0,_jsutils_devAssert_mjs__WEBPACK_IMPORTED_MODULE_2__.devAssert)(false, 'Must provide document.'); // If the schema used for execution is invalid, throw an error.\n\n  (0,_type_validate_mjs__WEBPACK_IMPORTED_MODULE_4__.assertValidSchema)(schema); // Variables, if provided, must be an object.\n\n  rawVariableValues == null || (0,_jsutils_isObjectLike_mjs__WEBPACK_IMPORTED_MODULE_5__.isObjectLike)(rawVariableValues) || (0,_jsutils_devAssert_mjs__WEBPACK_IMPORTED_MODULE_2__.devAssert)(false, 'Variables must be provided as an Object where each property is a variable value. Perhaps look to see if an unparsed JSON string was provided.');\n}\n/**\n * Constructs a ExecutionContext object from the arguments passed to\n * execute, which we will pass throughout the other execution methods.\n *\n * Throws a GraphQLError if a valid execution context cannot be created.\n *\n * @internal\n */\n\nfunction buildExecutionContext(args) {\n  var _definition$name, _operation$variableDe;\n  const {\n    schema,\n    document,\n    rootValue,\n    contextValue,\n    variableValues: rawVariableValues,\n    operationName,\n    fieldResolver,\n    typeResolver,\n    subscribeFieldResolver\n  } = args;\n  let operation;\n  const fragments = Object.create(null);\n  for (const definition of document.definitions) {\n    switch (definition.kind) {\n      case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_6__.Kind.OPERATION_DEFINITION:\n        if (operationName == null) {\n          if (operation !== undefined) {\n            return [new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_7__.GraphQLError('Must provide operation name if query contains multiple operations.')];\n          }\n          operation = definition;\n        } else if (((_definition$name = definition.name) === null || _definition$name === void 0 ? void 0 : _definition$name.value) === operationName) {\n          operation = definition;\n        }\n        break;\n      case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_6__.Kind.FRAGMENT_DEFINITION:\n        fragments[definition.name.value] = definition;\n        break;\n      default: // ignore non-executable definitions\n    }\n  }\n  if (!operation) {\n    if (operationName != null) {\n      return [new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_7__.GraphQLError(`Unknown operation named \"${operationName}\".`)];\n    }\n    return [new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_7__.GraphQLError('Must provide an operation.')];\n  } // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n  /* c8 ignore next */\n\n  const variableDefinitions = (_operation$variableDe = operation.variableDefinitions) !== null && _operation$variableDe !== void 0 ? _operation$variableDe : [];\n  const coercedVariableValues = (0,_values_mjs__WEBPACK_IMPORTED_MODULE_8__.getVariableValues)(schema, variableDefinitions, rawVariableValues !== null && rawVariableValues !== void 0 ? rawVariableValues : {}, {\n    maxErrors: 50\n  });\n  if (coercedVariableValues.errors) {\n    return coercedVariableValues.errors;\n  }\n  return {\n    schema,\n    fragments,\n    rootValue,\n    contextValue,\n    operation,\n    variableValues: coercedVariableValues.coerced,\n    fieldResolver: fieldResolver !== null && fieldResolver !== void 0 ? fieldResolver : defaultFieldResolver,\n    typeResolver: typeResolver !== null && typeResolver !== void 0 ? typeResolver : defaultTypeResolver,\n    subscribeFieldResolver: subscribeFieldResolver !== null && subscribeFieldResolver !== void 0 ? subscribeFieldResolver : defaultFieldResolver,\n    errors: []\n  };\n}\n/**\n * Implements the \"Executing operations\" section of the spec.\n */\n\nfunction executeOperation(exeContext, operation, rootValue) {\n  const rootType = exeContext.schema.getRootType(operation.operation);\n  if (rootType == null) {\n    throw new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_7__.GraphQLError(`Schema is not configured to execute ${operation.operation} operation.`, {\n      nodes: operation\n    });\n  }\n  const rootFields = (0,_collectFields_mjs__WEBPACK_IMPORTED_MODULE_1__.collectFields)(exeContext.schema, exeContext.fragments, exeContext.variableValues, rootType, operation.selectionSet);\n  const path = undefined;\n  switch (operation.operation) {\n    case _language_ast_mjs__WEBPACK_IMPORTED_MODULE_9__.OperationTypeNode.QUERY:\n      return executeFields(exeContext, rootType, rootValue, path, rootFields);\n    case _language_ast_mjs__WEBPACK_IMPORTED_MODULE_9__.OperationTypeNode.MUTATION:\n      return executeFieldsSerially(exeContext, rootType, rootValue, path, rootFields);\n    case _language_ast_mjs__WEBPACK_IMPORTED_MODULE_9__.OperationTypeNode.SUBSCRIPTION:\n      // TODO: deprecate `subscribe` and move all logic here\n      // Temporary solution until we finish merging execute and subscribe together\n      return executeFields(exeContext, rootType, rootValue, path, rootFields);\n  }\n}\n/**\n * Implements the \"Executing selection sets\" section of the spec\n * for fields that must be executed serially.\n */\n\nfunction executeFieldsSerially(exeContext, parentType, sourceValue, path, fields) {\n  return (0,_jsutils_promiseReduce_mjs__WEBPACK_IMPORTED_MODULE_10__.promiseReduce)(fields.entries(), (results, [responseName, fieldNodes]) => {\n    const fieldPath = (0,_jsutils_Path_mjs__WEBPACK_IMPORTED_MODULE_11__.addPath)(path, responseName, parentType.name);\n    const result = executeField(exeContext, parentType, sourceValue, fieldNodes, fieldPath);\n    if (result === undefined) {\n      return results;\n    }\n    if ((0,_jsutils_isPromise_mjs__WEBPACK_IMPORTED_MODULE_3__.isPromise)(result)) {\n      return result.then(resolvedResult => {\n        results[responseName] = resolvedResult;\n        return results;\n      });\n    }\n    results[responseName] = result;\n    return results;\n  }, Object.create(null));\n}\n/**\n * Implements the \"Executing selection sets\" section of the spec\n * for fields that may be executed in parallel.\n */\n\nfunction executeFields(exeContext, parentType, sourceValue, path, fields) {\n  const results = Object.create(null);\n  let containsPromise = false;\n  try {\n    for (const [responseName, fieldNodes] of fields.entries()) {\n      const fieldPath = (0,_jsutils_Path_mjs__WEBPACK_IMPORTED_MODULE_11__.addPath)(path, responseName, parentType.name);\n      const result = executeField(exeContext, parentType, sourceValue, fieldNodes, fieldPath);\n      if (result !== undefined) {\n        results[responseName] = result;\n        if ((0,_jsutils_isPromise_mjs__WEBPACK_IMPORTED_MODULE_3__.isPromise)(result)) {\n          containsPromise = true;\n        }\n      }\n    }\n  } catch (error) {\n    if (containsPromise) {\n      // Ensure that any promises returned by other fields are handled, as they may also reject.\n      return (0,_jsutils_promiseForObject_mjs__WEBPACK_IMPORTED_MODULE_12__.promiseForObject)(results).finally(() => {\n        throw error;\n      });\n    }\n    throw error;\n  } // If there are no promises, we can just return the object\n\n  if (!containsPromise) {\n    return results;\n  } // Otherwise, results is a map from field name to the result of resolving that\n  // field, which is possibly a promise. Return a promise that will return this\n  // same map, but with any promises replaced with the values they resolved to.\n\n  return (0,_jsutils_promiseForObject_mjs__WEBPACK_IMPORTED_MODULE_12__.promiseForObject)(results);\n}\n/**\n * Implements the \"Executing fields\" section of the spec\n * In particular, this function figures out the value that the field returns by\n * calling its resolve function, then calls completeValue to complete promises,\n * serialize scalars, or execute the sub-selection-set for objects.\n */\n\nfunction executeField(exeContext, parentType, source, fieldNodes, path) {\n  var _fieldDef$resolve;\n  const fieldDef = getFieldDef(exeContext.schema, parentType, fieldNodes[0]);\n  if (!fieldDef) {\n    return;\n  }\n  const returnType = fieldDef.type;\n  const resolveFn = (_fieldDef$resolve = fieldDef.resolve) !== null && _fieldDef$resolve !== void 0 ? _fieldDef$resolve : exeContext.fieldResolver;\n  const info = buildResolveInfo(exeContext, fieldDef, fieldNodes, parentType, path); // Get the resolve function, regardless of if its result is normal or abrupt (error).\n\n  try {\n    // Build a JS object of arguments from the field.arguments AST, using the\n    // variables scope to fulfill any variable references.\n    // TODO: find a way to memoize, in case this field is within a List type.\n    const args = (0,_values_mjs__WEBPACK_IMPORTED_MODULE_8__.getArgumentValues)(fieldDef, fieldNodes[0], exeContext.variableValues); // The resolve function's optional third argument is a context value that\n    // is provided to every resolve function within an execution. It is commonly\n    // used to represent an authenticated user, or request-specific caches.\n\n    const contextValue = exeContext.contextValue;\n    const result = resolveFn(source, args, contextValue, info);\n    let completed;\n    if ((0,_jsutils_isPromise_mjs__WEBPACK_IMPORTED_MODULE_3__.isPromise)(result)) {\n      completed = result.then(resolved => completeValue(exeContext, returnType, fieldNodes, info, path, resolved));\n    } else {\n      completed = completeValue(exeContext, returnType, fieldNodes, info, path, result);\n    }\n    if ((0,_jsutils_isPromise_mjs__WEBPACK_IMPORTED_MODULE_3__.isPromise)(completed)) {\n      // Note: we don't rely on a `catch` method, but we do expect \"thenable\"\n      // to take a second callback for the error case.\n      return completed.then(undefined, rawError => {\n        const error = (0,_error_locatedError_mjs__WEBPACK_IMPORTED_MODULE_13__.locatedError)(rawError, fieldNodes, (0,_jsutils_Path_mjs__WEBPACK_IMPORTED_MODULE_11__.pathToArray)(path));\n        return handleFieldError(error, returnType, exeContext);\n      });\n    }\n    return completed;\n  } catch (rawError) {\n    const error = (0,_error_locatedError_mjs__WEBPACK_IMPORTED_MODULE_13__.locatedError)(rawError, fieldNodes, (0,_jsutils_Path_mjs__WEBPACK_IMPORTED_MODULE_11__.pathToArray)(path));\n    return handleFieldError(error, returnType, exeContext);\n  }\n}\n/**\n * @internal\n */\n\nfunction buildResolveInfo(exeContext, fieldDef, fieldNodes, parentType, path) {\n  // The resolve function's optional fourth argument is a collection of\n  // information about the current execution state.\n  return {\n    fieldName: fieldDef.name,\n    fieldNodes,\n    returnType: fieldDef.type,\n    parentType,\n    path,\n    schema: exeContext.schema,\n    fragments: exeContext.fragments,\n    rootValue: exeContext.rootValue,\n    operation: exeContext.operation,\n    variableValues: exeContext.variableValues\n  };\n}\nfunction handleFieldError(error, returnType, exeContext) {\n  // If the field type is non-nullable, then it is resolved without any\n  // protection from errors, however it still properly locates the error.\n  if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_14__.isNonNullType)(returnType)) {\n    throw error;\n  } // Otherwise, error protection is applied, logging the error and resolving\n  // a null value for this field if one is encountered.\n\n  exeContext.errors.push(error);\n  return null;\n}\n/**\n * Implements the instructions for completeValue as defined in the\n * \"Value Completion\" section of the spec.\n *\n * If the field type is Non-Null, then this recursively completes the value\n * for the inner type. It throws a field error if that completion returns null,\n * as per the \"Nullability\" section of the spec.\n *\n * If the field type is a List, then this recursively completes the value\n * for the inner type on each item in the list.\n *\n * If the field type is a Scalar or Enum, ensures the completed value is a legal\n * value of the type by calling the `serialize` method of GraphQL type\n * definition.\n *\n * If the field is an abstract type, determine the runtime type of the value\n * and then complete based on that type\n *\n * Otherwise, the field type expects a sub-selection set, and will complete the\n * value by executing all sub-selections.\n */\n\nfunction completeValue(exeContext, returnType, fieldNodes, info, path, result) {\n  // If result is an Error, throw a located error.\n  if (result instanceof Error) {\n    throw result;\n  } // If field type is NonNull, complete for inner type, and throw field error\n  // if result is null.\n\n  if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_14__.isNonNullType)(returnType)) {\n    const completed = completeValue(exeContext, returnType.ofType, fieldNodes, info, path, result);\n    if (completed === null) {\n      throw new Error(`Cannot return null for non-nullable field ${info.parentType.name}.${info.fieldName}.`);\n    }\n    return completed;\n  } // If result value is null or undefined then return null.\n\n  if (result == null) {\n    return null;\n  } // If field type is List, complete each item in the list with the inner type\n\n  if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_14__.isListType)(returnType)) {\n    return completeListValue(exeContext, returnType, fieldNodes, info, path, result);\n  } // If field type is a leaf type, Scalar or Enum, serialize to a valid value,\n  // returning null if serialization is not possible.\n\n  if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_14__.isLeafType)(returnType)) {\n    return completeLeafValue(returnType, result);\n  } // If field type is an abstract type, Interface or Union, determine the\n  // runtime Object type and complete for that type.\n\n  if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_14__.isAbstractType)(returnType)) {\n    return completeAbstractValue(exeContext, returnType, fieldNodes, info, path, result);\n  } // If field type is Object, execute and complete all sub-selections.\n\n  if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_14__.isObjectType)(returnType)) {\n    return completeObjectValue(exeContext, returnType, fieldNodes, info, path, result);\n  }\n  /* c8 ignore next 6 */\n  // Not reachable, all possible output types have been considered.\n\n   false || (0,_jsutils_invariant_mjs__WEBPACK_IMPORTED_MODULE_15__.invariant)(false, 'Cannot complete value of unexpected output type: ' + (0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_16__.inspect)(returnType));\n}\n/**\n * Complete a list value by completing each item in the list with the\n * inner type\n */\n\nfunction completeListValue(exeContext, returnType, fieldNodes, info, path, result) {\n  if (!(0,_jsutils_isIterableObject_mjs__WEBPACK_IMPORTED_MODULE_17__.isIterableObject)(result)) {\n    throw new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_7__.GraphQLError(`Expected Iterable, but did not find one for field \"${info.parentType.name}.${info.fieldName}\".`);\n  } // This is specified as a simple map, however we're optimizing the path\n  // where the list contains no Promises by avoiding creating another Promise.\n\n  const itemType = returnType.ofType;\n  let containsPromise = false;\n  const completedResults = Array.from(result, (item, index) => {\n    // No need to modify the info object containing the path,\n    // since from here on it is not ever accessed by resolver functions.\n    const itemPath = (0,_jsutils_Path_mjs__WEBPACK_IMPORTED_MODULE_11__.addPath)(path, index, undefined);\n    try {\n      let completedItem;\n      if ((0,_jsutils_isPromise_mjs__WEBPACK_IMPORTED_MODULE_3__.isPromise)(item)) {\n        completedItem = item.then(resolved => completeValue(exeContext, itemType, fieldNodes, info, itemPath, resolved));\n      } else {\n        completedItem = completeValue(exeContext, itemType, fieldNodes, info, itemPath, item);\n      }\n      if ((0,_jsutils_isPromise_mjs__WEBPACK_IMPORTED_MODULE_3__.isPromise)(completedItem)) {\n        containsPromise = true; // Note: we don't rely on a `catch` method, but we do expect \"thenable\"\n        // to take a second callback for the error case.\n\n        return completedItem.then(undefined, rawError => {\n          const error = (0,_error_locatedError_mjs__WEBPACK_IMPORTED_MODULE_13__.locatedError)(rawError, fieldNodes, (0,_jsutils_Path_mjs__WEBPACK_IMPORTED_MODULE_11__.pathToArray)(itemPath));\n          return handleFieldError(error, itemType, exeContext);\n        });\n      }\n      return completedItem;\n    } catch (rawError) {\n      const error = (0,_error_locatedError_mjs__WEBPACK_IMPORTED_MODULE_13__.locatedError)(rawError, fieldNodes, (0,_jsutils_Path_mjs__WEBPACK_IMPORTED_MODULE_11__.pathToArray)(itemPath));\n      return handleFieldError(error, itemType, exeContext);\n    }\n  });\n  return containsPromise ? Promise.all(completedResults) : completedResults;\n}\n/**\n * Complete a Scalar or Enum by serializing to a valid value, returning\n * null if serialization is not possible.\n */\n\nfunction completeLeafValue(returnType, result) {\n  const serializedResult = returnType.serialize(result);\n  if (serializedResult == null) {\n    throw new Error(`Expected \\`${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_16__.inspect)(returnType)}.serialize(${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_16__.inspect)(result)})\\` to ` + `return non-nullable value, returned: ${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_16__.inspect)(serializedResult)}`);\n  }\n  return serializedResult;\n}\n/**\n * Complete a value of an abstract type by determining the runtime object type\n * of that value, then complete the value for that type.\n */\n\nfunction completeAbstractValue(exeContext, returnType, fieldNodes, info, path, result) {\n  var _returnType$resolveTy;\n  const resolveTypeFn = (_returnType$resolveTy = returnType.resolveType) !== null && _returnType$resolveTy !== void 0 ? _returnType$resolveTy : exeContext.typeResolver;\n  const contextValue = exeContext.contextValue;\n  const runtimeType = resolveTypeFn(result, contextValue, info, returnType);\n  if ((0,_jsutils_isPromise_mjs__WEBPACK_IMPORTED_MODULE_3__.isPromise)(runtimeType)) {\n    return runtimeType.then(resolvedRuntimeType => completeObjectValue(exeContext, ensureValidRuntimeType(resolvedRuntimeType, exeContext, returnType, fieldNodes, info, result), fieldNodes, info, path, result));\n  }\n  return completeObjectValue(exeContext, ensureValidRuntimeType(runtimeType, exeContext, returnType, fieldNodes, info, result), fieldNodes, info, path, result);\n}\nfunction ensureValidRuntimeType(runtimeTypeName, exeContext, returnType, fieldNodes, info, result) {\n  if (runtimeTypeName == null) {\n    throw new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_7__.GraphQLError(`Abstract type \"${returnType.name}\" must resolve to an Object type at runtime for field \"${info.parentType.name}.${info.fieldName}\". Either the \"${returnType.name}\" type should provide a \"resolveType\" function or each possible type should provide an \"isTypeOf\" function.`, fieldNodes);\n  } // releases before 16.0.0 supported returning `GraphQLObjectType` from `resolveType`\n  // TODO: remove in 17.0.0 release\n\n  if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_14__.isObjectType)(runtimeTypeName)) {\n    throw new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_7__.GraphQLError('Support for returning GraphQLObjectType from resolveType was removed in graphql-js@16.0.0 please return type name instead.');\n  }\n  if (typeof runtimeTypeName !== 'string') {\n    throw new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_7__.GraphQLError(`Abstract type \"${returnType.name}\" must resolve to an Object type at runtime for field \"${info.parentType.name}.${info.fieldName}\" with ` + `value ${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_16__.inspect)(result)}, received \"${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_16__.inspect)(runtimeTypeName)}\".`);\n  }\n  const runtimeType = exeContext.schema.getType(runtimeTypeName);\n  if (runtimeType == null) {\n    throw new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_7__.GraphQLError(`Abstract type \"${returnType.name}\" was resolved to a type \"${runtimeTypeName}\" that does not exist inside the schema.`, {\n      nodes: fieldNodes\n    });\n  }\n  if (!(0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_14__.isObjectType)(runtimeType)) {\n    throw new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_7__.GraphQLError(`Abstract type \"${returnType.name}\" was resolved to a non-object type \"${runtimeTypeName}\".`, {\n      nodes: fieldNodes\n    });\n  }\n  if (!exeContext.schema.isSubType(returnType, runtimeType)) {\n    throw new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_7__.GraphQLError(`Runtime Object type \"${runtimeType.name}\" is not a possible type for \"${returnType.name}\".`, {\n      nodes: fieldNodes\n    });\n  }\n  return runtimeType;\n}\n/**\n * Complete an Object value by executing all sub-selections.\n */\n\nfunction completeObjectValue(exeContext, returnType, fieldNodes, info, path, result) {\n  // Collect sub-fields to execute to complete this value.\n  const subFieldNodes = collectSubfields(exeContext, returnType, fieldNodes); // If there is an isTypeOf predicate function, call it with the\n  // current result. If isTypeOf returns false, then raise an error rather\n  // than continuing execution.\n\n  if (returnType.isTypeOf) {\n    const isTypeOf = returnType.isTypeOf(result, exeContext.contextValue, info);\n    if ((0,_jsutils_isPromise_mjs__WEBPACK_IMPORTED_MODULE_3__.isPromise)(isTypeOf)) {\n      return isTypeOf.then(resolvedIsTypeOf => {\n        if (!resolvedIsTypeOf) {\n          throw invalidReturnTypeError(returnType, result, fieldNodes);\n        }\n        return executeFields(exeContext, returnType, result, path, subFieldNodes);\n      });\n    }\n    if (!isTypeOf) {\n      throw invalidReturnTypeError(returnType, result, fieldNodes);\n    }\n  }\n  return executeFields(exeContext, returnType, result, path, subFieldNodes);\n}\nfunction invalidReturnTypeError(returnType, result, fieldNodes) {\n  return new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_7__.GraphQLError(`Expected value of type \"${returnType.name}\" but got: ${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_16__.inspect)(result)}.`, {\n    nodes: fieldNodes\n  });\n}\n/**\n * If a resolveType function is not given, then a default resolve behavior is\n * used which attempts two strategies:\n *\n * First, See if the provided value has a `__typename` field defined, if so, use\n * that value as name of the resolved type.\n *\n * Otherwise, test each possible type for the abstract type by calling\n * isTypeOf for the object being coerced, returning the first type that matches.\n */\n\nconst defaultTypeResolver = function (value, contextValue, info, abstractType) {\n  // First, look for `__typename`.\n  if ((0,_jsutils_isObjectLike_mjs__WEBPACK_IMPORTED_MODULE_5__.isObjectLike)(value) && typeof value.__typename === 'string') {\n    return value.__typename;\n  } // Otherwise, test each possible type.\n\n  const possibleTypes = info.schema.getPossibleTypes(abstractType);\n  const promisedIsTypeOfResults = [];\n  for (let i = 0; i < possibleTypes.length; i++) {\n    const type = possibleTypes[i];\n    if (type.isTypeOf) {\n      const isTypeOfResult = type.isTypeOf(value, contextValue, info);\n      if ((0,_jsutils_isPromise_mjs__WEBPACK_IMPORTED_MODULE_3__.isPromise)(isTypeOfResult)) {\n        promisedIsTypeOfResults[i] = isTypeOfResult;\n      } else if (isTypeOfResult) {\n        return type.name;\n      }\n    }\n  }\n  if (promisedIsTypeOfResults.length) {\n    return Promise.all(promisedIsTypeOfResults).then(isTypeOfResults => {\n      for (let i = 0; i < isTypeOfResults.length; i++) {\n        if (isTypeOfResults[i]) {\n          return possibleTypes[i].name;\n        }\n      }\n    });\n  }\n};\n/**\n * If a resolve function is not given, then a default resolve behavior is used\n * which takes the property of the source object of the same name as the field\n * and returns it as the result, or if it's a function, returns the result\n * of calling that function while passing along args and context value.\n */\n\nconst defaultFieldResolver = function (source, args, contextValue, info) {\n  // ensure source is a value for which property access is acceptable.\n  if ((0,_jsutils_isObjectLike_mjs__WEBPACK_IMPORTED_MODULE_5__.isObjectLike)(source) || typeof source === 'function') {\n    const property = source[info.fieldName];\n    if (typeof property === 'function') {\n      return source[info.fieldName](args, contextValue, info);\n    }\n    return property;\n  }\n};\n/**\n * This method looks up the field on the given type definition.\n * It has special casing for the three introspection fields,\n * __schema, __type and __typename. __typename is special because\n * it can always be queried as a field, even in situations where no\n * other fields are allowed, like on a Union. __schema and __type\n * could get automatically added to the query type, but that would\n * require mutating type definitions, which would cause issues.\n *\n * @internal\n */\n\nfunction getFieldDef(schema, parentType, fieldNode) {\n  const fieldName = fieldNode.name.value;\n  if (fieldName === _type_introspection_mjs__WEBPACK_IMPORTED_MODULE_18__.SchemaMetaFieldDef.name && schema.getQueryType() === parentType) {\n    return _type_introspection_mjs__WEBPACK_IMPORTED_MODULE_18__.SchemaMetaFieldDef;\n  } else if (fieldName === _type_introspection_mjs__WEBPACK_IMPORTED_MODULE_18__.TypeMetaFieldDef.name && schema.getQueryType() === parentType) {\n    return _type_introspection_mjs__WEBPACK_IMPORTED_MODULE_18__.TypeMetaFieldDef;\n  } else if (fieldName === _type_introspection_mjs__WEBPACK_IMPORTED_MODULE_18__.TypeNameMetaFieldDef.name) {\n    return _type_introspection_mjs__WEBPACK_IMPORTED_MODULE_18__.TypeNameMetaFieldDef;\n  }\n  return parentType.getFields()[fieldName];\n}\n\n//# sourceURL=webpack://my-app/../../graphql/execution/execute.mjs?");

/***/ }),

/***/ "../../graphql/execution/mapAsyncIterator.mjs":
/*!****************************************************!*\
  !*** ../../graphql/execution/mapAsyncIterator.mjs ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mapAsyncIterator: () => (/* binding */ mapAsyncIterator)\n/* harmony export */ });\n/**\n * Given an AsyncIterable and a callback function, return an AsyncIterator\n * which produces values mapped via calling the callback function.\n */\nfunction mapAsyncIterator(iterable, callback) {\n  const iterator = iterable[Symbol.asyncIterator]();\n  async function mapResult(result) {\n    if (result.done) {\n      return result;\n    }\n    try {\n      return {\n        value: await callback(result.value),\n        done: false\n      };\n    } catch (error) {\n      /* c8 ignore start */\n      // FIXME: add test case\n      if (typeof iterator.return === 'function') {\n        try {\n          await iterator.return();\n        } catch (_e) {\n          /* ignore error */\n        }\n      }\n      throw error;\n      /* c8 ignore stop */\n    }\n  }\n  return {\n    async next() {\n      return mapResult(await iterator.next());\n    },\n    async return() {\n      // If iterator.return() does not exist, then type R must be undefined.\n      return typeof iterator.return === 'function' ? mapResult(await iterator.return()) : {\n        value: undefined,\n        done: true\n      };\n    },\n    async throw(error) {\n      if (typeof iterator.throw === 'function') {\n        return mapResult(await iterator.throw(error));\n      }\n      throw error;\n    },\n    [Symbol.asyncIterator]() {\n      return this;\n    }\n  };\n}\n\n//# sourceURL=webpack://my-app/../../graphql/execution/mapAsyncIterator.mjs?");

/***/ }),

/***/ "../../graphql/execution/subscribe.mjs":
/*!*********************************************!*\
  !*** ../../graphql/execution/subscribe.mjs ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createSourceEventStream: () => (/* binding */ createSourceEventStream),\n/* harmony export */   subscribe: () => (/* binding */ subscribe)\n/* harmony export */ });\n/* harmony import */ var _jsutils_devAssert_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../jsutils/devAssert.mjs */ \"../../graphql/jsutils/devAssert.mjs\");\n/* harmony import */ var _jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../jsutils/inspect.mjs */ \"../../graphql/jsutils/inspect.mjs\");\n/* harmony import */ var _jsutils_isAsyncIterable_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../jsutils/isAsyncIterable.mjs */ \"../../graphql/jsutils/isAsyncIterable.mjs\");\n/* harmony import */ var _jsutils_Path_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../jsutils/Path.mjs */ \"../../graphql/jsutils/Path.mjs\");\n/* harmony import */ var _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../error/GraphQLError.mjs */ \"../../graphql/error/GraphQLError.mjs\");\n/* harmony import */ var _error_locatedError_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../error/locatedError.mjs */ \"../../graphql/error/locatedError.mjs\");\n/* harmony import */ var _collectFields_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./collectFields.mjs */ \"../../graphql/execution/collectFields.mjs\");\n/* harmony import */ var _execute_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./execute.mjs */ \"../../graphql/execution/execute.mjs\");\n/* harmony import */ var _mapAsyncIterator_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./mapAsyncIterator.mjs */ \"../../graphql/execution/mapAsyncIterator.mjs\");\n/* harmony import */ var _values_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./values.mjs */ \"../../graphql/execution/values.mjs\");\n\n\n\n\n\n\n\n\n\n\n/**\n * Implements the \"Subscribe\" algorithm described in the GraphQL specification.\n *\n * Returns a Promise which resolves to either an AsyncIterator (if successful)\n * or an ExecutionResult (error). The promise will be rejected if the schema or\n * other arguments to this function are invalid, or if the resolved event stream\n * is not an async iterable.\n *\n * If the client-provided arguments to this function do not result in a\n * compliant subscription, a GraphQL Response (ExecutionResult) with\n * descriptive errors and no data will be returned.\n *\n * If the source stream could not be created due to faulty subscription\n * resolver logic or underlying systems, the promise will resolve to a single\n * ExecutionResult containing `errors` and no `data`.\n *\n * If the operation succeeded, the promise resolves to an AsyncIterator, which\n * yields a stream of ExecutionResults representing the response stream.\n *\n * Accepts either an object with named arguments, or individual arguments.\n */\n\nasync function subscribe(args) {\n  // Temporary for v15 to v16 migration. Remove in v17\n  arguments.length < 2 || (0,_jsutils_devAssert_mjs__WEBPACK_IMPORTED_MODULE_0__.devAssert)(false, 'graphql@16 dropped long-deprecated support for positional arguments, please pass an object instead.');\n  const resultOrStream = await createSourceEventStream(args);\n  if (!(0,_jsutils_isAsyncIterable_mjs__WEBPACK_IMPORTED_MODULE_1__.isAsyncIterable)(resultOrStream)) {\n    return resultOrStream;\n  } // For each payload yielded from a subscription, map it over the normal\n  // GraphQL `execute` function, with `payload` as the rootValue.\n  // This implements the \"MapSourceToResponseEvent\" algorithm described in\n  // the GraphQL specification. The `execute` function provides the\n  // \"ExecuteSubscriptionEvent\" algorithm, as it is nearly identical to the\n  // \"ExecuteQuery\" algorithm, for which `execute` is also used.\n\n  const mapSourceToResponse = payload => (0,_execute_mjs__WEBPACK_IMPORTED_MODULE_2__.execute)({\n    ...args,\n    rootValue: payload\n  }); // Map every source value to a ExecutionResult value as described above.\n\n  return (0,_mapAsyncIterator_mjs__WEBPACK_IMPORTED_MODULE_3__.mapAsyncIterator)(resultOrStream, mapSourceToResponse);\n}\nfunction toNormalizedArgs(args) {\n  const firstArg = args[0];\n  if (firstArg && 'document' in firstArg) {\n    return firstArg;\n  }\n  return {\n    schema: firstArg,\n    // FIXME: when underlying TS bug fixed, see https://github.com/microsoft/TypeScript/issues/31613\n    document: args[1],\n    rootValue: args[2],\n    contextValue: args[3],\n    variableValues: args[4],\n    operationName: args[5],\n    subscribeFieldResolver: args[6]\n  };\n}\n/**\n * Implements the \"CreateSourceEventStream\" algorithm described in the\n * GraphQL specification, resolving the subscription source event stream.\n *\n * Returns a Promise which resolves to either an AsyncIterable (if successful)\n * or an ExecutionResult (error). The promise will be rejected if the schema or\n * other arguments to this function are invalid, or if the resolved event stream\n * is not an async iterable.\n *\n * If the client-provided arguments to this function do not result in a\n * compliant subscription, a GraphQL Response (ExecutionResult) with\n * descriptive errors and no data will be returned.\n *\n * If the the source stream could not be created due to faulty subscription\n * resolver logic or underlying systems, the promise will resolve to a single\n * ExecutionResult containing `errors` and no `data`.\n *\n * If the operation succeeded, the promise resolves to the AsyncIterable for the\n * event stream returned by the resolver.\n *\n * A Source Event Stream represents a sequence of events, each of which triggers\n * a GraphQL execution for that event.\n *\n * This may be useful when hosting the stateful subscription service in a\n * different process or machine than the stateless GraphQL execution engine,\n * or otherwise separating these two steps. For more on this, see the\n * \"Supporting Subscriptions at Scale\" information in the GraphQL specification.\n */\n\nasync function createSourceEventStream(...rawArgs) {\n  const args = toNormalizedArgs(rawArgs);\n  const {\n    schema,\n    document,\n    variableValues\n  } = args; // If arguments are missing or incorrectly typed, this is an internal\n  // developer mistake which should throw an early error.\n\n  (0,_execute_mjs__WEBPACK_IMPORTED_MODULE_2__.assertValidExecutionArguments)(schema, document, variableValues); // If a valid execution context cannot be created due to incorrect arguments,\n  // a \"Response\" with only errors is returned.\n\n  const exeContext = (0,_execute_mjs__WEBPACK_IMPORTED_MODULE_2__.buildExecutionContext)(args); // Return early errors if execution context failed.\n\n  if (!('schema' in exeContext)) {\n    return {\n      errors: exeContext\n    };\n  }\n  try {\n    const eventStream = await executeSubscription(exeContext); // Assert field returned an event stream, otherwise yield an error.\n\n    if (!(0,_jsutils_isAsyncIterable_mjs__WEBPACK_IMPORTED_MODULE_1__.isAsyncIterable)(eventStream)) {\n      throw new Error('Subscription field must return Async Iterable. ' + `Received: ${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_4__.inspect)(eventStream)}.`);\n    }\n    return eventStream;\n  } catch (error) {\n    // If it GraphQLError, report it as an ExecutionResult, containing only errors and no data.\n    // Otherwise treat the error as a system-class error and re-throw it.\n    if (error instanceof _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_5__.GraphQLError) {\n      return {\n        errors: [error]\n      };\n    }\n    throw error;\n  }\n}\nasync function executeSubscription(exeContext) {\n  const {\n    schema,\n    fragments,\n    operation,\n    variableValues,\n    rootValue\n  } = exeContext;\n  const rootType = schema.getSubscriptionType();\n  if (rootType == null) {\n    throw new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_5__.GraphQLError('Schema is not configured to execute subscription operation.', {\n      nodes: operation\n    });\n  }\n  const rootFields = (0,_collectFields_mjs__WEBPACK_IMPORTED_MODULE_6__.collectFields)(schema, fragments, variableValues, rootType, operation.selectionSet);\n  const [responseName, fieldNodes] = [...rootFields.entries()][0];\n  const fieldDef = (0,_execute_mjs__WEBPACK_IMPORTED_MODULE_2__.getFieldDef)(schema, rootType, fieldNodes[0]);\n  if (!fieldDef) {\n    const fieldName = fieldNodes[0].name.value;\n    throw new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_5__.GraphQLError(`The subscription field \"${fieldName}\" is not defined.`, {\n      nodes: fieldNodes\n    });\n  }\n  const path = (0,_jsutils_Path_mjs__WEBPACK_IMPORTED_MODULE_7__.addPath)(undefined, responseName, rootType.name);\n  const info = (0,_execute_mjs__WEBPACK_IMPORTED_MODULE_2__.buildResolveInfo)(exeContext, fieldDef, fieldNodes, rootType, path);\n  try {\n    var _fieldDef$subscribe;\n\n    // Implements the \"ResolveFieldEventStream\" algorithm from GraphQL specification.\n    // It differs from \"ResolveFieldValue\" due to providing a different `resolveFn`.\n    // Build a JS object of arguments from the field.arguments AST, using the\n    // variables scope to fulfill any variable references.\n    const args = (0,_values_mjs__WEBPACK_IMPORTED_MODULE_8__.getArgumentValues)(fieldDef, fieldNodes[0], variableValues); // The resolve function's optional third argument is a context value that\n    // is provided to every resolve function within an execution. It is commonly\n    // used to represent an authenticated user, or request-specific caches.\n\n    const contextValue = exeContext.contextValue; // Call the `subscribe()` resolver or the default resolver to produce an\n    // AsyncIterable yielding raw payloads.\n\n    const resolveFn = (_fieldDef$subscribe = fieldDef.subscribe) !== null && _fieldDef$subscribe !== void 0 ? _fieldDef$subscribe : exeContext.subscribeFieldResolver;\n    const eventStream = await resolveFn(rootValue, args, contextValue, info);\n    if (eventStream instanceof Error) {\n      throw eventStream;\n    }\n    return eventStream;\n  } catch (error) {\n    throw (0,_error_locatedError_mjs__WEBPACK_IMPORTED_MODULE_9__.locatedError)(error, fieldNodes, (0,_jsutils_Path_mjs__WEBPACK_IMPORTED_MODULE_7__.pathToArray)(path));\n  }\n}\n\n//# sourceURL=webpack://my-app/../../graphql/execution/subscribe.mjs?");

/***/ }),

/***/ "../../graphql/execution/values.mjs":
/*!******************************************!*\
  !*** ../../graphql/execution/values.mjs ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getArgumentValues: () => (/* binding */ getArgumentValues),\n/* harmony export */   getDirectiveValues: () => (/* binding */ getDirectiveValues),\n/* harmony export */   getVariableValues: () => (/* binding */ getVariableValues)\n/* harmony export */ });\n/* harmony import */ var _jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../jsutils/inspect.mjs */ \"../../graphql/jsutils/inspect.mjs\");\n/* harmony import */ var _jsutils_keyMap_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../jsutils/keyMap.mjs */ \"../../graphql/jsutils/keyMap.mjs\");\n/* harmony import */ var _jsutils_printPathArray_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../jsutils/printPathArray.mjs */ \"../../graphql/jsutils/printPathArray.mjs\");\n/* harmony import */ var _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error/GraphQLError.mjs */ \"../../graphql/error/GraphQLError.mjs\");\n/* harmony import */ var _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../language/kinds.mjs */ \"../../graphql/language/kinds.mjs\");\n/* harmony import */ var _language_printer_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../language/printer.mjs */ \"../../graphql/language/printer.mjs\");\n/* harmony import */ var _type_definition_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../type/definition.mjs */ \"../../graphql/type/definition.mjs\");\n/* harmony import */ var _utilities_coerceInputValue_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utilities/coerceInputValue.mjs */ \"../../graphql/utilities/coerceInputValue.mjs\");\n/* harmony import */ var _utilities_typeFromAST_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utilities/typeFromAST.mjs */ \"../../graphql/utilities/typeFromAST.mjs\");\n/* harmony import */ var _utilities_valueFromAST_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utilities/valueFromAST.mjs */ \"../../graphql/utilities/valueFromAST.mjs\");\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Prepares an object map of variableValues of the correct type based on the\n * provided variable definitions and arbitrary input. If the input cannot be\n * parsed to match the variable definitions, a GraphQLError will be thrown.\n *\n * Note: The returned value is a plain Object with a prototype, since it is\n * exposed to user code. Care should be taken to not pull values from the\n * Object prototype.\n */\nfunction getVariableValues(schema, varDefNodes, inputs, options) {\n  const errors = [];\n  const maxErrors = options === null || options === void 0 ? void 0 : options.maxErrors;\n  try {\n    const coerced = coerceVariableValues(schema, varDefNodes, inputs, error => {\n      if (maxErrors != null && errors.length >= maxErrors) {\n        throw new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLError('Too many errors processing variables, error limit reached. Execution aborted.');\n      }\n      errors.push(error);\n    });\n    if (errors.length === 0) {\n      return {\n        coerced\n      };\n    }\n  } catch (error) {\n    errors.push(error);\n  }\n  return {\n    errors\n  };\n}\nfunction coerceVariableValues(schema, varDefNodes, inputs, onError) {\n  const coercedValues = {};\n  for (const varDefNode of varDefNodes) {\n    const varName = varDefNode.variable.name.value;\n    const varType = (0,_utilities_typeFromAST_mjs__WEBPACK_IMPORTED_MODULE_1__.typeFromAST)(schema, varDefNode.type);\n    if (!(0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_2__.isInputType)(varType)) {\n      // Must use input types for variables. This should be caught during\n      // validation, however is checked again here for safety.\n      const varTypeStr = (0,_language_printer_mjs__WEBPACK_IMPORTED_MODULE_3__.print)(varDefNode.type);\n      onError(new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLError(`Variable \"$${varName}\" expected value of type \"${varTypeStr}\" which cannot be used as an input type.`, {\n        nodes: varDefNode.type\n      }));\n      continue;\n    }\n    if (!hasOwnProperty(inputs, varName)) {\n      if (varDefNode.defaultValue) {\n        coercedValues[varName] = (0,_utilities_valueFromAST_mjs__WEBPACK_IMPORTED_MODULE_4__.valueFromAST)(varDefNode.defaultValue, varType);\n      } else if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_2__.isNonNullType)(varType)) {\n        const varTypeStr = (0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_5__.inspect)(varType);\n        onError(new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLError(`Variable \"$${varName}\" of required type \"${varTypeStr}\" was not provided.`, {\n          nodes: varDefNode\n        }));\n      }\n      continue;\n    }\n    const value = inputs[varName];\n    if (value === null && (0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_2__.isNonNullType)(varType)) {\n      const varTypeStr = (0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_5__.inspect)(varType);\n      onError(new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLError(`Variable \"$${varName}\" of non-null type \"${varTypeStr}\" must not be null.`, {\n        nodes: varDefNode\n      }));\n      continue;\n    }\n    coercedValues[varName] = (0,_utilities_coerceInputValue_mjs__WEBPACK_IMPORTED_MODULE_6__.coerceInputValue)(value, varType, (path, invalidValue, error) => {\n      let prefix = `Variable \"$${varName}\" got invalid value ` + (0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_5__.inspect)(invalidValue);\n      if (path.length > 0) {\n        prefix += ` at \"${varName}${(0,_jsutils_printPathArray_mjs__WEBPACK_IMPORTED_MODULE_7__.printPathArray)(path)}\"`;\n      }\n      onError(new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLError(prefix + '; ' + error.message, {\n        nodes: varDefNode,\n        originalError: error\n      }));\n    });\n  }\n  return coercedValues;\n}\n/**\n * Prepares an object map of argument values given a list of argument\n * definitions and list of argument AST nodes.\n *\n * Note: The returned value is a plain Object with a prototype, since it is\n * exposed to user code. Care should be taken to not pull values from the\n * Object prototype.\n */\n\nfunction getArgumentValues(def, node, variableValues) {\n  var _node$arguments;\n  const coercedValues = {}; // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n  /* c8 ignore next */\n\n  const argumentNodes = (_node$arguments = node.arguments) !== null && _node$arguments !== void 0 ? _node$arguments : [];\n  const argNodeMap = (0,_jsutils_keyMap_mjs__WEBPACK_IMPORTED_MODULE_8__.keyMap)(argumentNodes, arg => arg.name.value);\n  for (const argDef of def.args) {\n    const name = argDef.name;\n    const argType = argDef.type;\n    const argumentNode = argNodeMap[name];\n    if (!argumentNode) {\n      if (argDef.defaultValue !== undefined) {\n        coercedValues[name] = argDef.defaultValue;\n      } else if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_2__.isNonNullType)(argType)) {\n        throw new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLError(`Argument \"${name}\" of required type \"${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_5__.inspect)(argType)}\" ` + 'was not provided.', {\n          nodes: node\n        });\n      }\n      continue;\n    }\n    const valueNode = argumentNode.value;\n    let isNull = valueNode.kind === _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_9__.Kind.NULL;\n    if (valueNode.kind === _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_9__.Kind.VARIABLE) {\n      const variableName = valueNode.name.value;\n      if (variableValues == null || !hasOwnProperty(variableValues, variableName)) {\n        if (argDef.defaultValue !== undefined) {\n          coercedValues[name] = argDef.defaultValue;\n        } else if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_2__.isNonNullType)(argType)) {\n          throw new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLError(`Argument \"${name}\" of required type \"${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_5__.inspect)(argType)}\" ` + `was provided the variable \"$${variableName}\" which was not provided a runtime value.`, {\n            nodes: valueNode\n          });\n        }\n        continue;\n      }\n      isNull = variableValues[variableName] == null;\n    }\n    if (isNull && (0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_2__.isNonNullType)(argType)) {\n      throw new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLError(`Argument \"${name}\" of non-null type \"${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_5__.inspect)(argType)}\" ` + 'must not be null.', {\n        nodes: valueNode\n      });\n    }\n    const coercedValue = (0,_utilities_valueFromAST_mjs__WEBPACK_IMPORTED_MODULE_4__.valueFromAST)(valueNode, argType, variableValues);\n    if (coercedValue === undefined) {\n      // Note: ValuesOfCorrectTypeRule validation should catch this before\n      // execution. This is a runtime check to ensure execution does not\n      // continue with an invalid argument value.\n      throw new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLError(`Argument \"${name}\" has invalid value ${(0,_language_printer_mjs__WEBPACK_IMPORTED_MODULE_3__.print)(valueNode)}.`, {\n        nodes: valueNode\n      });\n    }\n    coercedValues[name] = coercedValue;\n  }\n  return coercedValues;\n}\n/**\n * Prepares an object map of argument values given a directive definition\n * and a AST node which may contain directives. Optionally also accepts a map\n * of variable values.\n *\n * If the directive does not exist on the node, returns undefined.\n *\n * Note: The returned value is a plain Object with a prototype, since it is\n * exposed to user code. Care should be taken to not pull values from the\n * Object prototype.\n */\n\nfunction getDirectiveValues(directiveDef, node, variableValues) {\n  var _node$directives;\n  const directiveNode = (_node$directives = node.directives) === null || _node$directives === void 0 ? void 0 : _node$directives.find(directive => directive.name.value === directiveDef.name);\n  if (directiveNode) {\n    return getArgumentValues(directiveDef, directiveNode, variableValues);\n  }\n}\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\n//# sourceURL=webpack://my-app/../../graphql/execution/values.mjs?");

/***/ }),

/***/ "../../graphql/graphql.mjs":
/*!*********************************!*\
  !*** ../../graphql/graphql.mjs ***!
  \*********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   graphql: () => (/* binding */ graphql),\n/* harmony export */   graphqlSync: () => (/* binding */ graphqlSync)\n/* harmony export */ });\n/* harmony import */ var _jsutils_devAssert_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./jsutils/devAssert.mjs */ \"../../graphql/jsutils/devAssert.mjs\");\n/* harmony import */ var _jsutils_isPromise_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./jsutils/isPromise.mjs */ \"../../graphql/jsutils/isPromise.mjs\");\n/* harmony import */ var _language_parser_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./language/parser.mjs */ \"../../graphql/language/parser.mjs\");\n/* harmony import */ var _type_validate_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./type/validate.mjs */ \"../../graphql/type/validate.mjs\");\n/* harmony import */ var _validation_validate_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./validation/validate.mjs */ \"../../graphql/validation/validate.mjs\");\n/* harmony import */ var _execution_execute_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./execution/execute.mjs */ \"../../graphql/execution/execute.mjs\");\n\n\n\n\n\n\n/**\n * This is the primary entry point function for fulfilling GraphQL operations\n * by parsing, validating, and executing a GraphQL document along side a\n * GraphQL schema.\n *\n * More sophisticated GraphQL servers, such as those which persist queries,\n * may wish to separate the validation and execution phases to a static time\n * tooling step, and a server runtime step.\n *\n * Accepts either an object with named arguments, or individual arguments:\n *\n * schema:\n *    The GraphQL type system to use when validating and executing a query.\n * source:\n *    A GraphQL language formatted string representing the requested operation.\n * rootValue:\n *    The value provided as the first argument to resolver functions on the top\n *    level type (e.g. the query object type).\n * contextValue:\n *    The context value is provided as an argument to resolver functions after\n *    field arguments. It is used to pass shared information useful at any point\n *    during executing this query, for example the currently logged in user and\n *    connections to databases or other services.\n * variableValues:\n *    A mapping of variable name to runtime value to use for all variables\n *    defined in the requestString.\n * operationName:\n *    The name of the operation to use if requestString contains multiple\n *    possible operations. Can be omitted if requestString contains only\n *    one operation.\n * fieldResolver:\n *    A resolver function to use when one is not provided by the schema.\n *    If not provided, the default field resolver is used (which looks for a\n *    value or method on the source value with the field's name).\n * typeResolver:\n *    A type resolver function to use when none is provided by the schema.\n *    If not provided, the default type resolver is used (which looks for a\n *    `__typename` field or alternatively calls the `isTypeOf` method).\n */\n\nfunction graphql(args) {\n  // Always return a Promise for a consistent API.\n  return new Promise(resolve => resolve(graphqlImpl(args)));\n}\n/**\n * The graphqlSync function also fulfills GraphQL operations by parsing,\n * validating, and executing a GraphQL document along side a GraphQL schema.\n * However, it guarantees to complete synchronously (or throw an error) assuming\n * that all field resolvers are also synchronous.\n */\n\nfunction graphqlSync(args) {\n  const result = graphqlImpl(args); // Assert that the execution was synchronous.\n\n  if ((0,_jsutils_isPromise_mjs__WEBPACK_IMPORTED_MODULE_0__.isPromise)(result)) {\n    throw new Error('GraphQL execution failed to complete synchronously.');\n  }\n  return result;\n}\nfunction graphqlImpl(args) {\n  // Temporary for v15 to v16 migration. Remove in v17\n  arguments.length < 2 || (0,_jsutils_devAssert_mjs__WEBPACK_IMPORTED_MODULE_1__.devAssert)(false, 'graphql@16 dropped long-deprecated support for positional arguments, please pass an object instead.');\n  const {\n    schema,\n    source,\n    rootValue,\n    contextValue,\n    variableValues,\n    operationName,\n    fieldResolver,\n    typeResolver\n  } = args; // Validate Schema\n\n  const schemaValidationErrors = (0,_type_validate_mjs__WEBPACK_IMPORTED_MODULE_2__.validateSchema)(schema);\n  if (schemaValidationErrors.length > 0) {\n    return {\n      errors: schemaValidationErrors\n    };\n  } // Parse\n\n  let document;\n  try {\n    document = (0,_language_parser_mjs__WEBPACK_IMPORTED_MODULE_3__.parse)(source);\n  } catch (syntaxError) {\n    return {\n      errors: [syntaxError]\n    };\n  } // Validate\n\n  const validationErrors = (0,_validation_validate_mjs__WEBPACK_IMPORTED_MODULE_4__.validate)(schema, document);\n  if (validationErrors.length > 0) {\n    return {\n      errors: validationErrors\n    };\n  } // Execute\n\n  return (0,_execution_execute_mjs__WEBPACK_IMPORTED_MODULE_5__.execute)({\n    schema,\n    document,\n    rootValue,\n    contextValue,\n    variableValues,\n    operationName,\n    fieldResolver,\n    typeResolver\n  });\n}\n\n//# sourceURL=webpack://my-app/../../graphql/graphql.mjs?");

/***/ }),

/***/ "../../graphql/index.mjs":
/*!*******************************!*\
  !*** ../../graphql/index.mjs ***!
  \*******************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BREAK: () => (/* reexport safe */ _language_index_mjs__WEBPACK_IMPORTED_MODULE_17__.BREAK),\n/* harmony export */   BreakingChangeType: () => (/* reexport safe */ _utilities_index_mjs__WEBPACK_IMPORTED_MODULE_87__.BreakingChangeType),\n/* harmony export */   DEFAULT_DEPRECATION_REASON: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_4__.DEFAULT_DEPRECATION_REASON),\n/* harmony export */   DangerousChangeType: () => (/* reexport safe */ _utilities_index_mjs__WEBPACK_IMPORTED_MODULE_87__.DangerousChangeType),\n/* harmony export */   DirectiveLocation: () => (/* reexport safe */ _language_index_mjs__WEBPACK_IMPORTED_MODULE_19__.DirectiveLocation),\n/* harmony export */   ExecutableDefinitionsRule: () => (/* reexport safe */ _validation_index_mjs__WEBPACK_IMPORTED_MODULE_28__.ExecutableDefinitionsRule),\n/* harmony export */   FieldsOnCorrectTypeRule: () => (/* reexport safe */ _validation_index_mjs__WEBPACK_IMPORTED_MODULE_29__.FieldsOnCorrectTypeRule),\n/* harmony export */   FragmentsOnCompositeTypesRule: () => (/* reexport safe */ _validation_index_mjs__WEBPACK_IMPORTED_MODULE_30__.FragmentsOnCompositeTypesRule),\n/* harmony export */   GRAPHQL_MAX_INT: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_5__.GRAPHQL_MAX_INT),\n/* harmony export */   GRAPHQL_MIN_INT: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_5__.GRAPHQL_MIN_INT),\n/* harmony export */   GraphQLBoolean: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_5__.GraphQLBoolean),\n/* harmony export */   GraphQLDeprecatedDirective: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_4__.GraphQLDeprecatedDirective),\n/* harmony export */   GraphQLDirective: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_4__.GraphQLDirective),\n/* harmony export */   GraphQLEnumType: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_2__.GraphQLEnumType),\n/* harmony export */   GraphQLError: () => (/* reexport safe */ _error_index_mjs__WEBPACK_IMPORTED_MODULE_64__.GraphQLError),\n/* harmony export */   GraphQLFloat: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_5__.GraphQLFloat),\n/* harmony export */   GraphQLID: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_5__.GraphQLID),\n/* harmony export */   GraphQLIncludeDirective: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_4__.GraphQLIncludeDirective),\n/* harmony export */   GraphQLInputObjectType: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_2__.GraphQLInputObjectType),\n/* harmony export */   GraphQLInt: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_5__.GraphQLInt),\n/* harmony export */   GraphQLInterfaceType: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_2__.GraphQLInterfaceType),\n/* harmony export */   GraphQLList: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_2__.GraphQLList),\n/* harmony export */   GraphQLNonNull: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_2__.GraphQLNonNull),\n/* harmony export */   GraphQLObjectType: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_2__.GraphQLObjectType),\n/* harmony export */   GraphQLScalarType: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_2__.GraphQLScalarType),\n/* harmony export */   GraphQLSchema: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_3__.GraphQLSchema),\n/* harmony export */   GraphQLSkipDirective: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_4__.GraphQLSkipDirective),\n/* harmony export */   GraphQLSpecifiedByDirective: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_4__.GraphQLSpecifiedByDirective),\n/* harmony export */   GraphQLString: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_5__.GraphQLString),\n/* harmony export */   GraphQLUnionType: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_2__.GraphQLUnionType),\n/* harmony export */   Kind: () => (/* reexport safe */ _language_index_mjs__WEBPACK_IMPORTED_MODULE_18__.Kind),\n/* harmony export */   KnownArgumentNamesRule: () => (/* reexport safe */ _validation_index_mjs__WEBPACK_IMPORTED_MODULE_31__.KnownArgumentNamesRule),\n/* harmony export */   KnownDirectivesRule: () => (/* reexport safe */ _validation_index_mjs__WEBPACK_IMPORTED_MODULE_32__.KnownDirectivesRule),\n/* harmony export */   KnownFragmentNamesRule: () => (/* reexport safe */ _validation_index_mjs__WEBPACK_IMPORTED_MODULE_33__.KnownFragmentNamesRule),\n/* harmony export */   KnownTypeNamesRule: () => (/* reexport safe */ _validation_index_mjs__WEBPACK_IMPORTED_MODULE_34__.KnownTypeNamesRule),\n/* harmony export */   Lexer: () => (/* reexport safe */ _language_index_mjs__WEBPACK_IMPORTED_MODULE_13__.Lexer),\n/* harmony export */   Location: () => (/* reexport safe */ _language_index_mjs__WEBPACK_IMPORTED_MODULE_9__.Location),\n/* harmony export */   LoneAnonymousOperationRule: () => (/* reexport safe */ _validation_index_mjs__WEBPACK_IMPORTED_MODULE_35__.LoneAnonymousOperationRule),\n/* harmony export */   LoneSchemaDefinitionRule: () => (/* reexport safe */ _validation_index_mjs__WEBPACK_IMPORTED_MODULE_54__.LoneSchemaDefinitionRule),\n/* harmony export */   NoDeprecatedCustomRule: () => (/* reexport safe */ _validation_index_mjs__WEBPACK_IMPORTED_MODULE_62__.NoDeprecatedCustomRule),\n/* harmony export */   NoFragmentCyclesRule: () => (/* reexport safe */ _validation_index_mjs__WEBPACK_IMPORTED_MODULE_36__.NoFragmentCyclesRule),\n/* harmony export */   NoSchemaIntrospectionCustomRule: () => (/* reexport safe */ _validation_index_mjs__WEBPACK_IMPORTED_MODULE_63__.NoSchemaIntrospectionCustomRule),\n/* harmony export */   NoUndefinedVariablesRule: () => (/* reexport safe */ _validation_index_mjs__WEBPACK_IMPORTED_MODULE_37__.NoUndefinedVariablesRule),\n/* harmony export */   NoUnusedFragmentsRule: () => (/* reexport safe */ _validation_index_mjs__WEBPACK_IMPORTED_MODULE_38__.NoUnusedFragmentsRule),\n/* harmony export */   NoUnusedVariablesRule: () => (/* reexport safe */ _validation_index_mjs__WEBPACK_IMPORTED_MODULE_39__.NoUnusedVariablesRule),\n/* harmony export */   OperationTypeNode: () => (/* reexport safe */ _language_index_mjs__WEBPACK_IMPORTED_MODULE_9__.OperationTypeNode),\n/* harmony export */   OverlappingFieldsCanBeMergedRule: () => (/* reexport safe */ _validation_index_mjs__WEBPACK_IMPORTED_MODULE_40__.OverlappingFieldsCanBeMergedRule),\n/* harmony export */   PossibleFragmentSpreadsRule: () => (/* reexport safe */ _validation_index_mjs__WEBPACK_IMPORTED_MODULE_41__.PossibleFragmentSpreadsRule),\n/* harmony export */   PossibleTypeExtensionsRule: () => (/* reexport safe */ _validation_index_mjs__WEBPACK_IMPORTED_MODULE_61__.PossibleTypeExtensionsRule),\n/* harmony export */   ProvidedRequiredArgumentsRule: () => (/* reexport safe */ _validation_index_mjs__WEBPACK_IMPORTED_MODULE_42__.ProvidedRequiredArgumentsRule),\n/* harmony export */   ScalarLeafsRule: () => (/* reexport safe */ _validation_index_mjs__WEBPACK_IMPORTED_MODULE_43__.ScalarLeafsRule),\n/* harmony export */   SchemaMetaFieldDef: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_6__.SchemaMetaFieldDef),\n/* harmony export */   SingleFieldSubscriptionsRule: () => (/* reexport safe */ _validation_index_mjs__WEBPACK_IMPORTED_MODULE_44__.SingleFieldSubscriptionsRule),\n/* harmony export */   Source: () => (/* reexport safe */ _language_index_mjs__WEBPACK_IMPORTED_MODULE_10__.Source),\n/* harmony export */   Token: () => (/* reexport safe */ _language_index_mjs__WEBPACK_IMPORTED_MODULE_9__.Token),\n/* harmony export */   TokenKind: () => (/* reexport safe */ _language_index_mjs__WEBPACK_IMPORTED_MODULE_14__.TokenKind),\n/* harmony export */   TypeInfo: () => (/* reexport safe */ _utilities_index_mjs__WEBPACK_IMPORTED_MODULE_80__.TypeInfo),\n/* harmony export */   TypeKind: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_6__.TypeKind),\n/* harmony export */   TypeMetaFieldDef: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_6__.TypeMetaFieldDef),\n/* harmony export */   TypeNameMetaFieldDef: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_6__.TypeNameMetaFieldDef),\n/* harmony export */   UniqueArgumentDefinitionNamesRule: () => (/* reexport safe */ _validation_index_mjs__WEBPACK_IMPORTED_MODULE_59__.UniqueArgumentDefinitionNamesRule),\n/* harmony export */   UniqueArgumentNamesRule: () => (/* reexport safe */ _validation_index_mjs__WEBPACK_IMPORTED_MODULE_45__.UniqueArgumentNamesRule),\n/* harmony export */   UniqueDirectiveNamesRule: () => (/* reexport safe */ _validation_index_mjs__WEBPACK_IMPORTED_MODULE_60__.UniqueDirectiveNamesRule),\n/* harmony export */   UniqueDirectivesPerLocationRule: () => (/* reexport safe */ _validation_index_mjs__WEBPACK_IMPORTED_MODULE_46__.UniqueDirectivesPerLocationRule),\n/* harmony export */   UniqueEnumValueNamesRule: () => (/* reexport safe */ _validation_index_mjs__WEBPACK_IMPORTED_MODULE_57__.UniqueEnumValueNamesRule),\n/* harmony export */   UniqueFieldDefinitionNamesRule: () => (/* reexport safe */ _validation_index_mjs__WEBPACK_IMPORTED_MODULE_58__.UniqueFieldDefinitionNamesRule),\n/* harmony export */   UniqueFragmentNamesRule: () => (/* reexport safe */ _validation_index_mjs__WEBPACK_IMPORTED_MODULE_47__.UniqueFragmentNamesRule),\n/* harmony export */   UniqueInputFieldNamesRule: () => (/* reexport safe */ _validation_index_mjs__WEBPACK_IMPORTED_MODULE_48__.UniqueInputFieldNamesRule),\n/* harmony export */   UniqueOperationNamesRule: () => (/* reexport safe */ _validation_index_mjs__WEBPACK_IMPORTED_MODULE_49__.UniqueOperationNamesRule),\n/* harmony export */   UniqueOperationTypesRule: () => (/* reexport safe */ _validation_index_mjs__WEBPACK_IMPORTED_MODULE_55__.UniqueOperationTypesRule),\n/* harmony export */   UniqueTypeNamesRule: () => (/* reexport safe */ _validation_index_mjs__WEBPACK_IMPORTED_MODULE_56__.UniqueTypeNamesRule),\n/* harmony export */   UniqueVariableNamesRule: () => (/* reexport safe */ _validation_index_mjs__WEBPACK_IMPORTED_MODULE_50__.UniqueVariableNamesRule),\n/* harmony export */   ValidationContext: () => (/* reexport safe */ _validation_index_mjs__WEBPACK_IMPORTED_MODULE_26__.ValidationContext),\n/* harmony export */   ValuesOfCorrectTypeRule: () => (/* reexport safe */ _validation_index_mjs__WEBPACK_IMPORTED_MODULE_51__.ValuesOfCorrectTypeRule),\n/* harmony export */   VariablesAreInputTypesRule: () => (/* reexport safe */ _validation_index_mjs__WEBPACK_IMPORTED_MODULE_52__.VariablesAreInputTypesRule),\n/* harmony export */   VariablesInAllowedPositionRule: () => (/* reexport safe */ _validation_index_mjs__WEBPACK_IMPORTED_MODULE_53__.VariablesInAllowedPositionRule),\n/* harmony export */   __Directive: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_6__.__Directive),\n/* harmony export */   __DirectiveLocation: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_6__.__DirectiveLocation),\n/* harmony export */   __EnumValue: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_6__.__EnumValue),\n/* harmony export */   __Field: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_6__.__Field),\n/* harmony export */   __InputValue: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_6__.__InputValue),\n/* harmony export */   __Schema: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_6__.__Schema),\n/* harmony export */   __Type: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_6__.__Type),\n/* harmony export */   __TypeKind: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_6__.__TypeKind),\n/* harmony export */   assertAbstractType: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_2__.assertAbstractType),\n/* harmony export */   assertCompositeType: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_2__.assertCompositeType),\n/* harmony export */   assertDirective: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_4__.assertDirective),\n/* harmony export */   assertEnumType: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_2__.assertEnumType),\n/* harmony export */   assertEnumValueName: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_8__.assertEnumValueName),\n/* harmony export */   assertInputObjectType: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_2__.assertInputObjectType),\n/* harmony export */   assertInputType: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_2__.assertInputType),\n/* harmony export */   assertInterfaceType: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_2__.assertInterfaceType),\n/* harmony export */   assertLeafType: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_2__.assertLeafType),\n/* harmony export */   assertListType: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_2__.assertListType),\n/* harmony export */   assertName: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_8__.assertName),\n/* harmony export */   assertNamedType: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_2__.assertNamedType),\n/* harmony export */   assertNonNullType: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_2__.assertNonNullType),\n/* harmony export */   assertNullableType: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_2__.assertNullableType),\n/* harmony export */   assertObjectType: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_2__.assertObjectType),\n/* harmony export */   assertOutputType: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_2__.assertOutputType),\n/* harmony export */   assertScalarType: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_2__.assertScalarType),\n/* harmony export */   assertSchema: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_3__.assertSchema),\n/* harmony export */   assertType: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_2__.assertType),\n/* harmony export */   assertUnionType: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_2__.assertUnionType),\n/* harmony export */   assertValidName: () => (/* reexport safe */ _utilities_index_mjs__WEBPACK_IMPORTED_MODULE_86__.assertValidName),\n/* harmony export */   assertValidSchema: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_7__.assertValidSchema),\n/* harmony export */   assertWrappingType: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_2__.assertWrappingType),\n/* harmony export */   astFromValue: () => (/* reexport safe */ _utilities_index_mjs__WEBPACK_IMPORTED_MODULE_79__.astFromValue),\n/* harmony export */   buildASTSchema: () => (/* reexport safe */ _utilities_index_mjs__WEBPACK_IMPORTED_MODULE_72__.buildASTSchema),\n/* harmony export */   buildClientSchema: () => (/* reexport safe */ _utilities_index_mjs__WEBPACK_IMPORTED_MODULE_71__.buildClientSchema),\n/* harmony export */   buildSchema: () => (/* reexport safe */ _utilities_index_mjs__WEBPACK_IMPORTED_MODULE_72__.buildSchema),\n/* harmony export */   coerceInputValue: () => (/* reexport safe */ _utilities_index_mjs__WEBPACK_IMPORTED_MODULE_81__.coerceInputValue),\n/* harmony export */   concatAST: () => (/* reexport safe */ _utilities_index_mjs__WEBPACK_IMPORTED_MODULE_82__.concatAST),\n/* harmony export */   createSourceEventStream: () => (/* reexport safe */ _execution_index_mjs__WEBPACK_IMPORTED_MODULE_24__.createSourceEventStream),\n/* harmony export */   defaultFieldResolver: () => (/* reexport safe */ _execution_index_mjs__WEBPACK_IMPORTED_MODULE_21__.defaultFieldResolver),\n/* harmony export */   defaultTypeResolver: () => (/* reexport safe */ _execution_index_mjs__WEBPACK_IMPORTED_MODULE_21__.defaultTypeResolver),\n/* harmony export */   doTypesOverlap: () => (/* reexport safe */ _utilities_index_mjs__WEBPACK_IMPORTED_MODULE_85__.doTypesOverlap),\n/* harmony export */   execute: () => (/* reexport safe */ _execution_index_mjs__WEBPACK_IMPORTED_MODULE_21__.execute),\n/* harmony export */   executeSync: () => (/* reexport safe */ _execution_index_mjs__WEBPACK_IMPORTED_MODULE_21__.executeSync),\n/* harmony export */   extendSchema: () => (/* reexport safe */ _utilities_index_mjs__WEBPACK_IMPORTED_MODULE_73__.extendSchema),\n/* harmony export */   findBreakingChanges: () => (/* reexport safe */ _utilities_index_mjs__WEBPACK_IMPORTED_MODULE_87__.findBreakingChanges),\n/* harmony export */   findDangerousChanges: () => (/* reexport safe */ _utilities_index_mjs__WEBPACK_IMPORTED_MODULE_87__.findDangerousChanges),\n/* harmony export */   formatError: () => (/* reexport safe */ _error_index_mjs__WEBPACK_IMPORTED_MODULE_64__.formatError),\n/* harmony export */   getArgumentValues: () => (/* reexport safe */ _execution_index_mjs__WEBPACK_IMPORTED_MODULE_23__.getArgumentValues),\n/* harmony export */   getDirectiveValues: () => (/* reexport safe */ _execution_index_mjs__WEBPACK_IMPORTED_MODULE_23__.getDirectiveValues),\n/* harmony export */   getEnterLeaveForKind: () => (/* reexport safe */ _language_index_mjs__WEBPACK_IMPORTED_MODULE_17__.getEnterLeaveForKind),\n/* harmony export */   getIntrospectionQuery: () => (/* reexport safe */ _utilities_index_mjs__WEBPACK_IMPORTED_MODULE_67__.getIntrospectionQuery),\n/* harmony export */   getLocation: () => (/* reexport safe */ _language_index_mjs__WEBPACK_IMPORTED_MODULE_11__.getLocation),\n/* harmony export */   getNamedType: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_2__.getNamedType),\n/* harmony export */   getNullableType: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_2__.getNullableType),\n/* harmony export */   getOperationAST: () => (/* reexport safe */ _utilities_index_mjs__WEBPACK_IMPORTED_MODULE_68__.getOperationAST),\n/* harmony export */   getOperationRootType: () => (/* reexport safe */ _utilities_index_mjs__WEBPACK_IMPORTED_MODULE_69__.getOperationRootType),\n/* harmony export */   getVariableValues: () => (/* reexport safe */ _execution_index_mjs__WEBPACK_IMPORTED_MODULE_23__.getVariableValues),\n/* harmony export */   getVisitFn: () => (/* reexport safe */ _language_index_mjs__WEBPACK_IMPORTED_MODULE_17__.getVisitFn),\n/* harmony export */   graphql: () => (/* reexport safe */ _graphql_mjs__WEBPACK_IMPORTED_MODULE_1__.graphql),\n/* harmony export */   graphqlSync: () => (/* reexport safe */ _graphql_mjs__WEBPACK_IMPORTED_MODULE_1__.graphqlSync),\n/* harmony export */   introspectionFromSchema: () => (/* reexport safe */ _utilities_index_mjs__WEBPACK_IMPORTED_MODULE_70__.introspectionFromSchema),\n/* harmony export */   introspectionTypes: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_6__.introspectionTypes),\n/* harmony export */   isAbstractType: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_2__.isAbstractType),\n/* harmony export */   isCompositeType: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_2__.isCompositeType),\n/* harmony export */   isConstValueNode: () => (/* reexport safe */ _language_index_mjs__WEBPACK_IMPORTED_MODULE_20__.isConstValueNode),\n/* harmony export */   isDefinitionNode: () => (/* reexport safe */ _language_index_mjs__WEBPACK_IMPORTED_MODULE_20__.isDefinitionNode),\n/* harmony export */   isDirective: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_4__.isDirective),\n/* harmony export */   isEnumType: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_2__.isEnumType),\n/* harmony export */   isEqualType: () => (/* reexport safe */ _utilities_index_mjs__WEBPACK_IMPORTED_MODULE_85__.isEqualType),\n/* harmony export */   isExecutableDefinitionNode: () => (/* reexport safe */ _language_index_mjs__WEBPACK_IMPORTED_MODULE_20__.isExecutableDefinitionNode),\n/* harmony export */   isInputObjectType: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_2__.isInputObjectType),\n/* harmony export */   isInputType: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_2__.isInputType),\n/* harmony export */   isInterfaceType: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_2__.isInterfaceType),\n/* harmony export */   isIntrospectionType: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_6__.isIntrospectionType),\n/* harmony export */   isLeafType: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_2__.isLeafType),\n/* harmony export */   isListType: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_2__.isListType),\n/* harmony export */   isNamedType: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_2__.isNamedType),\n/* harmony export */   isNonNullType: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_2__.isNonNullType),\n/* harmony export */   isNullableType: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_2__.isNullableType),\n/* harmony export */   isObjectType: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_2__.isObjectType),\n/* harmony export */   isOutputType: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_2__.isOutputType),\n/* harmony export */   isRequiredArgument: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_2__.isRequiredArgument),\n/* harmony export */   isRequiredInputField: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_2__.isRequiredInputField),\n/* harmony export */   isScalarType: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_2__.isScalarType),\n/* harmony export */   isSchema: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_3__.isSchema),\n/* harmony export */   isSelectionNode: () => (/* reexport safe */ _language_index_mjs__WEBPACK_IMPORTED_MODULE_20__.isSelectionNode),\n/* harmony export */   isSpecifiedDirective: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_4__.isSpecifiedDirective),\n/* harmony export */   isSpecifiedScalarType: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_5__.isSpecifiedScalarType),\n/* harmony export */   isType: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_2__.isType),\n/* harmony export */   isTypeDefinitionNode: () => (/* reexport safe */ _language_index_mjs__WEBPACK_IMPORTED_MODULE_20__.isTypeDefinitionNode),\n/* harmony export */   isTypeExtensionNode: () => (/* reexport safe */ _language_index_mjs__WEBPACK_IMPORTED_MODULE_20__.isTypeExtensionNode),\n/* harmony export */   isTypeNode: () => (/* reexport safe */ _language_index_mjs__WEBPACK_IMPORTED_MODULE_20__.isTypeNode),\n/* harmony export */   isTypeSubTypeOf: () => (/* reexport safe */ _utilities_index_mjs__WEBPACK_IMPORTED_MODULE_85__.isTypeSubTypeOf),\n/* harmony export */   isTypeSystemDefinitionNode: () => (/* reexport safe */ _language_index_mjs__WEBPACK_IMPORTED_MODULE_20__.isTypeSystemDefinitionNode),\n/* harmony export */   isTypeSystemExtensionNode: () => (/* reexport safe */ _language_index_mjs__WEBPACK_IMPORTED_MODULE_20__.isTypeSystemExtensionNode),\n/* harmony export */   isUnionType: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_2__.isUnionType),\n/* harmony export */   isValidNameError: () => (/* reexport safe */ _utilities_index_mjs__WEBPACK_IMPORTED_MODULE_86__.isValidNameError),\n/* harmony export */   isValueNode: () => (/* reexport safe */ _language_index_mjs__WEBPACK_IMPORTED_MODULE_20__.isValueNode),\n/* harmony export */   isWrappingType: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_2__.isWrappingType),\n/* harmony export */   lexicographicSortSchema: () => (/* reexport safe */ _utilities_index_mjs__WEBPACK_IMPORTED_MODULE_74__.lexicographicSortSchema),\n/* harmony export */   locatedError: () => (/* reexport safe */ _error_index_mjs__WEBPACK_IMPORTED_MODULE_66__.locatedError),\n/* harmony export */   parse: () => (/* reexport safe */ _language_index_mjs__WEBPACK_IMPORTED_MODULE_15__.parse),\n/* harmony export */   parseConstValue: () => (/* reexport safe */ _language_index_mjs__WEBPACK_IMPORTED_MODULE_15__.parseConstValue),\n/* harmony export */   parseType: () => (/* reexport safe */ _language_index_mjs__WEBPACK_IMPORTED_MODULE_15__.parseType),\n/* harmony export */   parseValue: () => (/* reexport safe */ _language_index_mjs__WEBPACK_IMPORTED_MODULE_15__.parseValue),\n/* harmony export */   print: () => (/* reexport safe */ _language_index_mjs__WEBPACK_IMPORTED_MODULE_16__.print),\n/* harmony export */   printError: () => (/* reexport safe */ _error_index_mjs__WEBPACK_IMPORTED_MODULE_64__.printError),\n/* harmony export */   printIntrospectionSchema: () => (/* reexport safe */ _utilities_index_mjs__WEBPACK_IMPORTED_MODULE_75__.printIntrospectionSchema),\n/* harmony export */   printLocation: () => (/* reexport safe */ _language_index_mjs__WEBPACK_IMPORTED_MODULE_12__.printLocation),\n/* harmony export */   printSchema: () => (/* reexport safe */ _utilities_index_mjs__WEBPACK_IMPORTED_MODULE_75__.printSchema),\n/* harmony export */   printSourceLocation: () => (/* reexport safe */ _language_index_mjs__WEBPACK_IMPORTED_MODULE_12__.printSourceLocation),\n/* harmony export */   printType: () => (/* reexport safe */ _utilities_index_mjs__WEBPACK_IMPORTED_MODULE_75__.printType),\n/* harmony export */   resolveObjMapThunk: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_2__.resolveObjMapThunk),\n/* harmony export */   resolveReadonlyArrayThunk: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_2__.resolveReadonlyArrayThunk),\n/* harmony export */   responsePathAsArray: () => (/* reexport safe */ _execution_index_mjs__WEBPACK_IMPORTED_MODULE_22__.pathToArray),\n/* harmony export */   separateOperations: () => (/* reexport safe */ _utilities_index_mjs__WEBPACK_IMPORTED_MODULE_83__.separateOperations),\n/* harmony export */   specifiedDirectives: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_4__.specifiedDirectives),\n/* harmony export */   specifiedRules: () => (/* reexport safe */ _validation_index_mjs__WEBPACK_IMPORTED_MODULE_27__.specifiedRules),\n/* harmony export */   specifiedScalarTypes: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_5__.specifiedScalarTypes),\n/* harmony export */   stripIgnoredCharacters: () => (/* reexport safe */ _utilities_index_mjs__WEBPACK_IMPORTED_MODULE_84__.stripIgnoredCharacters),\n/* harmony export */   subscribe: () => (/* reexport safe */ _execution_index_mjs__WEBPACK_IMPORTED_MODULE_24__.subscribe),\n/* harmony export */   syntaxError: () => (/* reexport safe */ _error_index_mjs__WEBPACK_IMPORTED_MODULE_65__.syntaxError),\n/* harmony export */   typeFromAST: () => (/* reexport safe */ _utilities_index_mjs__WEBPACK_IMPORTED_MODULE_76__.typeFromAST),\n/* harmony export */   validate: () => (/* reexport safe */ _validation_index_mjs__WEBPACK_IMPORTED_MODULE_25__.validate),\n/* harmony export */   validateSchema: () => (/* reexport safe */ _type_index_mjs__WEBPACK_IMPORTED_MODULE_7__.validateSchema),\n/* harmony export */   valueFromAST: () => (/* reexport safe */ _utilities_index_mjs__WEBPACK_IMPORTED_MODULE_77__.valueFromAST),\n/* harmony export */   valueFromASTUntyped: () => (/* reexport safe */ _utilities_index_mjs__WEBPACK_IMPORTED_MODULE_78__.valueFromASTUntyped),\n/* harmony export */   version: () => (/* reexport safe */ _version_mjs__WEBPACK_IMPORTED_MODULE_0__.version),\n/* harmony export */   versionInfo: () => (/* reexport safe */ _version_mjs__WEBPACK_IMPORTED_MODULE_0__.versionInfo),\n/* harmony export */   visit: () => (/* reexport safe */ _language_index_mjs__WEBPACK_IMPORTED_MODULE_17__.visit),\n/* harmony export */   visitInParallel: () => (/* reexport safe */ _language_index_mjs__WEBPACK_IMPORTED_MODULE_17__.visitInParallel),\n/* harmony export */   visitWithTypeInfo: () => (/* reexport safe */ _utilities_index_mjs__WEBPACK_IMPORTED_MODULE_80__.visitWithTypeInfo)\n/* harmony export */ });\n/* harmony import */ var _version_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./version.mjs */ \"../../graphql/version.mjs\");\n/* harmony import */ var _graphql_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./graphql.mjs */ \"../../graphql/graphql.mjs\");\n/* harmony import */ var _type_index_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./type/index.mjs */ \"../../graphql/type/definition.mjs\");\n/* harmony import */ var _type_index_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./type/index.mjs */ \"../../graphql/type/schema.mjs\");\n/* harmony import */ var _type_index_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./type/index.mjs */ \"../../graphql/type/directives.mjs\");\n/* harmony import */ var _type_index_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./type/index.mjs */ \"../../graphql/type/scalars.mjs\");\n/* harmony import */ var _type_index_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./type/index.mjs */ \"../../graphql/type/introspection.mjs\");\n/* harmony import */ var _type_index_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./type/index.mjs */ \"../../graphql/type/validate.mjs\");\n/* harmony import */ var _type_index_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./type/index.mjs */ \"../../graphql/type/assertName.mjs\");\n/* harmony import */ var _language_index_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./language/index.mjs */ \"../../graphql/language/ast.mjs\");\n/* harmony import */ var _language_index_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./language/index.mjs */ \"../../graphql/language/source.mjs\");\n/* harmony import */ var _language_index_mjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./language/index.mjs */ \"../../graphql/language/location.mjs\");\n/* harmony import */ var _language_index_mjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./language/index.mjs */ \"../../graphql/language/printLocation.mjs\");\n/* harmony import */ var _language_index_mjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./language/index.mjs */ \"../../graphql/language/lexer.mjs\");\n/* harmony import */ var _language_index_mjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./language/index.mjs */ \"../../graphql/language/tokenKind.mjs\");\n/* harmony import */ var _language_index_mjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./language/index.mjs */ \"../../graphql/language/parser.mjs\");\n/* harmony import */ var _language_index_mjs__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./language/index.mjs */ \"../../graphql/language/printer.mjs\");\n/* harmony import */ var _language_index_mjs__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./language/index.mjs */ \"../../graphql/language/visitor.mjs\");\n/* harmony import */ var _language_index_mjs__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./language/index.mjs */ \"../../graphql/language/kinds.mjs\");\n/* harmony import */ var _language_index_mjs__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./language/index.mjs */ \"../../graphql/language/directiveLocation.mjs\");\n/* harmony import */ var _language_index_mjs__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./language/index.mjs */ \"../../graphql/language/predicates.mjs\");\n/* harmony import */ var _execution_index_mjs__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./execution/index.mjs */ \"../../graphql/execution/execute.mjs\");\n/* harmony import */ var _execution_index_mjs__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./execution/index.mjs */ \"../../graphql/jsutils/Path.mjs\");\n/* harmony import */ var _execution_index_mjs__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./execution/index.mjs */ \"../../graphql/execution/values.mjs\");\n/* harmony import */ var _execution_index_mjs__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./execution/index.mjs */ \"../../graphql/execution/subscribe.mjs\");\n/* harmony import */ var _validation_index_mjs__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./validation/index.mjs */ \"../../graphql/validation/validate.mjs\");\n/* harmony import */ var _validation_index_mjs__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./validation/index.mjs */ \"../../graphql/validation/ValidationContext.mjs\");\n/* harmony import */ var _validation_index_mjs__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./validation/index.mjs */ \"../../graphql/validation/specifiedRules.mjs\");\n/* harmony import */ var _validation_index_mjs__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./validation/index.mjs */ \"../../graphql/validation/rules/ExecutableDefinitionsRule.mjs\");\n/* harmony import */ var _validation_index_mjs__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./validation/index.mjs */ \"../../graphql/validation/rules/FieldsOnCorrectTypeRule.mjs\");\n/* harmony import */ var _validation_index_mjs__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./validation/index.mjs */ \"../../graphql/validation/rules/FragmentsOnCompositeTypesRule.mjs\");\n/* harmony import */ var _validation_index_mjs__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./validation/index.mjs */ \"../../graphql/validation/rules/KnownArgumentNamesRule.mjs\");\n/* harmony import */ var _validation_index_mjs__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./validation/index.mjs */ \"../../graphql/validation/rules/KnownDirectivesRule.mjs\");\n/* harmony import */ var _validation_index_mjs__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./validation/index.mjs */ \"../../graphql/validation/rules/KnownFragmentNamesRule.mjs\");\n/* harmony import */ var _validation_index_mjs__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./validation/index.mjs */ \"../../graphql/validation/rules/KnownTypeNamesRule.mjs\");\n/* harmony import */ var _validation_index_mjs__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./validation/index.mjs */ \"../../graphql/validation/rules/LoneAnonymousOperationRule.mjs\");\n/* harmony import */ var _validation_index_mjs__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./validation/index.mjs */ \"../../graphql/validation/rules/NoFragmentCyclesRule.mjs\");\n/* harmony import */ var _validation_index_mjs__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./validation/index.mjs */ \"../../graphql/validation/rules/NoUndefinedVariablesRule.mjs\");\n/* harmony import */ var _validation_index_mjs__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./validation/index.mjs */ \"../../graphql/validation/rules/NoUnusedFragmentsRule.mjs\");\n/* harmony import */ var _validation_index_mjs__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./validation/index.mjs */ \"../../graphql/validation/rules/NoUnusedVariablesRule.mjs\");\n/* harmony import */ var _validation_index_mjs__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./validation/index.mjs */ \"../../graphql/validation/rules/OverlappingFieldsCanBeMergedRule.mjs\");\n/* harmony import */ var _validation_index_mjs__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./validation/index.mjs */ \"../../graphql/validation/rules/PossibleFragmentSpreadsRule.mjs\");\n/* harmony import */ var _validation_index_mjs__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./validation/index.mjs */ \"../../graphql/validation/rules/ProvidedRequiredArgumentsRule.mjs\");\n/* harmony import */ var _validation_index_mjs__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./validation/index.mjs */ \"../../graphql/validation/rules/ScalarLeafsRule.mjs\");\n/* harmony import */ var _validation_index_mjs__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./validation/index.mjs */ \"../../graphql/validation/rules/SingleFieldSubscriptionsRule.mjs\");\n/* harmony import */ var _validation_index_mjs__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./validation/index.mjs */ \"../../graphql/validation/rules/UniqueArgumentNamesRule.mjs\");\n/* harmony import */ var _validation_index_mjs__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./validation/index.mjs */ \"../../graphql/validation/rules/UniqueDirectivesPerLocationRule.mjs\");\n/* harmony import */ var _validation_index_mjs__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./validation/index.mjs */ \"../../graphql/validation/rules/UniqueFragmentNamesRule.mjs\");\n/* harmony import */ var _validation_index_mjs__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./validation/index.mjs */ \"../../graphql/validation/rules/UniqueInputFieldNamesRule.mjs\");\n/* harmony import */ var _validation_index_mjs__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ./validation/index.mjs */ \"../../graphql/validation/rules/UniqueOperationNamesRule.mjs\");\n/* harmony import */ var _validation_index_mjs__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ./validation/index.mjs */ \"../../graphql/validation/rules/UniqueVariableNamesRule.mjs\");\n/* harmony import */ var _validation_index_mjs__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ./validation/index.mjs */ \"../../graphql/validation/rules/ValuesOfCorrectTypeRule.mjs\");\n/* harmony import */ var _validation_index_mjs__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ./validation/index.mjs */ \"../../graphql/validation/rules/VariablesAreInputTypesRule.mjs\");\n/* harmony import */ var _validation_index_mjs__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ./validation/index.mjs */ \"../../graphql/validation/rules/VariablesInAllowedPositionRule.mjs\");\n/* harmony import */ var _validation_index_mjs__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ./validation/index.mjs */ \"../../graphql/validation/rules/LoneSchemaDefinitionRule.mjs\");\n/* harmony import */ var _validation_index_mjs__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! ./validation/index.mjs */ \"../../graphql/validation/rules/UniqueOperationTypesRule.mjs\");\n/* harmony import */ var _validation_index_mjs__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! ./validation/index.mjs */ \"../../graphql/validation/rules/UniqueTypeNamesRule.mjs\");\n/* harmony import */ var _validation_index_mjs__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! ./validation/index.mjs */ \"../../graphql/validation/rules/UniqueEnumValueNamesRule.mjs\");\n/* harmony import */ var _validation_index_mjs__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! ./validation/index.mjs */ \"../../graphql/validation/rules/UniqueFieldDefinitionNamesRule.mjs\");\n/* harmony import */ var _validation_index_mjs__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! ./validation/index.mjs */ \"../../graphql/validation/rules/UniqueArgumentDefinitionNamesRule.mjs\");\n/* harmony import */ var _validation_index_mjs__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! ./validation/index.mjs */ \"../../graphql/validation/rules/UniqueDirectiveNamesRule.mjs\");\n/* harmony import */ var _validation_index_mjs__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(/*! ./validation/index.mjs */ \"../../graphql/validation/rules/PossibleTypeExtensionsRule.mjs\");\n/* harmony import */ var _validation_index_mjs__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(/*! ./validation/index.mjs */ \"../../graphql/validation/rules/custom/NoDeprecatedCustomRule.mjs\");\n/* harmony import */ var _validation_index_mjs__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(/*! ./validation/index.mjs */ \"../../graphql/validation/rules/custom/NoSchemaIntrospectionCustomRule.mjs\");\n/* harmony import */ var _error_index_mjs__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(/*! ./error/index.mjs */ \"../../graphql/error/GraphQLError.mjs\");\n/* harmony import */ var _error_index_mjs__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(/*! ./error/index.mjs */ \"../../graphql/error/syntaxError.mjs\");\n/* harmony import */ var _error_index_mjs__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(/*! ./error/index.mjs */ \"../../graphql/error/locatedError.mjs\");\n/* harmony import */ var _utilities_index_mjs__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(/*! ./utilities/index.mjs */ \"../../graphql/utilities/getIntrospectionQuery.mjs\");\n/* harmony import */ var _utilities_index_mjs__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(/*! ./utilities/index.mjs */ \"../../graphql/utilities/getOperationAST.mjs\");\n/* harmony import */ var _utilities_index_mjs__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(/*! ./utilities/index.mjs */ \"../../graphql/utilities/getOperationRootType.mjs\");\n/* harmony import */ var _utilities_index_mjs__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(/*! ./utilities/index.mjs */ \"../../graphql/utilities/introspectionFromSchema.mjs\");\n/* harmony import */ var _utilities_index_mjs__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(/*! ./utilities/index.mjs */ \"../../graphql/utilities/buildClientSchema.mjs\");\n/* harmony import */ var _utilities_index_mjs__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(/*! ./utilities/index.mjs */ \"../../graphql/utilities/buildASTSchema.mjs\");\n/* harmony import */ var _utilities_index_mjs__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(/*! ./utilities/index.mjs */ \"../../graphql/utilities/extendSchema.mjs\");\n/* harmony import */ var _utilities_index_mjs__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(/*! ./utilities/index.mjs */ \"../../graphql/utilities/lexicographicSortSchema.mjs\");\n/* harmony import */ var _utilities_index_mjs__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(/*! ./utilities/index.mjs */ \"../../graphql/utilities/printSchema.mjs\");\n/* harmony import */ var _utilities_index_mjs__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(/*! ./utilities/index.mjs */ \"../../graphql/utilities/typeFromAST.mjs\");\n/* harmony import */ var _utilities_index_mjs__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__(/*! ./utilities/index.mjs */ \"../../graphql/utilities/valueFromAST.mjs\");\n/* harmony import */ var _utilities_index_mjs__WEBPACK_IMPORTED_MODULE_78__ = __webpack_require__(/*! ./utilities/index.mjs */ \"../../graphql/utilities/valueFromASTUntyped.mjs\");\n/* harmony import */ var _utilities_index_mjs__WEBPACK_IMPORTED_MODULE_79__ = __webpack_require__(/*! ./utilities/index.mjs */ \"../../graphql/utilities/astFromValue.mjs\");\n/* harmony import */ var _utilities_index_mjs__WEBPACK_IMPORTED_MODULE_80__ = __webpack_require__(/*! ./utilities/index.mjs */ \"../../graphql/utilities/TypeInfo.mjs\");\n/* harmony import */ var _utilities_index_mjs__WEBPACK_IMPORTED_MODULE_81__ = __webpack_require__(/*! ./utilities/index.mjs */ \"../../graphql/utilities/coerceInputValue.mjs\");\n/* harmony import */ var _utilities_index_mjs__WEBPACK_IMPORTED_MODULE_82__ = __webpack_require__(/*! ./utilities/index.mjs */ \"../../graphql/utilities/concatAST.mjs\");\n/* harmony import */ var _utilities_index_mjs__WEBPACK_IMPORTED_MODULE_83__ = __webpack_require__(/*! ./utilities/index.mjs */ \"../../graphql/utilities/separateOperations.mjs\");\n/* harmony import */ var _utilities_index_mjs__WEBPACK_IMPORTED_MODULE_84__ = __webpack_require__(/*! ./utilities/index.mjs */ \"../../graphql/utilities/stripIgnoredCharacters.mjs\");\n/* harmony import */ var _utilities_index_mjs__WEBPACK_IMPORTED_MODULE_85__ = __webpack_require__(/*! ./utilities/index.mjs */ \"../../graphql/utilities/typeComparators.mjs\");\n/* harmony import */ var _utilities_index_mjs__WEBPACK_IMPORTED_MODULE_86__ = __webpack_require__(/*! ./utilities/index.mjs */ \"../../graphql/utilities/assertValidName.mjs\");\n/* harmony import */ var _utilities_index_mjs__WEBPACK_IMPORTED_MODULE_87__ = __webpack_require__(/*! ./utilities/index.mjs */ \"../../graphql/utilities/findBreakingChanges.mjs\");\n/**\n * GraphQL.js provides a reference implementation for the GraphQL specification\n * but is also a useful utility for operating on GraphQL files and building\n * sophisticated tools.\n *\n * This primary module exports a general purpose function for fulfilling all\n * steps of the GraphQL specification in a single operation, but also includes\n * utilities for every part of the GraphQL specification:\n *\n *   - Parsing the GraphQL language.\n *   - Building a GraphQL type schema.\n *   - Validating a GraphQL request against a type schema.\n *   - Executing a GraphQL request against a type schema.\n *\n * This also includes utility functions for operating on GraphQL types and\n * GraphQL documents to facilitate building tools.\n *\n * You may also import from each sub-directory directly. For example, the\n * following two import statements are equivalent:\n *\n * ```ts\n * import { parse } from 'graphql';\n * import { parse } from 'graphql/language';\n * ```\n *\n * @packageDocumentation\n */\n// The GraphQL.js version info.\n // The primary entry point into fulfilling a GraphQL request.\n\n // Create and operate on GraphQL type definitions and schema.\n\n\n// Parse and operate on GraphQL language source files.\n\n// Execute GraphQL queries.\n\n// Validate GraphQL documents.\n\n// Create, format, and print GraphQL errors.\n\n// Utilities for operating on GraphQL type schema and parsed sources.\n\n\n//# sourceURL=webpack://my-app/../../graphql/index.mjs?");

/***/ }),

/***/ "../../graphql/jsutils/Path.mjs":
/*!**************************************!*\
  !*** ../../graphql/jsutils/Path.mjs ***!
  \**************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addPath: () => (/* binding */ addPath),\n/* harmony export */   pathToArray: () => (/* binding */ pathToArray)\n/* harmony export */ });\n/**\n * Given a Path and a key, return a new Path containing the new key.\n */\nfunction addPath(prev, key, typename) {\n  return {\n    prev,\n    key,\n    typename\n  };\n}\n/**\n * Given a Path, return an Array of the path keys.\n */\n\nfunction pathToArray(path) {\n  const flattened = [];\n  let curr = path;\n  while (curr) {\n    flattened.push(curr.key);\n    curr = curr.prev;\n  }\n  return flattened.reverse();\n}\n\n//# sourceURL=webpack://my-app/../../graphql/jsutils/Path.mjs?");

/***/ }),

/***/ "../../graphql/jsutils/devAssert.mjs":
/*!*******************************************!*\
  !*** ../../graphql/jsutils/devAssert.mjs ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   devAssert: () => (/* binding */ devAssert)\n/* harmony export */ });\nfunction devAssert(condition, message) {\n  const booleanCondition = Boolean(condition);\n  if (!booleanCondition) {\n    throw new Error(message);\n  }\n}\n\n//# sourceURL=webpack://my-app/../../graphql/jsutils/devAssert.mjs?");

/***/ }),

/***/ "../../graphql/jsutils/didYouMean.mjs":
/*!********************************************!*\
  !*** ../../graphql/jsutils/didYouMean.mjs ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   didYouMean: () => (/* binding */ didYouMean)\n/* harmony export */ });\nconst MAX_SUGGESTIONS = 5;\n/**\n * Given [ A, B, C ] return ' Did you mean A, B, or C?'.\n */\n\nfunction didYouMean(firstArg, secondArg) {\n  const [subMessage, suggestionsArg] = secondArg ? [firstArg, secondArg] : [undefined, firstArg];\n  let message = ' Did you mean ';\n  if (subMessage) {\n    message += subMessage + ' ';\n  }\n  const suggestions = suggestionsArg.map(x => `\"${x}\"`);\n  switch (suggestions.length) {\n    case 0:\n      return '';\n    case 1:\n      return message + suggestions[0] + '?';\n    case 2:\n      return message + suggestions[0] + ' or ' + suggestions[1] + '?';\n  }\n  const selected = suggestions.slice(0, MAX_SUGGESTIONS);\n  const lastItem = selected.pop();\n  return message + selected.join(', ') + ', or ' + lastItem + '?';\n}\n\n//# sourceURL=webpack://my-app/../../graphql/jsutils/didYouMean.mjs?");

/***/ }),

/***/ "../../graphql/jsutils/groupBy.mjs":
/*!*****************************************!*\
  !*** ../../graphql/jsutils/groupBy.mjs ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   groupBy: () => (/* binding */ groupBy)\n/* harmony export */ });\n/**\n * Groups array items into a Map, given a function to produce grouping key.\n */\nfunction groupBy(list, keyFn) {\n  const result = new Map();\n  for (const item of list) {\n    const key = keyFn(item);\n    const group = result.get(key);\n    if (group === undefined) {\n      result.set(key, [item]);\n    } else {\n      group.push(item);\n    }\n  }\n  return result;\n}\n\n//# sourceURL=webpack://my-app/../../graphql/jsutils/groupBy.mjs?");

/***/ }),

/***/ "../../graphql/jsutils/identityFunc.mjs":
/*!**********************************************!*\
  !*** ../../graphql/jsutils/identityFunc.mjs ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   identityFunc: () => (/* binding */ identityFunc)\n/* harmony export */ });\n/**\n * Returns the first argument it receives.\n */\nfunction identityFunc(x) {\n  return x;\n}\n\n//# sourceURL=webpack://my-app/../../graphql/jsutils/identityFunc.mjs?");

/***/ }),

/***/ "../../graphql/jsutils/inspect.mjs":
/*!*****************************************!*\
  !*** ../../graphql/jsutils/inspect.mjs ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   inspect: () => (/* binding */ inspect)\n/* harmony export */ });\nconst MAX_ARRAY_LENGTH = 10;\nconst MAX_RECURSIVE_DEPTH = 2;\n/**\n * Used to print values in error messages.\n */\n\nfunction inspect(value) {\n  return formatValue(value, []);\n}\nfunction formatValue(value, seenValues) {\n  switch (typeof value) {\n    case 'string':\n      return JSON.stringify(value);\n    case 'function':\n      return value.name ? `[function ${value.name}]` : '[function]';\n    case 'object':\n      return formatObjectValue(value, seenValues);\n    default:\n      return String(value);\n  }\n}\nfunction formatObjectValue(value, previouslySeenValues) {\n  if (value === null) {\n    return 'null';\n  }\n  if (previouslySeenValues.includes(value)) {\n    return '[Circular]';\n  }\n  const seenValues = [...previouslySeenValues, value];\n  if (isJSONable(value)) {\n    const jsonValue = value.toJSON(); // check for infinite recursion\n\n    if (jsonValue !== value) {\n      return typeof jsonValue === 'string' ? jsonValue : formatValue(jsonValue, seenValues);\n    }\n  } else if (Array.isArray(value)) {\n    return formatArray(value, seenValues);\n  }\n  return formatObject(value, seenValues);\n}\nfunction isJSONable(value) {\n  return typeof value.toJSON === 'function';\n}\nfunction formatObject(object, seenValues) {\n  const entries = Object.entries(object);\n  if (entries.length === 0) {\n    return '{}';\n  }\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[' + getObjectTag(object) + ']';\n  }\n  const properties = entries.map(([key, value]) => key + ': ' + formatValue(value, seenValues));\n  return '{ ' + properties.join(', ') + ' }';\n}\nfunction formatArray(array, seenValues) {\n  if (array.length === 0) {\n    return '[]';\n  }\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[Array]';\n  }\n  const len = Math.min(MAX_ARRAY_LENGTH, array.length);\n  const remaining = array.length - len;\n  const items = [];\n  for (let i = 0; i < len; ++i) {\n    items.push(formatValue(array[i], seenValues));\n  }\n  if (remaining === 1) {\n    items.push('... 1 more item');\n  } else if (remaining > 1) {\n    items.push(`... ${remaining} more items`);\n  }\n  return '[' + items.join(', ') + ']';\n}\nfunction getObjectTag(object) {\n  const tag = Object.prototype.toString.call(object).replace(/^\\[object /, '').replace(/]$/, '');\n  if (tag === 'Object' && typeof object.constructor === 'function') {\n    const name = object.constructor.name;\n    if (typeof name === 'string' && name !== '') {\n      return name;\n    }\n  }\n  return tag;\n}\n\n//# sourceURL=webpack://my-app/../../graphql/jsutils/inspect.mjs?");

/***/ }),

/***/ "../../graphql/jsutils/instanceOf.mjs":
/*!********************************************!*\
  !*** ../../graphql/jsutils/instanceOf.mjs ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   instanceOf: () => (/* binding */ instanceOf)\n/* harmony export */ });\n/* harmony import */ var _inspect_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./inspect.mjs */ \"../../graphql/jsutils/inspect.mjs\");\n\n/**\n * A replacement for instanceof which includes an error warning when multi-realm\n * constructors are detected.\n * See: https://expressjs.com/en/advanced/best-practice-performance.html#set-node_env-to-production\n * See: https://webpack.js.org/guides/production/\n */\n\nconst instanceOf = /* c8 ignore next 6 */\n// FIXME: https://github.com/graphql/graphql-js/issues/2317\nglobalThis.process && globalThis.process.env.NODE_ENV === 'production' ? function instanceOf(value, constructor) {\n  return value instanceof constructor;\n} : function instanceOf(value, constructor) {\n  if (value instanceof constructor) {\n    return true;\n  }\n  if (typeof value === 'object' && value !== null) {\n    var _value$constructor;\n\n    // Prefer Symbol.toStringTag since it is immune to minification.\n    const className = constructor.prototype[Symbol.toStringTag];\n    const valueClassName =\n    // We still need to support constructor's name to detect conflicts with older versions of this library.\n    Symbol.toStringTag in value // @ts-expect-error TS bug see, https://github.com/microsoft/TypeScript/issues/38009\n    ? value[Symbol.toStringTag] : (_value$constructor = value.constructor) === null || _value$constructor === void 0 ? void 0 : _value$constructor.name;\n    if (className === valueClassName) {\n      const stringifiedValue = (0,_inspect_mjs__WEBPACK_IMPORTED_MODULE_0__.inspect)(value);\n      throw new Error(`Cannot use ${className} \"${stringifiedValue}\" from another module or realm.\n\nEnsure that there is only one instance of \"graphql\" in the node_modules\ndirectory. If different versions of \"graphql\" are the dependencies of other\nrelied on modules, use \"resolutions\" to ensure only one version is installed.\n\nhttps://yarnpkg.com/en/docs/selective-version-resolutions\n\nDuplicate \"graphql\" modules cannot be used at the same time since different\nversions may have different capabilities and behavior. The data from one\nversion used in the function from another could produce confusing and\nspurious results.`);\n    }\n  }\n  return false;\n};\n\n//# sourceURL=webpack://my-app/../../graphql/jsutils/instanceOf.mjs?");

/***/ }),

/***/ "../../graphql/jsutils/invariant.mjs":
/*!*******************************************!*\
  !*** ../../graphql/jsutils/invariant.mjs ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   invariant: () => (/* binding */ invariant)\n/* harmony export */ });\nfunction invariant(condition, message) {\n  const booleanCondition = Boolean(condition);\n  if (!booleanCondition) {\n    throw new Error(message != null ? message : 'Unexpected invariant triggered.');\n  }\n}\n\n//# sourceURL=webpack://my-app/../../graphql/jsutils/invariant.mjs?");

/***/ }),

/***/ "../../graphql/jsutils/isAsyncIterable.mjs":
/*!*************************************************!*\
  !*** ../../graphql/jsutils/isAsyncIterable.mjs ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isAsyncIterable: () => (/* binding */ isAsyncIterable)\n/* harmony export */ });\n/**\n * Returns true if the provided object implements the AsyncIterator protocol via\n * implementing a `Symbol.asyncIterator` method.\n */\nfunction isAsyncIterable(maybeAsyncIterable) {\n  return typeof (maybeAsyncIterable === null || maybeAsyncIterable === void 0 ? void 0 : maybeAsyncIterable[Symbol.asyncIterator]) === 'function';\n}\n\n//# sourceURL=webpack://my-app/../../graphql/jsutils/isAsyncIterable.mjs?");

/***/ }),

/***/ "../../graphql/jsutils/isIterableObject.mjs":
/*!**************************************************!*\
  !*** ../../graphql/jsutils/isIterableObject.mjs ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isIterableObject: () => (/* binding */ isIterableObject)\n/* harmony export */ });\n/**\n * Returns true if the provided object is an Object (i.e. not a string literal)\n * and implements the Iterator protocol.\n *\n * This may be used in place of [Array.isArray()][isArray] to determine if\n * an object should be iterated-over e.g. Array, Map, Set, Int8Array,\n * TypedArray, etc. but excludes string literals.\n *\n * @example\n * ```ts\n * isIterableObject([ 1, 2, 3 ]) // true\n * isIterableObject(new Map()) // true\n * isIterableObject('ABC') // false\n * isIterableObject({ key: 'value' }) // false\n * isIterableObject({ length: 1, 0: 'Alpha' }) // false\n * ```\n */\nfunction isIterableObject(maybeIterable) {\n  return typeof maybeIterable === 'object' && typeof (maybeIterable === null || maybeIterable === void 0 ? void 0 : maybeIterable[Symbol.iterator]) === 'function';\n}\n\n//# sourceURL=webpack://my-app/../../graphql/jsutils/isIterableObject.mjs?");

/***/ }),

/***/ "../../graphql/jsutils/isObjectLike.mjs":
/*!**********************************************!*\
  !*** ../../graphql/jsutils/isObjectLike.mjs ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isObjectLike: () => (/* binding */ isObjectLike)\n/* harmony export */ });\n/**\n * Return true if `value` is object-like. A value is object-like if it's not\n * `null` and has a `typeof` result of \"object\".\n */\nfunction isObjectLike(value) {\n  return typeof value == 'object' && value !== null;\n}\n\n//# sourceURL=webpack://my-app/../../graphql/jsutils/isObjectLike.mjs?");

/***/ }),

/***/ "../../graphql/jsutils/isPromise.mjs":
/*!*******************************************!*\
  !*** ../../graphql/jsutils/isPromise.mjs ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isPromise: () => (/* binding */ isPromise)\n/* harmony export */ });\n/**\n * Returns true if the value acts like a Promise, i.e. has a \"then\" function,\n * otherwise returns false.\n */\nfunction isPromise(value) {\n  return typeof (value === null || value === void 0 ? void 0 : value.then) === 'function';\n}\n\n//# sourceURL=webpack://my-app/../../graphql/jsutils/isPromise.mjs?");

/***/ }),

/***/ "../../graphql/jsutils/keyMap.mjs":
/*!****************************************!*\
  !*** ../../graphql/jsutils/keyMap.mjs ***!
  \****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   keyMap: () => (/* binding */ keyMap)\n/* harmony export */ });\n/**\n * Creates a keyed JS object from an array, given a function to produce the keys\n * for each value in the array.\n *\n * This provides a convenient lookup for the array items if the key function\n * produces unique results.\n * ```ts\n * const phoneBook = [\n *   { name: 'Jon', num: '555-1234' },\n *   { name: 'Jenny', num: '867-5309' }\n * ]\n *\n * const entriesByName = keyMap(\n *   phoneBook,\n *   entry => entry.name\n * )\n *\n * // {\n * //   Jon: { name: 'Jon', num: '555-1234' },\n * //   Jenny: { name: 'Jenny', num: '867-5309' }\n * // }\n *\n * const jennyEntry = entriesByName['Jenny']\n *\n * // { name: 'Jenny', num: '857-6309' }\n * ```\n */\nfunction keyMap(list, keyFn) {\n  const result = Object.create(null);\n  for (const item of list) {\n    result[keyFn(item)] = item;\n  }\n  return result;\n}\n\n//# sourceURL=webpack://my-app/../../graphql/jsutils/keyMap.mjs?");

/***/ }),

/***/ "../../graphql/jsutils/keyValMap.mjs":
/*!*******************************************!*\
  !*** ../../graphql/jsutils/keyValMap.mjs ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   keyValMap: () => (/* binding */ keyValMap)\n/* harmony export */ });\n/**\n * Creates a keyed JS object from an array, given a function to produce the keys\n * and a function to produce the values from each item in the array.\n * ```ts\n * const phoneBook = [\n *   { name: 'Jon', num: '555-1234' },\n *   { name: 'Jenny', num: '867-5309' }\n * ]\n *\n * // { Jon: '555-1234', Jenny: '867-5309' }\n * const phonesByName = keyValMap(\n *   phoneBook,\n *   entry => entry.name,\n *   entry => entry.num\n * )\n * ```\n */\nfunction keyValMap(list, keyFn, valFn) {\n  const result = Object.create(null);\n  for (const item of list) {\n    result[keyFn(item)] = valFn(item);\n  }\n  return result;\n}\n\n//# sourceURL=webpack://my-app/../../graphql/jsutils/keyValMap.mjs?");

/***/ }),

/***/ "../../graphql/jsutils/mapValue.mjs":
/*!******************************************!*\
  !*** ../../graphql/jsutils/mapValue.mjs ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mapValue: () => (/* binding */ mapValue)\n/* harmony export */ });\n/**\n * Creates an object map with the same keys as `map` and values generated by\n * running each value of `map` thru `fn`.\n */\nfunction mapValue(map, fn) {\n  const result = Object.create(null);\n  for (const key of Object.keys(map)) {\n    result[key] = fn(map[key], key);\n  }\n  return result;\n}\n\n//# sourceURL=webpack://my-app/../../graphql/jsutils/mapValue.mjs?");

/***/ }),

/***/ "../../graphql/jsutils/memoize3.mjs":
/*!******************************************!*\
  !*** ../../graphql/jsutils/memoize3.mjs ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   memoize3: () => (/* binding */ memoize3)\n/* harmony export */ });\n/**\n * Memoizes the provided three-argument function.\n */\nfunction memoize3(fn) {\n  let cache0;\n  return function memoized(a1, a2, a3) {\n    if (cache0 === undefined) {\n      cache0 = new WeakMap();\n    }\n    let cache1 = cache0.get(a1);\n    if (cache1 === undefined) {\n      cache1 = new WeakMap();\n      cache0.set(a1, cache1);\n    }\n    let cache2 = cache1.get(a2);\n    if (cache2 === undefined) {\n      cache2 = new WeakMap();\n      cache1.set(a2, cache2);\n    }\n    let fnResult = cache2.get(a3);\n    if (fnResult === undefined) {\n      fnResult = fn(a1, a2, a3);\n      cache2.set(a3, fnResult);\n    }\n    return fnResult;\n  };\n}\n\n//# sourceURL=webpack://my-app/../../graphql/jsutils/memoize3.mjs?");

/***/ }),

/***/ "../../graphql/jsutils/naturalCompare.mjs":
/*!************************************************!*\
  !*** ../../graphql/jsutils/naturalCompare.mjs ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   naturalCompare: () => (/* binding */ naturalCompare)\n/* harmony export */ });\n/**\n * Returns a number indicating whether a reference string comes before, or after,\n * or is the same as the given string in natural sort order.\n *\n * See: https://en.wikipedia.org/wiki/Natural_sort_order\n *\n */\nfunction naturalCompare(aStr, bStr) {\n  let aIndex = 0;\n  let bIndex = 0;\n  while (aIndex < aStr.length && bIndex < bStr.length) {\n    let aChar = aStr.charCodeAt(aIndex);\n    let bChar = bStr.charCodeAt(bIndex);\n    if (isDigit(aChar) && isDigit(bChar)) {\n      let aNum = 0;\n      do {\n        ++aIndex;\n        aNum = aNum * 10 + aChar - DIGIT_0;\n        aChar = aStr.charCodeAt(aIndex);\n      } while (isDigit(aChar) && aNum > 0);\n      let bNum = 0;\n      do {\n        ++bIndex;\n        bNum = bNum * 10 + bChar - DIGIT_0;\n        bChar = bStr.charCodeAt(bIndex);\n      } while (isDigit(bChar) && bNum > 0);\n      if (aNum < bNum) {\n        return -1;\n      }\n      if (aNum > bNum) {\n        return 1;\n      }\n    } else {\n      if (aChar < bChar) {\n        return -1;\n      }\n      if (aChar > bChar) {\n        return 1;\n      }\n      ++aIndex;\n      ++bIndex;\n    }\n  }\n  return aStr.length - bStr.length;\n}\nconst DIGIT_0 = 48;\nconst DIGIT_9 = 57;\nfunction isDigit(code) {\n  return !isNaN(code) && DIGIT_0 <= code && code <= DIGIT_9;\n}\n\n//# sourceURL=webpack://my-app/../../graphql/jsutils/naturalCompare.mjs?");

/***/ }),

/***/ "../../graphql/jsutils/printPathArray.mjs":
/*!************************************************!*\
  !*** ../../graphql/jsutils/printPathArray.mjs ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   printPathArray: () => (/* binding */ printPathArray)\n/* harmony export */ });\n/**\n * Build a string describing the path.\n */\nfunction printPathArray(path) {\n  return path.map(key => typeof key === 'number' ? '[' + key.toString() + ']' : '.' + key).join('');\n}\n\n//# sourceURL=webpack://my-app/../../graphql/jsutils/printPathArray.mjs?");

/***/ }),

/***/ "../../graphql/jsutils/promiseForObject.mjs":
/*!**************************************************!*\
  !*** ../../graphql/jsutils/promiseForObject.mjs ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   promiseForObject: () => (/* binding */ promiseForObject)\n/* harmony export */ });\n/**\n * This function transforms a JS object `ObjMap<Promise<T>>` into\n * a `Promise<ObjMap<T>>`\n *\n * This is akin to bluebird's `Promise.props`, but implemented only using\n * `Promise.all` so it will work with any implementation of ES6 promises.\n */\nfunction promiseForObject(object) {\n  return Promise.all(Object.values(object)).then(resolvedValues => {\n    const resolvedObject = Object.create(null);\n    for (const [i, key] of Object.keys(object).entries()) {\n      resolvedObject[key] = resolvedValues[i];\n    }\n    return resolvedObject;\n  });\n}\n\n//# sourceURL=webpack://my-app/../../graphql/jsutils/promiseForObject.mjs?");

/***/ }),

/***/ "../../graphql/jsutils/promiseReduce.mjs":
/*!***********************************************!*\
  !*** ../../graphql/jsutils/promiseReduce.mjs ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   promiseReduce: () => (/* binding */ promiseReduce)\n/* harmony export */ });\n/* harmony import */ var _isPromise_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isPromise.mjs */ \"../../graphql/jsutils/isPromise.mjs\");\n\n\n/**\n * Similar to Array.prototype.reduce(), however the reducing callback may return\n * a Promise, in which case reduction will continue after each promise resolves.\n *\n * If the callback does not return a Promise, then this function will also not\n * return a Promise.\n */\nfunction promiseReduce(values, callbackFn, initialValue) {\n  let accumulator = initialValue;\n  for (const value of values) {\n    accumulator = (0,_isPromise_mjs__WEBPACK_IMPORTED_MODULE_0__.isPromise)(accumulator) ? accumulator.then(resolved => callbackFn(resolved, value)) : callbackFn(accumulator, value);\n  }\n  return accumulator;\n}\n\n//# sourceURL=webpack://my-app/../../graphql/jsutils/promiseReduce.mjs?");

/***/ }),

/***/ "../../graphql/jsutils/suggestionList.mjs":
/*!************************************************!*\
  !*** ../../graphql/jsutils/suggestionList.mjs ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   suggestionList: () => (/* binding */ suggestionList)\n/* harmony export */ });\n/* harmony import */ var _naturalCompare_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./naturalCompare.mjs */ \"../../graphql/jsutils/naturalCompare.mjs\");\n\n/**\n * Given an invalid input string and a list of valid options, returns a filtered\n * list of valid options sorted based on their similarity with the input.\n */\n\nfunction suggestionList(input, options) {\n  const optionsByDistance = Object.create(null);\n  const lexicalDistance = new LexicalDistance(input);\n  const threshold = Math.floor(input.length * 0.4) + 1;\n  for (const option of options) {\n    const distance = lexicalDistance.measure(option, threshold);\n    if (distance !== undefined) {\n      optionsByDistance[option] = distance;\n    }\n  }\n  return Object.keys(optionsByDistance).sort((a, b) => {\n    const distanceDiff = optionsByDistance[a] - optionsByDistance[b];\n    return distanceDiff !== 0 ? distanceDiff : (0,_naturalCompare_mjs__WEBPACK_IMPORTED_MODULE_0__.naturalCompare)(a, b);\n  });\n}\n/**\n * Computes the lexical distance between strings A and B.\n *\n * The \"distance\" between two strings is given by counting the minimum number\n * of edits needed to transform string A into string B. An edit can be an\n * insertion, deletion, or substitution of a single character, or a swap of two\n * adjacent characters.\n *\n * Includes a custom alteration from Damerau-Levenshtein to treat case changes\n * as a single edit which helps identify mis-cased values with an edit distance\n * of 1.\n *\n * This distance can be useful for detecting typos in input or sorting\n */\n\nclass LexicalDistance {\n  constructor(input) {\n    this._input = input;\n    this._inputLowerCase = input.toLowerCase();\n    this._inputArray = stringToArray(this._inputLowerCase);\n    this._rows = [new Array(input.length + 1).fill(0), new Array(input.length + 1).fill(0), new Array(input.length + 1).fill(0)];\n  }\n  measure(option, threshold) {\n    if (this._input === option) {\n      return 0;\n    }\n    const optionLowerCase = option.toLowerCase(); // Any case change counts as a single edit\n\n    if (this._inputLowerCase === optionLowerCase) {\n      return 1;\n    }\n    let a = stringToArray(optionLowerCase);\n    let b = this._inputArray;\n    if (a.length < b.length) {\n      const tmp = a;\n      a = b;\n      b = tmp;\n    }\n    const aLength = a.length;\n    const bLength = b.length;\n    if (aLength - bLength > threshold) {\n      return undefined;\n    }\n    const rows = this._rows;\n    for (let j = 0; j <= bLength; j++) {\n      rows[0][j] = j;\n    }\n    for (let i = 1; i <= aLength; i++) {\n      const upRow = rows[(i - 1) % 3];\n      const currentRow = rows[i % 3];\n      let smallestCell = currentRow[0] = i;\n      for (let j = 1; j <= bLength; j++) {\n        const cost = a[i - 1] === b[j - 1] ? 0 : 1;\n        let currentCell = Math.min(upRow[j] + 1,\n        // delete\n        currentRow[j - 1] + 1,\n        // insert\n        upRow[j - 1] + cost // substitute\n        );\n        if (i > 1 && j > 1 && a[i - 1] === b[j - 2] && a[i - 2] === b[j - 1]) {\n          // transposition\n          const doubleDiagonalCell = rows[(i - 2) % 3][j - 2];\n          currentCell = Math.min(currentCell, doubleDiagonalCell + 1);\n        }\n        if (currentCell < smallestCell) {\n          smallestCell = currentCell;\n        }\n        currentRow[j] = currentCell;\n      } // Early exit, since distance can't go smaller than smallest element of the previous row.\n\n      if (smallestCell > threshold) {\n        return undefined;\n      }\n    }\n    const distance = rows[aLength % 3][bLength];\n    return distance <= threshold ? distance : undefined;\n  }\n}\nfunction stringToArray(str) {\n  const strLength = str.length;\n  const array = new Array(strLength);\n  for (let i = 0; i < strLength; ++i) {\n    array[i] = str.charCodeAt(i);\n  }\n  return array;\n}\n\n//# sourceURL=webpack://my-app/../../graphql/jsutils/suggestionList.mjs?");

/***/ }),

/***/ "../../graphql/jsutils/toError.mjs":
/*!*****************************************!*\
  !*** ../../graphql/jsutils/toError.mjs ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   toError: () => (/* binding */ toError)\n/* harmony export */ });\n/* harmony import */ var _inspect_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./inspect.mjs */ \"../../graphql/jsutils/inspect.mjs\");\n\n/**\n * Sometimes a non-error is thrown, wrap it as an Error instance to ensure a consistent Error interface.\n */\n\nfunction toError(thrownValue) {\n  return thrownValue instanceof Error ? thrownValue : new NonErrorThrown(thrownValue);\n}\nclass NonErrorThrown extends Error {\n  constructor(thrownValue) {\n    super('Unexpected error value: ' + (0,_inspect_mjs__WEBPACK_IMPORTED_MODULE_0__.inspect)(thrownValue));\n    this.name = 'NonErrorThrown';\n    this.thrownValue = thrownValue;\n  }\n}\n\n//# sourceURL=webpack://my-app/../../graphql/jsutils/toError.mjs?");

/***/ }),

/***/ "../../graphql/jsutils/toObjMap.mjs":
/*!******************************************!*\
  !*** ../../graphql/jsutils/toObjMap.mjs ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   toObjMap: () => (/* binding */ toObjMap)\n/* harmony export */ });\nfunction toObjMap(obj) {\n  if (obj == null) {\n    return Object.create(null);\n  }\n  if (Object.getPrototypeOf(obj) === null) {\n    return obj;\n  }\n  const map = Object.create(null);\n  for (const [key, value] of Object.entries(obj)) {\n    map[key] = value;\n  }\n  return map;\n}\n\n//# sourceURL=webpack://my-app/../../graphql/jsutils/toObjMap.mjs?");

/***/ }),

/***/ "../../graphql/language/ast.mjs":
/*!**************************************!*\
  !*** ../../graphql/language/ast.mjs ***!
  \**************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Location: () => (/* binding */ Location),\n/* harmony export */   OperationTypeNode: () => (/* binding */ OperationTypeNode),\n/* harmony export */   QueryDocumentKeys: () => (/* binding */ QueryDocumentKeys),\n/* harmony export */   Token: () => (/* binding */ Token),\n/* harmony export */   isNode: () => (/* binding */ isNode)\n/* harmony export */ });\n/**\n * Contains a range of UTF-8 character offsets and token references that\n * identify the region of the source from which the AST derived.\n */\nclass Location {\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The Token at which this Node begins.\n   */\n\n  /**\n   * The Token at which this Node ends.\n   */\n\n  /**\n   * The Source document the AST represents.\n   */\n  constructor(startToken, endToken, source) {\n    this.start = startToken.start;\n    this.end = endToken.end;\n    this.startToken = startToken;\n    this.endToken = endToken;\n    this.source = source;\n  }\n  get [Symbol.toStringTag]() {\n    return 'Location';\n  }\n  toJSON() {\n    return {\n      start: this.start,\n      end: this.end\n    };\n  }\n}\n/**\n * Represents a range of characters represented by a lexical token\n * within a Source.\n */\n\nclass Token {\n  /**\n   * The kind of Token.\n   */\n\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The 1-indexed line number on which this Token appears.\n   */\n\n  /**\n   * The 1-indexed column number at which this Token begins.\n   */\n\n  /**\n   * For non-punctuation tokens, represents the interpreted value of the token.\n   *\n   * Note: is undefined for punctuation tokens, but typed as string for\n   * convenience in the parser.\n   */\n\n  /**\n   * Tokens exist as nodes in a double-linked-list amongst all tokens\n   * including ignored tokens. <SOF> is always the first node and <EOF>\n   * the last.\n   */\n  constructor(kind, start, end, line, column, value) {\n    this.kind = kind;\n    this.start = start;\n    this.end = end;\n    this.line = line;\n    this.column = column; // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n    this.value = value;\n    this.prev = null;\n    this.next = null;\n  }\n  get [Symbol.toStringTag]() {\n    return 'Token';\n  }\n  toJSON() {\n    return {\n      kind: this.kind,\n      value: this.value,\n      line: this.line,\n      column: this.column\n    };\n  }\n}\n/**\n * The list of all possible AST node types.\n */\n\n/**\n * @internal\n */\nconst QueryDocumentKeys = {\n  Name: [],\n  Document: ['definitions'],\n  OperationDefinition: ['name', 'variableDefinitions', 'directives', 'selectionSet'],\n  VariableDefinition: ['variable', 'type', 'defaultValue', 'directives'],\n  Variable: ['name'],\n  SelectionSet: ['selections'],\n  Field: ['alias', 'name', 'arguments', 'directives', 'selectionSet'],\n  Argument: ['name', 'value'],\n  FragmentSpread: ['name', 'directives'],\n  InlineFragment: ['typeCondition', 'directives', 'selectionSet'],\n  FragmentDefinition: ['name',\n  // Note: fragment variable definitions are deprecated and will removed in v17.0.0\n  'variableDefinitions', 'typeCondition', 'directives', 'selectionSet'],\n  IntValue: [],\n  FloatValue: [],\n  StringValue: [],\n  BooleanValue: [],\n  NullValue: [],\n  EnumValue: [],\n  ListValue: ['values'],\n  ObjectValue: ['fields'],\n  ObjectField: ['name', 'value'],\n  Directive: ['name', 'arguments'],\n  NamedType: ['name'],\n  ListType: ['type'],\n  NonNullType: ['type'],\n  SchemaDefinition: ['description', 'directives', 'operationTypes'],\n  OperationTypeDefinition: ['type'],\n  ScalarTypeDefinition: ['description', 'name', 'directives'],\n  ObjectTypeDefinition: ['description', 'name', 'interfaces', 'directives', 'fields'],\n  FieldDefinition: ['description', 'name', 'arguments', 'type', 'directives'],\n  InputValueDefinition: ['description', 'name', 'type', 'defaultValue', 'directives'],\n  InterfaceTypeDefinition: ['description', 'name', 'interfaces', 'directives', 'fields'],\n  UnionTypeDefinition: ['description', 'name', 'directives', 'types'],\n  EnumTypeDefinition: ['description', 'name', 'directives', 'values'],\n  EnumValueDefinition: ['description', 'name', 'directives'],\n  InputObjectTypeDefinition: ['description', 'name', 'directives', 'fields'],\n  DirectiveDefinition: ['description', 'name', 'arguments', 'locations'],\n  SchemaExtension: ['directives', 'operationTypes'],\n  ScalarTypeExtension: ['name', 'directives'],\n  ObjectTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  InterfaceTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  UnionTypeExtension: ['name', 'directives', 'types'],\n  EnumTypeExtension: ['name', 'directives', 'values'],\n  InputObjectTypeExtension: ['name', 'directives', 'fields']\n};\nconst kindValues = new Set(Object.keys(QueryDocumentKeys));\n/**\n * @internal\n */\n\nfunction isNode(maybeNode) {\n  const maybeKind = maybeNode === null || maybeNode === void 0 ? void 0 : maybeNode.kind;\n  return typeof maybeKind === 'string' && kindValues.has(maybeKind);\n}\n/** Name */\n\nvar OperationTypeNode;\n(function (OperationTypeNode) {\n  OperationTypeNode['QUERY'] = 'query';\n  OperationTypeNode['MUTATION'] = 'mutation';\n  OperationTypeNode['SUBSCRIPTION'] = 'subscription';\n})(OperationTypeNode || (OperationTypeNode = {}));\n\n\n//# sourceURL=webpack://my-app/../../graphql/language/ast.mjs?");

/***/ }),

/***/ "../../graphql/language/blockString.mjs":
/*!**********************************************!*\
  !*** ../../graphql/language/blockString.mjs ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   dedentBlockStringLines: () => (/* binding */ dedentBlockStringLines),\n/* harmony export */   isPrintableAsBlockString: () => (/* binding */ isPrintableAsBlockString),\n/* harmony export */   printBlockString: () => (/* binding */ printBlockString)\n/* harmony export */ });\n/* harmony import */ var _characterClasses_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./characterClasses.mjs */ \"../../graphql/language/characterClasses.mjs\");\n\n/**\n * Produces the value of a block string from its parsed raw value, similar to\n * CoffeeScript's block string, Python's docstring trim or Ruby's strip_heredoc.\n *\n * This implements the GraphQL spec's BlockStringValue() static algorithm.\n *\n * @internal\n */\n\nfunction dedentBlockStringLines(lines) {\n  var _firstNonEmptyLine2;\n  let commonIndent = Number.MAX_SAFE_INTEGER;\n  let firstNonEmptyLine = null;\n  let lastNonEmptyLine = -1;\n  for (let i = 0; i < lines.length; ++i) {\n    var _firstNonEmptyLine;\n    const line = lines[i];\n    const indent = leadingWhitespace(line);\n    if (indent === line.length) {\n      continue; // skip empty lines\n    }\n    firstNonEmptyLine = (_firstNonEmptyLine = firstNonEmptyLine) !== null && _firstNonEmptyLine !== void 0 ? _firstNonEmptyLine : i;\n    lastNonEmptyLine = i;\n    if (i !== 0 && indent < commonIndent) {\n      commonIndent = indent;\n    }\n  }\n  return lines // Remove common indentation from all lines but first.\n  .map((line, i) => i === 0 ? line : line.slice(commonIndent)) // Remove leading and trailing blank lines.\n  .slice((_firstNonEmptyLine2 = firstNonEmptyLine) !== null && _firstNonEmptyLine2 !== void 0 ? _firstNonEmptyLine2 : 0, lastNonEmptyLine + 1);\n}\nfunction leadingWhitespace(str) {\n  let i = 0;\n  while (i < str.length && (0,_characterClasses_mjs__WEBPACK_IMPORTED_MODULE_0__.isWhiteSpace)(str.charCodeAt(i))) {\n    ++i;\n  }\n  return i;\n}\n/**\n * @internal\n */\n\nfunction isPrintableAsBlockString(value) {\n  if (value === '') {\n    return true; // empty string is printable\n  }\n  let isEmptyLine = true;\n  let hasIndent = false;\n  let hasCommonIndent = true;\n  let seenNonEmptyLine = false;\n  for (let i = 0; i < value.length; ++i) {\n    switch (value.codePointAt(i)) {\n      case 0x0000:\n      case 0x0001:\n      case 0x0002:\n      case 0x0003:\n      case 0x0004:\n      case 0x0005:\n      case 0x0006:\n      case 0x0007:\n      case 0x0008:\n      case 0x000b:\n      case 0x000c:\n      case 0x000e:\n      case 0x000f:\n        return false;\n      // Has non-printable characters\n\n      case 0x000d:\n        //  \\r\n        return false;\n      // Has \\r or \\r\\n which will be replaced as \\n\n\n      case 10:\n        //  \\n\n        if (isEmptyLine && !seenNonEmptyLine) {\n          return false; // Has leading new line\n        }\n        seenNonEmptyLine = true;\n        isEmptyLine = true;\n        hasIndent = false;\n        break;\n      case 9: //   \\t\n\n      case 32:\n        //  <space>\n        hasIndent || (hasIndent = isEmptyLine);\n        break;\n      default:\n        hasCommonIndent && (hasCommonIndent = hasIndent);\n        isEmptyLine = false;\n    }\n  }\n  if (isEmptyLine) {\n    return false; // Has trailing empty lines\n  }\n  if (hasCommonIndent && seenNonEmptyLine) {\n    return false; // Has internal indent\n  }\n  return true;\n}\n/**\n * Print a block string in the indented block form by adding a leading and\n * trailing blank line. However, if a block string starts with whitespace and is\n * a single-line, adding a leading blank line would strip that whitespace.\n *\n * @internal\n */\n\nfunction printBlockString(value, options) {\n  const escapedValue = value.replace(/\"\"\"/g, '\\\\\"\"\"'); // Expand a block string's raw value into independent lines.\n\n  const lines = escapedValue.split(/\\r\\n|[\\n\\r]/g);\n  const isSingleLine = lines.length === 1; // If common indentation is found we can fix some of those cases by adding leading new line\n\n  const forceLeadingNewLine = lines.length > 1 && lines.slice(1).every(line => line.length === 0 || (0,_characterClasses_mjs__WEBPACK_IMPORTED_MODULE_0__.isWhiteSpace)(line.charCodeAt(0))); // Trailing triple quotes just looks confusing but doesn't force trailing new line\n\n  const hasTrailingTripleQuotes = escapedValue.endsWith('\\\\\"\"\"'); // Trailing quote (single or double) or slash forces trailing new line\n\n  const hasTrailingQuote = value.endsWith('\"') && !hasTrailingTripleQuotes;\n  const hasTrailingSlash = value.endsWith('\\\\');\n  const forceTrailingNewline = hasTrailingQuote || hasTrailingSlash;\n  const printAsMultipleLines = !(options !== null && options !== void 0 && options.minimize) && (\n  // add leading and trailing new lines only if it improves readability\n  !isSingleLine || value.length > 70 || forceTrailingNewline || forceLeadingNewLine || hasTrailingTripleQuotes);\n  let result = ''; // Format a multi-line block quote to account for leading space.\n\n  const skipLeadingNewLine = isSingleLine && (0,_characterClasses_mjs__WEBPACK_IMPORTED_MODULE_0__.isWhiteSpace)(value.charCodeAt(0));\n  if (printAsMultipleLines && !skipLeadingNewLine || forceLeadingNewLine) {\n    result += '\\n';\n  }\n  result += escapedValue;\n  if (printAsMultipleLines || forceTrailingNewline) {\n    result += '\\n';\n  }\n  return '\"\"\"' + result + '\"\"\"';\n}\n\n//# sourceURL=webpack://my-app/../../graphql/language/blockString.mjs?");

/***/ }),

/***/ "../../graphql/language/characterClasses.mjs":
/*!***************************************************!*\
  !*** ../../graphql/language/characterClasses.mjs ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isDigit: () => (/* binding */ isDigit),\n/* harmony export */   isLetter: () => (/* binding */ isLetter),\n/* harmony export */   isNameContinue: () => (/* binding */ isNameContinue),\n/* harmony export */   isNameStart: () => (/* binding */ isNameStart),\n/* harmony export */   isWhiteSpace: () => (/* binding */ isWhiteSpace)\n/* harmony export */ });\n/**\n * ```\n * WhiteSpace ::\n *   - \"Horizontal Tab (U+0009)\"\n *   - \"Space (U+0020)\"\n * ```\n * @internal\n */\nfunction isWhiteSpace(code) {\n  return code === 0x0009 || code === 0x0020;\n}\n/**\n * ```\n * Digit :: one of\n *   - `0` `1` `2` `3` `4` `5` `6` `7` `8` `9`\n * ```\n * @internal\n */\n\nfunction isDigit(code) {\n  return code >= 0x0030 && code <= 0x0039;\n}\n/**\n * ```\n * Letter :: one of\n *   - `A` `B` `C` `D` `E` `F` `G` `H` `I` `J` `K` `L` `M`\n *   - `N` `O` `P` `Q` `R` `S` `T` `U` `V` `W` `X` `Y` `Z`\n *   - `a` `b` `c` `d` `e` `f` `g` `h` `i` `j` `k` `l` `m`\n *   - `n` `o` `p` `q` `r` `s` `t` `u` `v` `w` `x` `y` `z`\n * ```\n * @internal\n */\n\nfunction isLetter(code) {\n  return code >= 0x0061 && code <= 0x007a ||\n  // A-Z\n  code >= 0x0041 && code <= 0x005a // a-z\n  ;\n}\n/**\n * ```\n * NameStart ::\n *   - Letter\n *   - `_`\n * ```\n * @internal\n */\n\nfunction isNameStart(code) {\n  return isLetter(code) || code === 0x005f;\n}\n/**\n * ```\n * NameContinue ::\n *   - Letter\n *   - Digit\n *   - `_`\n * ```\n * @internal\n */\n\nfunction isNameContinue(code) {\n  return isLetter(code) || isDigit(code) || code === 0x005f;\n}\n\n//# sourceURL=webpack://my-app/../../graphql/language/characterClasses.mjs?");

/***/ }),

/***/ "../../graphql/language/directiveLocation.mjs":
/*!****************************************************!*\
  !*** ../../graphql/language/directiveLocation.mjs ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DirectiveLocation: () => (/* binding */ DirectiveLocation)\n/* harmony export */ });\n/**\n * The set of allowed directive location values.\n */\nvar DirectiveLocation;\n(function (DirectiveLocation) {\n  DirectiveLocation['QUERY'] = 'QUERY';\n  DirectiveLocation['MUTATION'] = 'MUTATION';\n  DirectiveLocation['SUBSCRIPTION'] = 'SUBSCRIPTION';\n  DirectiveLocation['FIELD'] = 'FIELD';\n  DirectiveLocation['FRAGMENT_DEFINITION'] = 'FRAGMENT_DEFINITION';\n  DirectiveLocation['FRAGMENT_SPREAD'] = 'FRAGMENT_SPREAD';\n  DirectiveLocation['INLINE_FRAGMENT'] = 'INLINE_FRAGMENT';\n  DirectiveLocation['VARIABLE_DEFINITION'] = 'VARIABLE_DEFINITION';\n  DirectiveLocation['SCHEMA'] = 'SCHEMA';\n  DirectiveLocation['SCALAR'] = 'SCALAR';\n  DirectiveLocation['OBJECT'] = 'OBJECT';\n  DirectiveLocation['FIELD_DEFINITION'] = 'FIELD_DEFINITION';\n  DirectiveLocation['ARGUMENT_DEFINITION'] = 'ARGUMENT_DEFINITION';\n  DirectiveLocation['INTERFACE'] = 'INTERFACE';\n  DirectiveLocation['UNION'] = 'UNION';\n  DirectiveLocation['ENUM'] = 'ENUM';\n  DirectiveLocation['ENUM_VALUE'] = 'ENUM_VALUE';\n  DirectiveLocation['INPUT_OBJECT'] = 'INPUT_OBJECT';\n  DirectiveLocation['INPUT_FIELD_DEFINITION'] = 'INPUT_FIELD_DEFINITION';\n})(DirectiveLocation || (DirectiveLocation = {}));\n\n/**\n * The enum type representing the directive location values.\n *\n * @deprecated Please use `DirectiveLocation`. Will be remove in v17.\n */\n\n//# sourceURL=webpack://my-app/../../graphql/language/directiveLocation.mjs?");

/***/ }),

/***/ "../../graphql/language/kinds.mjs":
/*!****************************************!*\
  !*** ../../graphql/language/kinds.mjs ***!
  \****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Kind: () => (/* binding */ Kind)\n/* harmony export */ });\n/**\n * The set of allowed kind values for AST nodes.\n */\nvar Kind;\n(function (Kind) {\n  Kind['NAME'] = 'Name';\n  Kind['DOCUMENT'] = 'Document';\n  Kind['OPERATION_DEFINITION'] = 'OperationDefinition';\n  Kind['VARIABLE_DEFINITION'] = 'VariableDefinition';\n  Kind['SELECTION_SET'] = 'SelectionSet';\n  Kind['FIELD'] = 'Field';\n  Kind['ARGUMENT'] = 'Argument';\n  Kind['FRAGMENT_SPREAD'] = 'FragmentSpread';\n  Kind['INLINE_FRAGMENT'] = 'InlineFragment';\n  Kind['FRAGMENT_DEFINITION'] = 'FragmentDefinition';\n  Kind['VARIABLE'] = 'Variable';\n  Kind['INT'] = 'IntValue';\n  Kind['FLOAT'] = 'FloatValue';\n  Kind['STRING'] = 'StringValue';\n  Kind['BOOLEAN'] = 'BooleanValue';\n  Kind['NULL'] = 'NullValue';\n  Kind['ENUM'] = 'EnumValue';\n  Kind['LIST'] = 'ListValue';\n  Kind['OBJECT'] = 'ObjectValue';\n  Kind['OBJECT_FIELD'] = 'ObjectField';\n  Kind['DIRECTIVE'] = 'Directive';\n  Kind['NAMED_TYPE'] = 'NamedType';\n  Kind['LIST_TYPE'] = 'ListType';\n  Kind['NON_NULL_TYPE'] = 'NonNullType';\n  Kind['SCHEMA_DEFINITION'] = 'SchemaDefinition';\n  Kind['OPERATION_TYPE_DEFINITION'] = 'OperationTypeDefinition';\n  Kind['SCALAR_TYPE_DEFINITION'] = 'ScalarTypeDefinition';\n  Kind['OBJECT_TYPE_DEFINITION'] = 'ObjectTypeDefinition';\n  Kind['FIELD_DEFINITION'] = 'FieldDefinition';\n  Kind['INPUT_VALUE_DEFINITION'] = 'InputValueDefinition';\n  Kind['INTERFACE_TYPE_DEFINITION'] = 'InterfaceTypeDefinition';\n  Kind['UNION_TYPE_DEFINITION'] = 'UnionTypeDefinition';\n  Kind['ENUM_TYPE_DEFINITION'] = 'EnumTypeDefinition';\n  Kind['ENUM_VALUE_DEFINITION'] = 'EnumValueDefinition';\n  Kind['INPUT_OBJECT_TYPE_DEFINITION'] = 'InputObjectTypeDefinition';\n  Kind['DIRECTIVE_DEFINITION'] = 'DirectiveDefinition';\n  Kind['SCHEMA_EXTENSION'] = 'SchemaExtension';\n  Kind['SCALAR_TYPE_EXTENSION'] = 'ScalarTypeExtension';\n  Kind['OBJECT_TYPE_EXTENSION'] = 'ObjectTypeExtension';\n  Kind['INTERFACE_TYPE_EXTENSION'] = 'InterfaceTypeExtension';\n  Kind['UNION_TYPE_EXTENSION'] = 'UnionTypeExtension';\n  Kind['ENUM_TYPE_EXTENSION'] = 'EnumTypeExtension';\n  Kind['INPUT_OBJECT_TYPE_EXTENSION'] = 'InputObjectTypeExtension';\n})(Kind || (Kind = {}));\n\n/**\n * The enum type representing the possible kind values of AST nodes.\n *\n * @deprecated Please use `Kind`. Will be remove in v17.\n */\n\n//# sourceURL=webpack://my-app/../../graphql/language/kinds.mjs?");

/***/ }),

/***/ "../../graphql/language/lexer.mjs":
/*!****************************************!*\
  !*** ../../graphql/language/lexer.mjs ***!
  \****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Lexer: () => (/* binding */ Lexer),\n/* harmony export */   isPunctuatorTokenKind: () => (/* binding */ isPunctuatorTokenKind)\n/* harmony export */ });\n/* harmony import */ var _error_syntaxError_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../error/syntaxError.mjs */ \"../../graphql/error/syntaxError.mjs\");\n/* harmony import */ var _ast_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ast.mjs */ \"../../graphql/language/ast.mjs\");\n/* harmony import */ var _blockString_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./blockString.mjs */ \"../../graphql/language/blockString.mjs\");\n/* harmony import */ var _characterClasses_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./characterClasses.mjs */ \"../../graphql/language/characterClasses.mjs\");\n/* harmony import */ var _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tokenKind.mjs */ \"../../graphql/language/tokenKind.mjs\");\n\n\n\n\n\n/**\n * Given a Source object, creates a Lexer for that source.\n * A Lexer is a stateful stream generator in that every time\n * it is advanced, it returns the next token in the Source. Assuming the\n * source lexes, the final Token emitted by the lexer will be of kind\n * EOF, after which the lexer will repeatedly return the same EOF token\n * whenever called.\n */\n\nclass Lexer {\n  /**\n   * The previously focused non-ignored token.\n   */\n\n  /**\n   * The currently focused non-ignored token.\n   */\n\n  /**\n   * The (1-indexed) line containing the current token.\n   */\n\n  /**\n   * The character offset at which the current line begins.\n   */\n  constructor(source) {\n    const startOfFileToken = new _ast_mjs__WEBPACK_IMPORTED_MODULE_0__.Token(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.SOF, 0, 0, 0, 0);\n    this.source = source;\n    this.lastToken = startOfFileToken;\n    this.token = startOfFileToken;\n    this.line = 1;\n    this.lineStart = 0;\n  }\n  get [Symbol.toStringTag]() {\n    return 'Lexer';\n  }\n  /**\n   * Advances the token stream to the next non-ignored token.\n   */\n\n  advance() {\n    this.lastToken = this.token;\n    const token = this.token = this.lookahead();\n    return token;\n  }\n  /**\n   * Looks ahead and returns the next non-ignored token, but does not change\n   * the state of Lexer.\n   */\n\n  lookahead() {\n    let token = this.token;\n    if (token.kind !== _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.EOF) {\n      do {\n        if (token.next) {\n          token = token.next;\n        } else {\n          // Read the next token and form a link in the token linked-list.\n          const nextToken = readNextToken(this, token.end); // @ts-expect-error next is only mutable during parsing.\n\n          token.next = nextToken; // @ts-expect-error prev is only mutable during parsing.\n\n          nextToken.prev = token;\n          token = nextToken;\n        }\n      } while (token.kind === _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.COMMENT);\n    }\n    return token;\n  }\n}\n/**\n * @internal\n */\n\nfunction isPunctuatorTokenKind(kind) {\n  return kind === _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.BANG || kind === _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.DOLLAR || kind === _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.AMP || kind === _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.PAREN_L || kind === _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.PAREN_R || kind === _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.SPREAD || kind === _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.COLON || kind === _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.EQUALS || kind === _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.AT || kind === _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.BRACKET_L || kind === _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.BRACKET_R || kind === _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.BRACE_L || kind === _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.PIPE || kind === _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.BRACE_R;\n}\n/**\n * A Unicode scalar value is any Unicode code point except surrogate code\n * points. In other words, the inclusive ranges of values 0x0000 to 0xD7FF and\n * 0xE000 to 0x10FFFF.\n *\n * SourceCharacter ::\n *   - \"Any Unicode scalar value\"\n */\n\nfunction isUnicodeScalarValue(code) {\n  return code >= 0x0000 && code <= 0xd7ff || code >= 0xe000 && code <= 0x10ffff;\n}\n/**\n * The GraphQL specification defines source text as a sequence of unicode scalar\n * values (which Unicode defines to exclude surrogate code points). However\n * JavaScript defines strings as a sequence of UTF-16 code units which may\n * include surrogates. A surrogate pair is a valid source character as it\n * encodes a supplementary code point (above U+FFFF), but unpaired surrogate\n * code points are not valid source characters.\n */\n\nfunction isSupplementaryCodePoint(body, location) {\n  return isLeadingSurrogate(body.charCodeAt(location)) && isTrailingSurrogate(body.charCodeAt(location + 1));\n}\nfunction isLeadingSurrogate(code) {\n  return code >= 0xd800 && code <= 0xdbff;\n}\nfunction isTrailingSurrogate(code) {\n  return code >= 0xdc00 && code <= 0xdfff;\n}\n/**\n * Prints the code point (or end of file reference) at a given location in a\n * source for use in error messages.\n *\n * Printable ASCII is printed quoted, while other points are printed in Unicode\n * code point form (ie. U+1234).\n */\n\nfunction printCodePointAt(lexer, location) {\n  const code = lexer.source.body.codePointAt(location);\n  if (code === undefined) {\n    return _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.EOF;\n  } else if (code >= 0x0020 && code <= 0x007e) {\n    // Printable ASCII\n    const char = String.fromCodePoint(code);\n    return char === '\"' ? \"'\\\"'\" : `\"${char}\"`;\n  } // Unicode code point\n\n  return 'U+' + code.toString(16).toUpperCase().padStart(4, '0');\n}\n/**\n * Create a token with line and column location information.\n */\n\nfunction createToken(lexer, kind, start, end, value) {\n  const line = lexer.line;\n  const col = 1 + start - lexer.lineStart;\n  return new _ast_mjs__WEBPACK_IMPORTED_MODULE_0__.Token(kind, start, end, line, col, value);\n}\n/**\n * Gets the next token from the source starting at the given position.\n *\n * This skips over whitespace until it finds the next lexable token, then lexes\n * punctuators immediately or calls the appropriate helper function for more\n * complicated tokens.\n */\n\nfunction readNextToken(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start;\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // SourceCharacter\n\n    switch (code) {\n      // Ignored ::\n      //   - UnicodeBOM\n      //   - WhiteSpace\n      //   - LineTerminator\n      //   - Comment\n      //   - Comma\n      //\n      // UnicodeBOM :: \"Byte Order Mark (U+FEFF)\"\n      //\n      // WhiteSpace ::\n      //   - \"Horizontal Tab (U+0009)\"\n      //   - \"Space (U+0020)\"\n      //\n      // Comma :: ,\n      case 0xfeff: // <BOM>\n\n      case 0x0009: // \\t\n\n      case 0x0020: // <space>\n\n      case 0x002c:\n        // ,\n        ++position;\n        continue;\n      // LineTerminator ::\n      //   - \"New Line (U+000A)\"\n      //   - \"Carriage Return (U+000D)\" [lookahead != \"New Line (U+000A)\"]\n      //   - \"Carriage Return (U+000D)\" \"New Line (U+000A)\"\n\n      case 0x000a:\n        // \\n\n        ++position;\n        ++lexer.line;\n        lexer.lineStart = position;\n        continue;\n      case 0x000d:\n        // \\r\n        if (body.charCodeAt(position + 1) === 0x000a) {\n          position += 2;\n        } else {\n          ++position;\n        }\n        ++lexer.line;\n        lexer.lineStart = position;\n        continue;\n      // Comment\n\n      case 0x0023:\n        // #\n        return readComment(lexer, position);\n      // Token ::\n      //   - Punctuator\n      //   - Name\n      //   - IntValue\n      //   - FloatValue\n      //   - StringValue\n      //\n      // Punctuator :: one of ! $ & ( ) ... : = @ [ ] { | }\n\n      case 0x0021:\n        // !\n        return createToken(lexer, _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.BANG, position, position + 1);\n      case 0x0024:\n        // $\n        return createToken(lexer, _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.DOLLAR, position, position + 1);\n      case 0x0026:\n        // &\n        return createToken(lexer, _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.AMP, position, position + 1);\n      case 0x0028:\n        // (\n        return createToken(lexer, _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.PAREN_L, position, position + 1);\n      case 0x0029:\n        // )\n        return createToken(lexer, _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.PAREN_R, position, position + 1);\n      case 0x002e:\n        // .\n        if (body.charCodeAt(position + 1) === 0x002e && body.charCodeAt(position + 2) === 0x002e) {\n          return createToken(lexer, _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.SPREAD, position, position + 3);\n        }\n        break;\n      case 0x003a:\n        // :\n        return createToken(lexer, _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.COLON, position, position + 1);\n      case 0x003d:\n        // =\n        return createToken(lexer, _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.EQUALS, position, position + 1);\n      case 0x0040:\n        // @\n        return createToken(lexer, _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.AT, position, position + 1);\n      case 0x005b:\n        // [\n        return createToken(lexer, _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.BRACKET_L, position, position + 1);\n      case 0x005d:\n        // ]\n        return createToken(lexer, _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.BRACKET_R, position, position + 1);\n      case 0x007b:\n        // {\n        return createToken(lexer, _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.BRACE_L, position, position + 1);\n      case 0x007c:\n        // |\n        return createToken(lexer, _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.PIPE, position, position + 1);\n      case 0x007d:\n        // }\n        return createToken(lexer, _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.BRACE_R, position, position + 1);\n      // StringValue\n\n      case 0x0022:\n        // \"\n        if (body.charCodeAt(position + 1) === 0x0022 && body.charCodeAt(position + 2) === 0x0022) {\n          return readBlockString(lexer, position);\n        }\n        return readString(lexer, position);\n    } // IntValue | FloatValue (Digit | -)\n\n    if ((0,_characterClasses_mjs__WEBPACK_IMPORTED_MODULE_2__.isDigit)(code) || code === 0x002d) {\n      return readNumber(lexer, position, code);\n    } // Name\n\n    if ((0,_characterClasses_mjs__WEBPACK_IMPORTED_MODULE_2__.isNameStart)(code)) {\n      return readName(lexer, position);\n    }\n    throw (0,_error_syntaxError_mjs__WEBPACK_IMPORTED_MODULE_3__.syntaxError)(lexer.source, position, code === 0x0027 ? 'Unexpected single quote character (\\'), did you mean to use a double quote (\")?' : isUnicodeScalarValue(code) || isSupplementaryCodePoint(body, position) ? `Unexpected character: ${printCodePointAt(lexer, position)}.` : `Invalid character: ${printCodePointAt(lexer, position)}.`);\n  }\n  return createToken(lexer, _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.EOF, bodyLength, bodyLength);\n}\n/**\n * Reads a comment token from the source file.\n *\n * ```\n * Comment :: # CommentChar* [lookahead != CommentChar]\n *\n * CommentChar :: SourceCharacter but not LineTerminator\n * ```\n */\n\nfunction readComment(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start + 1;\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // LineTerminator (\\n | \\r)\n\n    if (code === 0x000a || code === 0x000d) {\n      break;\n    } // SourceCharacter\n\n    if (isUnicodeScalarValue(code)) {\n      ++position;\n    } else if (isSupplementaryCodePoint(body, position)) {\n      position += 2;\n    } else {\n      break;\n    }\n  }\n  return createToken(lexer, _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.COMMENT, start, position, body.slice(start + 1, position));\n}\n/**\n * Reads a number token from the source file, either a FloatValue or an IntValue\n * depending on whether a FractionalPart or ExponentPart is encountered.\n *\n * ```\n * IntValue :: IntegerPart [lookahead != {Digit, `.`, NameStart}]\n *\n * IntegerPart ::\n *   - NegativeSign? 0\n *   - NegativeSign? NonZeroDigit Digit*\n *\n * NegativeSign :: -\n *\n * NonZeroDigit :: Digit but not `0`\n *\n * FloatValue ::\n *   - IntegerPart FractionalPart ExponentPart [lookahead != {Digit, `.`, NameStart}]\n *   - IntegerPart FractionalPart [lookahead != {Digit, `.`, NameStart}]\n *   - IntegerPart ExponentPart [lookahead != {Digit, `.`, NameStart}]\n *\n * FractionalPart :: . Digit+\n *\n * ExponentPart :: ExponentIndicator Sign? Digit+\n *\n * ExponentIndicator :: one of `e` `E`\n *\n * Sign :: one of + -\n * ```\n */\n\nfunction readNumber(lexer, start, firstCode) {\n  const body = lexer.source.body;\n  let position = start;\n  let code = firstCode;\n  let isFloat = false; // NegativeSign (-)\n\n  if (code === 0x002d) {\n    code = body.charCodeAt(++position);\n  } // Zero (0)\n\n  if (code === 0x0030) {\n    code = body.charCodeAt(++position);\n    if ((0,_characterClasses_mjs__WEBPACK_IMPORTED_MODULE_2__.isDigit)(code)) {\n      throw (0,_error_syntaxError_mjs__WEBPACK_IMPORTED_MODULE_3__.syntaxError)(lexer.source, position, `Invalid number, unexpected digit after 0: ${printCodePointAt(lexer, position)}.`);\n    }\n  } else {\n    position = readDigits(lexer, position, code);\n    code = body.charCodeAt(position);\n  } // Full stop (.)\n\n  if (code === 0x002e) {\n    isFloat = true;\n    code = body.charCodeAt(++position);\n    position = readDigits(lexer, position, code);\n    code = body.charCodeAt(position);\n  } // E e\n\n  if (code === 0x0045 || code === 0x0065) {\n    isFloat = true;\n    code = body.charCodeAt(++position); // + -\n\n    if (code === 0x002b || code === 0x002d) {\n      code = body.charCodeAt(++position);\n    }\n    position = readDigits(lexer, position, code);\n    code = body.charCodeAt(position);\n  } // Numbers cannot be followed by . or NameStart\n\n  if (code === 0x002e || (0,_characterClasses_mjs__WEBPACK_IMPORTED_MODULE_2__.isNameStart)(code)) {\n    throw (0,_error_syntaxError_mjs__WEBPACK_IMPORTED_MODULE_3__.syntaxError)(lexer.source, position, `Invalid number, expected digit but got: ${printCodePointAt(lexer, position)}.`);\n  }\n  return createToken(lexer, isFloat ? _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.FLOAT : _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.INT, start, position, body.slice(start, position));\n}\n/**\n * Returns the new position in the source after reading one or more digits.\n */\n\nfunction readDigits(lexer, start, firstCode) {\n  if (!(0,_characterClasses_mjs__WEBPACK_IMPORTED_MODULE_2__.isDigit)(firstCode)) {\n    throw (0,_error_syntaxError_mjs__WEBPACK_IMPORTED_MODULE_3__.syntaxError)(lexer.source, start, `Invalid number, expected digit but got: ${printCodePointAt(lexer, start)}.`);\n  }\n  const body = lexer.source.body;\n  let position = start + 1; // +1 to skip first firstCode\n\n  while ((0,_characterClasses_mjs__WEBPACK_IMPORTED_MODULE_2__.isDigit)(body.charCodeAt(position))) {\n    ++position;\n  }\n  return position;\n}\n/**\n * Reads a single-quote string token from the source file.\n *\n * ```\n * StringValue ::\n *   - `\"\"` [lookahead != `\"`]\n *   - `\"` StringCharacter+ `\"`\n *\n * StringCharacter ::\n *   - SourceCharacter but not `\"` or `\\` or LineTerminator\n *   - `\\u` EscapedUnicode\n *   - `\\` EscapedCharacter\n *\n * EscapedUnicode ::\n *   - `{` HexDigit+ `}`\n *   - HexDigit HexDigit HexDigit HexDigit\n *\n * EscapedCharacter :: one of `\"` `\\` `/` `b` `f` `n` `r` `t`\n * ```\n */\n\nfunction readString(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start + 1;\n  let chunkStart = position;\n  let value = '';\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // Closing Quote (\")\n\n    if (code === 0x0022) {\n      value += body.slice(chunkStart, position);\n      return createToken(lexer, _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.STRING, start, position + 1, value);\n    } // Escape Sequence (\\)\n\n    if (code === 0x005c) {\n      value += body.slice(chunkStart, position);\n      const escape = body.charCodeAt(position + 1) === 0x0075 // u\n      ? body.charCodeAt(position + 2) === 0x007b // {\n      ? readEscapedUnicodeVariableWidth(lexer, position) : readEscapedUnicodeFixedWidth(lexer, position) : readEscapedCharacter(lexer, position);\n      value += escape.value;\n      position += escape.size;\n      chunkStart = position;\n      continue;\n    } // LineTerminator (\\n | \\r)\n\n    if (code === 0x000a || code === 0x000d) {\n      break;\n    } // SourceCharacter\n\n    if (isUnicodeScalarValue(code)) {\n      ++position;\n    } else if (isSupplementaryCodePoint(body, position)) {\n      position += 2;\n    } else {\n      throw (0,_error_syntaxError_mjs__WEBPACK_IMPORTED_MODULE_3__.syntaxError)(lexer.source, position, `Invalid character within String: ${printCodePointAt(lexer, position)}.`);\n    }\n  }\n  throw (0,_error_syntaxError_mjs__WEBPACK_IMPORTED_MODULE_3__.syntaxError)(lexer.source, position, 'Unterminated string.');\n} // The string value and lexed size of an escape sequence.\n\nfunction readEscapedUnicodeVariableWidth(lexer, position) {\n  const body = lexer.source.body;\n  let point = 0;\n  let size = 3; // Cannot be larger than 12 chars (\\u{00000000}).\n\n  while (size < 12) {\n    const code = body.charCodeAt(position + size++); // Closing Brace (})\n\n    if (code === 0x007d) {\n      // Must be at least 5 chars (\\u{0}) and encode a Unicode scalar value.\n      if (size < 5 || !isUnicodeScalarValue(point)) {\n        break;\n      }\n      return {\n        value: String.fromCodePoint(point),\n        size\n      };\n    } // Append this hex digit to the code point.\n\n    point = point << 4 | readHexDigit(code);\n    if (point < 0) {\n      break;\n    }\n  }\n  throw (0,_error_syntaxError_mjs__WEBPACK_IMPORTED_MODULE_3__.syntaxError)(lexer.source, position, `Invalid Unicode escape sequence: \"${body.slice(position, position + size)}\".`);\n}\nfunction readEscapedUnicodeFixedWidth(lexer, position) {\n  const body = lexer.source.body;\n  const code = read16BitHexCode(body, position + 2);\n  if (isUnicodeScalarValue(code)) {\n    return {\n      value: String.fromCodePoint(code),\n      size: 6\n    };\n  } // GraphQL allows JSON-style surrogate pair escape sequences, but only when\n  // a valid pair is formed.\n\n  if (isLeadingSurrogate(code)) {\n    // \\u\n    if (body.charCodeAt(position + 6) === 0x005c && body.charCodeAt(position + 7) === 0x0075) {\n      const trailingCode = read16BitHexCode(body, position + 8);\n      if (isTrailingSurrogate(trailingCode)) {\n        // JavaScript defines strings as a sequence of UTF-16 code units and\n        // encodes Unicode code points above U+FFFF using a surrogate pair of\n        // code units. Since this is a surrogate pair escape sequence, just\n        // include both codes into the JavaScript string value. Had JavaScript\n        // not been internally based on UTF-16, then this surrogate pair would\n        // be decoded to retrieve the supplementary code point.\n        return {\n          value: String.fromCodePoint(code, trailingCode),\n          size: 12\n        };\n      }\n    }\n  }\n  throw (0,_error_syntaxError_mjs__WEBPACK_IMPORTED_MODULE_3__.syntaxError)(lexer.source, position, `Invalid Unicode escape sequence: \"${body.slice(position, position + 6)}\".`);\n}\n/**\n * Reads four hexadecimal characters and returns the positive integer that 16bit\n * hexadecimal string represents. For example, \"000f\" will return 15, and \"dead\"\n * will return 57005.\n *\n * Returns a negative number if any char was not a valid hexadecimal digit.\n */\n\nfunction read16BitHexCode(body, position) {\n  // readHexDigit() returns -1 on error. ORing a negative value with any other\n  // value always produces a negative value.\n  return readHexDigit(body.charCodeAt(position)) << 12 | readHexDigit(body.charCodeAt(position + 1)) << 8 | readHexDigit(body.charCodeAt(position + 2)) << 4 | readHexDigit(body.charCodeAt(position + 3));\n}\n/**\n * Reads a hexadecimal character and returns its positive integer value (0-15).\n *\n * '0' becomes 0, '9' becomes 9\n * 'A' becomes 10, 'F' becomes 15\n * 'a' becomes 10, 'f' becomes 15\n *\n * Returns -1 if the provided character code was not a valid hexadecimal digit.\n *\n * HexDigit :: one of\n *   - `0` `1` `2` `3` `4` `5` `6` `7` `8` `9`\n *   - `A` `B` `C` `D` `E` `F`\n *   - `a` `b` `c` `d` `e` `f`\n */\n\nfunction readHexDigit(code) {\n  return code >= 0x0030 && code <= 0x0039 // 0-9\n  ? code - 0x0030 : code >= 0x0041 && code <= 0x0046 // A-F\n  ? code - 0x0037 : code >= 0x0061 && code <= 0x0066 // a-f\n  ? code - 0x0057 : -1;\n}\n/**\n * | Escaped Character | Code Point | Character Name               |\n * | ----------------- | ---------- | ---------------------------- |\n * | `\"`               | U+0022     | double quote                 |\n * | `\\`               | U+005C     | reverse solidus (back slash) |\n * | `/`               | U+002F     | solidus (forward slash)      |\n * | `b`               | U+0008     | backspace                    |\n * | `f`               | U+000C     | form feed                    |\n * | `n`               | U+000A     | line feed (new line)         |\n * | `r`               | U+000D     | carriage return              |\n * | `t`               | U+0009     | horizontal tab               |\n */\n\nfunction readEscapedCharacter(lexer, position) {\n  const body = lexer.source.body;\n  const code = body.charCodeAt(position + 1);\n  switch (code) {\n    case 0x0022:\n      // \"\n      return {\n        value: '\\u0022',\n        size: 2\n      };\n    case 0x005c:\n      // \\\n      return {\n        value: '\\u005c',\n        size: 2\n      };\n    case 0x002f:\n      // /\n      return {\n        value: '\\u002f',\n        size: 2\n      };\n    case 0x0062:\n      // b\n      return {\n        value: '\\u0008',\n        size: 2\n      };\n    case 0x0066:\n      // f\n      return {\n        value: '\\u000c',\n        size: 2\n      };\n    case 0x006e:\n      // n\n      return {\n        value: '\\u000a',\n        size: 2\n      };\n    case 0x0072:\n      // r\n      return {\n        value: '\\u000d',\n        size: 2\n      };\n    case 0x0074:\n      // t\n      return {\n        value: '\\u0009',\n        size: 2\n      };\n  }\n  throw (0,_error_syntaxError_mjs__WEBPACK_IMPORTED_MODULE_3__.syntaxError)(lexer.source, position, `Invalid character escape sequence: \"${body.slice(position, position + 2)}\".`);\n}\n/**\n * Reads a block string token from the source file.\n *\n * ```\n * StringValue ::\n *   - `\"\"\"` BlockStringCharacter* `\"\"\"`\n *\n * BlockStringCharacter ::\n *   - SourceCharacter but not `\"\"\"` or `\\\"\"\"`\n *   - `\\\"\"\"`\n * ```\n */\n\nfunction readBlockString(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let lineStart = lexer.lineStart;\n  let position = start + 3;\n  let chunkStart = position;\n  let currentLine = '';\n  const blockLines = [];\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // Closing Triple-Quote (\"\"\")\n\n    if (code === 0x0022 && body.charCodeAt(position + 1) === 0x0022 && body.charCodeAt(position + 2) === 0x0022) {\n      currentLine += body.slice(chunkStart, position);\n      blockLines.push(currentLine);\n      const token = createToken(lexer, _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.BLOCK_STRING, start, position + 3,\n      // Return a string of the lines joined with U+000A.\n      (0,_blockString_mjs__WEBPACK_IMPORTED_MODULE_4__.dedentBlockStringLines)(blockLines).join('\\n'));\n      lexer.line += blockLines.length - 1;\n      lexer.lineStart = lineStart;\n      return token;\n    } // Escaped Triple-Quote (\\\"\"\")\n\n    if (code === 0x005c && body.charCodeAt(position + 1) === 0x0022 && body.charCodeAt(position + 2) === 0x0022 && body.charCodeAt(position + 3) === 0x0022) {\n      currentLine += body.slice(chunkStart, position);\n      chunkStart = position + 1; // skip only slash\n\n      position += 4;\n      continue;\n    } // LineTerminator\n\n    if (code === 0x000a || code === 0x000d) {\n      currentLine += body.slice(chunkStart, position);\n      blockLines.push(currentLine);\n      if (code === 0x000d && body.charCodeAt(position + 1) === 0x000a) {\n        position += 2;\n      } else {\n        ++position;\n      }\n      currentLine = '';\n      chunkStart = position;\n      lineStart = position;\n      continue;\n    } // SourceCharacter\n\n    if (isUnicodeScalarValue(code)) {\n      ++position;\n    } else if (isSupplementaryCodePoint(body, position)) {\n      position += 2;\n    } else {\n      throw (0,_error_syntaxError_mjs__WEBPACK_IMPORTED_MODULE_3__.syntaxError)(lexer.source, position, `Invalid character within String: ${printCodePointAt(lexer, position)}.`);\n    }\n  }\n  throw (0,_error_syntaxError_mjs__WEBPACK_IMPORTED_MODULE_3__.syntaxError)(lexer.source, position, 'Unterminated string.');\n}\n/**\n * Reads an alphanumeric + underscore name from the source.\n *\n * ```\n * Name ::\n *   - NameStart NameContinue* [lookahead != NameContinue]\n * ```\n */\n\nfunction readName(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start + 1;\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position);\n    if ((0,_characterClasses_mjs__WEBPACK_IMPORTED_MODULE_2__.isNameContinue)(code)) {\n      ++position;\n    } else {\n      break;\n    }\n  }\n  return createToken(lexer, _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenKind.NAME, start, position, body.slice(start, position));\n}\n\n//# sourceURL=webpack://my-app/../../graphql/language/lexer.mjs?");

/***/ }),

/***/ "../../graphql/language/location.mjs":
/*!*******************************************!*\
  !*** ../../graphql/language/location.mjs ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getLocation: () => (/* binding */ getLocation)\n/* harmony export */ });\n/* harmony import */ var _jsutils_invariant_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../jsutils/invariant.mjs */ \"../../graphql/jsutils/invariant.mjs\");\n\nconst LineRegExp = /\\r\\n|[\\n\\r]/g;\n/**\n * Represents a location in a Source.\n */\n\n/**\n * Takes a Source and a UTF-8 character offset, and returns the corresponding\n * line and column as a SourceLocation.\n */\nfunction getLocation(source, position) {\n  let lastLineStart = 0;\n  let line = 1;\n  for (const match of source.body.matchAll(LineRegExp)) {\n    typeof match.index === 'number' || (0,_jsutils_invariant_mjs__WEBPACK_IMPORTED_MODULE_0__.invariant)(false);\n    if (match.index >= position) {\n      break;\n    }\n    lastLineStart = match.index + match[0].length;\n    line += 1;\n  }\n  return {\n    line,\n    column: position + 1 - lastLineStart\n  };\n}\n\n//# sourceURL=webpack://my-app/../../graphql/language/location.mjs?");

/***/ }),

/***/ "../../graphql/language/parser.mjs":
/*!*****************************************!*\
  !*** ../../graphql/language/parser.mjs ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Parser: () => (/* binding */ Parser),\n/* harmony export */   parse: () => (/* binding */ parse),\n/* harmony export */   parseConstValue: () => (/* binding */ parseConstValue),\n/* harmony export */   parseType: () => (/* binding */ parseType),\n/* harmony export */   parseValue: () => (/* binding */ parseValue)\n/* harmony export */ });\n/* harmony import */ var _error_syntaxError_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../error/syntaxError.mjs */ \"../../graphql/error/syntaxError.mjs\");\n/* harmony import */ var _ast_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ast.mjs */ \"../../graphql/language/ast.mjs\");\n/* harmony import */ var _directiveLocation_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./directiveLocation.mjs */ \"../../graphql/language/directiveLocation.mjs\");\n/* harmony import */ var _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./kinds.mjs */ \"../../graphql/language/kinds.mjs\");\n/* harmony import */ var _lexer_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lexer.mjs */ \"../../graphql/language/lexer.mjs\");\n/* harmony import */ var _source_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./source.mjs */ \"../../graphql/language/source.mjs\");\n/* harmony import */ var _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tokenKind.mjs */ \"../../graphql/language/tokenKind.mjs\");\n\n\n\n\n\n\n\n/**\n * Configuration options to control parser behavior\n */\n\n/**\n * Given a GraphQL source, parses it into a Document.\n * Throws GraphQLError if a syntax error is encountered.\n */\nfunction parse(source, options) {\n  const parser = new Parser(source, options);\n  return parser.parseDocument();\n}\n/**\n * Given a string containing a GraphQL value (ex. `[42]`), parse the AST for\n * that value.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Values directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: valueFromAST().\n */\n\nfunction parseValue(source, options) {\n  const parser = new Parser(source, options);\n  parser.expectToken(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.SOF);\n  const value = parser.parseValueLiteral(false);\n  parser.expectToken(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.EOF);\n  return value;\n}\n/**\n * Similar to parseValue(), but raises a parse error if it encounters a\n * variable. The return type will be a constant value.\n */\n\nfunction parseConstValue(source, options) {\n  const parser = new Parser(source, options);\n  parser.expectToken(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.SOF);\n  const value = parser.parseConstValueLiteral();\n  parser.expectToken(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.EOF);\n  return value;\n}\n/**\n * Given a string containing a GraphQL Type (ex. `[Int!]`), parse the AST for\n * that type.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Types directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: typeFromAST().\n */\n\nfunction parseType(source, options) {\n  const parser = new Parser(source, options);\n  parser.expectToken(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.SOF);\n  const type = parser.parseTypeReference();\n  parser.expectToken(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.EOF);\n  return type;\n}\n/**\n * This class is exported only to assist people in implementing their own parsers\n * without duplicating too much code and should be used only as last resort for cases\n * such as experimental syntax or if certain features could not be contributed upstream.\n *\n * It is still part of the internal API and is versioned, so any changes to it are never\n * considered breaking changes. If you still need to support multiple versions of the\n * library, please use the `versionInfo` variable for version detection.\n *\n * @internal\n */\n\nclass Parser {\n  constructor(source, options = {}) {\n    const sourceObj = (0,_source_mjs__WEBPACK_IMPORTED_MODULE_1__.isSource)(source) ? source : new _source_mjs__WEBPACK_IMPORTED_MODULE_1__.Source(source);\n    this._lexer = new _lexer_mjs__WEBPACK_IMPORTED_MODULE_2__.Lexer(sourceObj);\n    this._options = options;\n    this._tokenCounter = 0;\n  }\n  /**\n   * Converts a name lex token into a name parse node.\n   */\n\n  parseName() {\n    const token = this.expectToken(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.NAME);\n    return this.node(token, {\n      kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.NAME,\n      value: token.value\n    });\n  } // Implements the parsing rules in the Document section.\n\n  /**\n   * Document : Definition+\n   */\n\n  parseDocument() {\n    return this.node(this._lexer.token, {\n      kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.DOCUMENT,\n      definitions: this.many(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.SOF, this.parseDefinition, _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.EOF)\n    });\n  }\n  /**\n   * Definition :\n   *   - ExecutableDefinition\n   *   - TypeSystemDefinition\n   *   - TypeSystemExtension\n   *\n   * ExecutableDefinition :\n   *   - OperationDefinition\n   *   - FragmentDefinition\n   *\n   * TypeSystemDefinition :\n   *   - SchemaDefinition\n   *   - TypeDefinition\n   *   - DirectiveDefinition\n   *\n   * TypeDefinition :\n   *   - ScalarTypeDefinition\n   *   - ObjectTypeDefinition\n   *   - InterfaceTypeDefinition\n   *   - UnionTypeDefinition\n   *   - EnumTypeDefinition\n   *   - InputObjectTypeDefinition\n   */\n\n  parseDefinition() {\n    if (this.peek(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.BRACE_L)) {\n      return this.parseOperationDefinition();\n    } // Many definitions begin with a description and require a lookahead.\n\n    const hasDescription = this.peekDescription();\n    const keywordToken = hasDescription ? this._lexer.lookahead() : this._lexer.token;\n    if (keywordToken.kind === _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaDefinition();\n        case 'scalar':\n          return this.parseScalarTypeDefinition();\n        case 'type':\n          return this.parseObjectTypeDefinition();\n        case 'interface':\n          return this.parseInterfaceTypeDefinition();\n        case 'union':\n          return this.parseUnionTypeDefinition();\n        case 'enum':\n          return this.parseEnumTypeDefinition();\n        case 'input':\n          return this.parseInputObjectTypeDefinition();\n        case 'directive':\n          return this.parseDirectiveDefinition();\n      }\n      if (hasDescription) {\n        throw (0,_error_syntaxError_mjs__WEBPACK_IMPORTED_MODULE_4__.syntaxError)(this._lexer.source, this._lexer.token.start, 'Unexpected description, descriptions are supported only on type definitions.');\n      }\n      switch (keywordToken.value) {\n        case 'query':\n        case 'mutation':\n        case 'subscription':\n          return this.parseOperationDefinition();\n        case 'fragment':\n          return this.parseFragmentDefinition();\n        case 'extend':\n          return this.parseTypeSystemExtension();\n      }\n    }\n    throw this.unexpected(keywordToken);\n  } // Implements the parsing rules in the Operations section.\n\n  /**\n   * OperationDefinition :\n   *  - SelectionSet\n   *  - OperationType Name? VariableDefinitions? Directives? SelectionSet\n   */\n\n  parseOperationDefinition() {\n    const start = this._lexer.token;\n    if (this.peek(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.BRACE_L)) {\n      return this.node(start, {\n        kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.OPERATION_DEFINITION,\n        operation: _ast_mjs__WEBPACK_IMPORTED_MODULE_5__.OperationTypeNode.QUERY,\n        name: undefined,\n        variableDefinitions: [],\n        directives: [],\n        selectionSet: this.parseSelectionSet()\n      });\n    }\n    const operation = this.parseOperationType();\n    let name;\n    if (this.peek(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.NAME)) {\n      name = this.parseName();\n    }\n    return this.node(start, {\n      kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.OPERATION_DEFINITION,\n      operation,\n      name,\n      variableDefinitions: this.parseVariableDefinitions(),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet()\n    });\n  }\n  /**\n   * OperationType : one of query mutation subscription\n   */\n\n  parseOperationType() {\n    const operationToken = this.expectToken(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.NAME);\n    switch (operationToken.value) {\n      case 'query':\n        return _ast_mjs__WEBPACK_IMPORTED_MODULE_5__.OperationTypeNode.QUERY;\n      case 'mutation':\n        return _ast_mjs__WEBPACK_IMPORTED_MODULE_5__.OperationTypeNode.MUTATION;\n      case 'subscription':\n        return _ast_mjs__WEBPACK_IMPORTED_MODULE_5__.OperationTypeNode.SUBSCRIPTION;\n    }\n    throw this.unexpected(operationToken);\n  }\n  /**\n   * VariableDefinitions : ( VariableDefinition+ )\n   */\n\n  parseVariableDefinitions() {\n    return this.optionalMany(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.PAREN_L, this.parseVariableDefinition, _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.PAREN_R);\n  }\n  /**\n   * VariableDefinition : Variable : Type DefaultValue? Directives[Const]?\n   */\n\n  parseVariableDefinition() {\n    return this.node(this._lexer.token, {\n      kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.VARIABLE_DEFINITION,\n      variable: this.parseVariable(),\n      type: (this.expectToken(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.COLON), this.parseTypeReference()),\n      defaultValue: this.expectOptionalToken(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.EQUALS) ? this.parseConstValueLiteral() : undefined,\n      directives: this.parseConstDirectives()\n    });\n  }\n  /**\n   * Variable : $ Name\n   */\n\n  parseVariable() {\n    const start = this._lexer.token;\n    this.expectToken(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.DOLLAR);\n    return this.node(start, {\n      kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.VARIABLE,\n      name: this.parseName()\n    });\n  }\n  /**\n   * ```\n   * SelectionSet : { Selection+ }\n   * ```\n   */\n\n  parseSelectionSet() {\n    return this.node(this._lexer.token, {\n      kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.SELECTION_SET,\n      selections: this.many(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.BRACE_L, this.parseSelection, _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.BRACE_R)\n    });\n  }\n  /**\n   * Selection :\n   *   - Field\n   *   - FragmentSpread\n   *   - InlineFragment\n   */\n\n  parseSelection() {\n    return this.peek(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.SPREAD) ? this.parseFragment() : this.parseField();\n  }\n  /**\n   * Field : Alias? Name Arguments? Directives? SelectionSet?\n   *\n   * Alias : Name :\n   */\n\n  parseField() {\n    const start = this._lexer.token;\n    const nameOrAlias = this.parseName();\n    let alias;\n    let name;\n    if (this.expectOptionalToken(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.COLON)) {\n      alias = nameOrAlias;\n      name = this.parseName();\n    } else {\n      name = nameOrAlias;\n    }\n    return this.node(start, {\n      kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.FIELD,\n      alias,\n      name,\n      arguments: this.parseArguments(false),\n      directives: this.parseDirectives(false),\n      selectionSet: this.peek(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.BRACE_L) ? this.parseSelectionSet() : undefined\n    });\n  }\n  /**\n   * Arguments[Const] : ( Argument[?Const]+ )\n   */\n\n  parseArguments(isConst) {\n    const item = isConst ? this.parseConstArgument : this.parseArgument;\n    return this.optionalMany(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.PAREN_L, item, _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.PAREN_R);\n  }\n  /**\n   * Argument[Const] : Name : Value[?Const]\n   */\n\n  parseArgument(isConst = false) {\n    const start = this._lexer.token;\n    const name = this.parseName();\n    this.expectToken(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.COLON);\n    return this.node(start, {\n      kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.ARGUMENT,\n      name,\n      value: this.parseValueLiteral(isConst)\n    });\n  }\n  parseConstArgument() {\n    return this.parseArgument(true);\n  } // Implements the parsing rules in the Fragments section.\n\n  /**\n   * Corresponds to both FragmentSpread and InlineFragment in the spec.\n   *\n   * FragmentSpread : ... FragmentName Directives?\n   *\n   * InlineFragment : ... TypeCondition? Directives? SelectionSet\n   */\n\n  parseFragment() {\n    const start = this._lexer.token;\n    this.expectToken(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.SPREAD);\n    const hasTypeCondition = this.expectOptionalKeyword('on');\n    if (!hasTypeCondition && this.peek(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.NAME)) {\n      return this.node(start, {\n        kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.FRAGMENT_SPREAD,\n        name: this.parseFragmentName(),\n        directives: this.parseDirectives(false)\n      });\n    }\n    return this.node(start, {\n      kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.INLINE_FRAGMENT,\n      typeCondition: hasTypeCondition ? this.parseNamedType() : undefined,\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet()\n    });\n  }\n  /**\n   * FragmentDefinition :\n   *   - fragment FragmentName on TypeCondition Directives? SelectionSet\n   *\n   * TypeCondition : NamedType\n   */\n\n  parseFragmentDefinition() {\n    const start = this._lexer.token;\n    this.expectKeyword('fragment'); // Legacy support for defining variables within fragments changes\n    // the grammar of FragmentDefinition:\n    //   - fragment FragmentName VariableDefinitions? on TypeCondition Directives? SelectionSet\n\n    if (this._options.allowLegacyFragmentVariables === true) {\n      return this.node(start, {\n        kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.FRAGMENT_DEFINITION,\n        name: this.parseFragmentName(),\n        variableDefinitions: this.parseVariableDefinitions(),\n        typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n        directives: this.parseDirectives(false),\n        selectionSet: this.parseSelectionSet()\n      });\n    }\n    return this.node(start, {\n      kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.FRAGMENT_DEFINITION,\n      name: this.parseFragmentName(),\n      typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet()\n    });\n  }\n  /**\n   * FragmentName : Name but not `on`\n   */\n\n  parseFragmentName() {\n    if (this._lexer.token.value === 'on') {\n      throw this.unexpected();\n    }\n    return this.parseName();\n  } // Implements the parsing rules in the Values section.\n\n  /**\n   * Value[Const] :\n   *   - [~Const] Variable\n   *   - IntValue\n   *   - FloatValue\n   *   - StringValue\n   *   - BooleanValue\n   *   - NullValue\n   *   - EnumValue\n   *   - ListValue[?Const]\n   *   - ObjectValue[?Const]\n   *\n   * BooleanValue : one of `true` `false`\n   *\n   * NullValue : `null`\n   *\n   * EnumValue : Name but not `true`, `false` or `null`\n   */\n\n  parseValueLiteral(isConst) {\n    const token = this._lexer.token;\n    switch (token.kind) {\n      case _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.BRACKET_L:\n        return this.parseList(isConst);\n      case _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.BRACE_L:\n        return this.parseObject(isConst);\n      case _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.INT:\n        this.advanceLexer();\n        return this.node(token, {\n          kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.INT,\n          value: token.value\n        });\n      case _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.FLOAT:\n        this.advanceLexer();\n        return this.node(token, {\n          kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.FLOAT,\n          value: token.value\n        });\n      case _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.STRING:\n      case _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.BLOCK_STRING:\n        return this.parseStringLiteral();\n      case _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.NAME:\n        this.advanceLexer();\n        switch (token.value) {\n          case 'true':\n            return this.node(token, {\n              kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.BOOLEAN,\n              value: true\n            });\n          case 'false':\n            return this.node(token, {\n              kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.BOOLEAN,\n              value: false\n            });\n          case 'null':\n            return this.node(token, {\n              kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.NULL\n            });\n          default:\n            return this.node(token, {\n              kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.ENUM,\n              value: token.value\n            });\n        }\n      case _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.DOLLAR:\n        if (isConst) {\n          this.expectToken(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.DOLLAR);\n          if (this._lexer.token.kind === _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.NAME) {\n            const varName = this._lexer.token.value;\n            throw (0,_error_syntaxError_mjs__WEBPACK_IMPORTED_MODULE_4__.syntaxError)(this._lexer.source, token.start, `Unexpected variable \"$${varName}\" in constant value.`);\n          } else {\n            throw this.unexpected(token);\n          }\n        }\n        return this.parseVariable();\n      default:\n        throw this.unexpected();\n    }\n  }\n  parseConstValueLiteral() {\n    return this.parseValueLiteral(true);\n  }\n  parseStringLiteral() {\n    const token = this._lexer.token;\n    this.advanceLexer();\n    return this.node(token, {\n      kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.STRING,\n      value: token.value,\n      block: token.kind === _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.BLOCK_STRING\n    });\n  }\n  /**\n   * ListValue[Const] :\n   *   - [ ]\n   *   - [ Value[?Const]+ ]\n   */\n\n  parseList(isConst) {\n    const item = () => this.parseValueLiteral(isConst);\n    return this.node(this._lexer.token, {\n      kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.LIST,\n      values: this.any(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.BRACKET_L, item, _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.BRACKET_R)\n    });\n  }\n  /**\n   * ```\n   * ObjectValue[Const] :\n   *   - { }\n   *   - { ObjectField[?Const]+ }\n   * ```\n   */\n\n  parseObject(isConst) {\n    const item = () => this.parseObjectField(isConst);\n    return this.node(this._lexer.token, {\n      kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.OBJECT,\n      fields: this.any(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.BRACE_L, item, _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.BRACE_R)\n    });\n  }\n  /**\n   * ObjectField[Const] : Name : Value[?Const]\n   */\n\n  parseObjectField(isConst) {\n    const start = this._lexer.token;\n    const name = this.parseName();\n    this.expectToken(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.COLON);\n    return this.node(start, {\n      kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.OBJECT_FIELD,\n      name,\n      value: this.parseValueLiteral(isConst)\n    });\n  } // Implements the parsing rules in the Directives section.\n\n  /**\n   * Directives[Const] : Directive[?Const]+\n   */\n\n  parseDirectives(isConst) {\n    const directives = [];\n    while (this.peek(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.AT)) {\n      directives.push(this.parseDirective(isConst));\n    }\n    return directives;\n  }\n  parseConstDirectives() {\n    return this.parseDirectives(true);\n  }\n  /**\n   * ```\n   * Directive[Const] : @ Name Arguments[?Const]?\n   * ```\n   */\n\n  parseDirective(isConst) {\n    const start = this._lexer.token;\n    this.expectToken(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.AT);\n    return this.node(start, {\n      kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.DIRECTIVE,\n      name: this.parseName(),\n      arguments: this.parseArguments(isConst)\n    });\n  } // Implements the parsing rules in the Types section.\n\n  /**\n   * Type :\n   *   - NamedType\n   *   - ListType\n   *   - NonNullType\n   */\n\n  parseTypeReference() {\n    const start = this._lexer.token;\n    let type;\n    if (this.expectOptionalToken(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.BRACKET_L)) {\n      const innerType = this.parseTypeReference();\n      this.expectToken(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.BRACKET_R);\n      type = this.node(start, {\n        kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.LIST_TYPE,\n        type: innerType\n      });\n    } else {\n      type = this.parseNamedType();\n    }\n    if (this.expectOptionalToken(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.BANG)) {\n      return this.node(start, {\n        kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.NON_NULL_TYPE,\n        type\n      });\n    }\n    return type;\n  }\n  /**\n   * NamedType : Name\n   */\n\n  parseNamedType() {\n    return this.node(this._lexer.token, {\n      kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.NAMED_TYPE,\n      name: this.parseName()\n    });\n  } // Implements the parsing rules in the Type Definition section.\n\n  peekDescription() {\n    return this.peek(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.STRING) || this.peek(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.BLOCK_STRING);\n  }\n  /**\n   * Description : StringValue\n   */\n\n  parseDescription() {\n    if (this.peekDescription()) {\n      return this.parseStringLiteral();\n    }\n  }\n  /**\n   * ```\n   * SchemaDefinition : Description? schema Directives[Const]? { OperationTypeDefinition+ }\n   * ```\n   */\n\n  parseSchemaDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('schema');\n    const directives = this.parseConstDirectives();\n    const operationTypes = this.many(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.BRACE_L, this.parseOperationTypeDefinition, _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.BRACE_R);\n    return this.node(start, {\n      kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.SCHEMA_DEFINITION,\n      description,\n      directives,\n      operationTypes\n    });\n  }\n  /**\n   * OperationTypeDefinition : OperationType : NamedType\n   */\n\n  parseOperationTypeDefinition() {\n    const start = this._lexer.token;\n    const operation = this.parseOperationType();\n    this.expectToken(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.COLON);\n    const type = this.parseNamedType();\n    return this.node(start, {\n      kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.OPERATION_TYPE_DEFINITION,\n      operation,\n      type\n    });\n  }\n  /**\n   * ScalarTypeDefinition : Description? scalar Name Directives[Const]?\n   */\n\n  parseScalarTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('scalar');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.SCALAR_TYPE_DEFINITION,\n      description,\n      name,\n      directives\n    });\n  }\n  /**\n   * ObjectTypeDefinition :\n   *   Description?\n   *   type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition?\n   */\n\n  parseObjectTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('type');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n    return this.node(start, {\n      kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.OBJECT_TYPE_DEFINITION,\n      description,\n      name,\n      interfaces,\n      directives,\n      fields\n    });\n  }\n  /**\n   * ImplementsInterfaces :\n   *   - implements `&`? NamedType\n   *   - ImplementsInterfaces & NamedType\n   */\n\n  parseImplementsInterfaces() {\n    return this.expectOptionalKeyword('implements') ? this.delimitedMany(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.AMP, this.parseNamedType) : [];\n  }\n  /**\n   * ```\n   * FieldsDefinition : { FieldDefinition+ }\n   * ```\n   */\n\n  parseFieldsDefinition() {\n    return this.optionalMany(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.BRACE_L, this.parseFieldDefinition, _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.BRACE_R);\n  }\n  /**\n   * FieldDefinition :\n   *   - Description? Name ArgumentsDefinition? : Type Directives[Const]?\n   */\n\n  parseFieldDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    const name = this.parseName();\n    const args = this.parseArgumentDefs();\n    this.expectToken(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.COLON);\n    const type = this.parseTypeReference();\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.FIELD_DEFINITION,\n      description,\n      name,\n      arguments: args,\n      type,\n      directives\n    });\n  }\n  /**\n   * ArgumentsDefinition : ( InputValueDefinition+ )\n   */\n\n  parseArgumentDefs() {\n    return this.optionalMany(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.PAREN_L, this.parseInputValueDef, _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.PAREN_R);\n  }\n  /**\n   * InputValueDefinition :\n   *   - Description? Name : Type DefaultValue? Directives[Const]?\n   */\n\n  parseInputValueDef() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    const name = this.parseName();\n    this.expectToken(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.COLON);\n    const type = this.parseTypeReference();\n    let defaultValue;\n    if (this.expectOptionalToken(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.EQUALS)) {\n      defaultValue = this.parseConstValueLiteral();\n    }\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.INPUT_VALUE_DEFINITION,\n      description,\n      name,\n      type,\n      defaultValue,\n      directives\n    });\n  }\n  /**\n   * InterfaceTypeDefinition :\n   *   - Description? interface Name Directives[Const]? FieldsDefinition?\n   */\n\n  parseInterfaceTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('interface');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n    return this.node(start, {\n      kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.INTERFACE_TYPE_DEFINITION,\n      description,\n      name,\n      interfaces,\n      directives,\n      fields\n    });\n  }\n  /**\n   * UnionTypeDefinition :\n   *   - Description? union Name Directives[Const]? UnionMemberTypes?\n   */\n\n  parseUnionTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('union');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const types = this.parseUnionMemberTypes();\n    return this.node(start, {\n      kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.UNION_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n      types\n    });\n  }\n  /**\n   * UnionMemberTypes :\n   *   - = `|`? NamedType\n   *   - UnionMemberTypes | NamedType\n   */\n\n  parseUnionMemberTypes() {\n    return this.expectOptionalToken(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.EQUALS) ? this.delimitedMany(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.PIPE, this.parseNamedType) : [];\n  }\n  /**\n   * EnumTypeDefinition :\n   *   - Description? enum Name Directives[Const]? EnumValuesDefinition?\n   */\n\n  parseEnumTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('enum');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const values = this.parseEnumValuesDefinition();\n    return this.node(start, {\n      kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.ENUM_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n      values\n    });\n  }\n  /**\n   * ```\n   * EnumValuesDefinition : { EnumValueDefinition+ }\n   * ```\n   */\n\n  parseEnumValuesDefinition() {\n    return this.optionalMany(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.BRACE_L, this.parseEnumValueDefinition, _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.BRACE_R);\n  }\n  /**\n   * EnumValueDefinition : Description? EnumValue Directives[Const]?\n   */\n\n  parseEnumValueDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    const name = this.parseEnumValueName();\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.ENUM_VALUE_DEFINITION,\n      description,\n      name,\n      directives\n    });\n  }\n  /**\n   * EnumValue : Name but not `true`, `false` or `null`\n   */\n\n  parseEnumValueName() {\n    if (this._lexer.token.value === 'true' || this._lexer.token.value === 'false' || this._lexer.token.value === 'null') {\n      throw (0,_error_syntaxError_mjs__WEBPACK_IMPORTED_MODULE_4__.syntaxError)(this._lexer.source, this._lexer.token.start, `${getTokenDesc(this._lexer.token)} is reserved and cannot be used for an enum value.`);\n    }\n    return this.parseName();\n  }\n  /**\n   * InputObjectTypeDefinition :\n   *   - Description? input Name Directives[Const]? InputFieldsDefinition?\n   */\n\n  parseInputObjectTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('input');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseInputFieldsDefinition();\n    return this.node(start, {\n      kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.INPUT_OBJECT_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n      fields\n    });\n  }\n  /**\n   * ```\n   * InputFieldsDefinition : { InputValueDefinition+ }\n   * ```\n   */\n\n  parseInputFieldsDefinition() {\n    return this.optionalMany(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.BRACE_L, this.parseInputValueDef, _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.BRACE_R);\n  }\n  /**\n   * TypeSystemExtension :\n   *   - SchemaExtension\n   *   - TypeExtension\n   *\n   * TypeExtension :\n   *   - ScalarTypeExtension\n   *   - ObjectTypeExtension\n   *   - InterfaceTypeExtension\n   *   - UnionTypeExtension\n   *   - EnumTypeExtension\n   *   - InputObjectTypeDefinition\n   */\n\n  parseTypeSystemExtension() {\n    const keywordToken = this._lexer.lookahead();\n    if (keywordToken.kind === _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaExtension();\n        case 'scalar':\n          return this.parseScalarTypeExtension();\n        case 'type':\n          return this.parseObjectTypeExtension();\n        case 'interface':\n          return this.parseInterfaceTypeExtension();\n        case 'union':\n          return this.parseUnionTypeExtension();\n        case 'enum':\n          return this.parseEnumTypeExtension();\n        case 'input':\n          return this.parseInputObjectTypeExtension();\n      }\n    }\n    throw this.unexpected(keywordToken);\n  }\n  /**\n   * ```\n   * SchemaExtension :\n   *  - extend schema Directives[Const]? { OperationTypeDefinition+ }\n   *  - extend schema Directives[Const]\n   * ```\n   */\n\n  parseSchemaExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('schema');\n    const directives = this.parseConstDirectives();\n    const operationTypes = this.optionalMany(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.BRACE_L, this.parseOperationTypeDefinition, _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.BRACE_R);\n    if (directives.length === 0 && operationTypes.length === 0) {\n      throw this.unexpected();\n    }\n    return this.node(start, {\n      kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.SCHEMA_EXTENSION,\n      directives,\n      operationTypes\n    });\n  }\n  /**\n   * ScalarTypeExtension :\n   *   - extend scalar Name Directives[Const]\n   */\n\n  parseScalarTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('scalar');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    if (directives.length === 0) {\n      throw this.unexpected();\n    }\n    return this.node(start, {\n      kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.SCALAR_TYPE_EXTENSION,\n      name,\n      directives\n    });\n  }\n  /**\n   * ObjectTypeExtension :\n   *  - extend type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend type Name ImplementsInterfaces? Directives[Const]\n   *  - extend type Name ImplementsInterfaces\n   */\n\n  parseObjectTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('type');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n    if (interfaces.length === 0 && directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n    return this.node(start, {\n      kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.OBJECT_TYPE_EXTENSION,\n      name,\n      interfaces,\n      directives,\n      fields\n    });\n  }\n  /**\n   * InterfaceTypeExtension :\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]\n   *  - extend interface Name ImplementsInterfaces\n   */\n\n  parseInterfaceTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('interface');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n    if (interfaces.length === 0 && directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n    return this.node(start, {\n      kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.INTERFACE_TYPE_EXTENSION,\n      name,\n      interfaces,\n      directives,\n      fields\n    });\n  }\n  /**\n   * UnionTypeExtension :\n   *   - extend union Name Directives[Const]? UnionMemberTypes\n   *   - extend union Name Directives[Const]\n   */\n\n  parseUnionTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('union');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const types = this.parseUnionMemberTypes();\n    if (directives.length === 0 && types.length === 0) {\n      throw this.unexpected();\n    }\n    return this.node(start, {\n      kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.UNION_TYPE_EXTENSION,\n      name,\n      directives,\n      types\n    });\n  }\n  /**\n   * EnumTypeExtension :\n   *   - extend enum Name Directives[Const]? EnumValuesDefinition\n   *   - extend enum Name Directives[Const]\n   */\n\n  parseEnumTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('enum');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const values = this.parseEnumValuesDefinition();\n    if (directives.length === 0 && values.length === 0) {\n      throw this.unexpected();\n    }\n    return this.node(start, {\n      kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.ENUM_TYPE_EXTENSION,\n      name,\n      directives,\n      values\n    });\n  }\n  /**\n   * InputObjectTypeExtension :\n   *   - extend input Name Directives[Const]? InputFieldsDefinition\n   *   - extend input Name Directives[Const]\n   */\n\n  parseInputObjectTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('input');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseInputFieldsDefinition();\n    if (directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n    return this.node(start, {\n      kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.INPUT_OBJECT_TYPE_EXTENSION,\n      name,\n      directives,\n      fields\n    });\n  }\n  /**\n   * ```\n   * DirectiveDefinition :\n   *   - Description? directive @ Name ArgumentsDefinition? `repeatable`? on DirectiveLocations\n   * ```\n   */\n\n  parseDirectiveDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('directive');\n    this.expectToken(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.AT);\n    const name = this.parseName();\n    const args = this.parseArgumentDefs();\n    const repeatable = this.expectOptionalKeyword('repeatable');\n    this.expectKeyword('on');\n    const locations = this.parseDirectiveLocations();\n    return this.node(start, {\n      kind: _kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.DIRECTIVE_DEFINITION,\n      description,\n      name,\n      arguments: args,\n      repeatable,\n      locations\n    });\n  }\n  /**\n   * DirectiveLocations :\n   *   - `|`? DirectiveLocation\n   *   - DirectiveLocations | DirectiveLocation\n   */\n\n  parseDirectiveLocations() {\n    return this.delimitedMany(_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.PIPE, this.parseDirectiveLocation);\n  }\n  /*\n   * DirectiveLocation :\n   *   - ExecutableDirectiveLocation\n   *   - TypeSystemDirectiveLocation\n   *\n   * ExecutableDirectiveLocation : one of\n   *   `QUERY`\n   *   `MUTATION`\n   *   `SUBSCRIPTION`\n   *   `FIELD`\n   *   `FRAGMENT_DEFINITION`\n   *   `FRAGMENT_SPREAD`\n   *   `INLINE_FRAGMENT`\n   *\n   * TypeSystemDirectiveLocation : one of\n   *   `SCHEMA`\n   *   `SCALAR`\n   *   `OBJECT`\n   *   `FIELD_DEFINITION`\n   *   `ARGUMENT_DEFINITION`\n   *   `INTERFACE`\n   *   `UNION`\n   *   `ENUM`\n   *   `ENUM_VALUE`\n   *   `INPUT_OBJECT`\n   *   `INPUT_FIELD_DEFINITION`\n   */\n\n  parseDirectiveLocation() {\n    const start = this._lexer.token;\n    const name = this.parseName();\n    if (Object.prototype.hasOwnProperty.call(_directiveLocation_mjs__WEBPACK_IMPORTED_MODULE_6__.DirectiveLocation, name.value)) {\n      return name;\n    }\n    throw this.unexpected(start);\n  } // Core parsing utility functions\n\n  /**\n   * Returns a node that, if configured to do so, sets a \"loc\" field as a\n   * location object, used to identify the place in the source that created a\n   * given parsed object.\n   */\n\n  node(startToken, node) {\n    if (this._options.noLocation !== true) {\n      node.loc = new _ast_mjs__WEBPACK_IMPORTED_MODULE_5__.Location(startToken, this._lexer.lastToken, this._lexer.source);\n    }\n    return node;\n  }\n  /**\n   * Determines if the next token is of a given kind\n   */\n\n  peek(kind) {\n    return this._lexer.token.kind === kind;\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n\n  expectToken(kind) {\n    const token = this._lexer.token;\n    if (token.kind === kind) {\n      this.advanceLexer();\n      return token;\n    }\n    throw (0,_error_syntaxError_mjs__WEBPACK_IMPORTED_MODULE_4__.syntaxError)(this._lexer.source, token.start, `Expected ${getTokenKindDesc(kind)}, found ${getTokenDesc(token)}.`);\n  }\n  /**\n   * If the next token is of the given kind, return \"true\" after advancing the lexer.\n   * Otherwise, do not change the parser state and return \"false\".\n   */\n\n  expectOptionalToken(kind) {\n    const token = this._lexer.token;\n    if (token.kind === kind) {\n      this.advanceLexer();\n      return true;\n    }\n    return false;\n  }\n  /**\n   * If the next token is a given keyword, advance the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n\n  expectKeyword(value) {\n    const token = this._lexer.token;\n    if (token.kind === _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.NAME && token.value === value) {\n      this.advanceLexer();\n    } else {\n      throw (0,_error_syntaxError_mjs__WEBPACK_IMPORTED_MODULE_4__.syntaxError)(this._lexer.source, token.start, `Expected \"${value}\", found ${getTokenDesc(token)}.`);\n    }\n  }\n  /**\n   * If the next token is a given keyword, return \"true\" after advancing the lexer.\n   * Otherwise, do not change the parser state and return \"false\".\n   */\n\n  expectOptionalKeyword(value) {\n    const token = this._lexer.token;\n    if (token.kind === _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.NAME && token.value === value) {\n      this.advanceLexer();\n      return true;\n    }\n    return false;\n  }\n  /**\n   * Helper function for creating an error when an unexpected lexed token is encountered.\n   */\n\n  unexpected(atToken) {\n    const token = atToken !== null && atToken !== void 0 ? atToken : this._lexer.token;\n    return (0,_error_syntaxError_mjs__WEBPACK_IMPORTED_MODULE_4__.syntaxError)(this._lexer.source, token.start, `Unexpected ${getTokenDesc(token)}.`);\n  }\n  /**\n   * Returns a possibly empty list of parse nodes, determined by the parseFn.\n   * This list begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n\n  any(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    const nodes = [];\n    while (!this.expectOptionalToken(closeKind)) {\n      nodes.push(parseFn.call(this));\n    }\n    return nodes;\n  }\n  /**\n   * Returns a list of parse nodes, determined by the parseFn.\n   * It can be empty only if open token is missing otherwise it will always return non-empty list\n   * that begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n\n  optionalMany(openKind, parseFn, closeKind) {\n    if (this.expectOptionalToken(openKind)) {\n      const nodes = [];\n      do {\n        nodes.push(parseFn.call(this));\n      } while (!this.expectOptionalToken(closeKind));\n      return nodes;\n    }\n    return [];\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by the parseFn.\n   * This list begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n\n  many(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    const nodes = [];\n    do {\n      nodes.push(parseFn.call(this));\n    } while (!this.expectOptionalToken(closeKind));\n    return nodes;\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by the parseFn.\n   * This list may begin with a lex token of delimiterKind followed by items separated by lex tokens of tokenKind.\n   * Advances the parser to the next lex token after last item in the list.\n   */\n\n  delimitedMany(delimiterKind, parseFn) {\n    this.expectOptionalToken(delimiterKind);\n    const nodes = [];\n    do {\n      nodes.push(parseFn.call(this));\n    } while (this.expectOptionalToken(delimiterKind));\n    return nodes;\n  }\n  advanceLexer() {\n    const {\n      maxTokens\n    } = this._options;\n    const token = this._lexer.advance();\n    if (maxTokens !== undefined && token.kind !== _tokenKind_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenKind.EOF) {\n      ++this._tokenCounter;\n      if (this._tokenCounter > maxTokens) {\n        throw (0,_error_syntaxError_mjs__WEBPACK_IMPORTED_MODULE_4__.syntaxError)(this._lexer.source, token.start, `Document contains more that ${maxTokens} tokens. Parsing aborted.`);\n      }\n    }\n  }\n}\n/**\n * A helper function to describe a token as a string for debugging.\n */\n\nfunction getTokenDesc(token) {\n  const value = token.value;\n  return getTokenKindDesc(token.kind) + (value != null ? ` \"${value}\"` : '');\n}\n/**\n * A helper function to describe a token kind as a string for debugging.\n */\n\nfunction getTokenKindDesc(kind) {\n  return (0,_lexer_mjs__WEBPACK_IMPORTED_MODULE_2__.isPunctuatorTokenKind)(kind) ? `\"${kind}\"` : kind;\n}\n\n//# sourceURL=webpack://my-app/../../graphql/language/parser.mjs?");

/***/ }),

/***/ "../../graphql/language/predicates.mjs":
/*!*********************************************!*\
  !*** ../../graphql/language/predicates.mjs ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isConstValueNode: () => (/* binding */ isConstValueNode),\n/* harmony export */   isDefinitionNode: () => (/* binding */ isDefinitionNode),\n/* harmony export */   isExecutableDefinitionNode: () => (/* binding */ isExecutableDefinitionNode),\n/* harmony export */   isSelectionNode: () => (/* binding */ isSelectionNode),\n/* harmony export */   isTypeDefinitionNode: () => (/* binding */ isTypeDefinitionNode),\n/* harmony export */   isTypeExtensionNode: () => (/* binding */ isTypeExtensionNode),\n/* harmony export */   isTypeNode: () => (/* binding */ isTypeNode),\n/* harmony export */   isTypeSystemDefinitionNode: () => (/* binding */ isTypeSystemDefinitionNode),\n/* harmony export */   isTypeSystemExtensionNode: () => (/* binding */ isTypeSystemExtensionNode),\n/* harmony export */   isValueNode: () => (/* binding */ isValueNode)\n/* harmony export */ });\n/* harmony import */ var _kinds_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kinds.mjs */ \"../../graphql/language/kinds.mjs\");\n\nfunction isDefinitionNode(node) {\n  return isExecutableDefinitionNode(node) || isTypeSystemDefinitionNode(node) || isTypeSystemExtensionNode(node);\n}\nfunction isExecutableDefinitionNode(node) {\n  return node.kind === _kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.OPERATION_DEFINITION || node.kind === _kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.FRAGMENT_DEFINITION;\n}\nfunction isSelectionNode(node) {\n  return node.kind === _kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.FIELD || node.kind === _kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.FRAGMENT_SPREAD || node.kind === _kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.INLINE_FRAGMENT;\n}\nfunction isValueNode(node) {\n  return node.kind === _kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.VARIABLE || node.kind === _kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.INT || node.kind === _kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.FLOAT || node.kind === _kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.STRING || node.kind === _kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.BOOLEAN || node.kind === _kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.NULL || node.kind === _kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.ENUM || node.kind === _kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.LIST || node.kind === _kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.OBJECT;\n}\nfunction isConstValueNode(node) {\n  return isValueNode(node) && (node.kind === _kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.LIST ? node.values.some(isConstValueNode) : node.kind === _kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.OBJECT ? node.fields.some(field => isConstValueNode(field.value)) : node.kind !== _kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.VARIABLE);\n}\nfunction isTypeNode(node) {\n  return node.kind === _kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.NAMED_TYPE || node.kind === _kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.LIST_TYPE || node.kind === _kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.NON_NULL_TYPE;\n}\nfunction isTypeSystemDefinitionNode(node) {\n  return node.kind === _kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.SCHEMA_DEFINITION || isTypeDefinitionNode(node) || node.kind === _kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.DIRECTIVE_DEFINITION;\n}\nfunction isTypeDefinitionNode(node) {\n  return node.kind === _kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.SCALAR_TYPE_DEFINITION || node.kind === _kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.OBJECT_TYPE_DEFINITION || node.kind === _kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.INTERFACE_TYPE_DEFINITION || node.kind === _kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.UNION_TYPE_DEFINITION || node.kind === _kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.ENUM_TYPE_DEFINITION || node.kind === _kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.INPUT_OBJECT_TYPE_DEFINITION;\n}\nfunction isTypeSystemExtensionNode(node) {\n  return node.kind === _kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.SCHEMA_EXTENSION || isTypeExtensionNode(node);\n}\nfunction isTypeExtensionNode(node) {\n  return node.kind === _kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.SCALAR_TYPE_EXTENSION || node.kind === _kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.OBJECT_TYPE_EXTENSION || node.kind === _kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.INTERFACE_TYPE_EXTENSION || node.kind === _kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.UNION_TYPE_EXTENSION || node.kind === _kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.ENUM_TYPE_EXTENSION || node.kind === _kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.INPUT_OBJECT_TYPE_EXTENSION;\n}\n\n//# sourceURL=webpack://my-app/../../graphql/language/predicates.mjs?");

/***/ }),

/***/ "../../graphql/language/printLocation.mjs":
/*!************************************************!*\
  !*** ../../graphql/language/printLocation.mjs ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   printLocation: () => (/* binding */ printLocation),\n/* harmony export */   printSourceLocation: () => (/* binding */ printSourceLocation)\n/* harmony export */ });\n/* harmony import */ var _location_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./location.mjs */ \"../../graphql/language/location.mjs\");\n\n\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\nfunction printLocation(location) {\n  return printSourceLocation(location.source, (0,_location_mjs__WEBPACK_IMPORTED_MODULE_0__.getLocation)(location.source, location.start));\n}\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nfunction printSourceLocation(source, sourceLocation) {\n  const firstLineColumnOffset = source.locationOffset.column - 1;\n  const body = ''.padStart(firstLineColumnOffset) + source.body;\n  const lineIndex = sourceLocation.line - 1;\n  const lineOffset = source.locationOffset.line - 1;\n  const lineNum = sourceLocation.line + lineOffset;\n  const columnOffset = sourceLocation.line === 1 ? firstLineColumnOffset : 0;\n  const columnNum = sourceLocation.column + columnOffset;\n  const locationStr = `${source.name}:${lineNum}:${columnNum}\\n`;\n  const lines = body.split(/\\r\\n|[\\n\\r]/g);\n  const locationLine = lines[lineIndex]; // Special case for minified documents\n\n  if (locationLine.length > 120) {\n    const subLineIndex = Math.floor(columnNum / 80);\n    const subLineColumnNum = columnNum % 80;\n    const subLines = [];\n    for (let i = 0; i < locationLine.length; i += 80) {\n      subLines.push(locationLine.slice(i, i + 80));\n    }\n    return locationStr + printPrefixedLines([[`${lineNum} |`, subLines[0]], ...subLines.slice(1, subLineIndex + 1).map(subLine => ['|', subLine]), ['|', '^'.padStart(subLineColumnNum)], ['|', subLines[subLineIndex + 1]]]);\n  }\n  return locationStr + printPrefixedLines([\n  // Lines specified like this: [\"prefix\", \"string\"],\n  [`${lineNum - 1} |`, lines[lineIndex - 1]], [`${lineNum} |`, locationLine], ['|', '^'.padStart(columnNum)], [`${lineNum + 1} |`, lines[lineIndex + 1]]]);\n}\nfunction printPrefixedLines(lines) {\n  const existingLines = lines.filter(([_, line]) => line !== undefined);\n  const padLen = Math.max(...existingLines.map(([prefix]) => prefix.length));\n  return existingLines.map(([prefix, line]) => prefix.padStart(padLen) + (line ? ' ' + line : '')).join('\\n');\n}\n\n//# sourceURL=webpack://my-app/../../graphql/language/printLocation.mjs?");

/***/ }),

/***/ "../../graphql/language/printString.mjs":
/*!**********************************************!*\
  !*** ../../graphql/language/printString.mjs ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   printString: () => (/* binding */ printString)\n/* harmony export */ });\n/**\n * Prints a string as a GraphQL StringValue literal. Replaces control characters\n * and excluded characters (\" U+0022 and \\\\ U+005C) with escape sequences.\n */\nfunction printString(str) {\n  return `\"${str.replace(escapedRegExp, escapedReplacer)}\"`;\n} // eslint-disable-next-line no-control-regex\n\nconst escapedRegExp = /[\\x00-\\x1f\\x22\\x5c\\x7f-\\x9f]/g;\nfunction escapedReplacer(str) {\n  return escapeSequences[str.charCodeAt(0)];\n} // prettier-ignore\n\nconst escapeSequences = ['\\\\u0000', '\\\\u0001', '\\\\u0002', '\\\\u0003', '\\\\u0004', '\\\\u0005', '\\\\u0006', '\\\\u0007', '\\\\b', '\\\\t', '\\\\n', '\\\\u000B', '\\\\f', '\\\\r', '\\\\u000E', '\\\\u000F', '\\\\u0010', '\\\\u0011', '\\\\u0012', '\\\\u0013', '\\\\u0014', '\\\\u0015', '\\\\u0016', '\\\\u0017', '\\\\u0018', '\\\\u0019', '\\\\u001A', '\\\\u001B', '\\\\u001C', '\\\\u001D', '\\\\u001E', '\\\\u001F', '', '', '\\\\\"', '', '', '', '', '', '', '', '', '', '', '', '', '',\n// 2F\n'', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n// 3F\n'', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n// 4F\n'', '', '', '', '', '', '', '', '', '', '', '', '\\\\\\\\', '', '', '',\n// 5F\n'', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n// 6F\n'', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '\\\\u007F', '\\\\u0080', '\\\\u0081', '\\\\u0082', '\\\\u0083', '\\\\u0084', '\\\\u0085', '\\\\u0086', '\\\\u0087', '\\\\u0088', '\\\\u0089', '\\\\u008A', '\\\\u008B', '\\\\u008C', '\\\\u008D', '\\\\u008E', '\\\\u008F', '\\\\u0090', '\\\\u0091', '\\\\u0092', '\\\\u0093', '\\\\u0094', '\\\\u0095', '\\\\u0096', '\\\\u0097', '\\\\u0098', '\\\\u0099', '\\\\u009A', '\\\\u009B', '\\\\u009C', '\\\\u009D', '\\\\u009E', '\\\\u009F'];\n\n//# sourceURL=webpack://my-app/../../graphql/language/printString.mjs?");

/***/ }),

/***/ "../../graphql/language/printer.mjs":
/*!******************************************!*\
  !*** ../../graphql/language/printer.mjs ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   print: () => (/* binding */ print)\n/* harmony export */ });\n/* harmony import */ var _blockString_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./blockString.mjs */ \"../../graphql/language/blockString.mjs\");\n/* harmony import */ var _printString_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./printString.mjs */ \"../../graphql/language/printString.mjs\");\n/* harmony import */ var _visitor_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./visitor.mjs */ \"../../graphql/language/visitor.mjs\");\n\n\n\n/**\n * Converts an AST into a string, using one set of reasonable\n * formatting rules.\n */\n\nfunction print(ast) {\n  return (0,_visitor_mjs__WEBPACK_IMPORTED_MODULE_0__.visit)(ast, printDocASTReducer);\n}\nconst MAX_LINE_LENGTH = 80;\nconst printDocASTReducer = {\n  Name: {\n    leave: node => node.value\n  },\n  Variable: {\n    leave: node => '$' + node.name\n  },\n  // Document\n  Document: {\n    leave: node => join(node.definitions, '\\n\\n')\n  },\n  OperationDefinition: {\n    leave(node) {\n      const varDefs = wrap('(', join(node.variableDefinitions, ', '), ')');\n      const prefix = join([node.operation, join([node.name, varDefs]), join(node.directives, ' ')], ' '); // Anonymous queries with no directives or variable definitions can use\n      // the query short form.\n\n      return (prefix === 'query' ? '' : prefix + ' ') + node.selectionSet;\n    }\n  },\n  VariableDefinition: {\n    leave: ({\n      variable,\n      type,\n      defaultValue,\n      directives\n    }) => variable + ': ' + type + wrap(' = ', defaultValue) + wrap(' ', join(directives, ' '))\n  },\n  SelectionSet: {\n    leave: ({\n      selections\n    }) => block(selections)\n  },\n  Field: {\n    leave({\n      alias,\n      name,\n      arguments: args,\n      directives,\n      selectionSet\n    }) {\n      const prefix = wrap('', alias, ': ') + name;\n      let argsLine = prefix + wrap('(', join(args, ', '), ')');\n      if (argsLine.length > MAX_LINE_LENGTH) {\n        argsLine = prefix + wrap('(\\n', indent(join(args, '\\n')), '\\n)');\n      }\n      return join([argsLine, join(directives, ' '), selectionSet], ' ');\n    }\n  },\n  Argument: {\n    leave: ({\n      name,\n      value\n    }) => name + ': ' + value\n  },\n  // Fragments\n  FragmentSpread: {\n    leave: ({\n      name,\n      directives\n    }) => '...' + name + wrap(' ', join(directives, ' '))\n  },\n  InlineFragment: {\n    leave: ({\n      typeCondition,\n      directives,\n      selectionSet\n    }) => join(['...', wrap('on ', typeCondition), join(directives, ' '), selectionSet], ' ')\n  },\n  FragmentDefinition: {\n    leave: ({\n      name,\n      typeCondition,\n      variableDefinitions,\n      directives,\n      selectionSet\n    } // Note: fragment variable definitions are experimental and may be changed\n    ) =>\n    // or removed in the future.\n    `fragment ${name}${wrap('(', join(variableDefinitions, ', '), ')')} ` + `on ${typeCondition} ${wrap('', join(directives, ' '), ' ')}` + selectionSet\n  },\n  // Value\n  IntValue: {\n    leave: ({\n      value\n    }) => value\n  },\n  FloatValue: {\n    leave: ({\n      value\n    }) => value\n  },\n  StringValue: {\n    leave: ({\n      value,\n      block: isBlockString\n    }) => isBlockString ? (0,_blockString_mjs__WEBPACK_IMPORTED_MODULE_1__.printBlockString)(value) : (0,_printString_mjs__WEBPACK_IMPORTED_MODULE_2__.printString)(value)\n  },\n  BooleanValue: {\n    leave: ({\n      value\n    }) => value ? 'true' : 'false'\n  },\n  NullValue: {\n    leave: () => 'null'\n  },\n  EnumValue: {\n    leave: ({\n      value\n    }) => value\n  },\n  ListValue: {\n    leave: ({\n      values\n    }) => '[' + join(values, ', ') + ']'\n  },\n  ObjectValue: {\n    leave: ({\n      fields\n    }) => '{' + join(fields, ', ') + '}'\n  },\n  ObjectField: {\n    leave: ({\n      name,\n      value\n    }) => name + ': ' + value\n  },\n  // Directive\n  Directive: {\n    leave: ({\n      name,\n      arguments: args\n    }) => '@' + name + wrap('(', join(args, ', '), ')')\n  },\n  // Type\n  NamedType: {\n    leave: ({\n      name\n    }) => name\n  },\n  ListType: {\n    leave: ({\n      type\n    }) => '[' + type + ']'\n  },\n  NonNullType: {\n    leave: ({\n      type\n    }) => type + '!'\n  },\n  // Type System Definitions\n  SchemaDefinition: {\n    leave: ({\n      description,\n      directives,\n      operationTypes\n    }) => wrap('', description, '\\n') + join(['schema', join(directives, ' '), block(operationTypes)], ' ')\n  },\n  OperationTypeDefinition: {\n    leave: ({\n      operation,\n      type\n    }) => operation + ': ' + type\n  },\n  ScalarTypeDefinition: {\n    leave: ({\n      description,\n      name,\n      directives\n    }) => wrap('', description, '\\n') + join(['scalar', name, join(directives, ' ')], ' ')\n  },\n  ObjectTypeDefinition: {\n    leave: ({\n      description,\n      name,\n      interfaces,\n      directives,\n      fields\n    }) => wrap('', description, '\\n') + join(['type', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ')\n  },\n  FieldDefinition: {\n    leave: ({\n      description,\n      name,\n      arguments: args,\n      type,\n      directives\n    }) => wrap('', description, '\\n') + name + (hasMultilineItems(args) ? wrap('(\\n', indent(join(args, '\\n')), '\\n)') : wrap('(', join(args, ', '), ')')) + ': ' + type + wrap(' ', join(directives, ' '))\n  },\n  InputValueDefinition: {\n    leave: ({\n      description,\n      name,\n      type,\n      defaultValue,\n      directives\n    }) => wrap('', description, '\\n') + join([name + ': ' + type, wrap('= ', defaultValue), join(directives, ' ')], ' ')\n  },\n  InterfaceTypeDefinition: {\n    leave: ({\n      description,\n      name,\n      interfaces,\n      directives,\n      fields\n    }) => wrap('', description, '\\n') + join(['interface', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ')\n  },\n  UnionTypeDefinition: {\n    leave: ({\n      description,\n      name,\n      directives,\n      types\n    }) => wrap('', description, '\\n') + join(['union', name, join(directives, ' '), wrap('= ', join(types, ' | '))], ' ')\n  },\n  EnumTypeDefinition: {\n    leave: ({\n      description,\n      name,\n      directives,\n      values\n    }) => wrap('', description, '\\n') + join(['enum', name, join(directives, ' '), block(values)], ' ')\n  },\n  EnumValueDefinition: {\n    leave: ({\n      description,\n      name,\n      directives\n    }) => wrap('', description, '\\n') + join([name, join(directives, ' ')], ' ')\n  },\n  InputObjectTypeDefinition: {\n    leave: ({\n      description,\n      name,\n      directives,\n      fields\n    }) => wrap('', description, '\\n') + join(['input', name, join(directives, ' '), block(fields)], ' ')\n  },\n  DirectiveDefinition: {\n    leave: ({\n      description,\n      name,\n      arguments: args,\n      repeatable,\n      locations\n    }) => wrap('', description, '\\n') + 'directive @' + name + (hasMultilineItems(args) ? wrap('(\\n', indent(join(args, '\\n')), '\\n)') : wrap('(', join(args, ', '), ')')) + (repeatable ? ' repeatable' : '') + ' on ' + join(locations, ' | ')\n  },\n  SchemaExtension: {\n    leave: ({\n      directives,\n      operationTypes\n    }) => join(['extend schema', join(directives, ' '), block(operationTypes)], ' ')\n  },\n  ScalarTypeExtension: {\n    leave: ({\n      name,\n      directives\n    }) => join(['extend scalar', name, join(directives, ' ')], ' ')\n  },\n  ObjectTypeExtension: {\n    leave: ({\n      name,\n      interfaces,\n      directives,\n      fields\n    }) => join(['extend type', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ')\n  },\n  InterfaceTypeExtension: {\n    leave: ({\n      name,\n      interfaces,\n      directives,\n      fields\n    }) => join(['extend interface', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ')\n  },\n  UnionTypeExtension: {\n    leave: ({\n      name,\n      directives,\n      types\n    }) => join(['extend union', name, join(directives, ' '), wrap('= ', join(types, ' | '))], ' ')\n  },\n  EnumTypeExtension: {\n    leave: ({\n      name,\n      directives,\n      values\n    }) => join(['extend enum', name, join(directives, ' '), block(values)], ' ')\n  },\n  InputObjectTypeExtension: {\n    leave: ({\n      name,\n      directives,\n      fields\n    }) => join(['extend input', name, join(directives, ' '), block(fields)], ' ')\n  }\n};\n/**\n * Given maybeArray, print an empty string if it is null or empty, otherwise\n * print all items together separated by separator if provided\n */\n\nfunction join(maybeArray, separator = '') {\n  var _maybeArray$filter$jo;\n  return (_maybeArray$filter$jo = maybeArray === null || maybeArray === void 0 ? void 0 : maybeArray.filter(x => x).join(separator)) !== null && _maybeArray$filter$jo !== void 0 ? _maybeArray$filter$jo : '';\n}\n/**\n * Given array, print each item on its own line, wrapped in an indented `{ }` block.\n */\n\nfunction block(array) {\n  return wrap('{\\n', indent(join(array, '\\n')), '\\n}');\n}\n/**\n * If maybeString is not null or empty, then wrap with start and end, otherwise print an empty string.\n */\n\nfunction wrap(start, maybeString, end = '') {\n  return maybeString != null && maybeString !== '' ? start + maybeString + end : '';\n}\nfunction indent(str) {\n  return wrap('  ', str.replace(/\\n/g, '\\n  '));\n}\nfunction hasMultilineItems(maybeArray) {\n  var _maybeArray$some;\n\n  // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n  /* c8 ignore next */\n  return (_maybeArray$some = maybeArray === null || maybeArray === void 0 ? void 0 : maybeArray.some(str => str.includes('\\n'))) !== null && _maybeArray$some !== void 0 ? _maybeArray$some : false;\n}\n\n//# sourceURL=webpack://my-app/../../graphql/language/printer.mjs?");

/***/ }),

/***/ "../../graphql/language/source.mjs":
/*!*****************************************!*\
  !*** ../../graphql/language/source.mjs ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Source: () => (/* binding */ Source),\n/* harmony export */   isSource: () => (/* binding */ isSource)\n/* harmony export */ });\n/* harmony import */ var _jsutils_devAssert_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../jsutils/devAssert.mjs */ \"../../graphql/jsutils/devAssert.mjs\");\n/* harmony import */ var _jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../jsutils/inspect.mjs */ \"../../graphql/jsutils/inspect.mjs\");\n/* harmony import */ var _jsutils_instanceOf_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../jsutils/instanceOf.mjs */ \"../../graphql/jsutils/instanceOf.mjs\");\n\n\n\n\n/**\n * A representation of source input to GraphQL. The `name` and `locationOffset` parameters are\n * optional, but they are useful for clients who store GraphQL documents in source files.\n * For example, if the GraphQL input starts at line 40 in a file named `Foo.graphql`, it might\n * be useful for `name` to be `\"Foo.graphql\"` and location to be `{ line: 40, column: 1 }`.\n * The `line` and `column` properties in `locationOffset` are 1-indexed.\n */\nclass Source {\n  constructor(body, name = 'GraphQL request', locationOffset = {\n    line: 1,\n    column: 1\n  }) {\n    typeof body === 'string' || (0,_jsutils_devAssert_mjs__WEBPACK_IMPORTED_MODULE_0__.devAssert)(false, `Body must be a string. Received: ${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_1__.inspect)(body)}.`);\n    this.body = body;\n    this.name = name;\n    this.locationOffset = locationOffset;\n    this.locationOffset.line > 0 || (0,_jsutils_devAssert_mjs__WEBPACK_IMPORTED_MODULE_0__.devAssert)(false, 'line in locationOffset is 1-indexed and must be positive.');\n    this.locationOffset.column > 0 || (0,_jsutils_devAssert_mjs__WEBPACK_IMPORTED_MODULE_0__.devAssert)(false, 'column in locationOffset is 1-indexed and must be positive.');\n  }\n  get [Symbol.toStringTag]() {\n    return 'Source';\n  }\n}\n/**\n * Test if the given value is a Source object.\n *\n * @internal\n */\n\nfunction isSource(source) {\n  return (0,_jsutils_instanceOf_mjs__WEBPACK_IMPORTED_MODULE_2__.instanceOf)(source, Source);\n}\n\n//# sourceURL=webpack://my-app/../../graphql/language/source.mjs?");

/***/ }),

/***/ "../../graphql/language/tokenKind.mjs":
/*!********************************************!*\
  !*** ../../graphql/language/tokenKind.mjs ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TokenKind: () => (/* binding */ TokenKind)\n/* harmony export */ });\n/**\n * An exported enum describing the different kinds of tokens that the\n * lexer emits.\n */\nvar TokenKind;\n(function (TokenKind) {\n  TokenKind['SOF'] = '<SOF>';\n  TokenKind['EOF'] = '<EOF>';\n  TokenKind['BANG'] = '!';\n  TokenKind['DOLLAR'] = '$';\n  TokenKind['AMP'] = '&';\n  TokenKind['PAREN_L'] = '(';\n  TokenKind['PAREN_R'] = ')';\n  TokenKind['SPREAD'] = '...';\n  TokenKind['COLON'] = ':';\n  TokenKind['EQUALS'] = '=';\n  TokenKind['AT'] = '@';\n  TokenKind['BRACKET_L'] = '[';\n  TokenKind['BRACKET_R'] = ']';\n  TokenKind['BRACE_L'] = '{';\n  TokenKind['PIPE'] = '|';\n  TokenKind['BRACE_R'] = '}';\n  TokenKind['NAME'] = 'Name';\n  TokenKind['INT'] = 'Int';\n  TokenKind['FLOAT'] = 'Float';\n  TokenKind['STRING'] = 'String';\n  TokenKind['BLOCK_STRING'] = 'BlockString';\n  TokenKind['COMMENT'] = 'Comment';\n})(TokenKind || (TokenKind = {}));\n\n/**\n * The enum type representing the token kinds values.\n *\n * @deprecated Please use `TokenKind`. Will be remove in v17.\n */\n\n//# sourceURL=webpack://my-app/../../graphql/language/tokenKind.mjs?");

/***/ }),

/***/ "../../graphql/language/visitor.mjs":
/*!******************************************!*\
  !*** ../../graphql/language/visitor.mjs ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BREAK: () => (/* binding */ BREAK),\n/* harmony export */   getEnterLeaveForKind: () => (/* binding */ getEnterLeaveForKind),\n/* harmony export */   getVisitFn: () => (/* binding */ getVisitFn),\n/* harmony export */   visit: () => (/* binding */ visit),\n/* harmony export */   visitInParallel: () => (/* binding */ visitInParallel)\n/* harmony export */ });\n/* harmony import */ var _jsutils_devAssert_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../jsutils/devAssert.mjs */ \"../../graphql/jsutils/devAssert.mjs\");\n/* harmony import */ var _jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../jsutils/inspect.mjs */ \"../../graphql/jsutils/inspect.mjs\");\n/* harmony import */ var _ast_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ast.mjs */ \"../../graphql/language/ast.mjs\");\n/* harmony import */ var _kinds_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./kinds.mjs */ \"../../graphql/language/kinds.mjs\");\n\n\n\n\n/**\n * A visitor is provided to visit, it contains the collection of\n * relevant functions to be called during the visitor's traversal.\n */\n\nconst BREAK = Object.freeze({});\n/**\n * visit() will walk through an AST using a depth-first traversal, calling\n * the visitor's enter function at each node in the traversal, and calling the\n * leave function after visiting that node and all of its child nodes.\n *\n * By returning different values from the enter and leave functions, the\n * behavior of the visitor can be altered, including skipping over a sub-tree of\n * the AST (by returning false), editing the AST by returning a value or null\n * to remove the value, or to stop the whole traversal by returning BREAK.\n *\n * When using visit() to edit an AST, the original AST will not be modified, and\n * a new version of the AST with the changes applied will be returned from the\n * visit function.\n *\n * ```ts\n * const editedAST = visit(ast, {\n *   enter(node, key, parent, path, ancestors) {\n *     // @return\n *     //   undefined: no action\n *     //   false: skip visiting this node\n *     //   visitor.BREAK: stop visiting altogether\n *     //   null: delete this node\n *     //   any value: replace this node with the returned value\n *   },\n *   leave(node, key, parent, path, ancestors) {\n *     // @return\n *     //   undefined: no action\n *     //   false: no action\n *     //   visitor.BREAK: stop visiting altogether\n *     //   null: delete this node\n *     //   any value: replace this node with the returned value\n *   }\n * });\n * ```\n *\n * Alternatively to providing enter() and leave() functions, a visitor can\n * instead provide functions named the same as the kinds of AST nodes, or\n * enter/leave visitors at a named key, leading to three permutations of the\n * visitor API:\n *\n * 1) Named visitors triggered when entering a node of a specific kind.\n *\n * ```ts\n * visit(ast, {\n *   Kind(node) {\n *     // enter the \"Kind\" node\n *   }\n * })\n * ```\n *\n * 2) Named visitors that trigger upon entering and leaving a node of a specific kind.\n *\n * ```ts\n * visit(ast, {\n *   Kind: {\n *     enter(node) {\n *       // enter the \"Kind\" node\n *     }\n *     leave(node) {\n *       // leave the \"Kind\" node\n *     }\n *   }\n * })\n * ```\n *\n * 3) Generic visitors that trigger upon entering and leaving any node.\n *\n * ```ts\n * visit(ast, {\n *   enter(node) {\n *     // enter any node\n *   },\n *   leave(node) {\n *     // leave any node\n *   }\n * })\n * ```\n */\n\nfunction visit(root, visitor, visitorKeys = _ast_mjs__WEBPACK_IMPORTED_MODULE_0__.QueryDocumentKeys) {\n  const enterLeaveMap = new Map();\n  for (const kind of Object.values(_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind)) {\n    enterLeaveMap.set(kind, getEnterLeaveForKind(visitor, kind));\n  }\n  /* eslint-disable no-undef-init */\n\n  let stack = undefined;\n  let inArray = Array.isArray(root);\n  let keys = [root];\n  let index = -1;\n  let edits = [];\n  let node = root;\n  let key = undefined;\n  let parent = undefined;\n  const path = [];\n  const ancestors = [];\n  /* eslint-enable no-undef-init */\n\n  do {\n    index++;\n    const isLeaving = index === keys.length;\n    const isEdited = isLeaving && edits.length !== 0;\n    if (isLeaving) {\n      key = ancestors.length === 0 ? undefined : path[path.length - 1];\n      node = parent;\n      parent = ancestors.pop();\n      if (isEdited) {\n        if (inArray) {\n          node = node.slice();\n          let editOffset = 0;\n          for (const [editKey, editValue] of edits) {\n            const arrayKey = editKey - editOffset;\n            if (editValue === null) {\n              node.splice(arrayKey, 1);\n              editOffset++;\n            } else {\n              node[arrayKey] = editValue;\n            }\n          }\n        } else {\n          node = Object.defineProperties({}, Object.getOwnPropertyDescriptors(node));\n          for (const [editKey, editValue] of edits) {\n            node[editKey] = editValue;\n          }\n        }\n      }\n      index = stack.index;\n      keys = stack.keys;\n      edits = stack.edits;\n      inArray = stack.inArray;\n      stack = stack.prev;\n    } else if (parent) {\n      key = inArray ? index : keys[index];\n      node = parent[key];\n      if (node === null || node === undefined) {\n        continue;\n      }\n      path.push(key);\n    }\n    let result;\n    if (!Array.isArray(node)) {\n      var _enterLeaveMap$get, _enterLeaveMap$get2;\n      (0,_ast_mjs__WEBPACK_IMPORTED_MODULE_0__.isNode)(node) || (0,_jsutils_devAssert_mjs__WEBPACK_IMPORTED_MODULE_2__.devAssert)(false, `Invalid AST Node: ${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_3__.inspect)(node)}.`);\n      const visitFn = isLeaving ? (_enterLeaveMap$get = enterLeaveMap.get(node.kind)) === null || _enterLeaveMap$get === void 0 ? void 0 : _enterLeaveMap$get.leave : (_enterLeaveMap$get2 = enterLeaveMap.get(node.kind)) === null || _enterLeaveMap$get2 === void 0 ? void 0 : _enterLeaveMap$get2.enter;\n      result = visitFn === null || visitFn === void 0 ? void 0 : visitFn.call(visitor, node, key, parent, path, ancestors);\n      if (result === BREAK) {\n        break;\n      }\n      if (result === false) {\n        if (!isLeaving) {\n          path.pop();\n          continue;\n        }\n      } else if (result !== undefined) {\n        edits.push([key, result]);\n        if (!isLeaving) {\n          if ((0,_ast_mjs__WEBPACK_IMPORTED_MODULE_0__.isNode)(result)) {\n            node = result;\n          } else {\n            path.pop();\n            continue;\n          }\n        }\n      }\n    }\n    if (result === undefined && isEdited) {\n      edits.push([key, node]);\n    }\n    if (isLeaving) {\n      path.pop();\n    } else {\n      var _node$kind;\n      stack = {\n        inArray,\n        index,\n        keys,\n        edits,\n        prev: stack\n      };\n      inArray = Array.isArray(node);\n      keys = inArray ? node : (_node$kind = visitorKeys[node.kind]) !== null && _node$kind !== void 0 ? _node$kind : [];\n      index = -1;\n      edits = [];\n      if (parent) {\n        ancestors.push(parent);\n      }\n      parent = node;\n    }\n  } while (stack !== undefined);\n  if (edits.length !== 0) {\n    // New root\n    return edits[edits.length - 1][1];\n  }\n  return root;\n}\n/**\n * Creates a new visitor instance which delegates to many visitors to run in\n * parallel. Each visitor will be visited for each node before moving on.\n *\n * If a prior visitor edits a node, no following visitors will see that node.\n */\n\nfunction visitInParallel(visitors) {\n  const skipping = new Array(visitors.length).fill(null);\n  const mergedVisitor = Object.create(null);\n  for (const kind of Object.values(_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind)) {\n    let hasVisitor = false;\n    const enterList = new Array(visitors.length).fill(undefined);\n    const leaveList = new Array(visitors.length).fill(undefined);\n    for (let i = 0; i < visitors.length; ++i) {\n      const {\n        enter,\n        leave\n      } = getEnterLeaveForKind(visitors[i], kind);\n      hasVisitor || (hasVisitor = enter != null || leave != null);\n      enterList[i] = enter;\n      leaveList[i] = leave;\n    }\n    if (!hasVisitor) {\n      continue;\n    }\n    const mergedEnterLeave = {\n      enter(...args) {\n        const node = args[0];\n        for (let i = 0; i < visitors.length; i++) {\n          if (skipping[i] === null) {\n            var _enterList$i;\n            const result = (_enterList$i = enterList[i]) === null || _enterList$i === void 0 ? void 0 : _enterList$i.apply(visitors[i], args);\n            if (result === false) {\n              skipping[i] = node;\n            } else if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined) {\n              return result;\n            }\n          }\n        }\n      },\n      leave(...args) {\n        const node = args[0];\n        for (let i = 0; i < visitors.length; i++) {\n          if (skipping[i] === null) {\n            var _leaveList$i;\n            const result = (_leaveList$i = leaveList[i]) === null || _leaveList$i === void 0 ? void 0 : _leaveList$i.apply(visitors[i], args);\n            if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined && result !== false) {\n              return result;\n            }\n          } else if (skipping[i] === node) {\n            skipping[i] = null;\n          }\n        }\n      }\n    };\n    mergedVisitor[kind] = mergedEnterLeave;\n  }\n  return mergedVisitor;\n}\n/**\n * Given a visitor instance and a node kind, return EnterLeaveVisitor for that kind.\n */\n\nfunction getEnterLeaveForKind(visitor, kind) {\n  const kindVisitor = visitor[kind];\n  if (typeof kindVisitor === 'object') {\n    // { Kind: { enter() {}, leave() {} } }\n    return kindVisitor;\n  } else if (typeof kindVisitor === 'function') {\n    // { Kind() {} }\n    return {\n      enter: kindVisitor,\n      leave: undefined\n    };\n  } // { enter() {}, leave() {} }\n\n  return {\n    enter: visitor.enter,\n    leave: visitor.leave\n  };\n}\n/**\n * Given a visitor instance, if it is leaving or not, and a node kind, return\n * the function the visitor runtime should call.\n *\n * @deprecated Please use `getEnterLeaveForKind` instead. Will be removed in v17\n */\n\n/* c8 ignore next 8 */\n\nfunction getVisitFn(visitor, kind, isLeaving) {\n  const {\n    enter,\n    leave\n  } = getEnterLeaveForKind(visitor, kind);\n  return isLeaving ? leave : enter;\n}\n\n//# sourceURL=webpack://my-app/../../graphql/language/visitor.mjs?");

/***/ }),

/***/ "../../graphql/type/assertName.mjs":
/*!*****************************************!*\
  !*** ../../graphql/type/assertName.mjs ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assertEnumValueName: () => (/* binding */ assertEnumValueName),\n/* harmony export */   assertName: () => (/* binding */ assertName)\n/* harmony export */ });\n/* harmony import */ var _jsutils_devAssert_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../jsutils/devAssert.mjs */ \"../../graphql/jsutils/devAssert.mjs\");\n/* harmony import */ var _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/GraphQLError.mjs */ \"../../graphql/error/GraphQLError.mjs\");\n/* harmony import */ var _language_characterClasses_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../language/characterClasses.mjs */ \"../../graphql/language/characterClasses.mjs\");\n\n\n\n/**\n * Upholds the spec rules about naming.\n */\n\nfunction assertName(name) {\n  name != null || (0,_jsutils_devAssert_mjs__WEBPACK_IMPORTED_MODULE_0__.devAssert)(false, 'Must provide name.');\n  typeof name === 'string' || (0,_jsutils_devAssert_mjs__WEBPACK_IMPORTED_MODULE_0__.devAssert)(false, 'Expected name to be a string.');\n  if (name.length === 0) {\n    throw new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_1__.GraphQLError('Expected name to be a non-empty string.');\n  }\n  for (let i = 1; i < name.length; ++i) {\n    if (!(0,_language_characterClasses_mjs__WEBPACK_IMPORTED_MODULE_2__.isNameContinue)(name.charCodeAt(i))) {\n      throw new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_1__.GraphQLError(`Names must only contain [_a-zA-Z0-9] but \"${name}\" does not.`);\n    }\n  }\n  if (!(0,_language_characterClasses_mjs__WEBPACK_IMPORTED_MODULE_2__.isNameStart)(name.charCodeAt(0))) {\n    throw new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_1__.GraphQLError(`Names must start with [_a-zA-Z] but \"${name}\" does not.`);\n  }\n  return name;\n}\n/**\n * Upholds the spec rules about naming enum values.\n *\n * @internal\n */\n\nfunction assertEnumValueName(name) {\n  if (name === 'true' || name === 'false' || name === 'null') {\n    throw new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_1__.GraphQLError(`Enum values cannot be named: ${name}`);\n  }\n  return assertName(name);\n}\n\n//# sourceURL=webpack://my-app/../../graphql/type/assertName.mjs?");

/***/ }),

/***/ "../../graphql/type/definition.mjs":
/*!*****************************************!*\
  !*** ../../graphql/type/definition.mjs ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GraphQLEnumType: () => (/* binding */ GraphQLEnumType),\n/* harmony export */   GraphQLInputObjectType: () => (/* binding */ GraphQLInputObjectType),\n/* harmony export */   GraphQLInterfaceType: () => (/* binding */ GraphQLInterfaceType),\n/* harmony export */   GraphQLList: () => (/* binding */ GraphQLList),\n/* harmony export */   GraphQLNonNull: () => (/* binding */ GraphQLNonNull),\n/* harmony export */   GraphQLObjectType: () => (/* binding */ GraphQLObjectType),\n/* harmony export */   GraphQLScalarType: () => (/* binding */ GraphQLScalarType),\n/* harmony export */   GraphQLUnionType: () => (/* binding */ GraphQLUnionType),\n/* harmony export */   argsToArgsConfig: () => (/* binding */ argsToArgsConfig),\n/* harmony export */   assertAbstractType: () => (/* binding */ assertAbstractType),\n/* harmony export */   assertCompositeType: () => (/* binding */ assertCompositeType),\n/* harmony export */   assertEnumType: () => (/* binding */ assertEnumType),\n/* harmony export */   assertInputObjectType: () => (/* binding */ assertInputObjectType),\n/* harmony export */   assertInputType: () => (/* binding */ assertInputType),\n/* harmony export */   assertInterfaceType: () => (/* binding */ assertInterfaceType),\n/* harmony export */   assertLeafType: () => (/* binding */ assertLeafType),\n/* harmony export */   assertListType: () => (/* binding */ assertListType),\n/* harmony export */   assertNamedType: () => (/* binding */ assertNamedType),\n/* harmony export */   assertNonNullType: () => (/* binding */ assertNonNullType),\n/* harmony export */   assertNullableType: () => (/* binding */ assertNullableType),\n/* harmony export */   assertObjectType: () => (/* binding */ assertObjectType),\n/* harmony export */   assertOutputType: () => (/* binding */ assertOutputType),\n/* harmony export */   assertScalarType: () => (/* binding */ assertScalarType),\n/* harmony export */   assertType: () => (/* binding */ assertType),\n/* harmony export */   assertUnionType: () => (/* binding */ assertUnionType),\n/* harmony export */   assertWrappingType: () => (/* binding */ assertWrappingType),\n/* harmony export */   defineArguments: () => (/* binding */ defineArguments),\n/* harmony export */   getNamedType: () => (/* binding */ getNamedType),\n/* harmony export */   getNullableType: () => (/* binding */ getNullableType),\n/* harmony export */   isAbstractType: () => (/* binding */ isAbstractType),\n/* harmony export */   isCompositeType: () => (/* binding */ isCompositeType),\n/* harmony export */   isEnumType: () => (/* binding */ isEnumType),\n/* harmony export */   isInputObjectType: () => (/* binding */ isInputObjectType),\n/* harmony export */   isInputType: () => (/* binding */ isInputType),\n/* harmony export */   isInterfaceType: () => (/* binding */ isInterfaceType),\n/* harmony export */   isLeafType: () => (/* binding */ isLeafType),\n/* harmony export */   isListType: () => (/* binding */ isListType),\n/* harmony export */   isNamedType: () => (/* binding */ isNamedType),\n/* harmony export */   isNonNullType: () => (/* binding */ isNonNullType),\n/* harmony export */   isNullableType: () => (/* binding */ isNullableType),\n/* harmony export */   isObjectType: () => (/* binding */ isObjectType),\n/* harmony export */   isOutputType: () => (/* binding */ isOutputType),\n/* harmony export */   isRequiredArgument: () => (/* binding */ isRequiredArgument),\n/* harmony export */   isRequiredInputField: () => (/* binding */ isRequiredInputField),\n/* harmony export */   isScalarType: () => (/* binding */ isScalarType),\n/* harmony export */   isType: () => (/* binding */ isType),\n/* harmony export */   isUnionType: () => (/* binding */ isUnionType),\n/* harmony export */   isWrappingType: () => (/* binding */ isWrappingType),\n/* harmony export */   resolveObjMapThunk: () => (/* binding */ resolveObjMapThunk),\n/* harmony export */   resolveReadonlyArrayThunk: () => (/* binding */ resolveReadonlyArrayThunk)\n/* harmony export */ });\n/* harmony import */ var _jsutils_devAssert_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../jsutils/devAssert.mjs */ \"../../graphql/jsutils/devAssert.mjs\");\n/* harmony import */ var _jsutils_didYouMean_mjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../jsutils/didYouMean.mjs */ \"../../graphql/jsutils/didYouMean.mjs\");\n/* harmony import */ var _jsutils_identityFunc_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../jsutils/identityFunc.mjs */ \"../../graphql/jsutils/identityFunc.mjs\");\n/* harmony import */ var _jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../jsutils/inspect.mjs */ \"../../graphql/jsutils/inspect.mjs\");\n/* harmony import */ var _jsutils_instanceOf_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../jsutils/instanceOf.mjs */ \"../../graphql/jsutils/instanceOf.mjs\");\n/* harmony import */ var _jsutils_isObjectLike_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../jsutils/isObjectLike.mjs */ \"../../graphql/jsutils/isObjectLike.mjs\");\n/* harmony import */ var _jsutils_keyMap_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../jsutils/keyMap.mjs */ \"../../graphql/jsutils/keyMap.mjs\");\n/* harmony import */ var _jsutils_keyValMap_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../jsutils/keyValMap.mjs */ \"../../graphql/jsutils/keyValMap.mjs\");\n/* harmony import */ var _jsutils_mapValue_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../jsutils/mapValue.mjs */ \"../../graphql/jsutils/mapValue.mjs\");\n/* harmony import */ var _jsutils_suggestionList_mjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../jsutils/suggestionList.mjs */ \"../../graphql/jsutils/suggestionList.mjs\");\n/* harmony import */ var _jsutils_toObjMap_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../jsutils/toObjMap.mjs */ \"../../graphql/jsutils/toObjMap.mjs\");\n/* harmony import */ var _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../error/GraphQLError.mjs */ \"../../graphql/error/GraphQLError.mjs\");\n/* harmony import */ var _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../language/kinds.mjs */ \"../../graphql/language/kinds.mjs\");\n/* harmony import */ var _language_printer_mjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../language/printer.mjs */ \"../../graphql/language/printer.mjs\");\n/* harmony import */ var _utilities_valueFromASTUntyped_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utilities/valueFromASTUntyped.mjs */ \"../../graphql/utilities/valueFromASTUntyped.mjs\");\n/* harmony import */ var _assertName_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./assertName.mjs */ \"../../graphql/type/assertName.mjs\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction isType(type) {\n  return isScalarType(type) || isObjectType(type) || isInterfaceType(type) || isUnionType(type) || isEnumType(type) || isInputObjectType(type) || isListType(type) || isNonNullType(type);\n}\nfunction assertType(type) {\n  if (!isType(type)) {\n    throw new Error(`Expected ${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_0__.inspect)(type)} to be a GraphQL type.`);\n  }\n  return type;\n}\n/**\n * There are predicates for each kind of GraphQL type.\n */\n\nfunction isScalarType(type) {\n  return (0,_jsutils_instanceOf_mjs__WEBPACK_IMPORTED_MODULE_1__.instanceOf)(type, GraphQLScalarType);\n}\nfunction assertScalarType(type) {\n  if (!isScalarType(type)) {\n    throw new Error(`Expected ${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_0__.inspect)(type)} to be a GraphQL Scalar type.`);\n  }\n  return type;\n}\nfunction isObjectType(type) {\n  return (0,_jsutils_instanceOf_mjs__WEBPACK_IMPORTED_MODULE_1__.instanceOf)(type, GraphQLObjectType);\n}\nfunction assertObjectType(type) {\n  if (!isObjectType(type)) {\n    throw new Error(`Expected ${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_0__.inspect)(type)} to be a GraphQL Object type.`);\n  }\n  return type;\n}\nfunction isInterfaceType(type) {\n  return (0,_jsutils_instanceOf_mjs__WEBPACK_IMPORTED_MODULE_1__.instanceOf)(type, GraphQLInterfaceType);\n}\nfunction assertInterfaceType(type) {\n  if (!isInterfaceType(type)) {\n    throw new Error(`Expected ${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_0__.inspect)(type)} to be a GraphQL Interface type.`);\n  }\n  return type;\n}\nfunction isUnionType(type) {\n  return (0,_jsutils_instanceOf_mjs__WEBPACK_IMPORTED_MODULE_1__.instanceOf)(type, GraphQLUnionType);\n}\nfunction assertUnionType(type) {\n  if (!isUnionType(type)) {\n    throw new Error(`Expected ${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_0__.inspect)(type)} to be a GraphQL Union type.`);\n  }\n  return type;\n}\nfunction isEnumType(type) {\n  return (0,_jsutils_instanceOf_mjs__WEBPACK_IMPORTED_MODULE_1__.instanceOf)(type, GraphQLEnumType);\n}\nfunction assertEnumType(type) {\n  if (!isEnumType(type)) {\n    throw new Error(`Expected ${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_0__.inspect)(type)} to be a GraphQL Enum type.`);\n  }\n  return type;\n}\nfunction isInputObjectType(type) {\n  return (0,_jsutils_instanceOf_mjs__WEBPACK_IMPORTED_MODULE_1__.instanceOf)(type, GraphQLInputObjectType);\n}\nfunction assertInputObjectType(type) {\n  if (!isInputObjectType(type)) {\n    throw new Error(`Expected ${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_0__.inspect)(type)} to be a GraphQL Input Object type.`);\n  }\n  return type;\n}\nfunction isListType(type) {\n  return (0,_jsutils_instanceOf_mjs__WEBPACK_IMPORTED_MODULE_1__.instanceOf)(type, GraphQLList);\n}\nfunction assertListType(type) {\n  if (!isListType(type)) {\n    throw new Error(`Expected ${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_0__.inspect)(type)} to be a GraphQL List type.`);\n  }\n  return type;\n}\nfunction isNonNullType(type) {\n  return (0,_jsutils_instanceOf_mjs__WEBPACK_IMPORTED_MODULE_1__.instanceOf)(type, GraphQLNonNull);\n}\nfunction assertNonNullType(type) {\n  if (!isNonNullType(type)) {\n    throw new Error(`Expected ${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_0__.inspect)(type)} to be a GraphQL Non-Null type.`);\n  }\n  return type;\n}\n/**\n * These types may be used as input types for arguments and directives.\n */\n\nfunction isInputType(type) {\n  return isScalarType(type) || isEnumType(type) || isInputObjectType(type) || isWrappingType(type) && isInputType(type.ofType);\n}\nfunction assertInputType(type) {\n  if (!isInputType(type)) {\n    throw new Error(`Expected ${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_0__.inspect)(type)} to be a GraphQL input type.`);\n  }\n  return type;\n}\n/**\n * These types may be used as output types as the result of fields.\n */\n\nfunction isOutputType(type) {\n  return isScalarType(type) || isObjectType(type) || isInterfaceType(type) || isUnionType(type) || isEnumType(type) || isWrappingType(type) && isOutputType(type.ofType);\n}\nfunction assertOutputType(type) {\n  if (!isOutputType(type)) {\n    throw new Error(`Expected ${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_0__.inspect)(type)} to be a GraphQL output type.`);\n  }\n  return type;\n}\n/**\n * These types may describe types which may be leaf values.\n */\n\nfunction isLeafType(type) {\n  return isScalarType(type) || isEnumType(type);\n}\nfunction assertLeafType(type) {\n  if (!isLeafType(type)) {\n    throw new Error(`Expected ${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_0__.inspect)(type)} to be a GraphQL leaf type.`);\n  }\n  return type;\n}\n/**\n * These types may describe the parent context of a selection set.\n */\n\nfunction isCompositeType(type) {\n  return isObjectType(type) || isInterfaceType(type) || isUnionType(type);\n}\nfunction assertCompositeType(type) {\n  if (!isCompositeType(type)) {\n    throw new Error(`Expected ${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_0__.inspect)(type)} to be a GraphQL composite type.`);\n  }\n  return type;\n}\n/**\n * These types may describe the parent context of a selection set.\n */\n\nfunction isAbstractType(type) {\n  return isInterfaceType(type) || isUnionType(type);\n}\nfunction assertAbstractType(type) {\n  if (!isAbstractType(type)) {\n    throw new Error(`Expected ${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_0__.inspect)(type)} to be a GraphQL abstract type.`);\n  }\n  return type;\n}\n/**\n * List Type Wrapper\n *\n * A list is a wrapping type which points to another type.\n * Lists are often created within the context of defining the fields of\n * an object type.\n *\n * Example:\n *\n * ```ts\n * const PersonType = new GraphQLObjectType({\n *   name: 'Person',\n *   fields: () => ({\n *     parents: { type: new GraphQLList(PersonType) },\n *     children: { type: new GraphQLList(PersonType) },\n *   })\n * })\n * ```\n */\n\nclass GraphQLList {\n  constructor(ofType) {\n    isType(ofType) || (0,_jsutils_devAssert_mjs__WEBPACK_IMPORTED_MODULE_2__.devAssert)(false, `Expected ${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_0__.inspect)(ofType)} to be a GraphQL type.`);\n    this.ofType = ofType;\n  }\n  get [Symbol.toStringTag]() {\n    return 'GraphQLList';\n  }\n  toString() {\n    return '[' + String(this.ofType) + ']';\n  }\n  toJSON() {\n    return this.toString();\n  }\n}\n/**\n * Non-Null Type Wrapper\n *\n * A non-null is a wrapping type which points to another type.\n * Non-null types enforce that their values are never null and can ensure\n * an error is raised if this ever occurs during a request. It is useful for\n * fields which you can make a strong guarantee on non-nullability, for example\n * usually the id field of a database row will never be null.\n *\n * Example:\n *\n * ```ts\n * const RowType = new GraphQLObjectType({\n *   name: 'Row',\n *   fields: () => ({\n *     id: { type: new GraphQLNonNull(GraphQLString) },\n *   })\n * })\n * ```\n * Note: the enforcement of non-nullability occurs within the executor.\n */\n\nclass GraphQLNonNull {\n  constructor(ofType) {\n    isNullableType(ofType) || (0,_jsutils_devAssert_mjs__WEBPACK_IMPORTED_MODULE_2__.devAssert)(false, `Expected ${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_0__.inspect)(ofType)} to be a GraphQL nullable type.`);\n    this.ofType = ofType;\n  }\n  get [Symbol.toStringTag]() {\n    return 'GraphQLNonNull';\n  }\n  toString() {\n    return String(this.ofType) + '!';\n  }\n  toJSON() {\n    return this.toString();\n  }\n}\n/**\n * These types wrap and modify other types\n */\n\nfunction isWrappingType(type) {\n  return isListType(type) || isNonNullType(type);\n}\nfunction assertWrappingType(type) {\n  if (!isWrappingType(type)) {\n    throw new Error(`Expected ${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_0__.inspect)(type)} to be a GraphQL wrapping type.`);\n  }\n  return type;\n}\n/**\n * These types can all accept null as a value.\n */\n\nfunction isNullableType(type) {\n  return isType(type) && !isNonNullType(type);\n}\nfunction assertNullableType(type) {\n  if (!isNullableType(type)) {\n    throw new Error(`Expected ${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_0__.inspect)(type)} to be a GraphQL nullable type.`);\n  }\n  return type;\n}\nfunction getNullableType(type) {\n  if (type) {\n    return isNonNullType(type) ? type.ofType : type;\n  }\n}\n/**\n * These named types do not include modifiers like List or NonNull.\n */\n\nfunction isNamedType(type) {\n  return isScalarType(type) || isObjectType(type) || isInterfaceType(type) || isUnionType(type) || isEnumType(type) || isInputObjectType(type);\n}\nfunction assertNamedType(type) {\n  if (!isNamedType(type)) {\n    throw new Error(`Expected ${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_0__.inspect)(type)} to be a GraphQL named type.`);\n  }\n  return type;\n}\nfunction getNamedType(type) {\n  if (type) {\n    let unwrappedType = type;\n    while (isWrappingType(unwrappedType)) {\n      unwrappedType = unwrappedType.ofType;\n    }\n    return unwrappedType;\n  }\n}\n/**\n * Used while defining GraphQL types to allow for circular references in\n * otherwise immutable type definitions.\n */\n\nfunction resolveReadonlyArrayThunk(thunk) {\n  return typeof thunk === 'function' ? thunk() : thunk;\n}\nfunction resolveObjMapThunk(thunk) {\n  return typeof thunk === 'function' ? thunk() : thunk;\n}\n/**\n * Custom extensions\n *\n * @remarks\n * Use a unique identifier name for your extension, for example the name of\n * your library or project. Do not use a shortened identifier as this increases\n * the risk of conflicts. We recommend you add at most one extension field,\n * an object which can contain all the values you need.\n */\n\n/**\n * Scalar Type Definition\n *\n * The leaf values of any request and input values to arguments are\n * Scalars (or Enums) and are defined with a name and a series of functions\n * used to parse input from ast or variables and to ensure validity.\n *\n * If a type's serialize function returns `null` or does not return a value\n * (i.e. it returns `undefined`) then an error will be raised and a `null`\n * value will be returned in the response. It is always better to validate\n *\n * Example:\n *\n * ```ts\n * const OddType = new GraphQLScalarType({\n *   name: 'Odd',\n *   serialize(value) {\n *     if (!Number.isFinite(value)) {\n *       throw new Error(\n *         `Scalar \"Odd\" cannot represent \"${value}\" since it is not a finite number.`,\n *       );\n *     }\n *\n *     if (value % 2 === 0) {\n *       throw new Error(`Scalar \"Odd\" cannot represent \"${value}\" since it is even.`);\n *     }\n *     return value;\n *   }\n * });\n * ```\n */\nclass GraphQLScalarType {\n  constructor(config) {\n    var _config$parseValue, _config$serialize, _config$parseLiteral, _config$extensionASTN;\n    const parseValue = (_config$parseValue = config.parseValue) !== null && _config$parseValue !== void 0 ? _config$parseValue : _jsutils_identityFunc_mjs__WEBPACK_IMPORTED_MODULE_3__.identityFunc;\n    this.name = (0,_assertName_mjs__WEBPACK_IMPORTED_MODULE_4__.assertName)(config.name);\n    this.description = config.description;\n    this.specifiedByURL = config.specifiedByURL;\n    this.serialize = (_config$serialize = config.serialize) !== null && _config$serialize !== void 0 ? _config$serialize : _jsutils_identityFunc_mjs__WEBPACK_IMPORTED_MODULE_3__.identityFunc;\n    this.parseValue = parseValue;\n    this.parseLiteral = (_config$parseLiteral = config.parseLiteral) !== null && _config$parseLiteral !== void 0 ? _config$parseLiteral : (node, variables) => parseValue((0,_utilities_valueFromASTUntyped_mjs__WEBPACK_IMPORTED_MODULE_5__.valueFromASTUntyped)(node, variables));\n    this.extensions = (0,_jsutils_toObjMap_mjs__WEBPACK_IMPORTED_MODULE_6__.toObjMap)(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes = (_config$extensionASTN = config.extensionASTNodes) !== null && _config$extensionASTN !== void 0 ? _config$extensionASTN : [];\n    config.specifiedByURL == null || typeof config.specifiedByURL === 'string' || (0,_jsutils_devAssert_mjs__WEBPACK_IMPORTED_MODULE_2__.devAssert)(false, `${this.name} must provide \"specifiedByURL\" as a string, ` + `but got: ${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_0__.inspect)(config.specifiedByURL)}.`);\n    config.serialize == null || typeof config.serialize === 'function' || (0,_jsutils_devAssert_mjs__WEBPACK_IMPORTED_MODULE_2__.devAssert)(false, `${this.name} must provide \"serialize\" function. If this custom Scalar is also used as an input type, ensure \"parseValue\" and \"parseLiteral\" functions are also provided.`);\n    if (config.parseLiteral) {\n      typeof config.parseValue === 'function' && typeof config.parseLiteral === 'function' || (0,_jsutils_devAssert_mjs__WEBPACK_IMPORTED_MODULE_2__.devAssert)(false, `${this.name} must provide both \"parseValue\" and \"parseLiteral\" functions.`);\n    }\n  }\n  get [Symbol.toStringTag]() {\n    return 'GraphQLScalarType';\n  }\n  toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      specifiedByURL: this.specifiedByURL,\n      serialize: this.serialize,\n      parseValue: this.parseValue,\n      parseLiteral: this.parseLiteral,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes\n    };\n  }\n  toString() {\n    return this.name;\n  }\n  toJSON() {\n    return this.toString();\n  }\n}\n\n/**\n * Object Type Definition\n *\n * Almost all of the GraphQL types you define will be object types. Object types\n * have a name, but most importantly describe their fields.\n *\n * Example:\n *\n * ```ts\n * const AddressType = new GraphQLObjectType({\n *   name: 'Address',\n *   fields: {\n *     street: { type: GraphQLString },\n *     number: { type: GraphQLInt },\n *     formatted: {\n *       type: GraphQLString,\n *       resolve(obj) {\n *         return obj.number + ' ' + obj.street\n *       }\n *     }\n *   }\n * });\n * ```\n *\n * When two types need to refer to each other, or a type needs to refer to\n * itself in a field, you can use a function expression (aka a closure or a\n * thunk) to supply the fields lazily.\n *\n * Example:\n *\n * ```ts\n * const PersonType = new GraphQLObjectType({\n *   name: 'Person',\n *   fields: () => ({\n *     name: { type: GraphQLString },\n *     bestFriend: { type: PersonType },\n *   })\n * });\n * ```\n */\nclass GraphQLObjectType {\n  constructor(config) {\n    var _config$extensionASTN2;\n    this.name = (0,_assertName_mjs__WEBPACK_IMPORTED_MODULE_4__.assertName)(config.name);\n    this.description = config.description;\n    this.isTypeOf = config.isTypeOf;\n    this.extensions = (0,_jsutils_toObjMap_mjs__WEBPACK_IMPORTED_MODULE_6__.toObjMap)(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes = (_config$extensionASTN2 = config.extensionASTNodes) !== null && _config$extensionASTN2 !== void 0 ? _config$extensionASTN2 : [];\n    this._fields = () => defineFieldMap(config);\n    this._interfaces = () => defineInterfaces(config);\n    config.isTypeOf == null || typeof config.isTypeOf === 'function' || (0,_jsutils_devAssert_mjs__WEBPACK_IMPORTED_MODULE_2__.devAssert)(false, `${this.name} must provide \"isTypeOf\" as a function, ` + `but got: ${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_0__.inspect)(config.isTypeOf)}.`);\n  }\n  get [Symbol.toStringTag]() {\n    return 'GraphQLObjectType';\n  }\n  getFields() {\n    if (typeof this._fields === 'function') {\n      this._fields = this._fields();\n    }\n    return this._fields;\n  }\n  getInterfaces() {\n    if (typeof this._interfaces === 'function') {\n      this._interfaces = this._interfaces();\n    }\n    return this._interfaces;\n  }\n  toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      interfaces: this.getInterfaces(),\n      fields: fieldsToFieldsConfig(this.getFields()),\n      isTypeOf: this.isTypeOf,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes\n    };\n  }\n  toString() {\n    return this.name;\n  }\n  toJSON() {\n    return this.toString();\n  }\n}\nfunction defineInterfaces(config) {\n  var _config$interfaces;\n  const interfaces = resolveReadonlyArrayThunk((_config$interfaces = config.interfaces) !== null && _config$interfaces !== void 0 ? _config$interfaces : []);\n  Array.isArray(interfaces) || (0,_jsutils_devAssert_mjs__WEBPACK_IMPORTED_MODULE_2__.devAssert)(false, `${config.name} interfaces must be an Array or a function which returns an Array.`);\n  return interfaces;\n}\nfunction defineFieldMap(config) {\n  const fieldMap = resolveObjMapThunk(config.fields);\n  isPlainObj(fieldMap) || (0,_jsutils_devAssert_mjs__WEBPACK_IMPORTED_MODULE_2__.devAssert)(false, `${config.name} fields must be an object with field names as keys or a function which returns such an object.`);\n  return (0,_jsutils_mapValue_mjs__WEBPACK_IMPORTED_MODULE_7__.mapValue)(fieldMap, (fieldConfig, fieldName) => {\n    var _fieldConfig$args;\n    isPlainObj(fieldConfig) || (0,_jsutils_devAssert_mjs__WEBPACK_IMPORTED_MODULE_2__.devAssert)(false, `${config.name}.${fieldName} field config must be an object.`);\n    fieldConfig.resolve == null || typeof fieldConfig.resolve === 'function' || (0,_jsutils_devAssert_mjs__WEBPACK_IMPORTED_MODULE_2__.devAssert)(false, `${config.name}.${fieldName} field resolver must be a function if ` + `provided, but got: ${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_0__.inspect)(fieldConfig.resolve)}.`);\n    const argsConfig = (_fieldConfig$args = fieldConfig.args) !== null && _fieldConfig$args !== void 0 ? _fieldConfig$args : {};\n    isPlainObj(argsConfig) || (0,_jsutils_devAssert_mjs__WEBPACK_IMPORTED_MODULE_2__.devAssert)(false, `${config.name}.${fieldName} args must be an object with argument names as keys.`);\n    return {\n      name: (0,_assertName_mjs__WEBPACK_IMPORTED_MODULE_4__.assertName)(fieldName),\n      description: fieldConfig.description,\n      type: fieldConfig.type,\n      args: defineArguments(argsConfig),\n      resolve: fieldConfig.resolve,\n      subscribe: fieldConfig.subscribe,\n      deprecationReason: fieldConfig.deprecationReason,\n      extensions: (0,_jsutils_toObjMap_mjs__WEBPACK_IMPORTED_MODULE_6__.toObjMap)(fieldConfig.extensions),\n      astNode: fieldConfig.astNode\n    };\n  });\n}\nfunction defineArguments(config) {\n  return Object.entries(config).map(([argName, argConfig]) => ({\n    name: (0,_assertName_mjs__WEBPACK_IMPORTED_MODULE_4__.assertName)(argName),\n    description: argConfig.description,\n    type: argConfig.type,\n    defaultValue: argConfig.defaultValue,\n    deprecationReason: argConfig.deprecationReason,\n    extensions: (0,_jsutils_toObjMap_mjs__WEBPACK_IMPORTED_MODULE_6__.toObjMap)(argConfig.extensions),\n    astNode: argConfig.astNode\n  }));\n}\nfunction isPlainObj(obj) {\n  return (0,_jsutils_isObjectLike_mjs__WEBPACK_IMPORTED_MODULE_8__.isObjectLike)(obj) && !Array.isArray(obj);\n}\nfunction fieldsToFieldsConfig(fields) {\n  return (0,_jsutils_mapValue_mjs__WEBPACK_IMPORTED_MODULE_7__.mapValue)(fields, field => ({\n    description: field.description,\n    type: field.type,\n    args: argsToArgsConfig(field.args),\n    resolve: field.resolve,\n    subscribe: field.subscribe,\n    deprecationReason: field.deprecationReason,\n    extensions: field.extensions,\n    astNode: field.astNode\n  }));\n}\n/**\n * @internal\n */\n\nfunction argsToArgsConfig(args) {\n  return (0,_jsutils_keyValMap_mjs__WEBPACK_IMPORTED_MODULE_9__.keyValMap)(args, arg => arg.name, arg => ({\n    description: arg.description,\n    type: arg.type,\n    defaultValue: arg.defaultValue,\n    deprecationReason: arg.deprecationReason,\n    extensions: arg.extensions,\n    astNode: arg.astNode\n  }));\n}\nfunction isRequiredArgument(arg) {\n  return isNonNullType(arg.type) && arg.defaultValue === undefined;\n}\n\n/**\n * Interface Type Definition\n *\n * When a field can return one of a heterogeneous set of types, a Interface type\n * is used to describe what types are possible, what fields are in common across\n * all types, as well as a function to determine which type is actually used\n * when the field is resolved.\n *\n * Example:\n *\n * ```ts\n * const EntityType = new GraphQLInterfaceType({\n *   name: 'Entity',\n *   fields: {\n *     name: { type: GraphQLString }\n *   }\n * });\n * ```\n */\nclass GraphQLInterfaceType {\n  constructor(config) {\n    var _config$extensionASTN3;\n    this.name = (0,_assertName_mjs__WEBPACK_IMPORTED_MODULE_4__.assertName)(config.name);\n    this.description = config.description;\n    this.resolveType = config.resolveType;\n    this.extensions = (0,_jsutils_toObjMap_mjs__WEBPACK_IMPORTED_MODULE_6__.toObjMap)(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes = (_config$extensionASTN3 = config.extensionASTNodes) !== null && _config$extensionASTN3 !== void 0 ? _config$extensionASTN3 : [];\n    this._fields = defineFieldMap.bind(undefined, config);\n    this._interfaces = defineInterfaces.bind(undefined, config);\n    config.resolveType == null || typeof config.resolveType === 'function' || (0,_jsutils_devAssert_mjs__WEBPACK_IMPORTED_MODULE_2__.devAssert)(false, `${this.name} must provide \"resolveType\" as a function, ` + `but got: ${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_0__.inspect)(config.resolveType)}.`);\n  }\n  get [Symbol.toStringTag]() {\n    return 'GraphQLInterfaceType';\n  }\n  getFields() {\n    if (typeof this._fields === 'function') {\n      this._fields = this._fields();\n    }\n    return this._fields;\n  }\n  getInterfaces() {\n    if (typeof this._interfaces === 'function') {\n      this._interfaces = this._interfaces();\n    }\n    return this._interfaces;\n  }\n  toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      interfaces: this.getInterfaces(),\n      fields: fieldsToFieldsConfig(this.getFields()),\n      resolveType: this.resolveType,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes\n    };\n  }\n  toString() {\n    return this.name;\n  }\n  toJSON() {\n    return this.toString();\n  }\n}\n\n/**\n * Union Type Definition\n *\n * When a field can return one of a heterogeneous set of types, a Union type\n * is used to describe what types are possible as well as providing a function\n * to determine which type is actually used when the field is resolved.\n *\n * Example:\n *\n * ```ts\n * const PetType = new GraphQLUnionType({\n *   name: 'Pet',\n *   types: [ DogType, CatType ],\n *   resolveType(value) {\n *     if (value instanceof Dog) {\n *       return DogType;\n *     }\n *     if (value instanceof Cat) {\n *       return CatType;\n *     }\n *   }\n * });\n * ```\n */\nclass GraphQLUnionType {\n  constructor(config) {\n    var _config$extensionASTN4;\n    this.name = (0,_assertName_mjs__WEBPACK_IMPORTED_MODULE_4__.assertName)(config.name);\n    this.description = config.description;\n    this.resolveType = config.resolveType;\n    this.extensions = (0,_jsutils_toObjMap_mjs__WEBPACK_IMPORTED_MODULE_6__.toObjMap)(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes = (_config$extensionASTN4 = config.extensionASTNodes) !== null && _config$extensionASTN4 !== void 0 ? _config$extensionASTN4 : [];\n    this._types = defineTypes.bind(undefined, config);\n    config.resolveType == null || typeof config.resolveType === 'function' || (0,_jsutils_devAssert_mjs__WEBPACK_IMPORTED_MODULE_2__.devAssert)(false, `${this.name} must provide \"resolveType\" as a function, ` + `but got: ${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_0__.inspect)(config.resolveType)}.`);\n  }\n  get [Symbol.toStringTag]() {\n    return 'GraphQLUnionType';\n  }\n  getTypes() {\n    if (typeof this._types === 'function') {\n      this._types = this._types();\n    }\n    return this._types;\n  }\n  toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      types: this.getTypes(),\n      resolveType: this.resolveType,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes\n    };\n  }\n  toString() {\n    return this.name;\n  }\n  toJSON() {\n    return this.toString();\n  }\n}\nfunction defineTypes(config) {\n  const types = resolveReadonlyArrayThunk(config.types);\n  Array.isArray(types) || (0,_jsutils_devAssert_mjs__WEBPACK_IMPORTED_MODULE_2__.devAssert)(false, `Must provide Array of types or a function which returns such an array for Union ${config.name}.`);\n  return types;\n}\n\n/**\n * Enum Type Definition\n *\n * Some leaf values of requests and input values are Enums. GraphQL serializes\n * Enum values as strings, however internally Enums can be represented by any\n * kind of type, often integers.\n *\n * Example:\n *\n * ```ts\n * const RGBType = new GraphQLEnumType({\n *   name: 'RGB',\n *   values: {\n *     RED: { value: 0 },\n *     GREEN: { value: 1 },\n *     BLUE: { value: 2 }\n *   }\n * });\n * ```\n *\n * Note: If a value is not provided in a definition, the name of the enum value\n * will be used as its internal value.\n */\nclass GraphQLEnumType {\n  /* <T> */\n  constructor(config) {\n    var _config$extensionASTN5;\n    this.name = (0,_assertName_mjs__WEBPACK_IMPORTED_MODULE_4__.assertName)(config.name);\n    this.description = config.description;\n    this.extensions = (0,_jsutils_toObjMap_mjs__WEBPACK_IMPORTED_MODULE_6__.toObjMap)(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes = (_config$extensionASTN5 = config.extensionASTNodes) !== null && _config$extensionASTN5 !== void 0 ? _config$extensionASTN5 : [];\n    this._values = defineEnumValues(this.name, config.values);\n    this._valueLookup = new Map(this._values.map(enumValue => [enumValue.value, enumValue]));\n    this._nameLookup = (0,_jsutils_keyMap_mjs__WEBPACK_IMPORTED_MODULE_10__.keyMap)(this._values, value => value.name);\n  }\n  get [Symbol.toStringTag]() {\n    return 'GraphQLEnumType';\n  }\n  getValues() {\n    return this._values;\n  }\n  getValue(name) {\n    return this._nameLookup[name];\n  }\n  serialize(outputValue) {\n    const enumValue = this._valueLookup.get(outputValue);\n    if (enumValue === undefined) {\n      throw new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_11__.GraphQLError(`Enum \"${this.name}\" cannot represent value: ${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_0__.inspect)(outputValue)}`);\n    }\n    return enumValue.name;\n  }\n  parseValue(inputValue) /* T */\n  {\n    if (typeof inputValue !== 'string') {\n      const valueStr = (0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_0__.inspect)(inputValue);\n      throw new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_11__.GraphQLError(`Enum \"${this.name}\" cannot represent non-string value: ${valueStr}.` + didYouMeanEnumValue(this, valueStr));\n    }\n    const enumValue = this.getValue(inputValue);\n    if (enumValue == null) {\n      throw new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_11__.GraphQLError(`Value \"${inputValue}\" does not exist in \"${this.name}\" enum.` + didYouMeanEnumValue(this, inputValue));\n    }\n    return enumValue.value;\n  }\n  parseLiteral(valueNode, _variables) /* T */\n  {\n    // Note: variables will be resolved to a value before calling this function.\n    if (valueNode.kind !== _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_12__.Kind.ENUM) {\n      const valueStr = (0,_language_printer_mjs__WEBPACK_IMPORTED_MODULE_13__.print)(valueNode);\n      throw new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_11__.GraphQLError(`Enum \"${this.name}\" cannot represent non-enum value: ${valueStr}.` + didYouMeanEnumValue(this, valueStr), {\n        nodes: valueNode\n      });\n    }\n    const enumValue = this.getValue(valueNode.value);\n    if (enumValue == null) {\n      const valueStr = (0,_language_printer_mjs__WEBPACK_IMPORTED_MODULE_13__.print)(valueNode);\n      throw new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_11__.GraphQLError(`Value \"${valueStr}\" does not exist in \"${this.name}\" enum.` + didYouMeanEnumValue(this, valueStr), {\n        nodes: valueNode\n      });\n    }\n    return enumValue.value;\n  }\n  toConfig() {\n    const values = (0,_jsutils_keyValMap_mjs__WEBPACK_IMPORTED_MODULE_9__.keyValMap)(this.getValues(), value => value.name, value => ({\n      description: value.description,\n      value: value.value,\n      deprecationReason: value.deprecationReason,\n      extensions: value.extensions,\n      astNode: value.astNode\n    }));\n    return {\n      name: this.name,\n      description: this.description,\n      values,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes\n    };\n  }\n  toString() {\n    return this.name;\n  }\n  toJSON() {\n    return this.toString();\n  }\n}\nfunction didYouMeanEnumValue(enumType, unknownValueStr) {\n  const allNames = enumType.getValues().map(value => value.name);\n  const suggestedValues = (0,_jsutils_suggestionList_mjs__WEBPACK_IMPORTED_MODULE_14__.suggestionList)(unknownValueStr, allNames);\n  return (0,_jsutils_didYouMean_mjs__WEBPACK_IMPORTED_MODULE_15__.didYouMean)('the enum value', suggestedValues);\n}\nfunction defineEnumValues(typeName, valueMap) {\n  isPlainObj(valueMap) || (0,_jsutils_devAssert_mjs__WEBPACK_IMPORTED_MODULE_2__.devAssert)(false, `${typeName} values must be an object with value names as keys.`);\n  return Object.entries(valueMap).map(([valueName, valueConfig]) => {\n    isPlainObj(valueConfig) || (0,_jsutils_devAssert_mjs__WEBPACK_IMPORTED_MODULE_2__.devAssert)(false, `${typeName}.${valueName} must refer to an object with a \"value\" key ` + `representing an internal value but got: ${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_0__.inspect)(valueConfig)}.`);\n    return {\n      name: (0,_assertName_mjs__WEBPACK_IMPORTED_MODULE_4__.assertEnumValueName)(valueName),\n      description: valueConfig.description,\n      value: valueConfig.value !== undefined ? valueConfig.value : valueName,\n      deprecationReason: valueConfig.deprecationReason,\n      extensions: (0,_jsutils_toObjMap_mjs__WEBPACK_IMPORTED_MODULE_6__.toObjMap)(valueConfig.extensions),\n      astNode: valueConfig.astNode\n    };\n  });\n}\n\n/**\n * Input Object Type Definition\n *\n * An input object defines a structured collection of fields which may be\n * supplied to a field argument.\n *\n * Using `NonNull` will ensure that a value must be provided by the query\n *\n * Example:\n *\n * ```ts\n * const GeoPoint = new GraphQLInputObjectType({\n *   name: 'GeoPoint',\n *   fields: {\n *     lat: { type: new GraphQLNonNull(GraphQLFloat) },\n *     lon: { type: new GraphQLNonNull(GraphQLFloat) },\n *     alt: { type: GraphQLFloat, defaultValue: 0 },\n *   }\n * });\n * ```\n */\nclass GraphQLInputObjectType {\n  constructor(config) {\n    var _config$extensionASTN6;\n    this.name = (0,_assertName_mjs__WEBPACK_IMPORTED_MODULE_4__.assertName)(config.name);\n    this.description = config.description;\n    this.extensions = (0,_jsutils_toObjMap_mjs__WEBPACK_IMPORTED_MODULE_6__.toObjMap)(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes = (_config$extensionASTN6 = config.extensionASTNodes) !== null && _config$extensionASTN6 !== void 0 ? _config$extensionASTN6 : [];\n    this._fields = defineInputFieldMap.bind(undefined, config);\n  }\n  get [Symbol.toStringTag]() {\n    return 'GraphQLInputObjectType';\n  }\n  getFields() {\n    if (typeof this._fields === 'function') {\n      this._fields = this._fields();\n    }\n    return this._fields;\n  }\n  toConfig() {\n    const fields = (0,_jsutils_mapValue_mjs__WEBPACK_IMPORTED_MODULE_7__.mapValue)(this.getFields(), field => ({\n      description: field.description,\n      type: field.type,\n      defaultValue: field.defaultValue,\n      deprecationReason: field.deprecationReason,\n      extensions: field.extensions,\n      astNode: field.astNode\n    }));\n    return {\n      name: this.name,\n      description: this.description,\n      fields,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes\n    };\n  }\n  toString() {\n    return this.name;\n  }\n  toJSON() {\n    return this.toString();\n  }\n}\nfunction defineInputFieldMap(config) {\n  const fieldMap = resolveObjMapThunk(config.fields);\n  isPlainObj(fieldMap) || (0,_jsutils_devAssert_mjs__WEBPACK_IMPORTED_MODULE_2__.devAssert)(false, `${config.name} fields must be an object with field names as keys or a function which returns such an object.`);\n  return (0,_jsutils_mapValue_mjs__WEBPACK_IMPORTED_MODULE_7__.mapValue)(fieldMap, (fieldConfig, fieldName) => {\n    !('resolve' in fieldConfig) || (0,_jsutils_devAssert_mjs__WEBPACK_IMPORTED_MODULE_2__.devAssert)(false, `${config.name}.${fieldName} field has a resolve property, but Input Types cannot define resolvers.`);\n    return {\n      name: (0,_assertName_mjs__WEBPACK_IMPORTED_MODULE_4__.assertName)(fieldName),\n      description: fieldConfig.description,\n      type: fieldConfig.type,\n      defaultValue: fieldConfig.defaultValue,\n      deprecationReason: fieldConfig.deprecationReason,\n      extensions: (0,_jsutils_toObjMap_mjs__WEBPACK_IMPORTED_MODULE_6__.toObjMap)(fieldConfig.extensions),\n      astNode: fieldConfig.astNode\n    };\n  });\n}\nfunction isRequiredInputField(field) {\n  return isNonNullType(field.type) && field.defaultValue === undefined;\n}\n\n//# sourceURL=webpack://my-app/../../graphql/type/definition.mjs?");

/***/ }),

/***/ "../../graphql/type/directives.mjs":
/*!*****************************************!*\
  !*** ../../graphql/type/directives.mjs ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_DEPRECATION_REASON: () => (/* binding */ DEFAULT_DEPRECATION_REASON),\n/* harmony export */   GraphQLDeprecatedDirective: () => (/* binding */ GraphQLDeprecatedDirective),\n/* harmony export */   GraphQLDirective: () => (/* binding */ GraphQLDirective),\n/* harmony export */   GraphQLIncludeDirective: () => (/* binding */ GraphQLIncludeDirective),\n/* harmony export */   GraphQLSkipDirective: () => (/* binding */ GraphQLSkipDirective),\n/* harmony export */   GraphQLSpecifiedByDirective: () => (/* binding */ GraphQLSpecifiedByDirective),\n/* harmony export */   assertDirective: () => (/* binding */ assertDirective),\n/* harmony export */   isDirective: () => (/* binding */ isDirective),\n/* harmony export */   isSpecifiedDirective: () => (/* binding */ isSpecifiedDirective),\n/* harmony export */   specifiedDirectives: () => (/* binding */ specifiedDirectives)\n/* harmony export */ });\n/* harmony import */ var _jsutils_devAssert_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../jsutils/devAssert.mjs */ \"../../graphql/jsutils/devAssert.mjs\");\n/* harmony import */ var _jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../jsutils/inspect.mjs */ \"../../graphql/jsutils/inspect.mjs\");\n/* harmony import */ var _jsutils_instanceOf_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../jsutils/instanceOf.mjs */ \"../../graphql/jsutils/instanceOf.mjs\");\n/* harmony import */ var _jsutils_isObjectLike_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../jsutils/isObjectLike.mjs */ \"../../graphql/jsutils/isObjectLike.mjs\");\n/* harmony import */ var _jsutils_toObjMap_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../jsutils/toObjMap.mjs */ \"../../graphql/jsutils/toObjMap.mjs\");\n/* harmony import */ var _language_directiveLocation_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../language/directiveLocation.mjs */ \"../../graphql/language/directiveLocation.mjs\");\n/* harmony import */ var _assertName_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./assertName.mjs */ \"../../graphql/type/assertName.mjs\");\n/* harmony import */ var _definition_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./definition.mjs */ \"../../graphql/type/definition.mjs\");\n/* harmony import */ var _scalars_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./scalars.mjs */ \"../../graphql/type/scalars.mjs\");\n\n\n\n\n\n\n\n\n\n/**\n * Test if the given value is a GraphQL directive.\n */\n\nfunction isDirective(directive) {\n  return (0,_jsutils_instanceOf_mjs__WEBPACK_IMPORTED_MODULE_0__.instanceOf)(directive, GraphQLDirective);\n}\nfunction assertDirective(directive) {\n  if (!isDirective(directive)) {\n    throw new Error(`Expected ${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_1__.inspect)(directive)} to be a GraphQL directive.`);\n  }\n  return directive;\n}\n/**\n * Custom extensions\n *\n * @remarks\n * Use a unique identifier name for your extension, for example the name of\n * your library or project. Do not use a shortened identifier as this increases\n * the risk of conflicts. We recommend you add at most one extension field,\n * an object which can contain all the values you need.\n */\n\n/**\n * Directives are used by the GraphQL runtime as a way of modifying execution\n * behavior. Type system creators will usually not create these directly.\n */\nclass GraphQLDirective {\n  constructor(config) {\n    var _config$isRepeatable, _config$args;\n    this.name = (0,_assertName_mjs__WEBPACK_IMPORTED_MODULE_2__.assertName)(config.name);\n    this.description = config.description;\n    this.locations = config.locations;\n    this.isRepeatable = (_config$isRepeatable = config.isRepeatable) !== null && _config$isRepeatable !== void 0 ? _config$isRepeatable : false;\n    this.extensions = (0,_jsutils_toObjMap_mjs__WEBPACK_IMPORTED_MODULE_3__.toObjMap)(config.extensions);\n    this.astNode = config.astNode;\n    Array.isArray(config.locations) || (0,_jsutils_devAssert_mjs__WEBPACK_IMPORTED_MODULE_4__.devAssert)(false, `@${config.name} locations must be an Array.`);\n    const args = (_config$args = config.args) !== null && _config$args !== void 0 ? _config$args : {};\n    (0,_jsutils_isObjectLike_mjs__WEBPACK_IMPORTED_MODULE_5__.isObjectLike)(args) && !Array.isArray(args) || (0,_jsutils_devAssert_mjs__WEBPACK_IMPORTED_MODULE_4__.devAssert)(false, `@${config.name} args must be an object with argument names as keys.`);\n    this.args = (0,_definition_mjs__WEBPACK_IMPORTED_MODULE_6__.defineArguments)(args);\n  }\n  get [Symbol.toStringTag]() {\n    return 'GraphQLDirective';\n  }\n  toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      locations: this.locations,\n      args: (0,_definition_mjs__WEBPACK_IMPORTED_MODULE_6__.argsToArgsConfig)(this.args),\n      isRepeatable: this.isRepeatable,\n      extensions: this.extensions,\n      astNode: this.astNode\n    };\n  }\n  toString() {\n    return '@' + this.name;\n  }\n  toJSON() {\n    return this.toString();\n  }\n}\n\n/**\n * Used to conditionally include fields or fragments.\n */\nconst GraphQLIncludeDirective = new GraphQLDirective({\n  name: 'include',\n  description: 'Directs the executor to include this field or fragment only when the `if` argument is true.',\n  locations: [_language_directiveLocation_mjs__WEBPACK_IMPORTED_MODULE_7__.DirectiveLocation.FIELD, _language_directiveLocation_mjs__WEBPACK_IMPORTED_MODULE_7__.DirectiveLocation.FRAGMENT_SPREAD, _language_directiveLocation_mjs__WEBPACK_IMPORTED_MODULE_7__.DirectiveLocation.INLINE_FRAGMENT],\n  args: {\n    if: {\n      type: new _definition_mjs__WEBPACK_IMPORTED_MODULE_6__.GraphQLNonNull(_scalars_mjs__WEBPACK_IMPORTED_MODULE_8__.GraphQLBoolean),\n      description: 'Included when true.'\n    }\n  }\n});\n/**\n * Used to conditionally skip (exclude) fields or fragments.\n */\n\nconst GraphQLSkipDirective = new GraphQLDirective({\n  name: 'skip',\n  description: 'Directs the executor to skip this field or fragment when the `if` argument is true.',\n  locations: [_language_directiveLocation_mjs__WEBPACK_IMPORTED_MODULE_7__.DirectiveLocation.FIELD, _language_directiveLocation_mjs__WEBPACK_IMPORTED_MODULE_7__.DirectiveLocation.FRAGMENT_SPREAD, _language_directiveLocation_mjs__WEBPACK_IMPORTED_MODULE_7__.DirectiveLocation.INLINE_FRAGMENT],\n  args: {\n    if: {\n      type: new _definition_mjs__WEBPACK_IMPORTED_MODULE_6__.GraphQLNonNull(_scalars_mjs__WEBPACK_IMPORTED_MODULE_8__.GraphQLBoolean),\n      description: 'Skipped when true.'\n    }\n  }\n});\n/**\n * Constant string used for default reason for a deprecation.\n */\n\nconst DEFAULT_DEPRECATION_REASON = 'No longer supported';\n/**\n * Used to declare element of a GraphQL schema as deprecated.\n */\n\nconst GraphQLDeprecatedDirective = new GraphQLDirective({\n  name: 'deprecated',\n  description: 'Marks an element of a GraphQL schema as no longer supported.',\n  locations: [_language_directiveLocation_mjs__WEBPACK_IMPORTED_MODULE_7__.DirectiveLocation.FIELD_DEFINITION, _language_directiveLocation_mjs__WEBPACK_IMPORTED_MODULE_7__.DirectiveLocation.ARGUMENT_DEFINITION, _language_directiveLocation_mjs__WEBPACK_IMPORTED_MODULE_7__.DirectiveLocation.INPUT_FIELD_DEFINITION, _language_directiveLocation_mjs__WEBPACK_IMPORTED_MODULE_7__.DirectiveLocation.ENUM_VALUE],\n  args: {\n    reason: {\n      type: _scalars_mjs__WEBPACK_IMPORTED_MODULE_8__.GraphQLString,\n      description: 'Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax, as specified by [CommonMark](https://commonmark.org/).',\n      defaultValue: DEFAULT_DEPRECATION_REASON\n    }\n  }\n});\n/**\n * Used to provide a URL for specifying the behavior of custom scalar definitions.\n */\n\nconst GraphQLSpecifiedByDirective = new GraphQLDirective({\n  name: 'specifiedBy',\n  description: 'Exposes a URL that specifies the behavior of this scalar.',\n  locations: [_language_directiveLocation_mjs__WEBPACK_IMPORTED_MODULE_7__.DirectiveLocation.SCALAR],\n  args: {\n    url: {\n      type: new _definition_mjs__WEBPACK_IMPORTED_MODULE_6__.GraphQLNonNull(_scalars_mjs__WEBPACK_IMPORTED_MODULE_8__.GraphQLString),\n      description: 'The URL that specifies the behavior of this scalar.'\n    }\n  }\n});\n/**\n * The full list of specified directives.\n */\n\nconst specifiedDirectives = Object.freeze([GraphQLIncludeDirective, GraphQLSkipDirective, GraphQLDeprecatedDirective, GraphQLSpecifiedByDirective]);\nfunction isSpecifiedDirective(directive) {\n  return specifiedDirectives.some(({\n    name\n  }) => name === directive.name);\n}\n\n//# sourceURL=webpack://my-app/../../graphql/type/directives.mjs?");

/***/ }),

/***/ "../../graphql/type/introspection.mjs":
/*!********************************************!*\
  !*** ../../graphql/type/introspection.mjs ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SchemaMetaFieldDef: () => (/* binding */ SchemaMetaFieldDef),\n/* harmony export */   TypeKind: () => (/* binding */ TypeKind),\n/* harmony export */   TypeMetaFieldDef: () => (/* binding */ TypeMetaFieldDef),\n/* harmony export */   TypeNameMetaFieldDef: () => (/* binding */ TypeNameMetaFieldDef),\n/* harmony export */   __Directive: () => (/* binding */ __Directive),\n/* harmony export */   __DirectiveLocation: () => (/* binding */ __DirectiveLocation),\n/* harmony export */   __EnumValue: () => (/* binding */ __EnumValue),\n/* harmony export */   __Field: () => (/* binding */ __Field),\n/* harmony export */   __InputValue: () => (/* binding */ __InputValue),\n/* harmony export */   __Schema: () => (/* binding */ __Schema),\n/* harmony export */   __Type: () => (/* binding */ __Type),\n/* harmony export */   __TypeKind: () => (/* binding */ __TypeKind),\n/* harmony export */   introspectionTypes: () => (/* binding */ introspectionTypes),\n/* harmony export */   isIntrospectionType: () => (/* binding */ isIntrospectionType)\n/* harmony export */ });\n/* harmony import */ var _jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../jsutils/inspect.mjs */ \"../../graphql/jsutils/inspect.mjs\");\n/* harmony import */ var _jsutils_invariant_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../jsutils/invariant.mjs */ \"../../graphql/jsutils/invariant.mjs\");\n/* harmony import */ var _language_directiveLocation_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../language/directiveLocation.mjs */ \"../../graphql/language/directiveLocation.mjs\");\n/* harmony import */ var _language_printer_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../language/printer.mjs */ \"../../graphql/language/printer.mjs\");\n/* harmony import */ var _utilities_astFromValue_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utilities/astFromValue.mjs */ \"../../graphql/utilities/astFromValue.mjs\");\n/* harmony import */ var _definition_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./definition.mjs */ \"../../graphql/type/definition.mjs\");\n/* harmony import */ var _scalars_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scalars.mjs */ \"../../graphql/type/scalars.mjs\");\n\n\n\n\n\n\n\nconst __Schema = new _definition_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLObjectType({\n  name: '__Schema',\n  description: 'A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.',\n  fields: () => ({\n    description: {\n      type: _scalars_mjs__WEBPACK_IMPORTED_MODULE_1__.GraphQLString,\n      resolve: schema => schema.description\n    },\n    types: {\n      description: 'A list of all types supported by this server.',\n      type: new _definition_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLNonNull(new _definition_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLList(new _definition_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLNonNull(__Type))),\n      resolve(schema) {\n        return Object.values(schema.getTypeMap());\n      }\n    },\n    queryType: {\n      description: 'The type that query operations will be rooted at.',\n      type: new _definition_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLNonNull(__Type),\n      resolve: schema => schema.getQueryType()\n    },\n    mutationType: {\n      description: 'If this server supports mutation, the type that mutation operations will be rooted at.',\n      type: __Type,\n      resolve: schema => schema.getMutationType()\n    },\n    subscriptionType: {\n      description: 'If this server support subscription, the type that subscription operations will be rooted at.',\n      type: __Type,\n      resolve: schema => schema.getSubscriptionType()\n    },\n    directives: {\n      description: 'A list of all directives supported by this server.',\n      type: new _definition_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLNonNull(new _definition_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLList(new _definition_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLNonNull(__Directive))),\n      resolve: schema => schema.getDirectives()\n    }\n  })\n});\nconst __Directive = new _definition_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLObjectType({\n  name: '__Directive',\n  description: \"A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\\n\\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.\",\n  fields: () => ({\n    name: {\n      type: new _definition_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLNonNull(_scalars_mjs__WEBPACK_IMPORTED_MODULE_1__.GraphQLString),\n      resolve: directive => directive.name\n    },\n    description: {\n      type: _scalars_mjs__WEBPACK_IMPORTED_MODULE_1__.GraphQLString,\n      resolve: directive => directive.description\n    },\n    isRepeatable: {\n      type: new _definition_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLNonNull(_scalars_mjs__WEBPACK_IMPORTED_MODULE_1__.GraphQLBoolean),\n      resolve: directive => directive.isRepeatable\n    },\n    locations: {\n      type: new _definition_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLNonNull(new _definition_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLList(new _definition_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLNonNull(__DirectiveLocation))),\n      resolve: directive => directive.locations\n    },\n    args: {\n      type: new _definition_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLNonNull(new _definition_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLList(new _definition_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLNonNull(__InputValue))),\n      args: {\n        includeDeprecated: {\n          type: _scalars_mjs__WEBPACK_IMPORTED_MODULE_1__.GraphQLBoolean,\n          defaultValue: false\n        }\n      },\n      resolve(field, {\n        includeDeprecated\n      }) {\n        return includeDeprecated ? field.args : field.args.filter(arg => arg.deprecationReason == null);\n      }\n    }\n  })\n});\nconst __DirectiveLocation = new _definition_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLEnumType({\n  name: '__DirectiveLocation',\n  description: 'A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.',\n  values: {\n    QUERY: {\n      value: _language_directiveLocation_mjs__WEBPACK_IMPORTED_MODULE_2__.DirectiveLocation.QUERY,\n      description: 'Location adjacent to a query operation.'\n    },\n    MUTATION: {\n      value: _language_directiveLocation_mjs__WEBPACK_IMPORTED_MODULE_2__.DirectiveLocation.MUTATION,\n      description: 'Location adjacent to a mutation operation.'\n    },\n    SUBSCRIPTION: {\n      value: _language_directiveLocation_mjs__WEBPACK_IMPORTED_MODULE_2__.DirectiveLocation.SUBSCRIPTION,\n      description: 'Location adjacent to a subscription operation.'\n    },\n    FIELD: {\n      value: _language_directiveLocation_mjs__WEBPACK_IMPORTED_MODULE_2__.DirectiveLocation.FIELD,\n      description: 'Location adjacent to a field.'\n    },\n    FRAGMENT_DEFINITION: {\n      value: _language_directiveLocation_mjs__WEBPACK_IMPORTED_MODULE_2__.DirectiveLocation.FRAGMENT_DEFINITION,\n      description: 'Location adjacent to a fragment definition.'\n    },\n    FRAGMENT_SPREAD: {\n      value: _language_directiveLocation_mjs__WEBPACK_IMPORTED_MODULE_2__.DirectiveLocation.FRAGMENT_SPREAD,\n      description: 'Location adjacent to a fragment spread.'\n    },\n    INLINE_FRAGMENT: {\n      value: _language_directiveLocation_mjs__WEBPACK_IMPORTED_MODULE_2__.DirectiveLocation.INLINE_FRAGMENT,\n      description: 'Location adjacent to an inline fragment.'\n    },\n    VARIABLE_DEFINITION: {\n      value: _language_directiveLocation_mjs__WEBPACK_IMPORTED_MODULE_2__.DirectiveLocation.VARIABLE_DEFINITION,\n      description: 'Location adjacent to a variable definition.'\n    },\n    SCHEMA: {\n      value: _language_directiveLocation_mjs__WEBPACK_IMPORTED_MODULE_2__.DirectiveLocation.SCHEMA,\n      description: 'Location adjacent to a schema definition.'\n    },\n    SCALAR: {\n      value: _language_directiveLocation_mjs__WEBPACK_IMPORTED_MODULE_2__.DirectiveLocation.SCALAR,\n      description: 'Location adjacent to a scalar definition.'\n    },\n    OBJECT: {\n      value: _language_directiveLocation_mjs__WEBPACK_IMPORTED_MODULE_2__.DirectiveLocation.OBJECT,\n      description: 'Location adjacent to an object type definition.'\n    },\n    FIELD_DEFINITION: {\n      value: _language_directiveLocation_mjs__WEBPACK_IMPORTED_MODULE_2__.DirectiveLocation.FIELD_DEFINITION,\n      description: 'Location adjacent to a field definition.'\n    },\n    ARGUMENT_DEFINITION: {\n      value: _language_directiveLocation_mjs__WEBPACK_IMPORTED_MODULE_2__.DirectiveLocation.ARGUMENT_DEFINITION,\n      description: 'Location adjacent to an argument definition.'\n    },\n    INTERFACE: {\n      value: _language_directiveLocation_mjs__WEBPACK_IMPORTED_MODULE_2__.DirectiveLocation.INTERFACE,\n      description: 'Location adjacent to an interface definition.'\n    },\n    UNION: {\n      value: _language_directiveLocation_mjs__WEBPACK_IMPORTED_MODULE_2__.DirectiveLocation.UNION,\n      description: 'Location adjacent to a union definition.'\n    },\n    ENUM: {\n      value: _language_directiveLocation_mjs__WEBPACK_IMPORTED_MODULE_2__.DirectiveLocation.ENUM,\n      description: 'Location adjacent to an enum definition.'\n    },\n    ENUM_VALUE: {\n      value: _language_directiveLocation_mjs__WEBPACK_IMPORTED_MODULE_2__.DirectiveLocation.ENUM_VALUE,\n      description: 'Location adjacent to an enum value definition.'\n    },\n    INPUT_OBJECT: {\n      value: _language_directiveLocation_mjs__WEBPACK_IMPORTED_MODULE_2__.DirectiveLocation.INPUT_OBJECT,\n      description: 'Location adjacent to an input object type definition.'\n    },\n    INPUT_FIELD_DEFINITION: {\n      value: _language_directiveLocation_mjs__WEBPACK_IMPORTED_MODULE_2__.DirectiveLocation.INPUT_FIELD_DEFINITION,\n      description: 'Location adjacent to an input object field definition.'\n    }\n  }\n});\nconst __Type = new _definition_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLObjectType({\n  name: '__Type',\n  description: 'The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\\n\\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name, description and optional `specifiedByURL`, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.',\n  fields: () => ({\n    kind: {\n      type: new _definition_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLNonNull(__TypeKind),\n      resolve(type) {\n        if ((0,_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isScalarType)(type)) {\n          return TypeKind.SCALAR;\n        }\n        if ((0,_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isObjectType)(type)) {\n          return TypeKind.OBJECT;\n        }\n        if ((0,_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterfaceType)(type)) {\n          return TypeKind.INTERFACE;\n        }\n        if ((0,_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isUnionType)(type)) {\n          return TypeKind.UNION;\n        }\n        if ((0,_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isEnumType)(type)) {\n          return TypeKind.ENUM;\n        }\n        if ((0,_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isInputObjectType)(type)) {\n          return TypeKind.INPUT_OBJECT;\n        }\n        if ((0,_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isListType)(type)) {\n          return TypeKind.LIST;\n        }\n        if ((0,_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isNonNullType)(type)) {\n          return TypeKind.NON_NULL;\n        }\n        /* c8 ignore next 3 */\n        // Not reachable, all possible types have been considered)\n\n         false || (0,_jsutils_invariant_mjs__WEBPACK_IMPORTED_MODULE_3__.invariant)(false, `Unexpected type: \"${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_4__.inspect)(type)}\".`);\n      }\n    },\n    name: {\n      type: _scalars_mjs__WEBPACK_IMPORTED_MODULE_1__.GraphQLString,\n      resolve: type => 'name' in type ? type.name : undefined\n    },\n    description: {\n      type: _scalars_mjs__WEBPACK_IMPORTED_MODULE_1__.GraphQLString,\n      resolve: (type // FIXME: add test case\n      ) => /* c8 ignore next */\n      'description' in type ? type.description : undefined\n    },\n    specifiedByURL: {\n      type: _scalars_mjs__WEBPACK_IMPORTED_MODULE_1__.GraphQLString,\n      resolve: obj => 'specifiedByURL' in obj ? obj.specifiedByURL : undefined\n    },\n    fields: {\n      type: new _definition_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLList(new _definition_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLNonNull(__Field)),\n      args: {\n        includeDeprecated: {\n          type: _scalars_mjs__WEBPACK_IMPORTED_MODULE_1__.GraphQLBoolean,\n          defaultValue: false\n        }\n      },\n      resolve(type, {\n        includeDeprecated\n      }) {\n        if ((0,_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isObjectType)(type) || (0,_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterfaceType)(type)) {\n          const fields = Object.values(type.getFields());\n          return includeDeprecated ? fields : fields.filter(field => field.deprecationReason == null);\n        }\n      }\n    },\n    interfaces: {\n      type: new _definition_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLList(new _definition_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLNonNull(__Type)),\n      resolve(type) {\n        if ((0,_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isObjectType)(type) || (0,_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterfaceType)(type)) {\n          return type.getInterfaces();\n        }\n      }\n    },\n    possibleTypes: {\n      type: new _definition_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLList(new _definition_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLNonNull(__Type)),\n      resolve(type, _args, _context, {\n        schema\n      }) {\n        if ((0,_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isAbstractType)(type)) {\n          return schema.getPossibleTypes(type);\n        }\n      }\n    },\n    enumValues: {\n      type: new _definition_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLList(new _definition_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLNonNull(__EnumValue)),\n      args: {\n        includeDeprecated: {\n          type: _scalars_mjs__WEBPACK_IMPORTED_MODULE_1__.GraphQLBoolean,\n          defaultValue: false\n        }\n      },\n      resolve(type, {\n        includeDeprecated\n      }) {\n        if ((0,_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isEnumType)(type)) {\n          const values = type.getValues();\n          return includeDeprecated ? values : values.filter(field => field.deprecationReason == null);\n        }\n      }\n    },\n    inputFields: {\n      type: new _definition_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLList(new _definition_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLNonNull(__InputValue)),\n      args: {\n        includeDeprecated: {\n          type: _scalars_mjs__WEBPACK_IMPORTED_MODULE_1__.GraphQLBoolean,\n          defaultValue: false\n        }\n      },\n      resolve(type, {\n        includeDeprecated\n      }) {\n        if ((0,_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isInputObjectType)(type)) {\n          const values = Object.values(type.getFields());\n          return includeDeprecated ? values : values.filter(field => field.deprecationReason == null);\n        }\n      }\n    },\n    ofType: {\n      type: __Type,\n      resolve: type => 'ofType' in type ? type.ofType : undefined\n    }\n  })\n});\nconst __Field = new _definition_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLObjectType({\n  name: '__Field',\n  description: 'Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.',\n  fields: () => ({\n    name: {\n      type: new _definition_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLNonNull(_scalars_mjs__WEBPACK_IMPORTED_MODULE_1__.GraphQLString),\n      resolve: field => field.name\n    },\n    description: {\n      type: _scalars_mjs__WEBPACK_IMPORTED_MODULE_1__.GraphQLString,\n      resolve: field => field.description\n    },\n    args: {\n      type: new _definition_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLNonNull(new _definition_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLList(new _definition_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLNonNull(__InputValue))),\n      args: {\n        includeDeprecated: {\n          type: _scalars_mjs__WEBPACK_IMPORTED_MODULE_1__.GraphQLBoolean,\n          defaultValue: false\n        }\n      },\n      resolve(field, {\n        includeDeprecated\n      }) {\n        return includeDeprecated ? field.args : field.args.filter(arg => arg.deprecationReason == null);\n      }\n    },\n    type: {\n      type: new _definition_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLNonNull(__Type),\n      resolve: field => field.type\n    },\n    isDeprecated: {\n      type: new _definition_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLNonNull(_scalars_mjs__WEBPACK_IMPORTED_MODULE_1__.GraphQLBoolean),\n      resolve: field => field.deprecationReason != null\n    },\n    deprecationReason: {\n      type: _scalars_mjs__WEBPACK_IMPORTED_MODULE_1__.GraphQLString,\n      resolve: field => field.deprecationReason\n    }\n  })\n});\nconst __InputValue = new _definition_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLObjectType({\n  name: '__InputValue',\n  description: 'Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.',\n  fields: () => ({\n    name: {\n      type: new _definition_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLNonNull(_scalars_mjs__WEBPACK_IMPORTED_MODULE_1__.GraphQLString),\n      resolve: inputValue => inputValue.name\n    },\n    description: {\n      type: _scalars_mjs__WEBPACK_IMPORTED_MODULE_1__.GraphQLString,\n      resolve: inputValue => inputValue.description\n    },\n    type: {\n      type: new _definition_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLNonNull(__Type),\n      resolve: inputValue => inputValue.type\n    },\n    defaultValue: {\n      type: _scalars_mjs__WEBPACK_IMPORTED_MODULE_1__.GraphQLString,\n      description: 'A GraphQL-formatted string representing the default value for this input value.',\n      resolve(inputValue) {\n        const {\n          type,\n          defaultValue\n        } = inputValue;\n        const valueAST = (0,_utilities_astFromValue_mjs__WEBPACK_IMPORTED_MODULE_5__.astFromValue)(defaultValue, type);\n        return valueAST ? (0,_language_printer_mjs__WEBPACK_IMPORTED_MODULE_6__.print)(valueAST) : null;\n      }\n    },\n    isDeprecated: {\n      type: new _definition_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLNonNull(_scalars_mjs__WEBPACK_IMPORTED_MODULE_1__.GraphQLBoolean),\n      resolve: field => field.deprecationReason != null\n    },\n    deprecationReason: {\n      type: _scalars_mjs__WEBPACK_IMPORTED_MODULE_1__.GraphQLString,\n      resolve: obj => obj.deprecationReason\n    }\n  })\n});\nconst __EnumValue = new _definition_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLObjectType({\n  name: '__EnumValue',\n  description: 'One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.',\n  fields: () => ({\n    name: {\n      type: new _definition_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLNonNull(_scalars_mjs__WEBPACK_IMPORTED_MODULE_1__.GraphQLString),\n      resolve: enumValue => enumValue.name\n    },\n    description: {\n      type: _scalars_mjs__WEBPACK_IMPORTED_MODULE_1__.GraphQLString,\n      resolve: enumValue => enumValue.description\n    },\n    isDeprecated: {\n      type: new _definition_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLNonNull(_scalars_mjs__WEBPACK_IMPORTED_MODULE_1__.GraphQLBoolean),\n      resolve: enumValue => enumValue.deprecationReason != null\n    },\n    deprecationReason: {\n      type: _scalars_mjs__WEBPACK_IMPORTED_MODULE_1__.GraphQLString,\n      resolve: enumValue => enumValue.deprecationReason\n    }\n  })\n});\nvar TypeKind;\n(function (TypeKind) {\n  TypeKind['SCALAR'] = 'SCALAR';\n  TypeKind['OBJECT'] = 'OBJECT';\n  TypeKind['INTERFACE'] = 'INTERFACE';\n  TypeKind['UNION'] = 'UNION';\n  TypeKind['ENUM'] = 'ENUM';\n  TypeKind['INPUT_OBJECT'] = 'INPUT_OBJECT';\n  TypeKind['LIST'] = 'LIST';\n  TypeKind['NON_NULL'] = 'NON_NULL';\n})(TypeKind || (TypeKind = {}));\n\nconst __TypeKind = new _definition_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLEnumType({\n  name: '__TypeKind',\n  description: 'An enum describing what kind of type a given `__Type` is.',\n  values: {\n    SCALAR: {\n      value: TypeKind.SCALAR,\n      description: 'Indicates this type is a scalar.'\n    },\n    OBJECT: {\n      value: TypeKind.OBJECT,\n      description: 'Indicates this type is an object. `fields` and `interfaces` are valid fields.'\n    },\n    INTERFACE: {\n      value: TypeKind.INTERFACE,\n      description: 'Indicates this type is an interface. `fields`, `interfaces`, and `possibleTypes` are valid fields.'\n    },\n    UNION: {\n      value: TypeKind.UNION,\n      description: 'Indicates this type is a union. `possibleTypes` is a valid field.'\n    },\n    ENUM: {\n      value: TypeKind.ENUM,\n      description: 'Indicates this type is an enum. `enumValues` is a valid field.'\n    },\n    INPUT_OBJECT: {\n      value: TypeKind.INPUT_OBJECT,\n      description: 'Indicates this type is an input object. `inputFields` is a valid field.'\n    },\n    LIST: {\n      value: TypeKind.LIST,\n      description: 'Indicates this type is a list. `ofType` is a valid field.'\n    },\n    NON_NULL: {\n      value: TypeKind.NON_NULL,\n      description: 'Indicates this type is a non-null. `ofType` is a valid field.'\n    }\n  }\n});\n/**\n * Note that these are GraphQLField and not GraphQLFieldConfig,\n * so the format for args is different.\n */\n\nconst SchemaMetaFieldDef = {\n  name: '__schema',\n  type: new _definition_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLNonNull(__Schema),\n  description: 'Access the current type schema of this server.',\n  args: [],\n  resolve: (_source, _args, _context, {\n    schema\n  }) => schema,\n  deprecationReason: undefined,\n  extensions: Object.create(null),\n  astNode: undefined\n};\nconst TypeMetaFieldDef = {\n  name: '__type',\n  type: __Type,\n  description: 'Request the type information of a single type.',\n  args: [{\n    name: 'name',\n    description: undefined,\n    type: new _definition_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLNonNull(_scalars_mjs__WEBPACK_IMPORTED_MODULE_1__.GraphQLString),\n    defaultValue: undefined,\n    deprecationReason: undefined,\n    extensions: Object.create(null),\n    astNode: undefined\n  }],\n  resolve: (_source, {\n    name\n  }, _context, {\n    schema\n  }) => schema.getType(name),\n  deprecationReason: undefined,\n  extensions: Object.create(null),\n  astNode: undefined\n};\nconst TypeNameMetaFieldDef = {\n  name: '__typename',\n  type: new _definition_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLNonNull(_scalars_mjs__WEBPACK_IMPORTED_MODULE_1__.GraphQLString),\n  description: 'The name of the current Object type at runtime.',\n  args: [],\n  resolve: (_source, _args, _context, {\n    parentType\n  }) => parentType.name,\n  deprecationReason: undefined,\n  extensions: Object.create(null),\n  astNode: undefined\n};\nconst introspectionTypes = Object.freeze([__Schema, __Directive, __DirectiveLocation, __Type, __Field, __InputValue, __EnumValue, __TypeKind]);\nfunction isIntrospectionType(type) {\n  return introspectionTypes.some(({\n    name\n  }) => type.name === name);\n}\n\n//# sourceURL=webpack://my-app/../../graphql/type/introspection.mjs?");

/***/ }),

/***/ "../../graphql/type/scalars.mjs":
/*!**************************************!*\
  !*** ../../graphql/type/scalars.mjs ***!
  \**************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GRAPHQL_MAX_INT: () => (/* binding */ GRAPHQL_MAX_INT),\n/* harmony export */   GRAPHQL_MIN_INT: () => (/* binding */ GRAPHQL_MIN_INT),\n/* harmony export */   GraphQLBoolean: () => (/* binding */ GraphQLBoolean),\n/* harmony export */   GraphQLFloat: () => (/* binding */ GraphQLFloat),\n/* harmony export */   GraphQLID: () => (/* binding */ GraphQLID),\n/* harmony export */   GraphQLInt: () => (/* binding */ GraphQLInt),\n/* harmony export */   GraphQLString: () => (/* binding */ GraphQLString),\n/* harmony export */   isSpecifiedScalarType: () => (/* binding */ isSpecifiedScalarType),\n/* harmony export */   specifiedScalarTypes: () => (/* binding */ specifiedScalarTypes)\n/* harmony export */ });\n/* harmony import */ var _jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../jsutils/inspect.mjs */ \"../../graphql/jsutils/inspect.mjs\");\n/* harmony import */ var _jsutils_isObjectLike_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../jsutils/isObjectLike.mjs */ \"../../graphql/jsutils/isObjectLike.mjs\");\n/* harmony import */ var _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/GraphQLError.mjs */ \"../../graphql/error/GraphQLError.mjs\");\n/* harmony import */ var _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../language/kinds.mjs */ \"../../graphql/language/kinds.mjs\");\n/* harmony import */ var _language_printer_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../language/printer.mjs */ \"../../graphql/language/printer.mjs\");\n/* harmony import */ var _definition_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./definition.mjs */ \"../../graphql/type/definition.mjs\");\n\n\n\n\n\n\n/**\n * Maximum possible Int value as per GraphQL Spec (32-bit signed integer).\n * n.b. This differs from JavaScript's numbers that are IEEE 754 doubles safe up-to 2^53 - 1\n * */\n\nconst GRAPHQL_MAX_INT = 2147483647;\n/**\n * Minimum possible Int value as per GraphQL Spec (32-bit signed integer).\n * n.b. This differs from JavaScript's numbers that are IEEE 754 doubles safe starting at -(2^53 - 1)\n * */\n\nconst GRAPHQL_MIN_INT = -2147483648;\nconst GraphQLInt = new _definition_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLScalarType({\n  name: 'Int',\n  description: 'The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.',\n  serialize(outputValue) {\n    const coercedValue = serializeObject(outputValue);\n    if (typeof coercedValue === 'boolean') {\n      return coercedValue ? 1 : 0;\n    }\n    let num = coercedValue;\n    if (typeof coercedValue === 'string' && coercedValue !== '') {\n      num = Number(coercedValue);\n    }\n    if (typeof num !== 'number' || !Number.isInteger(num)) {\n      throw new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_1__.GraphQLError(`Int cannot represent non-integer value: ${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_2__.inspect)(coercedValue)}`);\n    }\n    if (num > GRAPHQL_MAX_INT || num < GRAPHQL_MIN_INT) {\n      throw new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_1__.GraphQLError('Int cannot represent non 32-bit signed integer value: ' + (0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_2__.inspect)(coercedValue));\n    }\n    return num;\n  },\n  parseValue(inputValue) {\n    if (typeof inputValue !== 'number' || !Number.isInteger(inputValue)) {\n      throw new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_1__.GraphQLError(`Int cannot represent non-integer value: ${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_2__.inspect)(inputValue)}`);\n    }\n    if (inputValue > GRAPHQL_MAX_INT || inputValue < GRAPHQL_MIN_INT) {\n      throw new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_1__.GraphQLError(`Int cannot represent non 32-bit signed integer value: ${inputValue}`);\n    }\n    return inputValue;\n  },\n  parseLiteral(valueNode) {\n    if (valueNode.kind !== _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.INT) {\n      throw new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_1__.GraphQLError(`Int cannot represent non-integer value: ${(0,_language_printer_mjs__WEBPACK_IMPORTED_MODULE_4__.print)(valueNode)}`, {\n        nodes: valueNode\n      });\n    }\n    const num = parseInt(valueNode.value, 10);\n    if (num > GRAPHQL_MAX_INT || num < GRAPHQL_MIN_INT) {\n      throw new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_1__.GraphQLError(`Int cannot represent non 32-bit signed integer value: ${valueNode.value}`, {\n        nodes: valueNode\n      });\n    }\n    return num;\n  }\n});\nconst GraphQLFloat = new _definition_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLScalarType({\n  name: 'Float',\n  description: 'The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point).',\n  serialize(outputValue) {\n    const coercedValue = serializeObject(outputValue);\n    if (typeof coercedValue === 'boolean') {\n      return coercedValue ? 1 : 0;\n    }\n    let num = coercedValue;\n    if (typeof coercedValue === 'string' && coercedValue !== '') {\n      num = Number(coercedValue);\n    }\n    if (typeof num !== 'number' || !Number.isFinite(num)) {\n      throw new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_1__.GraphQLError(`Float cannot represent non numeric value: ${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_2__.inspect)(coercedValue)}`);\n    }\n    return num;\n  },\n  parseValue(inputValue) {\n    if (typeof inputValue !== 'number' || !Number.isFinite(inputValue)) {\n      throw new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_1__.GraphQLError(`Float cannot represent non numeric value: ${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_2__.inspect)(inputValue)}`);\n    }\n    return inputValue;\n  },\n  parseLiteral(valueNode) {\n    if (valueNode.kind !== _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.FLOAT && valueNode.kind !== _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.INT) {\n      throw new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_1__.GraphQLError(`Float cannot represent non numeric value: ${(0,_language_printer_mjs__WEBPACK_IMPORTED_MODULE_4__.print)(valueNode)}`, valueNode);\n    }\n    return parseFloat(valueNode.value);\n  }\n});\nconst GraphQLString = new _definition_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLScalarType({\n  name: 'String',\n  description: 'The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.',\n  serialize(outputValue) {\n    const coercedValue = serializeObject(outputValue); // Serialize string, boolean and number values to a string, but do not\n    // attempt to coerce object, function, symbol, or other types as strings.\n\n    if (typeof coercedValue === 'string') {\n      return coercedValue;\n    }\n    if (typeof coercedValue === 'boolean') {\n      return coercedValue ? 'true' : 'false';\n    }\n    if (typeof coercedValue === 'number' && Number.isFinite(coercedValue)) {\n      return coercedValue.toString();\n    }\n    throw new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_1__.GraphQLError(`String cannot represent value: ${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_2__.inspect)(outputValue)}`);\n  },\n  parseValue(inputValue) {\n    if (typeof inputValue !== 'string') {\n      throw new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_1__.GraphQLError(`String cannot represent a non string value: ${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_2__.inspect)(inputValue)}`);\n    }\n    return inputValue;\n  },\n  parseLiteral(valueNode) {\n    if (valueNode.kind !== _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.STRING) {\n      throw new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_1__.GraphQLError(`String cannot represent a non string value: ${(0,_language_printer_mjs__WEBPACK_IMPORTED_MODULE_4__.print)(valueNode)}`, {\n        nodes: valueNode\n      });\n    }\n    return valueNode.value;\n  }\n});\nconst GraphQLBoolean = new _definition_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLScalarType({\n  name: 'Boolean',\n  description: 'The `Boolean` scalar type represents `true` or `false`.',\n  serialize(outputValue) {\n    const coercedValue = serializeObject(outputValue);\n    if (typeof coercedValue === 'boolean') {\n      return coercedValue;\n    }\n    if (Number.isFinite(coercedValue)) {\n      return coercedValue !== 0;\n    }\n    throw new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_1__.GraphQLError(`Boolean cannot represent a non boolean value: ${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_2__.inspect)(coercedValue)}`);\n  },\n  parseValue(inputValue) {\n    if (typeof inputValue !== 'boolean') {\n      throw new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_1__.GraphQLError(`Boolean cannot represent a non boolean value: ${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_2__.inspect)(inputValue)}`);\n    }\n    return inputValue;\n  },\n  parseLiteral(valueNode) {\n    if (valueNode.kind !== _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.BOOLEAN) {\n      throw new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_1__.GraphQLError(`Boolean cannot represent a non boolean value: ${(0,_language_printer_mjs__WEBPACK_IMPORTED_MODULE_4__.print)(valueNode)}`, {\n        nodes: valueNode\n      });\n    }\n    return valueNode.value;\n  }\n});\nconst GraphQLID = new _definition_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLScalarType({\n  name: 'ID',\n  description: 'The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID.',\n  serialize(outputValue) {\n    const coercedValue = serializeObject(outputValue);\n    if (typeof coercedValue === 'string') {\n      return coercedValue;\n    }\n    if (Number.isInteger(coercedValue)) {\n      return String(coercedValue);\n    }\n    throw new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_1__.GraphQLError(`ID cannot represent value: ${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_2__.inspect)(outputValue)}`);\n  },\n  parseValue(inputValue) {\n    if (typeof inputValue === 'string') {\n      return inputValue;\n    }\n    if (typeof inputValue === 'number' && Number.isInteger(inputValue)) {\n      return inputValue.toString();\n    }\n    throw new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_1__.GraphQLError(`ID cannot represent value: ${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_2__.inspect)(inputValue)}`);\n  },\n  parseLiteral(valueNode) {\n    if (valueNode.kind !== _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.STRING && valueNode.kind !== _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_3__.Kind.INT) {\n      throw new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_1__.GraphQLError('ID cannot represent a non-string and non-integer value: ' + (0,_language_printer_mjs__WEBPACK_IMPORTED_MODULE_4__.print)(valueNode), {\n        nodes: valueNode\n      });\n    }\n    return valueNode.value;\n  }\n});\nconst specifiedScalarTypes = Object.freeze([GraphQLString, GraphQLInt, GraphQLFloat, GraphQLBoolean, GraphQLID]);\nfunction isSpecifiedScalarType(type) {\n  return specifiedScalarTypes.some(({\n    name\n  }) => type.name === name);\n} // Support serializing objects with custom valueOf() or toJSON() functions -\n// a common way to represent a complex value which can be represented as\n// a string (ex: MongoDB id objects).\n\nfunction serializeObject(outputValue) {\n  if ((0,_jsutils_isObjectLike_mjs__WEBPACK_IMPORTED_MODULE_5__.isObjectLike)(outputValue)) {\n    if (typeof outputValue.valueOf === 'function') {\n      const valueOfResult = outputValue.valueOf();\n      if (!(0,_jsutils_isObjectLike_mjs__WEBPACK_IMPORTED_MODULE_5__.isObjectLike)(valueOfResult)) {\n        return valueOfResult;\n      }\n    }\n    if (typeof outputValue.toJSON === 'function') {\n      return outputValue.toJSON();\n    }\n  }\n  return outputValue;\n}\n\n//# sourceURL=webpack://my-app/../../graphql/type/scalars.mjs?");

/***/ }),

/***/ "../../graphql/type/schema.mjs":
/*!*************************************!*\
  !*** ../../graphql/type/schema.mjs ***!
  \*************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GraphQLSchema: () => (/* binding */ GraphQLSchema),\n/* harmony export */   assertSchema: () => (/* binding */ assertSchema),\n/* harmony export */   isSchema: () => (/* binding */ isSchema)\n/* harmony export */ });\n/* harmony import */ var _jsutils_devAssert_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../jsutils/devAssert.mjs */ \"../../graphql/jsutils/devAssert.mjs\");\n/* harmony import */ var _jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../jsutils/inspect.mjs */ \"../../graphql/jsutils/inspect.mjs\");\n/* harmony import */ var _jsutils_instanceOf_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../jsutils/instanceOf.mjs */ \"../../graphql/jsutils/instanceOf.mjs\");\n/* harmony import */ var _jsutils_isObjectLike_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../jsutils/isObjectLike.mjs */ \"../../graphql/jsutils/isObjectLike.mjs\");\n/* harmony import */ var _jsutils_toObjMap_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../jsutils/toObjMap.mjs */ \"../../graphql/jsutils/toObjMap.mjs\");\n/* harmony import */ var _language_ast_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../language/ast.mjs */ \"../../graphql/language/ast.mjs\");\n/* harmony import */ var _definition_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./definition.mjs */ \"../../graphql/type/definition.mjs\");\n/* harmony import */ var _directives_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./directives.mjs */ \"../../graphql/type/directives.mjs\");\n/* harmony import */ var _introspection_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./introspection.mjs */ \"../../graphql/type/introspection.mjs\");\n\n\n\n\n\n\n\n\n\n/**\n * Test if the given value is a GraphQL schema.\n */\n\nfunction isSchema(schema) {\n  return (0,_jsutils_instanceOf_mjs__WEBPACK_IMPORTED_MODULE_0__.instanceOf)(schema, GraphQLSchema);\n}\nfunction assertSchema(schema) {\n  if (!isSchema(schema)) {\n    throw new Error(`Expected ${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_1__.inspect)(schema)} to be a GraphQL schema.`);\n  }\n  return schema;\n}\n/**\n * Custom extensions\n *\n * @remarks\n * Use a unique identifier name for your extension, for example the name of\n * your library or project. Do not use a shortened identifier as this increases\n * the risk of conflicts. We recommend you add at most one extension field,\n * an object which can contain all the values you need.\n */\n\n/**\n * Schema Definition\n *\n * A Schema is created by supplying the root types of each type of operation,\n * query and mutation (optional). A schema definition is then supplied to the\n * validator and executor.\n *\n * Example:\n *\n * ```ts\n * const MyAppSchema = new GraphQLSchema({\n *   query: MyAppQueryRootType,\n *   mutation: MyAppMutationRootType,\n * })\n * ```\n *\n * Note: When the schema is constructed, by default only the types that are\n * reachable by traversing the root types are included, other types must be\n * explicitly referenced.\n *\n * Example:\n *\n * ```ts\n * const characterInterface = new GraphQLInterfaceType({\n *   name: 'Character',\n *   ...\n * });\n *\n * const humanType = new GraphQLObjectType({\n *   name: 'Human',\n *   interfaces: [characterInterface],\n *   ...\n * });\n *\n * const droidType = new GraphQLObjectType({\n *   name: 'Droid',\n *   interfaces: [characterInterface],\n *   ...\n * });\n *\n * const schema = new GraphQLSchema({\n *   query: new GraphQLObjectType({\n *     name: 'Query',\n *     fields: {\n *       hero: { type: characterInterface, ... },\n *     }\n *   }),\n *   ...\n *   // Since this schema references only the `Character` interface it's\n *   // necessary to explicitly list the types that implement it if\n *   // you want them to be included in the final schema.\n *   types: [humanType, droidType],\n * })\n * ```\n *\n * Note: If an array of `directives` are provided to GraphQLSchema, that will be\n * the exact list of directives represented and allowed. If `directives` is not\n * provided then a default set of the specified directives (e.g. `@include` and\n * `@skip`) will be used. If you wish to provide *additional* directives to these\n * specified directives, you must explicitly declare them. Example:\n *\n * ```ts\n * const MyAppSchema = new GraphQLSchema({\n *   ...\n *   directives: specifiedDirectives.concat([ myCustomDirective ]),\n * })\n * ```\n */\nclass GraphQLSchema {\n  // Used as a cache for validateSchema().\n  constructor(config) {\n    var _config$extensionASTN, _config$directives;\n\n    // If this schema was built from a source known to be valid, then it may be\n    // marked with assumeValid to avoid an additional type system validation.\n    this.__validationErrors = config.assumeValid === true ? [] : undefined; // Check for common mistakes during construction to produce early errors.\n\n    (0,_jsutils_isObjectLike_mjs__WEBPACK_IMPORTED_MODULE_2__.isObjectLike)(config) || (0,_jsutils_devAssert_mjs__WEBPACK_IMPORTED_MODULE_3__.devAssert)(false, 'Must provide configuration object.');\n    !config.types || Array.isArray(config.types) || (0,_jsutils_devAssert_mjs__WEBPACK_IMPORTED_MODULE_3__.devAssert)(false, `\"types\" must be Array if provided but got: ${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_1__.inspect)(config.types)}.`);\n    !config.directives || Array.isArray(config.directives) || (0,_jsutils_devAssert_mjs__WEBPACK_IMPORTED_MODULE_3__.devAssert)(false, '\"directives\" must be Array if provided but got: ' + `${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_1__.inspect)(config.directives)}.`);\n    this.description = config.description;\n    this.extensions = (0,_jsutils_toObjMap_mjs__WEBPACK_IMPORTED_MODULE_4__.toObjMap)(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes = (_config$extensionASTN = config.extensionASTNodes) !== null && _config$extensionASTN !== void 0 ? _config$extensionASTN : [];\n    this._queryType = config.query;\n    this._mutationType = config.mutation;\n    this._subscriptionType = config.subscription; // Provide specified directives (e.g. @include and @skip) by default.\n\n    this._directives = (_config$directives = config.directives) !== null && _config$directives !== void 0 ? _config$directives : _directives_mjs__WEBPACK_IMPORTED_MODULE_5__.specifiedDirectives; // To preserve order of user-provided types, we add first to add them to\n    // the set of \"collected\" types, so `collectReferencedTypes` ignore them.\n\n    const allReferencedTypes = new Set(config.types);\n    if (config.types != null) {\n      for (const type of config.types) {\n        // When we ready to process this type, we remove it from \"collected\" types\n        // and then add it together with all dependent types in the correct position.\n        allReferencedTypes.delete(type);\n        collectReferencedTypes(type, allReferencedTypes);\n      }\n    }\n    if (this._queryType != null) {\n      collectReferencedTypes(this._queryType, allReferencedTypes);\n    }\n    if (this._mutationType != null) {\n      collectReferencedTypes(this._mutationType, allReferencedTypes);\n    }\n    if (this._subscriptionType != null) {\n      collectReferencedTypes(this._subscriptionType, allReferencedTypes);\n    }\n    for (const directive of this._directives) {\n      // Directives are not validated until validateSchema() is called.\n      if ((0,_directives_mjs__WEBPACK_IMPORTED_MODULE_5__.isDirective)(directive)) {\n        for (const arg of directive.args) {\n          collectReferencedTypes(arg.type, allReferencedTypes);\n        }\n      }\n    }\n    collectReferencedTypes(_introspection_mjs__WEBPACK_IMPORTED_MODULE_6__.__Schema, allReferencedTypes); // Storing the resulting map for reference by the schema.\n\n    this._typeMap = Object.create(null);\n    this._subTypeMap = Object.create(null); // Keep track of all implementations by interface name.\n\n    this._implementationsMap = Object.create(null);\n    for (const namedType of allReferencedTypes) {\n      if (namedType == null) {\n        continue;\n      }\n      const typeName = namedType.name;\n      typeName || (0,_jsutils_devAssert_mjs__WEBPACK_IMPORTED_MODULE_3__.devAssert)(false, 'One of the provided types for building the Schema is missing a name.');\n      if (this._typeMap[typeName] !== undefined) {\n        throw new Error(`Schema must contain uniquely named types but contains multiple types named \"${typeName}\".`);\n      }\n      this._typeMap[typeName] = namedType;\n      if ((0,_definition_mjs__WEBPACK_IMPORTED_MODULE_7__.isInterfaceType)(namedType)) {\n        // Store implementations by interface.\n        for (const iface of namedType.getInterfaces()) {\n          if ((0,_definition_mjs__WEBPACK_IMPORTED_MODULE_7__.isInterfaceType)(iface)) {\n            let implementations = this._implementationsMap[iface.name];\n            if (implementations === undefined) {\n              implementations = this._implementationsMap[iface.name] = {\n                objects: [],\n                interfaces: []\n              };\n            }\n            implementations.interfaces.push(namedType);\n          }\n        }\n      } else if ((0,_definition_mjs__WEBPACK_IMPORTED_MODULE_7__.isObjectType)(namedType)) {\n        // Store implementations by objects.\n        for (const iface of namedType.getInterfaces()) {\n          if ((0,_definition_mjs__WEBPACK_IMPORTED_MODULE_7__.isInterfaceType)(iface)) {\n            let implementations = this._implementationsMap[iface.name];\n            if (implementations === undefined) {\n              implementations = this._implementationsMap[iface.name] = {\n                objects: [],\n                interfaces: []\n              };\n            }\n            implementations.objects.push(namedType);\n          }\n        }\n      }\n    }\n  }\n  get [Symbol.toStringTag]() {\n    return 'GraphQLSchema';\n  }\n  getQueryType() {\n    return this._queryType;\n  }\n  getMutationType() {\n    return this._mutationType;\n  }\n  getSubscriptionType() {\n    return this._subscriptionType;\n  }\n  getRootType(operation) {\n    switch (operation) {\n      case _language_ast_mjs__WEBPACK_IMPORTED_MODULE_8__.OperationTypeNode.QUERY:\n        return this.getQueryType();\n      case _language_ast_mjs__WEBPACK_IMPORTED_MODULE_8__.OperationTypeNode.MUTATION:\n        return this.getMutationType();\n      case _language_ast_mjs__WEBPACK_IMPORTED_MODULE_8__.OperationTypeNode.SUBSCRIPTION:\n        return this.getSubscriptionType();\n    }\n  }\n  getTypeMap() {\n    return this._typeMap;\n  }\n  getType(name) {\n    return this.getTypeMap()[name];\n  }\n  getPossibleTypes(abstractType) {\n    return (0,_definition_mjs__WEBPACK_IMPORTED_MODULE_7__.isUnionType)(abstractType) ? abstractType.getTypes() : this.getImplementations(abstractType).objects;\n  }\n  getImplementations(interfaceType) {\n    const implementations = this._implementationsMap[interfaceType.name];\n    return implementations !== null && implementations !== void 0 ? implementations : {\n      objects: [],\n      interfaces: []\n    };\n  }\n  isSubType(abstractType, maybeSubType) {\n    let map = this._subTypeMap[abstractType.name];\n    if (map === undefined) {\n      map = Object.create(null);\n      if ((0,_definition_mjs__WEBPACK_IMPORTED_MODULE_7__.isUnionType)(abstractType)) {\n        for (const type of abstractType.getTypes()) {\n          map[type.name] = true;\n        }\n      } else {\n        const implementations = this.getImplementations(abstractType);\n        for (const type of implementations.objects) {\n          map[type.name] = true;\n        }\n        for (const type of implementations.interfaces) {\n          map[type.name] = true;\n        }\n      }\n      this._subTypeMap[abstractType.name] = map;\n    }\n    return map[maybeSubType.name] !== undefined;\n  }\n  getDirectives() {\n    return this._directives;\n  }\n  getDirective(name) {\n    return this.getDirectives().find(directive => directive.name === name);\n  }\n  toConfig() {\n    return {\n      description: this.description,\n      query: this.getQueryType(),\n      mutation: this.getMutationType(),\n      subscription: this.getSubscriptionType(),\n      types: Object.values(this.getTypeMap()),\n      directives: this.getDirectives(),\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes,\n      assumeValid: this.__validationErrors !== undefined\n    };\n  }\n}\nfunction collectReferencedTypes(type, typeSet) {\n  const namedType = (0,_definition_mjs__WEBPACK_IMPORTED_MODULE_7__.getNamedType)(type);\n  if (!typeSet.has(namedType)) {\n    typeSet.add(namedType);\n    if ((0,_definition_mjs__WEBPACK_IMPORTED_MODULE_7__.isUnionType)(namedType)) {\n      for (const memberType of namedType.getTypes()) {\n        collectReferencedTypes(memberType, typeSet);\n      }\n    } else if ((0,_definition_mjs__WEBPACK_IMPORTED_MODULE_7__.isObjectType)(namedType) || (0,_definition_mjs__WEBPACK_IMPORTED_MODULE_7__.isInterfaceType)(namedType)) {\n      for (const interfaceType of namedType.getInterfaces()) {\n        collectReferencedTypes(interfaceType, typeSet);\n      }\n      for (const field of Object.values(namedType.getFields())) {\n        collectReferencedTypes(field.type, typeSet);\n        for (const arg of field.args) {\n          collectReferencedTypes(arg.type, typeSet);\n        }\n      }\n    } else if ((0,_definition_mjs__WEBPACK_IMPORTED_MODULE_7__.isInputObjectType)(namedType)) {\n      for (const field of Object.values(namedType.getFields())) {\n        collectReferencedTypes(field.type, typeSet);\n      }\n    }\n  }\n  return typeSet;\n}\n\n//# sourceURL=webpack://my-app/../../graphql/type/schema.mjs?");

/***/ }),

/***/ "../../graphql/type/validate.mjs":
/*!***************************************!*\
  !*** ../../graphql/type/validate.mjs ***!
  \***************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assertValidSchema: () => (/* binding */ assertValidSchema),\n/* harmony export */   validateSchema: () => (/* binding */ validateSchema)\n/* harmony export */ });\n/* harmony import */ var _jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../jsutils/inspect.mjs */ \"../../graphql/jsutils/inspect.mjs\");\n/* harmony import */ var _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/GraphQLError.mjs */ \"../../graphql/error/GraphQLError.mjs\");\n/* harmony import */ var _language_ast_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../language/ast.mjs */ \"../../graphql/language/ast.mjs\");\n/* harmony import */ var _utilities_typeComparators_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utilities/typeComparators.mjs */ \"../../graphql/utilities/typeComparators.mjs\");\n/* harmony import */ var _definition_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./definition.mjs */ \"../../graphql/type/definition.mjs\");\n/* harmony import */ var _directives_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./directives.mjs */ \"../../graphql/type/directives.mjs\");\n/* harmony import */ var _introspection_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./introspection.mjs */ \"../../graphql/type/introspection.mjs\");\n/* harmony import */ var _schema_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./schema.mjs */ \"../../graphql/type/schema.mjs\");\n\n\n\n\n\n\n\n\n/**\n * Implements the \"Type Validation\" sub-sections of the specification's\n * \"Type System\" section.\n *\n * Validation runs synchronously, returning an array of encountered errors, or\n * an empty array if no errors were encountered and the Schema is valid.\n */\n\nfunction validateSchema(schema) {\n  // First check to ensure the provided value is in fact a GraphQLSchema.\n  (0,_schema_mjs__WEBPACK_IMPORTED_MODULE_0__.assertSchema)(schema); // If this Schema has already been validated, return the previous results.\n\n  if (schema.__validationErrors) {\n    return schema.__validationErrors;\n  } // Validate the schema, producing a list of errors.\n\n  const context = new SchemaValidationContext(schema);\n  validateRootTypes(context);\n  validateDirectives(context);\n  validateTypes(context); // Persist the results of validation before returning to ensure validation\n  // does not run multiple times for this schema.\n\n  const errors = context.getErrors();\n  schema.__validationErrors = errors;\n  return errors;\n}\n/**\n * Utility function which asserts a schema is valid by throwing an error if\n * it is invalid.\n */\n\nfunction assertValidSchema(schema) {\n  const errors = validateSchema(schema);\n  if (errors.length !== 0) {\n    throw new Error(errors.map(error => error.message).join('\\n\\n'));\n  }\n}\nclass SchemaValidationContext {\n  constructor(schema) {\n    this._errors = [];\n    this.schema = schema;\n  }\n  reportError(message, nodes) {\n    const _nodes = Array.isArray(nodes) ? nodes.filter(Boolean) : nodes;\n    this._errors.push(new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_1__.GraphQLError(message, {\n      nodes: _nodes\n    }));\n  }\n  getErrors() {\n    return this._errors;\n  }\n}\nfunction validateRootTypes(context) {\n  const schema = context.schema;\n  const queryType = schema.getQueryType();\n  if (!queryType) {\n    context.reportError('Query root type must be provided.', schema.astNode);\n  } else if (!(0,_definition_mjs__WEBPACK_IMPORTED_MODULE_2__.isObjectType)(queryType)) {\n    var _getOperationTypeNode;\n    context.reportError(`Query root type must be Object type, it cannot be ${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_3__.inspect)(queryType)}.`, (_getOperationTypeNode = getOperationTypeNode(schema, _language_ast_mjs__WEBPACK_IMPORTED_MODULE_4__.OperationTypeNode.QUERY)) !== null && _getOperationTypeNode !== void 0 ? _getOperationTypeNode : queryType.astNode);\n  }\n  const mutationType = schema.getMutationType();\n  if (mutationType && !(0,_definition_mjs__WEBPACK_IMPORTED_MODULE_2__.isObjectType)(mutationType)) {\n    var _getOperationTypeNode2;\n    context.reportError('Mutation root type must be Object type if provided, it cannot be ' + `${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_3__.inspect)(mutationType)}.`, (_getOperationTypeNode2 = getOperationTypeNode(schema, _language_ast_mjs__WEBPACK_IMPORTED_MODULE_4__.OperationTypeNode.MUTATION)) !== null && _getOperationTypeNode2 !== void 0 ? _getOperationTypeNode2 : mutationType.astNode);\n  }\n  const subscriptionType = schema.getSubscriptionType();\n  if (subscriptionType && !(0,_definition_mjs__WEBPACK_IMPORTED_MODULE_2__.isObjectType)(subscriptionType)) {\n    var _getOperationTypeNode3;\n    context.reportError('Subscription root type must be Object type if provided, it cannot be ' + `${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_3__.inspect)(subscriptionType)}.`, (_getOperationTypeNode3 = getOperationTypeNode(schema, _language_ast_mjs__WEBPACK_IMPORTED_MODULE_4__.OperationTypeNode.SUBSCRIPTION)) !== null && _getOperationTypeNode3 !== void 0 ? _getOperationTypeNode3 : subscriptionType.astNode);\n  }\n}\nfunction getOperationTypeNode(schema, operation) {\n  var _flatMap$find;\n  return (_flatMap$find = [schema.astNode, ...schema.extensionASTNodes].flatMap(\n  // FIXME: https://github.com/graphql/graphql-js/issues/2203\n  schemaNode => {\n    var _schemaNode$operation;\n    return /* c8 ignore next */(\n      (_schemaNode$operation = schemaNode === null || schemaNode === void 0 ? void 0 : schemaNode.operationTypes) !== null && _schemaNode$operation !== void 0 ? _schemaNode$operation : []\n    );\n  }).find(operationNode => operationNode.operation === operation)) === null || _flatMap$find === void 0 ? void 0 : _flatMap$find.type;\n}\nfunction validateDirectives(context) {\n  for (const directive of context.schema.getDirectives()) {\n    // Ensure all directives are in fact GraphQL directives.\n    if (!(0,_directives_mjs__WEBPACK_IMPORTED_MODULE_5__.isDirective)(directive)) {\n      context.reportError(`Expected directive but got: ${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_3__.inspect)(directive)}.`, directive === null || directive === void 0 ? void 0 : directive.astNode);\n      continue;\n    } // Ensure they are named correctly.\n\n    validateName(context, directive); // TODO: Ensure proper locations.\n    // Ensure the arguments are valid.\n\n    for (const arg of directive.args) {\n      // Ensure they are named correctly.\n      validateName(context, arg); // Ensure the type is an input type.\n\n      if (!(0,_definition_mjs__WEBPACK_IMPORTED_MODULE_2__.isInputType)(arg.type)) {\n        context.reportError(`The type of @${directive.name}(${arg.name}:) must be Input Type ` + `but got: ${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_3__.inspect)(arg.type)}.`, arg.astNode);\n      }\n      if ((0,_definition_mjs__WEBPACK_IMPORTED_MODULE_2__.isRequiredArgument)(arg) && arg.deprecationReason != null) {\n        var _arg$astNode;\n        context.reportError(`Required argument @${directive.name}(${arg.name}:) cannot be deprecated.`, [getDeprecatedDirectiveNode(arg.astNode), (_arg$astNode = arg.astNode) === null || _arg$astNode === void 0 ? void 0 : _arg$astNode.type]);\n      }\n    }\n  }\n}\nfunction validateName(context, node) {\n  // Ensure names are valid, however introspection types opt out.\n  if (node.name.startsWith('__')) {\n    context.reportError(`Name \"${node.name}\" must not begin with \"__\", which is reserved by GraphQL introspection.`, node.astNode);\n  }\n}\nfunction validateTypes(context) {\n  const validateInputObjectCircularRefs = createInputObjectCircularRefsValidator(context);\n  const typeMap = context.schema.getTypeMap();\n  for (const type of Object.values(typeMap)) {\n    // Ensure all provided types are in fact GraphQL type.\n    if (!(0,_definition_mjs__WEBPACK_IMPORTED_MODULE_2__.isNamedType)(type)) {\n      context.reportError(`Expected GraphQL named type but got: ${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_3__.inspect)(type)}.`, type.astNode);\n      continue;\n    } // Ensure it is named correctly (excluding introspection types).\n\n    if (!(0,_introspection_mjs__WEBPACK_IMPORTED_MODULE_6__.isIntrospectionType)(type)) {\n      validateName(context, type);\n    }\n    if ((0,_definition_mjs__WEBPACK_IMPORTED_MODULE_2__.isObjectType)(type)) {\n      // Ensure fields are valid\n      validateFields(context, type); // Ensure objects implement the interfaces they claim to.\n\n      validateInterfaces(context, type);\n    } else if ((0,_definition_mjs__WEBPACK_IMPORTED_MODULE_2__.isInterfaceType)(type)) {\n      // Ensure fields are valid.\n      validateFields(context, type); // Ensure interfaces implement the interfaces they claim to.\n\n      validateInterfaces(context, type);\n    } else if ((0,_definition_mjs__WEBPACK_IMPORTED_MODULE_2__.isUnionType)(type)) {\n      // Ensure Unions include valid member types.\n      validateUnionMembers(context, type);\n    } else if ((0,_definition_mjs__WEBPACK_IMPORTED_MODULE_2__.isEnumType)(type)) {\n      // Ensure Enums have valid values.\n      validateEnumValues(context, type);\n    } else if ((0,_definition_mjs__WEBPACK_IMPORTED_MODULE_2__.isInputObjectType)(type)) {\n      // Ensure Input Object fields are valid.\n      validateInputFields(context, type); // Ensure Input Objects do not contain non-nullable circular references\n\n      validateInputObjectCircularRefs(type);\n    }\n  }\n}\nfunction validateFields(context, type) {\n  const fields = Object.values(type.getFields()); // Objects and Interfaces both must define one or more fields.\n\n  if (fields.length === 0) {\n    context.reportError(`Type ${type.name} must define one or more fields.`, [type.astNode, ...type.extensionASTNodes]);\n  }\n  for (const field of fields) {\n    // Ensure they are named correctly.\n    validateName(context, field); // Ensure the type is an output type\n\n    if (!(0,_definition_mjs__WEBPACK_IMPORTED_MODULE_2__.isOutputType)(field.type)) {\n      var _field$astNode;\n      context.reportError(`The type of ${type.name}.${field.name} must be Output Type ` + `but got: ${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_3__.inspect)(field.type)}.`, (_field$astNode = field.astNode) === null || _field$astNode === void 0 ? void 0 : _field$astNode.type);\n    } // Ensure the arguments are valid\n\n    for (const arg of field.args) {\n      const argName = arg.name; // Ensure they are named correctly.\n\n      validateName(context, arg); // Ensure the type is an input type\n\n      if (!(0,_definition_mjs__WEBPACK_IMPORTED_MODULE_2__.isInputType)(arg.type)) {\n        var _arg$astNode2;\n        context.reportError(`The type of ${type.name}.${field.name}(${argName}:) must be Input ` + `Type but got: ${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_3__.inspect)(arg.type)}.`, (_arg$astNode2 = arg.astNode) === null || _arg$astNode2 === void 0 ? void 0 : _arg$astNode2.type);\n      }\n      if ((0,_definition_mjs__WEBPACK_IMPORTED_MODULE_2__.isRequiredArgument)(arg) && arg.deprecationReason != null) {\n        var _arg$astNode3;\n        context.reportError(`Required argument ${type.name}.${field.name}(${argName}:) cannot be deprecated.`, [getDeprecatedDirectiveNode(arg.astNode), (_arg$astNode3 = arg.astNode) === null || _arg$astNode3 === void 0 ? void 0 : _arg$astNode3.type]);\n      }\n    }\n  }\n}\nfunction validateInterfaces(context, type) {\n  const ifaceTypeNames = Object.create(null);\n  for (const iface of type.getInterfaces()) {\n    if (!(0,_definition_mjs__WEBPACK_IMPORTED_MODULE_2__.isInterfaceType)(iface)) {\n      context.reportError(`Type ${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_3__.inspect)(type)} must only implement Interface types, ` + `it cannot implement ${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_3__.inspect)(iface)}.`, getAllImplementsInterfaceNodes(type, iface));\n      continue;\n    }\n    if (type === iface) {\n      context.reportError(`Type ${type.name} cannot implement itself because it would create a circular reference.`, getAllImplementsInterfaceNodes(type, iface));\n      continue;\n    }\n    if (ifaceTypeNames[iface.name]) {\n      context.reportError(`Type ${type.name} can only implement ${iface.name} once.`, getAllImplementsInterfaceNodes(type, iface));\n      continue;\n    }\n    ifaceTypeNames[iface.name] = true;\n    validateTypeImplementsAncestors(context, type, iface);\n    validateTypeImplementsInterface(context, type, iface);\n  }\n}\nfunction validateTypeImplementsInterface(context, type, iface) {\n  const typeFieldMap = type.getFields(); // Assert each interface field is implemented.\n\n  for (const ifaceField of Object.values(iface.getFields())) {\n    const fieldName = ifaceField.name;\n    const typeField = typeFieldMap[fieldName]; // Assert interface field exists on type.\n\n    if (!typeField) {\n      context.reportError(`Interface field ${iface.name}.${fieldName} expected but ${type.name} does not provide it.`, [ifaceField.astNode, type.astNode, ...type.extensionASTNodes]);\n      continue;\n    } // Assert interface field type is satisfied by type field type, by being\n    // a valid subtype. (covariant)\n\n    if (!(0,_utilities_typeComparators_mjs__WEBPACK_IMPORTED_MODULE_7__.isTypeSubTypeOf)(context.schema, typeField.type, ifaceField.type)) {\n      var _ifaceField$astNode, _typeField$astNode;\n      context.reportError(`Interface field ${iface.name}.${fieldName} expects type ` + `${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_3__.inspect)(ifaceField.type)} but ${type.name}.${fieldName} ` + `is type ${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_3__.inspect)(typeField.type)}.`, [(_ifaceField$astNode = ifaceField.astNode) === null || _ifaceField$astNode === void 0 ? void 0 : _ifaceField$astNode.type, (_typeField$astNode = typeField.astNode) === null || _typeField$astNode === void 0 ? void 0 : _typeField$astNode.type]);\n    } // Assert each interface field arg is implemented.\n\n    for (const ifaceArg of ifaceField.args) {\n      const argName = ifaceArg.name;\n      const typeArg = typeField.args.find(arg => arg.name === argName); // Assert interface field arg exists on object field.\n\n      if (!typeArg) {\n        context.reportError(`Interface field argument ${iface.name}.${fieldName}(${argName}:) expected but ${type.name}.${fieldName} does not provide it.`, [ifaceArg.astNode, typeField.astNode]);\n        continue;\n      } // Assert interface field arg type matches object field arg type.\n      // (invariant)\n      // TODO: change to contravariant?\n\n      if (!(0,_utilities_typeComparators_mjs__WEBPACK_IMPORTED_MODULE_7__.isEqualType)(ifaceArg.type, typeArg.type)) {\n        var _ifaceArg$astNode, _typeArg$astNode;\n        context.reportError(`Interface field argument ${iface.name}.${fieldName}(${argName}:) ` + `expects type ${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_3__.inspect)(ifaceArg.type)} but ` + `${type.name}.${fieldName}(${argName}:) is type ` + `${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_3__.inspect)(typeArg.type)}.`, [(_ifaceArg$astNode = ifaceArg.astNode) === null || _ifaceArg$astNode === void 0 ? void 0 : _ifaceArg$astNode.type, (_typeArg$astNode = typeArg.astNode) === null || _typeArg$astNode === void 0 ? void 0 : _typeArg$astNode.type]);\n      } // TODO: validate default values?\n    } // Assert additional arguments must not be required.\n\n    for (const typeArg of typeField.args) {\n      const argName = typeArg.name;\n      const ifaceArg = ifaceField.args.find(arg => arg.name === argName);\n      if (!ifaceArg && (0,_definition_mjs__WEBPACK_IMPORTED_MODULE_2__.isRequiredArgument)(typeArg)) {\n        context.reportError(`Object field ${type.name}.${fieldName} includes required argument ${argName} that is missing from the Interface field ${iface.name}.${fieldName}.`, [typeArg.astNode, ifaceField.astNode]);\n      }\n    }\n  }\n}\nfunction validateTypeImplementsAncestors(context, type, iface) {\n  const ifaceInterfaces = type.getInterfaces();\n  for (const transitive of iface.getInterfaces()) {\n    if (!ifaceInterfaces.includes(transitive)) {\n      context.reportError(transitive === type ? `Type ${type.name} cannot implement ${iface.name} because it would create a circular reference.` : `Type ${type.name} must implement ${transitive.name} because it is implemented by ${iface.name}.`, [...getAllImplementsInterfaceNodes(iface, transitive), ...getAllImplementsInterfaceNodes(type, iface)]);\n    }\n  }\n}\nfunction validateUnionMembers(context, union) {\n  const memberTypes = union.getTypes();\n  if (memberTypes.length === 0) {\n    context.reportError(`Union type ${union.name} must define one or more member types.`, [union.astNode, ...union.extensionASTNodes]);\n  }\n  const includedTypeNames = Object.create(null);\n  for (const memberType of memberTypes) {\n    if (includedTypeNames[memberType.name]) {\n      context.reportError(`Union type ${union.name} can only include type ${memberType.name} once.`, getUnionMemberTypeNodes(union, memberType.name));\n      continue;\n    }\n    includedTypeNames[memberType.name] = true;\n    if (!(0,_definition_mjs__WEBPACK_IMPORTED_MODULE_2__.isObjectType)(memberType)) {\n      context.reportError(`Union type ${union.name} can only include Object types, ` + `it cannot include ${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_3__.inspect)(memberType)}.`, getUnionMemberTypeNodes(union, String(memberType)));\n    }\n  }\n}\nfunction validateEnumValues(context, enumType) {\n  const enumValues = enumType.getValues();\n  if (enumValues.length === 0) {\n    context.reportError(`Enum type ${enumType.name} must define one or more values.`, [enumType.astNode, ...enumType.extensionASTNodes]);\n  }\n  for (const enumValue of enumValues) {\n    // Ensure valid name.\n    validateName(context, enumValue);\n  }\n}\nfunction validateInputFields(context, inputObj) {\n  const fields = Object.values(inputObj.getFields());\n  if (fields.length === 0) {\n    context.reportError(`Input Object type ${inputObj.name} must define one or more fields.`, [inputObj.astNode, ...inputObj.extensionASTNodes]);\n  } // Ensure the arguments are valid\n\n  for (const field of fields) {\n    // Ensure they are named correctly.\n    validateName(context, field); // Ensure the type is an input type\n\n    if (!(0,_definition_mjs__WEBPACK_IMPORTED_MODULE_2__.isInputType)(field.type)) {\n      var _field$astNode2;\n      context.reportError(`The type of ${inputObj.name}.${field.name} must be Input Type ` + `but got: ${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_3__.inspect)(field.type)}.`, (_field$astNode2 = field.astNode) === null || _field$astNode2 === void 0 ? void 0 : _field$astNode2.type);\n    }\n    if ((0,_definition_mjs__WEBPACK_IMPORTED_MODULE_2__.isRequiredInputField)(field) && field.deprecationReason != null) {\n      var _field$astNode3;\n      context.reportError(`Required input field ${inputObj.name}.${field.name} cannot be deprecated.`, [getDeprecatedDirectiveNode(field.astNode), (_field$astNode3 = field.astNode) === null || _field$astNode3 === void 0 ? void 0 : _field$astNode3.type]);\n    }\n  }\n}\nfunction createInputObjectCircularRefsValidator(context) {\n  // Modified copy of algorithm from 'src/validation/rules/NoFragmentCycles.js'.\n  // Tracks already visited types to maintain O(N) and to ensure that cycles\n  // are not redundantly reported.\n  const visitedTypes = Object.create(null); // Array of types nodes used to produce meaningful errors\n\n  const fieldPath = []; // Position in the type path\n\n  const fieldPathIndexByTypeName = Object.create(null);\n  return detectCycleRecursive; // This does a straight-forward DFS to find cycles.\n  // It does not terminate when a cycle was found but continues to explore\n  // the graph to find all possible cycles.\n\n  function detectCycleRecursive(inputObj) {\n    if (visitedTypes[inputObj.name]) {\n      return;\n    }\n    visitedTypes[inputObj.name] = true;\n    fieldPathIndexByTypeName[inputObj.name] = fieldPath.length;\n    const fields = Object.values(inputObj.getFields());\n    for (const field of fields) {\n      if ((0,_definition_mjs__WEBPACK_IMPORTED_MODULE_2__.isNonNullType)(field.type) && (0,_definition_mjs__WEBPACK_IMPORTED_MODULE_2__.isInputObjectType)(field.type.ofType)) {\n        const fieldType = field.type.ofType;\n        const cycleIndex = fieldPathIndexByTypeName[fieldType.name];\n        fieldPath.push(field);\n        if (cycleIndex === undefined) {\n          detectCycleRecursive(fieldType);\n        } else {\n          const cyclePath = fieldPath.slice(cycleIndex);\n          const pathStr = cyclePath.map(fieldObj => fieldObj.name).join('.');\n          context.reportError(`Cannot reference Input Object \"${fieldType.name}\" within itself through a series of non-null fields: \"${pathStr}\".`, cyclePath.map(fieldObj => fieldObj.astNode));\n        }\n        fieldPath.pop();\n      }\n    }\n    fieldPathIndexByTypeName[inputObj.name] = undefined;\n  }\n}\nfunction getAllImplementsInterfaceNodes(type, iface) {\n  const {\n    astNode,\n    extensionASTNodes\n  } = type;\n  const nodes = astNode != null ? [astNode, ...extensionASTNodes] : extensionASTNodes; // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n  return nodes.flatMap(typeNode => {\n    var _typeNode$interfaces;\n    return /* c8 ignore next */(\n      (_typeNode$interfaces = typeNode.interfaces) !== null && _typeNode$interfaces !== void 0 ? _typeNode$interfaces : []\n    );\n  }).filter(ifaceNode => ifaceNode.name.value === iface.name);\n}\nfunction getUnionMemberTypeNodes(union, typeName) {\n  const {\n    astNode,\n    extensionASTNodes\n  } = union;\n  const nodes = astNode != null ? [astNode, ...extensionASTNodes] : extensionASTNodes; // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n  return nodes.flatMap(unionNode => {\n    var _unionNode$types;\n    return /* c8 ignore next */(\n      (_unionNode$types = unionNode.types) !== null && _unionNode$types !== void 0 ? _unionNode$types : []\n    );\n  }).filter(typeNode => typeNode.name.value === typeName);\n}\nfunction getDeprecatedDirectiveNode(definitionNode) {\n  var _definitionNode$direc;\n  return definitionNode === null || definitionNode === void 0 ? void 0 : (_definitionNode$direc = definitionNode.directives) === null || _definitionNode$direc === void 0 ? void 0 : _definitionNode$direc.find(node => node.name.value === _directives_mjs__WEBPACK_IMPORTED_MODULE_5__.GraphQLDeprecatedDirective.name);\n}\n\n//# sourceURL=webpack://my-app/../../graphql/type/validate.mjs?");

/***/ }),

/***/ "../../graphql/utilities/TypeInfo.mjs":
/*!********************************************!*\
  !*** ../../graphql/utilities/TypeInfo.mjs ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TypeInfo: () => (/* binding */ TypeInfo),\n/* harmony export */   visitWithTypeInfo: () => (/* binding */ visitWithTypeInfo)\n/* harmony export */ });\n/* harmony import */ var _language_ast_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../language/ast.mjs */ \"../../graphql/language/ast.mjs\");\n/* harmony import */ var _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../language/kinds.mjs */ \"../../graphql/language/kinds.mjs\");\n/* harmony import */ var _language_visitor_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../language/visitor.mjs */ \"../../graphql/language/visitor.mjs\");\n/* harmony import */ var _type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../type/definition.mjs */ \"../../graphql/type/definition.mjs\");\n/* harmony import */ var _type_introspection_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../type/introspection.mjs */ \"../../graphql/type/introspection.mjs\");\n/* harmony import */ var _typeFromAST_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./typeFromAST.mjs */ \"../../graphql/utilities/typeFromAST.mjs\");\n\n\n\n\n\n\n/**\n * TypeInfo is a utility class which, given a GraphQL schema, can keep track\n * of the current field and type definitions at any point in a GraphQL document\n * AST during a recursive descent by calling `enter(node)` and `leave(node)`.\n */\n\nclass TypeInfo {\n  constructor(schema,\n  /**\n   * Initial type may be provided in rare cases to facilitate traversals\n   *  beginning somewhere other than documents.\n   */\n  initialType, /** @deprecated will be removed in 17.0.0 */\n  getFieldDefFn) {\n    this._schema = schema;\n    this._typeStack = [];\n    this._parentTypeStack = [];\n    this._inputTypeStack = [];\n    this._fieldDefStack = [];\n    this._defaultValueStack = [];\n    this._directive = null;\n    this._argument = null;\n    this._enumValue = null;\n    this._getFieldDef = getFieldDefFn !== null && getFieldDefFn !== void 0 ? getFieldDefFn : getFieldDef;\n    if (initialType) {\n      if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isInputType)(initialType)) {\n        this._inputTypeStack.push(initialType);\n      }\n      if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isCompositeType)(initialType)) {\n        this._parentTypeStack.push(initialType);\n      }\n      if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isOutputType)(initialType)) {\n        this._typeStack.push(initialType);\n      }\n    }\n  }\n  get [Symbol.toStringTag]() {\n    return 'TypeInfo';\n  }\n  getType() {\n    if (this._typeStack.length > 0) {\n      return this._typeStack[this._typeStack.length - 1];\n    }\n  }\n  getParentType() {\n    if (this._parentTypeStack.length > 0) {\n      return this._parentTypeStack[this._parentTypeStack.length - 1];\n    }\n  }\n  getInputType() {\n    if (this._inputTypeStack.length > 0) {\n      return this._inputTypeStack[this._inputTypeStack.length - 1];\n    }\n  }\n  getParentInputType() {\n    if (this._inputTypeStack.length > 1) {\n      return this._inputTypeStack[this._inputTypeStack.length - 2];\n    }\n  }\n  getFieldDef() {\n    if (this._fieldDefStack.length > 0) {\n      return this._fieldDefStack[this._fieldDefStack.length - 1];\n    }\n  }\n  getDefaultValue() {\n    if (this._defaultValueStack.length > 0) {\n      return this._defaultValueStack[this._defaultValueStack.length - 1];\n    }\n  }\n  getDirective() {\n    return this._directive;\n  }\n  getArgument() {\n    return this._argument;\n  }\n  getEnumValue() {\n    return this._enumValue;\n  }\n  enter(node) {\n    const schema = this._schema; // Note: many of the types below are explicitly typed as \"unknown\" to drop\n    // any assumptions of a valid schema to ensure runtime types are properly\n    // checked before continuing since TypeInfo is used as part of validation\n    // which occurs before guarantees of schema and document validity.\n\n    switch (node.kind) {\n      case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.SELECTION_SET:\n        {\n          const namedType = (0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.getNamedType)(this.getType());\n          this._parentTypeStack.push((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isCompositeType)(namedType) ? namedType : undefined);\n          break;\n        }\n      case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.FIELD:\n        {\n          const parentType = this.getParentType();\n          let fieldDef;\n          let fieldType;\n          if (parentType) {\n            fieldDef = this._getFieldDef(schema, parentType, node);\n            if (fieldDef) {\n              fieldType = fieldDef.type;\n            }\n          }\n          this._fieldDefStack.push(fieldDef);\n          this._typeStack.push((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isOutputType)(fieldType) ? fieldType : undefined);\n          break;\n        }\n      case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.DIRECTIVE:\n        this._directive = schema.getDirective(node.name.value);\n        break;\n      case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.OPERATION_DEFINITION:\n        {\n          const rootType = schema.getRootType(node.operation);\n          this._typeStack.push((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isObjectType)(rootType) ? rootType : undefined);\n          break;\n        }\n      case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.INLINE_FRAGMENT:\n      case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.FRAGMENT_DEFINITION:\n        {\n          const typeConditionAST = node.typeCondition;\n          const outputType = typeConditionAST ? (0,_typeFromAST_mjs__WEBPACK_IMPORTED_MODULE_2__.typeFromAST)(schema, typeConditionAST) : (0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.getNamedType)(this.getType());\n          this._typeStack.push((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isOutputType)(outputType) ? outputType : undefined);\n          break;\n        }\n      case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.VARIABLE_DEFINITION:\n        {\n          const inputType = (0,_typeFromAST_mjs__WEBPACK_IMPORTED_MODULE_2__.typeFromAST)(schema, node.type);\n          this._inputTypeStack.push((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isInputType)(inputType) ? inputType : undefined);\n          break;\n        }\n      case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.ARGUMENT:\n        {\n          var _this$getDirective;\n          let argDef;\n          let argType;\n          const fieldOrDirective = (_this$getDirective = this.getDirective()) !== null && _this$getDirective !== void 0 ? _this$getDirective : this.getFieldDef();\n          if (fieldOrDirective) {\n            argDef = fieldOrDirective.args.find(arg => arg.name === node.name.value);\n            if (argDef) {\n              argType = argDef.type;\n            }\n          }\n          this._argument = argDef;\n          this._defaultValueStack.push(argDef ? argDef.defaultValue : undefined);\n          this._inputTypeStack.push((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isInputType)(argType) ? argType : undefined);\n          break;\n        }\n      case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.LIST:\n        {\n          const listType = (0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.getNullableType)(this.getInputType());\n          const itemType = (0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isListType)(listType) ? listType.ofType : listType; // List positions never have a default value.\n\n          this._defaultValueStack.push(undefined);\n          this._inputTypeStack.push((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isInputType)(itemType) ? itemType : undefined);\n          break;\n        }\n      case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.OBJECT_FIELD:\n        {\n          const objectType = (0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.getNamedType)(this.getInputType());\n          let inputFieldType;\n          let inputField;\n          if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isInputObjectType)(objectType)) {\n            inputField = objectType.getFields()[node.name.value];\n            if (inputField) {\n              inputFieldType = inputField.type;\n            }\n          }\n          this._defaultValueStack.push(inputField ? inputField.defaultValue : undefined);\n          this._inputTypeStack.push((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isInputType)(inputFieldType) ? inputFieldType : undefined);\n          break;\n        }\n      case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.ENUM:\n        {\n          const enumType = (0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.getNamedType)(this.getInputType());\n          let enumValue;\n          if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isEnumType)(enumType)) {\n            enumValue = enumType.getValue(node.value);\n          }\n          this._enumValue = enumValue;\n          break;\n        }\n      default: // Ignore other nodes\n    }\n  }\n  leave(node) {\n    switch (node.kind) {\n      case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.SELECTION_SET:\n        this._parentTypeStack.pop();\n        break;\n      case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.FIELD:\n        this._fieldDefStack.pop();\n        this._typeStack.pop();\n        break;\n      case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.DIRECTIVE:\n        this._directive = null;\n        break;\n      case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.OPERATION_DEFINITION:\n      case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.INLINE_FRAGMENT:\n      case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.FRAGMENT_DEFINITION:\n        this._typeStack.pop();\n        break;\n      case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.VARIABLE_DEFINITION:\n        this._inputTypeStack.pop();\n        break;\n      case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.ARGUMENT:\n        this._argument = null;\n        this._defaultValueStack.pop();\n        this._inputTypeStack.pop();\n        break;\n      case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.LIST:\n      case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.OBJECT_FIELD:\n        this._defaultValueStack.pop();\n        this._inputTypeStack.pop();\n        break;\n      case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.ENUM:\n        this._enumValue = null;\n        break;\n      default: // Ignore other nodes\n    }\n  }\n}\n\n/**\n * Not exactly the same as the executor's definition of getFieldDef, in this\n * statically evaluated environment we do not always have an Object type,\n * and need to handle Interface and Union types.\n */\nfunction getFieldDef(schema, parentType, fieldNode) {\n  const name = fieldNode.name.value;\n  if (name === _type_introspection_mjs__WEBPACK_IMPORTED_MODULE_3__.SchemaMetaFieldDef.name && schema.getQueryType() === parentType) {\n    return _type_introspection_mjs__WEBPACK_IMPORTED_MODULE_3__.SchemaMetaFieldDef;\n  }\n  if (name === _type_introspection_mjs__WEBPACK_IMPORTED_MODULE_3__.TypeMetaFieldDef.name && schema.getQueryType() === parentType) {\n    return _type_introspection_mjs__WEBPACK_IMPORTED_MODULE_3__.TypeMetaFieldDef;\n  }\n  if (name === _type_introspection_mjs__WEBPACK_IMPORTED_MODULE_3__.TypeNameMetaFieldDef.name && (0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isCompositeType)(parentType)) {\n    return _type_introspection_mjs__WEBPACK_IMPORTED_MODULE_3__.TypeNameMetaFieldDef;\n  }\n  if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isObjectType)(parentType) || (0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterfaceType)(parentType)) {\n    return parentType.getFields()[name];\n  }\n}\n/**\n * Creates a new visitor instance which maintains a provided TypeInfo instance\n * along with visiting visitor.\n */\n\nfunction visitWithTypeInfo(typeInfo, visitor) {\n  return {\n    enter(...args) {\n      const node = args[0];\n      typeInfo.enter(node);\n      const fn = (0,_language_visitor_mjs__WEBPACK_IMPORTED_MODULE_4__.getEnterLeaveForKind)(visitor, node.kind).enter;\n      if (fn) {\n        const result = fn.apply(visitor, args);\n        if (result !== undefined) {\n          typeInfo.leave(node);\n          if ((0,_language_ast_mjs__WEBPACK_IMPORTED_MODULE_5__.isNode)(result)) {\n            typeInfo.enter(result);\n          }\n        }\n        return result;\n      }\n    },\n    leave(...args) {\n      const node = args[0];\n      const fn = (0,_language_visitor_mjs__WEBPACK_IMPORTED_MODULE_4__.getEnterLeaveForKind)(visitor, node.kind).leave;\n      let result;\n      if (fn) {\n        result = fn.apply(visitor, args);\n      }\n      typeInfo.leave(node);\n      return result;\n    }\n  };\n}\n\n//# sourceURL=webpack://my-app/../../graphql/utilities/TypeInfo.mjs?");

/***/ }),

/***/ "../../graphql/utilities/assertValidName.mjs":
/*!***************************************************!*\
  !*** ../../graphql/utilities/assertValidName.mjs ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assertValidName: () => (/* binding */ assertValidName),\n/* harmony export */   isValidNameError: () => (/* binding */ isValidNameError)\n/* harmony export */ });\n/* harmony import */ var _jsutils_devAssert_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../jsutils/devAssert.mjs */ \"../../graphql/jsutils/devAssert.mjs\");\n/* harmony import */ var _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/GraphQLError.mjs */ \"../../graphql/error/GraphQLError.mjs\");\n/* harmony import */ var _type_assertName_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../type/assertName.mjs */ \"../../graphql/type/assertName.mjs\");\n\n\n\n/* c8 ignore start */\n\n/**\n * Upholds the spec rules about naming.\n * @deprecated Please use `assertName` instead. Will be removed in v17\n */\n\nfunction assertValidName(name) {\n  const error = isValidNameError(name);\n  if (error) {\n    throw error;\n  }\n  return name;\n}\n/**\n * Returns an Error if a name is invalid.\n * @deprecated Please use `assertName` instead. Will be removed in v17\n */\n\nfunction isValidNameError(name) {\n  typeof name === 'string' || (0,_jsutils_devAssert_mjs__WEBPACK_IMPORTED_MODULE_0__.devAssert)(false, 'Expected name to be a string.');\n  if (name.startsWith('__')) {\n    return new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_1__.GraphQLError(`Name \"${name}\" must not begin with \"__\", which is reserved by GraphQL introspection.`);\n  }\n  try {\n    (0,_type_assertName_mjs__WEBPACK_IMPORTED_MODULE_2__.assertName)(name);\n  } catch (error) {\n    return error;\n  }\n}\n/* c8 ignore stop */\n\n//# sourceURL=webpack://my-app/../../graphql/utilities/assertValidName.mjs?");

/***/ }),

/***/ "../../graphql/utilities/astFromValue.mjs":
/*!************************************************!*\
  !*** ../../graphql/utilities/astFromValue.mjs ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   astFromValue: () => (/* binding */ astFromValue)\n/* harmony export */ });\n/* harmony import */ var _jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../jsutils/inspect.mjs */ \"../../graphql/jsutils/inspect.mjs\");\n/* harmony import */ var _jsutils_invariant_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../jsutils/invariant.mjs */ \"../../graphql/jsutils/invariant.mjs\");\n/* harmony import */ var _jsutils_isIterableObject_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../jsutils/isIterableObject.mjs */ \"../../graphql/jsutils/isIterableObject.mjs\");\n/* harmony import */ var _jsutils_isObjectLike_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../jsutils/isObjectLike.mjs */ \"../../graphql/jsutils/isObjectLike.mjs\");\n/* harmony import */ var _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../language/kinds.mjs */ \"../../graphql/language/kinds.mjs\");\n/* harmony import */ var _type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../type/definition.mjs */ \"../../graphql/type/definition.mjs\");\n/* harmony import */ var _type_scalars_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../type/scalars.mjs */ \"../../graphql/type/scalars.mjs\");\n\n\n\n\n\n\n\n/**\n * Produces a GraphQL Value AST given a JavaScript object.\n * Function will match JavaScript/JSON values to GraphQL AST schema format\n * by using suggested GraphQLInputType. For example:\n *\n *     astFromValue(\"value\", GraphQLString)\n *\n * A GraphQL type must be provided, which will be used to interpret different\n * JavaScript values.\n *\n * | JSON Value    | GraphQL Value        |\n * | ------------- | -------------------- |\n * | Object        | Input Object         |\n * | Array         | List                 |\n * | Boolean       | Boolean              |\n * | String        | String / Enum Value  |\n * | Number        | Int / Float          |\n * | Unknown       | Enum Value           |\n * | null          | NullValue            |\n *\n */\n\nfunction astFromValue(value, type) {\n  if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isNonNullType)(type)) {\n    const astValue = astFromValue(value, type.ofType);\n    if ((astValue === null || astValue === void 0 ? void 0 : astValue.kind) === _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.NULL) {\n      return null;\n    }\n    return astValue;\n  } // only explicit null, not undefined, NaN\n\n  if (value === null) {\n    return {\n      kind: _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.NULL\n    };\n  } // undefined\n\n  if (value === undefined) {\n    return null;\n  } // Convert JavaScript array to GraphQL list. If the GraphQLType is a list, but\n  // the value is not an array, convert the value using the list's item type.\n\n  if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isListType)(type)) {\n    const itemType = type.ofType;\n    if ((0,_jsutils_isIterableObject_mjs__WEBPACK_IMPORTED_MODULE_2__.isIterableObject)(value)) {\n      const valuesNodes = [];\n      for (const item of value) {\n        const itemNode = astFromValue(item, itemType);\n        if (itemNode != null) {\n          valuesNodes.push(itemNode);\n        }\n      }\n      return {\n        kind: _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.LIST,\n        values: valuesNodes\n      };\n    }\n    return astFromValue(value, itemType);\n  } // Populate the fields of the input object by creating ASTs from each value\n  // in the JavaScript object according to the fields in the input type.\n\n  if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isInputObjectType)(type)) {\n    if (!(0,_jsutils_isObjectLike_mjs__WEBPACK_IMPORTED_MODULE_3__.isObjectLike)(value)) {\n      return null;\n    }\n    const fieldNodes = [];\n    for (const field of Object.values(type.getFields())) {\n      const fieldValue = astFromValue(value[field.name], field.type);\n      if (fieldValue) {\n        fieldNodes.push({\n          kind: _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.OBJECT_FIELD,\n          name: {\n            kind: _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.NAME,\n            value: field.name\n          },\n          value: fieldValue\n        });\n      }\n    }\n    return {\n      kind: _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.OBJECT,\n      fields: fieldNodes\n    };\n  }\n  if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isLeafType)(type)) {\n    // Since value is an internally represented value, it must be serialized\n    // to an externally represented value before converting into an AST.\n    const serialized = type.serialize(value);\n    if (serialized == null) {\n      return null;\n    } // Others serialize based on their corresponding JavaScript scalar types.\n\n    if (typeof serialized === 'boolean') {\n      return {\n        kind: _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.BOOLEAN,\n        value: serialized\n      };\n    } // JavaScript numbers can be Int or Float values.\n\n    if (typeof serialized === 'number' && Number.isFinite(serialized)) {\n      const stringNum = String(serialized);\n      return integerStringRegExp.test(stringNum) ? {\n        kind: _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.INT,\n        value: stringNum\n      } : {\n        kind: _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.FLOAT,\n        value: stringNum\n      };\n    }\n    if (typeof serialized === 'string') {\n      // Enum types use Enum literals.\n      if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isEnumType)(type)) {\n        return {\n          kind: _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.ENUM,\n          value: serialized\n        };\n      } // ID types can use Int literals.\n\n      if (type === _type_scalars_mjs__WEBPACK_IMPORTED_MODULE_4__.GraphQLID && integerStringRegExp.test(serialized)) {\n        return {\n          kind: _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.INT,\n          value: serialized\n        };\n      }\n      return {\n        kind: _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.STRING,\n        value: serialized\n      };\n    }\n    throw new TypeError(`Cannot convert value to AST: ${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_5__.inspect)(serialized)}.`);\n  }\n  /* c8 ignore next 3 */\n  // Not reachable, all possible types have been considered.\n\n   false || (0,_jsutils_invariant_mjs__WEBPACK_IMPORTED_MODULE_6__.invariant)(false, 'Unexpected input type: ' + (0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_5__.inspect)(type));\n}\n/**\n * IntValue:\n *   - NegativeSign? 0\n *   - NegativeSign? NonZeroDigit ( Digit+ )?\n */\n\nconst integerStringRegExp = /^-?(?:0|[1-9][0-9]*)$/;\n\n//# sourceURL=webpack://my-app/../../graphql/utilities/astFromValue.mjs?");

/***/ }),

/***/ "../../graphql/utilities/buildASTSchema.mjs":
/*!**************************************************!*\
  !*** ../../graphql/utilities/buildASTSchema.mjs ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildASTSchema: () => (/* binding */ buildASTSchema),\n/* harmony export */   buildSchema: () => (/* binding */ buildSchema)\n/* harmony export */ });\n/* harmony import */ var _jsutils_devAssert_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../jsutils/devAssert.mjs */ \"../../graphql/jsutils/devAssert.mjs\");\n/* harmony import */ var _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../language/kinds.mjs */ \"../../graphql/language/kinds.mjs\");\n/* harmony import */ var _language_parser_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../language/parser.mjs */ \"../../graphql/language/parser.mjs\");\n/* harmony import */ var _type_directives_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../type/directives.mjs */ \"../../graphql/type/directives.mjs\");\n/* harmony import */ var _type_schema_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../type/schema.mjs */ \"../../graphql/type/schema.mjs\");\n/* harmony import */ var _validation_validate_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../validation/validate.mjs */ \"../../graphql/validation/validate.mjs\");\n/* harmony import */ var _extendSchema_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./extendSchema.mjs */ \"../../graphql/utilities/extendSchema.mjs\");\n\n\n\n\n\n\n\n\n/**\n * This takes the ast of a schema document produced by the parse function in\n * src/language/parser.js.\n *\n * If no schema definition is provided, then it will look for types named Query,\n * Mutation and Subscription.\n *\n * Given that AST it constructs a GraphQLSchema. The resulting schema\n * has no resolve methods, so execution will use default resolvers.\n */\nfunction buildASTSchema(documentAST, options) {\n  documentAST != null && documentAST.kind === _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.DOCUMENT || (0,_jsutils_devAssert_mjs__WEBPACK_IMPORTED_MODULE_1__.devAssert)(false, 'Must provide valid Document AST.');\n  if ((options === null || options === void 0 ? void 0 : options.assumeValid) !== true && (options === null || options === void 0 ? void 0 : options.assumeValidSDL) !== true) {\n    (0,_validation_validate_mjs__WEBPACK_IMPORTED_MODULE_2__.assertValidSDL)(documentAST);\n  }\n  const emptySchemaConfig = {\n    description: undefined,\n    types: [],\n    directives: [],\n    extensions: Object.create(null),\n    extensionASTNodes: [],\n    assumeValid: false\n  };\n  const config = (0,_extendSchema_mjs__WEBPACK_IMPORTED_MODULE_3__.extendSchemaImpl)(emptySchemaConfig, documentAST, options);\n  if (config.astNode == null) {\n    for (const type of config.types) {\n      switch (type.name) {\n        // Note: While this could make early assertions to get the correctly\n        // typed values below, that would throw immediately while type system\n        // validation with validateSchema() will produce more actionable results.\n        case 'Query':\n          // @ts-expect-error validated in `validateSchema`\n          config.query = type;\n          break;\n        case 'Mutation':\n          // @ts-expect-error validated in `validateSchema`\n          config.mutation = type;\n          break;\n        case 'Subscription':\n          // @ts-expect-error validated in `validateSchema`\n          config.subscription = type;\n          break;\n      }\n    }\n  }\n  const directives = [...config.directives,\n  // If specified directives were not explicitly declared, add them.\n  ..._type_directives_mjs__WEBPACK_IMPORTED_MODULE_4__.specifiedDirectives.filter(stdDirective => config.directives.every(directive => directive.name !== stdDirective.name))];\n  return new _type_schema_mjs__WEBPACK_IMPORTED_MODULE_5__.GraphQLSchema({\n    ...config,\n    directives\n  });\n}\n/**\n * A helper function to build a GraphQLSchema directly from a source\n * document.\n */\n\nfunction buildSchema(source, options) {\n  const document = (0,_language_parser_mjs__WEBPACK_IMPORTED_MODULE_6__.parse)(source, {\n    noLocation: options === null || options === void 0 ? void 0 : options.noLocation,\n    allowLegacyFragmentVariables: options === null || options === void 0 ? void 0 : options.allowLegacyFragmentVariables\n  });\n  return buildASTSchema(document, {\n    assumeValidSDL: options === null || options === void 0 ? void 0 : options.assumeValidSDL,\n    assumeValid: options === null || options === void 0 ? void 0 : options.assumeValid\n  });\n}\n\n//# sourceURL=webpack://my-app/../../graphql/utilities/buildASTSchema.mjs?");

/***/ }),

/***/ "../../graphql/utilities/buildClientSchema.mjs":
/*!*****************************************************!*\
  !*** ../../graphql/utilities/buildClientSchema.mjs ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildClientSchema: () => (/* binding */ buildClientSchema)\n/* harmony export */ });\n/* harmony import */ var _jsutils_devAssert_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../jsutils/devAssert.mjs */ \"../../graphql/jsutils/devAssert.mjs\");\n/* harmony import */ var _jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../jsutils/inspect.mjs */ \"../../graphql/jsutils/inspect.mjs\");\n/* harmony import */ var _jsutils_isObjectLike_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../jsutils/isObjectLike.mjs */ \"../../graphql/jsutils/isObjectLike.mjs\");\n/* harmony import */ var _jsutils_keyValMap_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../jsutils/keyValMap.mjs */ \"../../graphql/jsutils/keyValMap.mjs\");\n/* harmony import */ var _language_parser_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../language/parser.mjs */ \"../../graphql/language/parser.mjs\");\n/* harmony import */ var _type_definition_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../type/definition.mjs */ \"../../graphql/type/definition.mjs\");\n/* harmony import */ var _type_directives_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../type/directives.mjs */ \"../../graphql/type/directives.mjs\");\n/* harmony import */ var _type_introspection_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../type/introspection.mjs */ \"../../graphql/type/introspection.mjs\");\n/* harmony import */ var _type_scalars_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../type/scalars.mjs */ \"../../graphql/type/scalars.mjs\");\n/* harmony import */ var _type_schema_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../type/schema.mjs */ \"../../graphql/type/schema.mjs\");\n/* harmony import */ var _valueFromAST_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./valueFromAST.mjs */ \"../../graphql/utilities/valueFromAST.mjs\");\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Build a GraphQLSchema for use by client tools.\n *\n * Given the result of a client running the introspection query, creates and\n * returns a GraphQLSchema instance which can be then used with all graphql-js\n * tools, but cannot be used to execute a query, as introspection does not\n * represent the \"resolver\", \"parse\" or \"serialize\" functions or any other\n * server-internal mechanisms.\n *\n * This function expects a complete introspection result. Don't forget to check\n * the \"errors\" field of a server response before calling this function.\n */\n\nfunction buildClientSchema(introspection, options) {\n  (0,_jsutils_isObjectLike_mjs__WEBPACK_IMPORTED_MODULE_0__.isObjectLike)(introspection) && (0,_jsutils_isObjectLike_mjs__WEBPACK_IMPORTED_MODULE_0__.isObjectLike)(introspection.__schema) || (0,_jsutils_devAssert_mjs__WEBPACK_IMPORTED_MODULE_1__.devAssert)(false, `Invalid or incomplete introspection result. Ensure that you are passing \"data\" property of introspection response and no \"errors\" was returned alongside: ${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_2__.inspect)(introspection)}.`); // Get the schema from the introspection result.\n\n  const schemaIntrospection = introspection.__schema; // Iterate through all types, getting the type definition for each.\n\n  const typeMap = (0,_jsutils_keyValMap_mjs__WEBPACK_IMPORTED_MODULE_3__.keyValMap)(schemaIntrospection.types, typeIntrospection => typeIntrospection.name, typeIntrospection => buildType(typeIntrospection)); // Include standard types only if they are used.\n\n  for (const stdType of [..._type_scalars_mjs__WEBPACK_IMPORTED_MODULE_4__.specifiedScalarTypes, ..._type_introspection_mjs__WEBPACK_IMPORTED_MODULE_5__.introspectionTypes]) {\n    if (typeMap[stdType.name]) {\n      typeMap[stdType.name] = stdType;\n    }\n  } // Get the root Query, Mutation, and Subscription types.\n\n  const queryType = schemaIntrospection.queryType ? getObjectType(schemaIntrospection.queryType) : null;\n  const mutationType = schemaIntrospection.mutationType ? getObjectType(schemaIntrospection.mutationType) : null;\n  const subscriptionType = schemaIntrospection.subscriptionType ? getObjectType(schemaIntrospection.subscriptionType) : null; // Get the directives supported by Introspection, assuming empty-set if\n  // directives were not queried for.\n\n  const directives = schemaIntrospection.directives ? schemaIntrospection.directives.map(buildDirective) : []; // Then produce and return a Schema with these types.\n\n  return new _type_schema_mjs__WEBPACK_IMPORTED_MODULE_6__.GraphQLSchema({\n    description: schemaIntrospection.description,\n    query: queryType,\n    mutation: mutationType,\n    subscription: subscriptionType,\n    types: Object.values(typeMap),\n    directives,\n    assumeValid: options === null || options === void 0 ? void 0 : options.assumeValid\n  }); // Given a type reference in introspection, return the GraphQLType instance.\n  // preferring cached instances before building new instances.\n\n  function getType(typeRef) {\n    if (typeRef.kind === _type_introspection_mjs__WEBPACK_IMPORTED_MODULE_5__.TypeKind.LIST) {\n      const itemRef = typeRef.ofType;\n      if (!itemRef) {\n        throw new Error('Decorated type deeper than introspection query.');\n      }\n      return new _type_definition_mjs__WEBPACK_IMPORTED_MODULE_7__.GraphQLList(getType(itemRef));\n    }\n    if (typeRef.kind === _type_introspection_mjs__WEBPACK_IMPORTED_MODULE_5__.TypeKind.NON_NULL) {\n      const nullableRef = typeRef.ofType;\n      if (!nullableRef) {\n        throw new Error('Decorated type deeper than introspection query.');\n      }\n      const nullableType = getType(nullableRef);\n      return new _type_definition_mjs__WEBPACK_IMPORTED_MODULE_7__.GraphQLNonNull((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_7__.assertNullableType)(nullableType));\n    }\n    return getNamedType(typeRef);\n  }\n  function getNamedType(typeRef) {\n    const typeName = typeRef.name;\n    if (!typeName) {\n      throw new Error(`Unknown type reference: ${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_2__.inspect)(typeRef)}.`);\n    }\n    const type = typeMap[typeName];\n    if (!type) {\n      throw new Error(`Invalid or incomplete schema, unknown type: ${typeName}. Ensure that a full introspection query is used in order to build a client schema.`);\n    }\n    return type;\n  }\n  function getObjectType(typeRef) {\n    return (0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_7__.assertObjectType)(getNamedType(typeRef));\n  }\n  function getInterfaceType(typeRef) {\n    return (0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_7__.assertInterfaceType)(getNamedType(typeRef));\n  } // Given a type's introspection result, construct the correct\n  // GraphQLType instance.\n\n  function buildType(type) {\n    // eslint-disable-next-line @typescript-eslint/prefer-optional-chain\n    if (type != null && type.name != null && type.kind != null) {\n      // FIXME: Properly type IntrospectionType, it's a breaking change so fix in v17\n      // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check\n      switch (type.kind) {\n        case _type_introspection_mjs__WEBPACK_IMPORTED_MODULE_5__.TypeKind.SCALAR:\n          return buildScalarDef(type);\n        case _type_introspection_mjs__WEBPACK_IMPORTED_MODULE_5__.TypeKind.OBJECT:\n          return buildObjectDef(type);\n        case _type_introspection_mjs__WEBPACK_IMPORTED_MODULE_5__.TypeKind.INTERFACE:\n          return buildInterfaceDef(type);\n        case _type_introspection_mjs__WEBPACK_IMPORTED_MODULE_5__.TypeKind.UNION:\n          return buildUnionDef(type);\n        case _type_introspection_mjs__WEBPACK_IMPORTED_MODULE_5__.TypeKind.ENUM:\n          return buildEnumDef(type);\n        case _type_introspection_mjs__WEBPACK_IMPORTED_MODULE_5__.TypeKind.INPUT_OBJECT:\n          return buildInputObjectDef(type);\n      }\n    }\n    const typeStr = (0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_2__.inspect)(type);\n    throw new Error(`Invalid or incomplete introspection result. Ensure that a full introspection query is used in order to build a client schema: ${typeStr}.`);\n  }\n  function buildScalarDef(scalarIntrospection) {\n    return new _type_definition_mjs__WEBPACK_IMPORTED_MODULE_7__.GraphQLScalarType({\n      name: scalarIntrospection.name,\n      description: scalarIntrospection.description,\n      specifiedByURL: scalarIntrospection.specifiedByURL\n    });\n  }\n  function buildImplementationsList(implementingIntrospection) {\n    // TODO: Temporary workaround until GraphQL ecosystem will fully support\n    // 'interfaces' on interface types.\n    if (implementingIntrospection.interfaces === null && implementingIntrospection.kind === _type_introspection_mjs__WEBPACK_IMPORTED_MODULE_5__.TypeKind.INTERFACE) {\n      return [];\n    }\n    if (!implementingIntrospection.interfaces) {\n      const implementingIntrospectionStr = (0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_2__.inspect)(implementingIntrospection);\n      throw new Error(`Introspection result missing interfaces: ${implementingIntrospectionStr}.`);\n    }\n    return implementingIntrospection.interfaces.map(getInterfaceType);\n  }\n  function buildObjectDef(objectIntrospection) {\n    return new _type_definition_mjs__WEBPACK_IMPORTED_MODULE_7__.GraphQLObjectType({\n      name: objectIntrospection.name,\n      description: objectIntrospection.description,\n      interfaces: () => buildImplementationsList(objectIntrospection),\n      fields: () => buildFieldDefMap(objectIntrospection)\n    });\n  }\n  function buildInterfaceDef(interfaceIntrospection) {\n    return new _type_definition_mjs__WEBPACK_IMPORTED_MODULE_7__.GraphQLInterfaceType({\n      name: interfaceIntrospection.name,\n      description: interfaceIntrospection.description,\n      interfaces: () => buildImplementationsList(interfaceIntrospection),\n      fields: () => buildFieldDefMap(interfaceIntrospection)\n    });\n  }\n  function buildUnionDef(unionIntrospection) {\n    if (!unionIntrospection.possibleTypes) {\n      const unionIntrospectionStr = (0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_2__.inspect)(unionIntrospection);\n      throw new Error(`Introspection result missing possibleTypes: ${unionIntrospectionStr}.`);\n    }\n    return new _type_definition_mjs__WEBPACK_IMPORTED_MODULE_7__.GraphQLUnionType({\n      name: unionIntrospection.name,\n      description: unionIntrospection.description,\n      types: () => unionIntrospection.possibleTypes.map(getObjectType)\n    });\n  }\n  function buildEnumDef(enumIntrospection) {\n    if (!enumIntrospection.enumValues) {\n      const enumIntrospectionStr = (0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_2__.inspect)(enumIntrospection);\n      throw new Error(`Introspection result missing enumValues: ${enumIntrospectionStr}.`);\n    }\n    return new _type_definition_mjs__WEBPACK_IMPORTED_MODULE_7__.GraphQLEnumType({\n      name: enumIntrospection.name,\n      description: enumIntrospection.description,\n      values: (0,_jsutils_keyValMap_mjs__WEBPACK_IMPORTED_MODULE_3__.keyValMap)(enumIntrospection.enumValues, valueIntrospection => valueIntrospection.name, valueIntrospection => ({\n        description: valueIntrospection.description,\n        deprecationReason: valueIntrospection.deprecationReason\n      }))\n    });\n  }\n  function buildInputObjectDef(inputObjectIntrospection) {\n    if (!inputObjectIntrospection.inputFields) {\n      const inputObjectIntrospectionStr = (0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_2__.inspect)(inputObjectIntrospection);\n      throw new Error(`Introspection result missing inputFields: ${inputObjectIntrospectionStr}.`);\n    }\n    return new _type_definition_mjs__WEBPACK_IMPORTED_MODULE_7__.GraphQLInputObjectType({\n      name: inputObjectIntrospection.name,\n      description: inputObjectIntrospection.description,\n      fields: () => buildInputValueDefMap(inputObjectIntrospection.inputFields)\n    });\n  }\n  function buildFieldDefMap(typeIntrospection) {\n    if (!typeIntrospection.fields) {\n      throw new Error(`Introspection result missing fields: ${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_2__.inspect)(typeIntrospection)}.`);\n    }\n    return (0,_jsutils_keyValMap_mjs__WEBPACK_IMPORTED_MODULE_3__.keyValMap)(typeIntrospection.fields, fieldIntrospection => fieldIntrospection.name, buildField);\n  }\n  function buildField(fieldIntrospection) {\n    const type = getType(fieldIntrospection.type);\n    if (!(0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_7__.isOutputType)(type)) {\n      const typeStr = (0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_2__.inspect)(type);\n      throw new Error(`Introspection must provide output type for fields, but received: ${typeStr}.`);\n    }\n    if (!fieldIntrospection.args) {\n      const fieldIntrospectionStr = (0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_2__.inspect)(fieldIntrospection);\n      throw new Error(`Introspection result missing field args: ${fieldIntrospectionStr}.`);\n    }\n    return {\n      description: fieldIntrospection.description,\n      deprecationReason: fieldIntrospection.deprecationReason,\n      type,\n      args: buildInputValueDefMap(fieldIntrospection.args)\n    };\n  }\n  function buildInputValueDefMap(inputValueIntrospections) {\n    return (0,_jsutils_keyValMap_mjs__WEBPACK_IMPORTED_MODULE_3__.keyValMap)(inputValueIntrospections, inputValue => inputValue.name, buildInputValue);\n  }\n  function buildInputValue(inputValueIntrospection) {\n    const type = getType(inputValueIntrospection.type);\n    if (!(0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_7__.isInputType)(type)) {\n      const typeStr = (0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_2__.inspect)(type);\n      throw new Error(`Introspection must provide input type for arguments, but received: ${typeStr}.`);\n    }\n    const defaultValue = inputValueIntrospection.defaultValue != null ? (0,_valueFromAST_mjs__WEBPACK_IMPORTED_MODULE_8__.valueFromAST)((0,_language_parser_mjs__WEBPACK_IMPORTED_MODULE_9__.parseValue)(inputValueIntrospection.defaultValue), type) : undefined;\n    return {\n      description: inputValueIntrospection.description,\n      type,\n      defaultValue,\n      deprecationReason: inputValueIntrospection.deprecationReason\n    };\n  }\n  function buildDirective(directiveIntrospection) {\n    if (!directiveIntrospection.args) {\n      const directiveIntrospectionStr = (0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_2__.inspect)(directiveIntrospection);\n      throw new Error(`Introspection result missing directive args: ${directiveIntrospectionStr}.`);\n    }\n    if (!directiveIntrospection.locations) {\n      const directiveIntrospectionStr = (0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_2__.inspect)(directiveIntrospection);\n      throw new Error(`Introspection result missing directive locations: ${directiveIntrospectionStr}.`);\n    }\n    return new _type_directives_mjs__WEBPACK_IMPORTED_MODULE_10__.GraphQLDirective({\n      name: directiveIntrospection.name,\n      description: directiveIntrospection.description,\n      isRepeatable: directiveIntrospection.isRepeatable,\n      locations: directiveIntrospection.locations.slice(),\n      args: buildInputValueDefMap(directiveIntrospection.args)\n    });\n  }\n}\n\n//# sourceURL=webpack://my-app/../../graphql/utilities/buildClientSchema.mjs?");

/***/ }),

/***/ "../../graphql/utilities/coerceInputValue.mjs":
/*!****************************************************!*\
  !*** ../../graphql/utilities/coerceInputValue.mjs ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   coerceInputValue: () => (/* binding */ coerceInputValue)\n/* harmony export */ });\n/* harmony import */ var _jsutils_didYouMean_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../jsutils/didYouMean.mjs */ \"../../graphql/jsutils/didYouMean.mjs\");\n/* harmony import */ var _jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../jsutils/inspect.mjs */ \"../../graphql/jsutils/inspect.mjs\");\n/* harmony import */ var _jsutils_invariant_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../jsutils/invariant.mjs */ \"../../graphql/jsutils/invariant.mjs\");\n/* harmony import */ var _jsutils_isIterableObject_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../jsutils/isIterableObject.mjs */ \"../../graphql/jsutils/isIterableObject.mjs\");\n/* harmony import */ var _jsutils_isObjectLike_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../jsutils/isObjectLike.mjs */ \"../../graphql/jsutils/isObjectLike.mjs\");\n/* harmony import */ var _jsutils_Path_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../jsutils/Path.mjs */ \"../../graphql/jsutils/Path.mjs\");\n/* harmony import */ var _jsutils_printPathArray_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../jsutils/printPathArray.mjs */ \"../../graphql/jsutils/printPathArray.mjs\");\n/* harmony import */ var _jsutils_suggestionList_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../jsutils/suggestionList.mjs */ \"../../graphql/jsutils/suggestionList.mjs\");\n/* harmony import */ var _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../error/GraphQLError.mjs */ \"../../graphql/error/GraphQLError.mjs\");\n/* harmony import */ var _type_definition_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../type/definition.mjs */ \"../../graphql/type/definition.mjs\");\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Coerces a JavaScript value given a GraphQL Input Type.\n */\nfunction coerceInputValue(inputValue, type, onError = defaultOnError) {\n  return coerceInputValueImpl(inputValue, type, onError, undefined);\n}\nfunction defaultOnError(path, invalidValue, error) {\n  let errorPrefix = 'Invalid value ' + (0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_0__.inspect)(invalidValue);\n  if (path.length > 0) {\n    errorPrefix += ` at \"value${(0,_jsutils_printPathArray_mjs__WEBPACK_IMPORTED_MODULE_1__.printPathArray)(path)}\"`;\n  }\n  error.message = errorPrefix + ': ' + error.message;\n  throw error;\n}\nfunction coerceInputValueImpl(inputValue, type, onError, path) {\n  if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_2__.isNonNullType)(type)) {\n    if (inputValue != null) {\n      return coerceInputValueImpl(inputValue, type.ofType, onError, path);\n    }\n    onError((0,_jsutils_Path_mjs__WEBPACK_IMPORTED_MODULE_3__.pathToArray)(path), inputValue, new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_4__.GraphQLError(`Expected non-nullable type \"${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_0__.inspect)(type)}\" not to be null.`));\n    return;\n  }\n  if (inputValue == null) {\n    // Explicitly return the value null.\n    return null;\n  }\n  if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_2__.isListType)(type)) {\n    const itemType = type.ofType;\n    if ((0,_jsutils_isIterableObject_mjs__WEBPACK_IMPORTED_MODULE_5__.isIterableObject)(inputValue)) {\n      return Array.from(inputValue, (itemValue, index) => {\n        const itemPath = (0,_jsutils_Path_mjs__WEBPACK_IMPORTED_MODULE_3__.addPath)(path, index, undefined);\n        return coerceInputValueImpl(itemValue, itemType, onError, itemPath);\n      });\n    } // Lists accept a non-list value as a list of one.\n\n    return [coerceInputValueImpl(inputValue, itemType, onError, path)];\n  }\n  if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_2__.isInputObjectType)(type)) {\n    if (!(0,_jsutils_isObjectLike_mjs__WEBPACK_IMPORTED_MODULE_6__.isObjectLike)(inputValue)) {\n      onError((0,_jsutils_Path_mjs__WEBPACK_IMPORTED_MODULE_3__.pathToArray)(path), inputValue, new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_4__.GraphQLError(`Expected type \"${type.name}\" to be an object.`));\n      return;\n    }\n    const coercedValue = {};\n    const fieldDefs = type.getFields();\n    for (const field of Object.values(fieldDefs)) {\n      const fieldValue = inputValue[field.name];\n      if (fieldValue === undefined) {\n        if (field.defaultValue !== undefined) {\n          coercedValue[field.name] = field.defaultValue;\n        } else if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_2__.isNonNullType)(field.type)) {\n          const typeStr = (0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_0__.inspect)(field.type);\n          onError((0,_jsutils_Path_mjs__WEBPACK_IMPORTED_MODULE_3__.pathToArray)(path), inputValue, new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_4__.GraphQLError(`Field \"${field.name}\" of required type \"${typeStr}\" was not provided.`));\n        }\n        continue;\n      }\n      coercedValue[field.name] = coerceInputValueImpl(fieldValue, field.type, onError, (0,_jsutils_Path_mjs__WEBPACK_IMPORTED_MODULE_3__.addPath)(path, field.name, type.name));\n    } // Ensure every provided field is defined.\n\n    for (const fieldName of Object.keys(inputValue)) {\n      if (!fieldDefs[fieldName]) {\n        const suggestions = (0,_jsutils_suggestionList_mjs__WEBPACK_IMPORTED_MODULE_7__.suggestionList)(fieldName, Object.keys(type.getFields()));\n        onError((0,_jsutils_Path_mjs__WEBPACK_IMPORTED_MODULE_3__.pathToArray)(path), inputValue, new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_4__.GraphQLError(`Field \"${fieldName}\" is not defined by type \"${type.name}\".` + (0,_jsutils_didYouMean_mjs__WEBPACK_IMPORTED_MODULE_8__.didYouMean)(suggestions)));\n      }\n    }\n    return coercedValue;\n  }\n  if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_2__.isLeafType)(type)) {\n    let parseResult; // Scalars and Enums determine if a input value is valid via parseValue(),\n    // which can throw to indicate failure. If it throws, maintain a reference\n    // to the original error.\n\n    try {\n      parseResult = type.parseValue(inputValue);\n    } catch (error) {\n      if (error instanceof _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_4__.GraphQLError) {\n        onError((0,_jsutils_Path_mjs__WEBPACK_IMPORTED_MODULE_3__.pathToArray)(path), inputValue, error);\n      } else {\n        onError((0,_jsutils_Path_mjs__WEBPACK_IMPORTED_MODULE_3__.pathToArray)(path), inputValue, new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_4__.GraphQLError(`Expected type \"${type.name}\". ` + error.message, {\n          originalError: error\n        }));\n      }\n      return;\n    }\n    if (parseResult === undefined) {\n      onError((0,_jsutils_Path_mjs__WEBPACK_IMPORTED_MODULE_3__.pathToArray)(path), inputValue, new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_4__.GraphQLError(`Expected type \"${type.name}\".`));\n    }\n    return parseResult;\n  }\n  /* c8 ignore next 3 */\n  // Not reachable, all possible types have been considered.\n\n   false || (0,_jsutils_invariant_mjs__WEBPACK_IMPORTED_MODULE_9__.invariant)(false, 'Unexpected input type: ' + (0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_0__.inspect)(type));\n}\n\n//# sourceURL=webpack://my-app/../../graphql/utilities/coerceInputValue.mjs?");

/***/ }),

/***/ "../../graphql/utilities/concatAST.mjs":
/*!*********************************************!*\
  !*** ../../graphql/utilities/concatAST.mjs ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   concatAST: () => (/* binding */ concatAST)\n/* harmony export */ });\n/* harmony import */ var _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../language/kinds.mjs */ \"../../graphql/language/kinds.mjs\");\n\n/**\n * Provided a collection of ASTs, presumably each from different files,\n * concatenate the ASTs together into batched AST, useful for validating many\n * GraphQL source files which together represent one conceptual application.\n */\n\nfunction concatAST(documents) {\n  const definitions = [];\n  for (const doc of documents) {\n    definitions.push(...doc.definitions);\n  }\n  return {\n    kind: _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.DOCUMENT,\n    definitions\n  };\n}\n\n//# sourceURL=webpack://my-app/../../graphql/utilities/concatAST.mjs?");

/***/ }),

/***/ "../../graphql/utilities/extendSchema.mjs":
/*!************************************************!*\
  !*** ../../graphql/utilities/extendSchema.mjs ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   extendSchema: () => (/* binding */ extendSchema),\n/* harmony export */   extendSchemaImpl: () => (/* binding */ extendSchemaImpl)\n/* harmony export */ });\n/* harmony import */ var _jsutils_devAssert_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../jsutils/devAssert.mjs */ \"../../graphql/jsutils/devAssert.mjs\");\n/* harmony import */ var _jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../jsutils/inspect.mjs */ \"../../graphql/jsutils/inspect.mjs\");\n/* harmony import */ var _jsutils_invariant_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../jsutils/invariant.mjs */ \"../../graphql/jsutils/invariant.mjs\");\n/* harmony import */ var _jsutils_keyMap_mjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../jsutils/keyMap.mjs */ \"../../graphql/jsutils/keyMap.mjs\");\n/* harmony import */ var _jsutils_mapValue_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../jsutils/mapValue.mjs */ \"../../graphql/jsutils/mapValue.mjs\");\n/* harmony import */ var _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../language/kinds.mjs */ \"../../graphql/language/kinds.mjs\");\n/* harmony import */ var _language_predicates_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../language/predicates.mjs */ \"../../graphql/language/predicates.mjs\");\n/* harmony import */ var _type_definition_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../type/definition.mjs */ \"../../graphql/type/definition.mjs\");\n/* harmony import */ var _type_directives_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../type/directives.mjs */ \"../../graphql/type/directives.mjs\");\n/* harmony import */ var _type_introspection_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../type/introspection.mjs */ \"../../graphql/type/introspection.mjs\");\n/* harmony import */ var _type_scalars_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../type/scalars.mjs */ \"../../graphql/type/scalars.mjs\");\n/* harmony import */ var _type_schema_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../type/schema.mjs */ \"../../graphql/type/schema.mjs\");\n/* harmony import */ var _validation_validate_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../validation/validate.mjs */ \"../../graphql/validation/validate.mjs\");\n/* harmony import */ var _execution_values_mjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../execution/values.mjs */ \"../../graphql/execution/values.mjs\");\n/* harmony import */ var _valueFromAST_mjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./valueFromAST.mjs */ \"../../graphql/utilities/valueFromAST.mjs\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Produces a new schema given an existing schema and a document which may\n * contain GraphQL type extensions and definitions. The original schema will\n * remain unaltered.\n *\n * Because a schema represents a graph of references, a schema cannot be\n * extended without effectively making an entire copy. We do not know until it's\n * too late if subgraphs remain unchanged.\n *\n * This algorithm copies the provided schema, applying extensions while\n * producing the copy. The original schema remains unaltered.\n */\nfunction extendSchema(schema, documentAST, options) {\n  (0,_type_schema_mjs__WEBPACK_IMPORTED_MODULE_0__.assertSchema)(schema);\n  documentAST != null && documentAST.kind === _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.DOCUMENT || (0,_jsutils_devAssert_mjs__WEBPACK_IMPORTED_MODULE_2__.devAssert)(false, 'Must provide valid Document AST.');\n  if ((options === null || options === void 0 ? void 0 : options.assumeValid) !== true && (options === null || options === void 0 ? void 0 : options.assumeValidSDL) !== true) {\n    (0,_validation_validate_mjs__WEBPACK_IMPORTED_MODULE_3__.assertValidSDLExtension)(documentAST, schema);\n  }\n  const schemaConfig = schema.toConfig();\n  const extendedConfig = extendSchemaImpl(schemaConfig, documentAST, options);\n  return schemaConfig === extendedConfig ? schema : new _type_schema_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLSchema(extendedConfig);\n}\n/**\n * @internal\n */\n\nfunction extendSchemaImpl(schemaConfig, documentAST, options) {\n  var _schemaDef, _schemaDef$descriptio, _schemaDef2, _options$assumeValid;\n\n  // Collect the type definitions and extensions found in the document.\n  const typeDefs = [];\n  const typeExtensionsMap = Object.create(null); // New directives and types are separate because a directives and types can\n  // have the same name. For example, a type named \"skip\".\n\n  const directiveDefs = [];\n  let schemaDef; // Schema extensions are collected which may add additional operation types.\n\n  const schemaExtensions = [];\n  for (const def of documentAST.definitions) {\n    if (def.kind === _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.SCHEMA_DEFINITION) {\n      schemaDef = def;\n    } else if (def.kind === _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.SCHEMA_EXTENSION) {\n      schemaExtensions.push(def);\n    } else if ((0,_language_predicates_mjs__WEBPACK_IMPORTED_MODULE_4__.isTypeDefinitionNode)(def)) {\n      typeDefs.push(def);\n    } else if ((0,_language_predicates_mjs__WEBPACK_IMPORTED_MODULE_4__.isTypeExtensionNode)(def)) {\n      const extendedTypeName = def.name.value;\n      const existingTypeExtensions = typeExtensionsMap[extendedTypeName];\n      typeExtensionsMap[extendedTypeName] = existingTypeExtensions ? existingTypeExtensions.concat([def]) : [def];\n    } else if (def.kind === _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.DIRECTIVE_DEFINITION) {\n      directiveDefs.push(def);\n    }\n  } // If this document contains no new types, extensions, or directives then\n  // return the same unmodified GraphQLSchema instance.\n\n  if (Object.keys(typeExtensionsMap).length === 0 && typeDefs.length === 0 && directiveDefs.length === 0 && schemaExtensions.length === 0 && schemaDef == null) {\n    return schemaConfig;\n  }\n  const typeMap = Object.create(null);\n  for (const existingType of schemaConfig.types) {\n    typeMap[existingType.name] = extendNamedType(existingType);\n  }\n  for (const typeNode of typeDefs) {\n    var _stdTypeMap$name;\n    const name = typeNode.name.value;\n    typeMap[name] = (_stdTypeMap$name = stdTypeMap[name]) !== null && _stdTypeMap$name !== void 0 ? _stdTypeMap$name : buildType(typeNode);\n  }\n  const operationTypes = {\n    // Get the extended root operation types.\n    query: schemaConfig.query && replaceNamedType(schemaConfig.query),\n    mutation: schemaConfig.mutation && replaceNamedType(schemaConfig.mutation),\n    subscription: schemaConfig.subscription && replaceNamedType(schemaConfig.subscription),\n    // Then, incorporate schema definition and all schema extensions.\n    ...(schemaDef && getOperationTypes([schemaDef])),\n    ...getOperationTypes(schemaExtensions)\n  }; // Then produce and return a Schema config with these types.\n\n  return {\n    description: (_schemaDef = schemaDef) === null || _schemaDef === void 0 ? void 0 : (_schemaDef$descriptio = _schemaDef.description) === null || _schemaDef$descriptio === void 0 ? void 0 : _schemaDef$descriptio.value,\n    ...operationTypes,\n    types: Object.values(typeMap),\n    directives: [...schemaConfig.directives.map(replaceDirective), ...directiveDefs.map(buildDirective)],\n    extensions: Object.create(null),\n    astNode: (_schemaDef2 = schemaDef) !== null && _schemaDef2 !== void 0 ? _schemaDef2 : schemaConfig.astNode,\n    extensionASTNodes: schemaConfig.extensionASTNodes.concat(schemaExtensions),\n    assumeValid: (_options$assumeValid = options === null || options === void 0 ? void 0 : options.assumeValid) !== null && _options$assumeValid !== void 0 ? _options$assumeValid : false\n  }; // Below are functions used for producing this schema that have closed over\n  // this scope and have access to the schema, cache, and newly defined types.\n\n  function replaceType(type) {\n    if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_5__.isListType)(type)) {\n      // @ts-expect-error\n      return new _type_definition_mjs__WEBPACK_IMPORTED_MODULE_5__.GraphQLList(replaceType(type.ofType));\n    }\n    if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_5__.isNonNullType)(type)) {\n      // @ts-expect-error\n      return new _type_definition_mjs__WEBPACK_IMPORTED_MODULE_5__.GraphQLNonNull(replaceType(type.ofType));\n    } // @ts-expect-error FIXME\n\n    return replaceNamedType(type);\n  }\n  function replaceNamedType(type) {\n    // Note: While this could make early assertions to get the correctly\n    // typed values, that would throw immediately while type system\n    // validation with validateSchema() will produce more actionable results.\n    return typeMap[type.name];\n  }\n  function replaceDirective(directive) {\n    const config = directive.toConfig();\n    return new _type_directives_mjs__WEBPACK_IMPORTED_MODULE_6__.GraphQLDirective({\n      ...config,\n      args: (0,_jsutils_mapValue_mjs__WEBPACK_IMPORTED_MODULE_7__.mapValue)(config.args, extendArg)\n    });\n  }\n  function extendNamedType(type) {\n    if ((0,_type_introspection_mjs__WEBPACK_IMPORTED_MODULE_8__.isIntrospectionType)(type) || (0,_type_scalars_mjs__WEBPACK_IMPORTED_MODULE_9__.isSpecifiedScalarType)(type)) {\n      // Builtin types are not extended.\n      return type;\n    }\n    if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_5__.isScalarType)(type)) {\n      return extendScalarType(type);\n    }\n    if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_5__.isObjectType)(type)) {\n      return extendObjectType(type);\n    }\n    if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_5__.isInterfaceType)(type)) {\n      return extendInterfaceType(type);\n    }\n    if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_5__.isUnionType)(type)) {\n      return extendUnionType(type);\n    }\n    if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_5__.isEnumType)(type)) {\n      return extendEnumType(type);\n    }\n    if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_5__.isInputObjectType)(type)) {\n      return extendInputObjectType(type);\n    }\n    /* c8 ignore next 3 */\n    // Not reachable, all possible type definition nodes have been considered.\n\n     false || (0,_jsutils_invariant_mjs__WEBPACK_IMPORTED_MODULE_10__.invariant)(false, 'Unexpected type: ' + (0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_11__.inspect)(type));\n  }\n  function extendInputObjectType(type) {\n    var _typeExtensionsMap$co;\n    const config = type.toConfig();\n    const extensions = (_typeExtensionsMap$co = typeExtensionsMap[config.name]) !== null && _typeExtensionsMap$co !== void 0 ? _typeExtensionsMap$co : [];\n    return new _type_definition_mjs__WEBPACK_IMPORTED_MODULE_5__.GraphQLInputObjectType({\n      ...config,\n      fields: () => ({\n        ...(0,_jsutils_mapValue_mjs__WEBPACK_IMPORTED_MODULE_7__.mapValue)(config.fields, field => ({\n          ...field,\n          type: replaceType(field.type)\n        })),\n        ...buildInputFieldMap(extensions)\n      }),\n      extensionASTNodes: config.extensionASTNodes.concat(extensions)\n    });\n  }\n  function extendEnumType(type) {\n    var _typeExtensionsMap$ty;\n    const config = type.toConfig();\n    const extensions = (_typeExtensionsMap$ty = typeExtensionsMap[type.name]) !== null && _typeExtensionsMap$ty !== void 0 ? _typeExtensionsMap$ty : [];\n    return new _type_definition_mjs__WEBPACK_IMPORTED_MODULE_5__.GraphQLEnumType({\n      ...config,\n      values: {\n        ...config.values,\n        ...buildEnumValueMap(extensions)\n      },\n      extensionASTNodes: config.extensionASTNodes.concat(extensions)\n    });\n  }\n  function extendScalarType(type) {\n    var _typeExtensionsMap$co2;\n    const config = type.toConfig();\n    const extensions = (_typeExtensionsMap$co2 = typeExtensionsMap[config.name]) !== null && _typeExtensionsMap$co2 !== void 0 ? _typeExtensionsMap$co2 : [];\n    let specifiedByURL = config.specifiedByURL;\n    for (const extensionNode of extensions) {\n      var _getSpecifiedByURL;\n      specifiedByURL = (_getSpecifiedByURL = getSpecifiedByURL(extensionNode)) !== null && _getSpecifiedByURL !== void 0 ? _getSpecifiedByURL : specifiedByURL;\n    }\n    return new _type_definition_mjs__WEBPACK_IMPORTED_MODULE_5__.GraphQLScalarType({\n      ...config,\n      specifiedByURL,\n      extensionASTNodes: config.extensionASTNodes.concat(extensions)\n    });\n  }\n  function extendObjectType(type) {\n    var _typeExtensionsMap$co3;\n    const config = type.toConfig();\n    const extensions = (_typeExtensionsMap$co3 = typeExtensionsMap[config.name]) !== null && _typeExtensionsMap$co3 !== void 0 ? _typeExtensionsMap$co3 : [];\n    return new _type_definition_mjs__WEBPACK_IMPORTED_MODULE_5__.GraphQLObjectType({\n      ...config,\n      interfaces: () => [...type.getInterfaces().map(replaceNamedType), ...buildInterfaces(extensions)],\n      fields: () => ({\n        ...(0,_jsutils_mapValue_mjs__WEBPACK_IMPORTED_MODULE_7__.mapValue)(config.fields, extendField),\n        ...buildFieldMap(extensions)\n      }),\n      extensionASTNodes: config.extensionASTNodes.concat(extensions)\n    });\n  }\n  function extendInterfaceType(type) {\n    var _typeExtensionsMap$co4;\n    const config = type.toConfig();\n    const extensions = (_typeExtensionsMap$co4 = typeExtensionsMap[config.name]) !== null && _typeExtensionsMap$co4 !== void 0 ? _typeExtensionsMap$co4 : [];\n    return new _type_definition_mjs__WEBPACK_IMPORTED_MODULE_5__.GraphQLInterfaceType({\n      ...config,\n      interfaces: () => [...type.getInterfaces().map(replaceNamedType), ...buildInterfaces(extensions)],\n      fields: () => ({\n        ...(0,_jsutils_mapValue_mjs__WEBPACK_IMPORTED_MODULE_7__.mapValue)(config.fields, extendField),\n        ...buildFieldMap(extensions)\n      }),\n      extensionASTNodes: config.extensionASTNodes.concat(extensions)\n    });\n  }\n  function extendUnionType(type) {\n    var _typeExtensionsMap$co5;\n    const config = type.toConfig();\n    const extensions = (_typeExtensionsMap$co5 = typeExtensionsMap[config.name]) !== null && _typeExtensionsMap$co5 !== void 0 ? _typeExtensionsMap$co5 : [];\n    return new _type_definition_mjs__WEBPACK_IMPORTED_MODULE_5__.GraphQLUnionType({\n      ...config,\n      types: () => [...type.getTypes().map(replaceNamedType), ...buildUnionTypes(extensions)],\n      extensionASTNodes: config.extensionASTNodes.concat(extensions)\n    });\n  }\n  function extendField(field) {\n    return {\n      ...field,\n      type: replaceType(field.type),\n      args: field.args && (0,_jsutils_mapValue_mjs__WEBPACK_IMPORTED_MODULE_7__.mapValue)(field.args, extendArg)\n    };\n  }\n  function extendArg(arg) {\n    return {\n      ...arg,\n      type: replaceType(arg.type)\n    };\n  }\n  function getOperationTypes(nodes) {\n    const opTypes = {};\n    for (const node of nodes) {\n      var _node$operationTypes;\n\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n      const operationTypesNodes = /* c8 ignore next */\n      (_node$operationTypes = node.operationTypes) !== null && _node$operationTypes !== void 0 ? _node$operationTypes : [];\n      for (const operationType of operationTypesNodes) {\n        // Note: While this could make early assertions to get the correctly\n        // typed values below, that would throw immediately while type system\n        // validation with validateSchema() will produce more actionable results.\n        // @ts-expect-error\n        opTypes[operationType.operation] = getNamedType(operationType.type);\n      }\n    }\n    return opTypes;\n  }\n  function getNamedType(node) {\n    var _stdTypeMap$name2;\n    const name = node.name.value;\n    const type = (_stdTypeMap$name2 = stdTypeMap[name]) !== null && _stdTypeMap$name2 !== void 0 ? _stdTypeMap$name2 : typeMap[name];\n    if (type === undefined) {\n      throw new Error(`Unknown type: \"${name}\".`);\n    }\n    return type;\n  }\n  function getWrappedType(node) {\n    if (node.kind === _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.LIST_TYPE) {\n      return new _type_definition_mjs__WEBPACK_IMPORTED_MODULE_5__.GraphQLList(getWrappedType(node.type));\n    }\n    if (node.kind === _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.NON_NULL_TYPE) {\n      return new _type_definition_mjs__WEBPACK_IMPORTED_MODULE_5__.GraphQLNonNull(getWrappedType(node.type));\n    }\n    return getNamedType(node);\n  }\n  function buildDirective(node) {\n    var _node$description;\n    return new _type_directives_mjs__WEBPACK_IMPORTED_MODULE_6__.GraphQLDirective({\n      name: node.name.value,\n      description: (_node$description = node.description) === null || _node$description === void 0 ? void 0 : _node$description.value,\n      // @ts-expect-error\n      locations: node.locations.map(({\n        value\n      }) => value),\n      isRepeatable: node.repeatable,\n      args: buildArgumentMap(node.arguments),\n      astNode: node\n    });\n  }\n  function buildFieldMap(nodes) {\n    const fieldConfigMap = Object.create(null);\n    for (const node of nodes) {\n      var _node$fields;\n\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n      const nodeFields = /* c8 ignore next */\n      (_node$fields = node.fields) !== null && _node$fields !== void 0 ? _node$fields : [];\n      for (const field of nodeFields) {\n        var _field$description;\n        fieldConfigMap[field.name.value] = {\n          // Note: While this could make assertions to get the correctly typed\n          // value, that would throw immediately while type system validation\n          // with validateSchema() will produce more actionable results.\n          type: getWrappedType(field.type),\n          description: (_field$description = field.description) === null || _field$description === void 0 ? void 0 : _field$description.value,\n          args: buildArgumentMap(field.arguments),\n          deprecationReason: getDeprecationReason(field),\n          astNode: field\n        };\n      }\n    }\n    return fieldConfigMap;\n  }\n  function buildArgumentMap(args) {\n    // FIXME: https://github.com/graphql/graphql-js/issues/2203\n    const argsNodes = /* c8 ignore next */\n    args !== null && args !== void 0 ? args : [];\n    const argConfigMap = Object.create(null);\n    for (const arg of argsNodes) {\n      var _arg$description;\n\n      // Note: While this could make assertions to get the correctly typed\n      // value, that would throw immediately while type system validation\n      // with validateSchema() will produce more actionable results.\n      const type = getWrappedType(arg.type);\n      argConfigMap[arg.name.value] = {\n        type,\n        description: (_arg$description = arg.description) === null || _arg$description === void 0 ? void 0 : _arg$description.value,\n        defaultValue: (0,_valueFromAST_mjs__WEBPACK_IMPORTED_MODULE_12__.valueFromAST)(arg.defaultValue, type),\n        deprecationReason: getDeprecationReason(arg),\n        astNode: arg\n      };\n    }\n    return argConfigMap;\n  }\n  function buildInputFieldMap(nodes) {\n    const inputFieldMap = Object.create(null);\n    for (const node of nodes) {\n      var _node$fields2;\n\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n      const fieldsNodes = /* c8 ignore next */\n      (_node$fields2 = node.fields) !== null && _node$fields2 !== void 0 ? _node$fields2 : [];\n      for (const field of fieldsNodes) {\n        var _field$description2;\n\n        // Note: While this could make assertions to get the correctly typed\n        // value, that would throw immediately while type system validation\n        // with validateSchema() will produce more actionable results.\n        const type = getWrappedType(field.type);\n        inputFieldMap[field.name.value] = {\n          type,\n          description: (_field$description2 = field.description) === null || _field$description2 === void 0 ? void 0 : _field$description2.value,\n          defaultValue: (0,_valueFromAST_mjs__WEBPACK_IMPORTED_MODULE_12__.valueFromAST)(field.defaultValue, type),\n          deprecationReason: getDeprecationReason(field),\n          astNode: field\n        };\n      }\n    }\n    return inputFieldMap;\n  }\n  function buildEnumValueMap(nodes) {\n    const enumValueMap = Object.create(null);\n    for (const node of nodes) {\n      var _node$values;\n\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n      const valuesNodes = /* c8 ignore next */\n      (_node$values = node.values) !== null && _node$values !== void 0 ? _node$values : [];\n      for (const value of valuesNodes) {\n        var _value$description;\n        enumValueMap[value.name.value] = {\n          description: (_value$description = value.description) === null || _value$description === void 0 ? void 0 : _value$description.value,\n          deprecationReason: getDeprecationReason(value),\n          astNode: value\n        };\n      }\n    }\n    return enumValueMap;\n  }\n  function buildInterfaces(nodes) {\n    // Note: While this could make assertions to get the correctly typed\n    // values below, that would throw immediately while type system\n    // validation with validateSchema() will produce more actionable results.\n    // @ts-expect-error\n    return nodes.flatMap(\n    // FIXME: https://github.com/graphql/graphql-js/issues/2203\n    node => {\n      var _node$interfaces$map, _node$interfaces;\n      return /* c8 ignore next */(\n        (_node$interfaces$map = (_node$interfaces = node.interfaces) === null || _node$interfaces === void 0 ? void 0 : _node$interfaces.map(getNamedType)) !== null && _node$interfaces$map !== void 0 ? _node$interfaces$map : []\n      );\n    });\n  }\n  function buildUnionTypes(nodes) {\n    // Note: While this could make assertions to get the correctly typed\n    // values below, that would throw immediately while type system\n    // validation with validateSchema() will produce more actionable results.\n    // @ts-expect-error\n    return nodes.flatMap(\n    // FIXME: https://github.com/graphql/graphql-js/issues/2203\n    node => {\n      var _node$types$map, _node$types;\n      return /* c8 ignore next */(\n        (_node$types$map = (_node$types = node.types) === null || _node$types === void 0 ? void 0 : _node$types.map(getNamedType)) !== null && _node$types$map !== void 0 ? _node$types$map : []\n      );\n    });\n  }\n  function buildType(astNode) {\n    var _typeExtensionsMap$na;\n    const name = astNode.name.value;\n    const extensionASTNodes = (_typeExtensionsMap$na = typeExtensionsMap[name]) !== null && _typeExtensionsMap$na !== void 0 ? _typeExtensionsMap$na : [];\n    switch (astNode.kind) {\n      case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.OBJECT_TYPE_DEFINITION:\n        {\n          var _astNode$description;\n          const allNodes = [astNode, ...extensionASTNodes];\n          return new _type_definition_mjs__WEBPACK_IMPORTED_MODULE_5__.GraphQLObjectType({\n            name,\n            description: (_astNode$description = astNode.description) === null || _astNode$description === void 0 ? void 0 : _astNode$description.value,\n            interfaces: () => buildInterfaces(allNodes),\n            fields: () => buildFieldMap(allNodes),\n            astNode,\n            extensionASTNodes\n          });\n        }\n      case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.INTERFACE_TYPE_DEFINITION:\n        {\n          var _astNode$description2;\n          const allNodes = [astNode, ...extensionASTNodes];\n          return new _type_definition_mjs__WEBPACK_IMPORTED_MODULE_5__.GraphQLInterfaceType({\n            name,\n            description: (_astNode$description2 = astNode.description) === null || _astNode$description2 === void 0 ? void 0 : _astNode$description2.value,\n            interfaces: () => buildInterfaces(allNodes),\n            fields: () => buildFieldMap(allNodes),\n            astNode,\n            extensionASTNodes\n          });\n        }\n      case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.ENUM_TYPE_DEFINITION:\n        {\n          var _astNode$description3;\n          const allNodes = [astNode, ...extensionASTNodes];\n          return new _type_definition_mjs__WEBPACK_IMPORTED_MODULE_5__.GraphQLEnumType({\n            name,\n            description: (_astNode$description3 = astNode.description) === null || _astNode$description3 === void 0 ? void 0 : _astNode$description3.value,\n            values: buildEnumValueMap(allNodes),\n            astNode,\n            extensionASTNodes\n          });\n        }\n      case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.UNION_TYPE_DEFINITION:\n        {\n          var _astNode$description4;\n          const allNodes = [astNode, ...extensionASTNodes];\n          return new _type_definition_mjs__WEBPACK_IMPORTED_MODULE_5__.GraphQLUnionType({\n            name,\n            description: (_astNode$description4 = astNode.description) === null || _astNode$description4 === void 0 ? void 0 : _astNode$description4.value,\n            types: () => buildUnionTypes(allNodes),\n            astNode,\n            extensionASTNodes\n          });\n        }\n      case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.SCALAR_TYPE_DEFINITION:\n        {\n          var _astNode$description5;\n          return new _type_definition_mjs__WEBPACK_IMPORTED_MODULE_5__.GraphQLScalarType({\n            name,\n            description: (_astNode$description5 = astNode.description) === null || _astNode$description5 === void 0 ? void 0 : _astNode$description5.value,\n            specifiedByURL: getSpecifiedByURL(astNode),\n            astNode,\n            extensionASTNodes\n          });\n        }\n      case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.INPUT_OBJECT_TYPE_DEFINITION:\n        {\n          var _astNode$description6;\n          const allNodes = [astNode, ...extensionASTNodes];\n          return new _type_definition_mjs__WEBPACK_IMPORTED_MODULE_5__.GraphQLInputObjectType({\n            name,\n            description: (_astNode$description6 = astNode.description) === null || _astNode$description6 === void 0 ? void 0 : _astNode$description6.value,\n            fields: () => buildInputFieldMap(allNodes),\n            astNode,\n            extensionASTNodes\n          });\n        }\n    }\n  }\n}\nconst stdTypeMap = (0,_jsutils_keyMap_mjs__WEBPACK_IMPORTED_MODULE_13__.keyMap)([..._type_scalars_mjs__WEBPACK_IMPORTED_MODULE_9__.specifiedScalarTypes, ..._type_introspection_mjs__WEBPACK_IMPORTED_MODULE_8__.introspectionTypes], type => type.name);\n/**\n * Given a field or enum value node, returns the string value for the\n * deprecation reason.\n */\n\nfunction getDeprecationReason(node) {\n  const deprecated = (0,_execution_values_mjs__WEBPACK_IMPORTED_MODULE_14__.getDirectiveValues)(_type_directives_mjs__WEBPACK_IMPORTED_MODULE_6__.GraphQLDeprecatedDirective, node); // @ts-expect-error validated by `getDirectiveValues`\n\n  return deprecated === null || deprecated === void 0 ? void 0 : deprecated.reason;\n}\n/**\n * Given a scalar node, returns the string value for the specifiedByURL.\n */\n\nfunction getSpecifiedByURL(node) {\n  const specifiedBy = (0,_execution_values_mjs__WEBPACK_IMPORTED_MODULE_14__.getDirectiveValues)(_type_directives_mjs__WEBPACK_IMPORTED_MODULE_6__.GraphQLSpecifiedByDirective, node); // @ts-expect-error validated by `getDirectiveValues`\n\n  return specifiedBy === null || specifiedBy === void 0 ? void 0 : specifiedBy.url;\n}\n\n//# sourceURL=webpack://my-app/../../graphql/utilities/extendSchema.mjs?");

/***/ }),

/***/ "../../graphql/utilities/findBreakingChanges.mjs":
/*!*******************************************************!*\
  !*** ../../graphql/utilities/findBreakingChanges.mjs ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BreakingChangeType: () => (/* binding */ BreakingChangeType),\n/* harmony export */   DangerousChangeType: () => (/* binding */ DangerousChangeType),\n/* harmony export */   findBreakingChanges: () => (/* binding */ findBreakingChanges),\n/* harmony export */   findDangerousChanges: () => (/* binding */ findDangerousChanges)\n/* harmony export */ });\n/* harmony import */ var _jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../jsutils/inspect.mjs */ \"../../graphql/jsutils/inspect.mjs\");\n/* harmony import */ var _jsutils_invariant_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../jsutils/invariant.mjs */ \"../../graphql/jsutils/invariant.mjs\");\n/* harmony import */ var _jsutils_keyMap_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../jsutils/keyMap.mjs */ \"../../graphql/jsutils/keyMap.mjs\");\n/* harmony import */ var _language_printer_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../language/printer.mjs */ \"../../graphql/language/printer.mjs\");\n/* harmony import */ var _type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../type/definition.mjs */ \"../../graphql/type/definition.mjs\");\n/* harmony import */ var _type_scalars_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../type/scalars.mjs */ \"../../graphql/type/scalars.mjs\");\n/* harmony import */ var _astFromValue_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./astFromValue.mjs */ \"../../graphql/utilities/astFromValue.mjs\");\n/* harmony import */ var _sortValueNode_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./sortValueNode.mjs */ \"../../graphql/utilities/sortValueNode.mjs\");\n\n\n\n\n\n\n\n\nvar BreakingChangeType;\n(function (BreakingChangeType) {\n  BreakingChangeType['TYPE_REMOVED'] = 'TYPE_REMOVED';\n  BreakingChangeType['TYPE_CHANGED_KIND'] = 'TYPE_CHANGED_KIND';\n  BreakingChangeType['TYPE_REMOVED_FROM_UNION'] = 'TYPE_REMOVED_FROM_UNION';\n  BreakingChangeType['VALUE_REMOVED_FROM_ENUM'] = 'VALUE_REMOVED_FROM_ENUM';\n  BreakingChangeType['REQUIRED_INPUT_FIELD_ADDED'] = 'REQUIRED_INPUT_FIELD_ADDED';\n  BreakingChangeType['IMPLEMENTED_INTERFACE_REMOVED'] = 'IMPLEMENTED_INTERFACE_REMOVED';\n  BreakingChangeType['FIELD_REMOVED'] = 'FIELD_REMOVED';\n  BreakingChangeType['FIELD_CHANGED_KIND'] = 'FIELD_CHANGED_KIND';\n  BreakingChangeType['REQUIRED_ARG_ADDED'] = 'REQUIRED_ARG_ADDED';\n  BreakingChangeType['ARG_REMOVED'] = 'ARG_REMOVED';\n  BreakingChangeType['ARG_CHANGED_KIND'] = 'ARG_CHANGED_KIND';\n  BreakingChangeType['DIRECTIVE_REMOVED'] = 'DIRECTIVE_REMOVED';\n  BreakingChangeType['DIRECTIVE_ARG_REMOVED'] = 'DIRECTIVE_ARG_REMOVED';\n  BreakingChangeType['REQUIRED_DIRECTIVE_ARG_ADDED'] = 'REQUIRED_DIRECTIVE_ARG_ADDED';\n  BreakingChangeType['DIRECTIVE_REPEATABLE_REMOVED'] = 'DIRECTIVE_REPEATABLE_REMOVED';\n  BreakingChangeType['DIRECTIVE_LOCATION_REMOVED'] = 'DIRECTIVE_LOCATION_REMOVED';\n})(BreakingChangeType || (BreakingChangeType = {}));\n\nvar DangerousChangeType;\n(function (DangerousChangeType) {\n  DangerousChangeType['VALUE_ADDED_TO_ENUM'] = 'VALUE_ADDED_TO_ENUM';\n  DangerousChangeType['TYPE_ADDED_TO_UNION'] = 'TYPE_ADDED_TO_UNION';\n  DangerousChangeType['OPTIONAL_INPUT_FIELD_ADDED'] = 'OPTIONAL_INPUT_FIELD_ADDED';\n  DangerousChangeType['OPTIONAL_ARG_ADDED'] = 'OPTIONAL_ARG_ADDED';\n  DangerousChangeType['IMPLEMENTED_INTERFACE_ADDED'] = 'IMPLEMENTED_INTERFACE_ADDED';\n  DangerousChangeType['ARG_DEFAULT_VALUE_CHANGE'] = 'ARG_DEFAULT_VALUE_CHANGE';\n})(DangerousChangeType || (DangerousChangeType = {}));\n\n\n/**\n * Given two schemas, returns an Array containing descriptions of all the types\n * of breaking changes covered by the other functions down below.\n */\nfunction findBreakingChanges(oldSchema, newSchema) {\n  // @ts-expect-error\n  return findSchemaChanges(oldSchema, newSchema).filter(change => change.type in BreakingChangeType);\n}\n/**\n * Given two schemas, returns an Array containing descriptions of all the types\n * of potentially dangerous changes covered by the other functions down below.\n */\n\nfunction findDangerousChanges(oldSchema, newSchema) {\n  // @ts-expect-error\n  return findSchemaChanges(oldSchema, newSchema).filter(change => change.type in DangerousChangeType);\n}\nfunction findSchemaChanges(oldSchema, newSchema) {\n  return [...findTypeChanges(oldSchema, newSchema), ...findDirectiveChanges(oldSchema, newSchema)];\n}\nfunction findDirectiveChanges(oldSchema, newSchema) {\n  const schemaChanges = [];\n  const directivesDiff = diff(oldSchema.getDirectives(), newSchema.getDirectives());\n  for (const oldDirective of directivesDiff.removed) {\n    schemaChanges.push({\n      type: BreakingChangeType.DIRECTIVE_REMOVED,\n      description: `${oldDirective.name} was removed.`\n    });\n  }\n  for (const [oldDirective, newDirective] of directivesDiff.persisted) {\n    const argsDiff = diff(oldDirective.args, newDirective.args);\n    for (const newArg of argsDiff.added) {\n      if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isRequiredArgument)(newArg)) {\n        schemaChanges.push({\n          type: BreakingChangeType.REQUIRED_DIRECTIVE_ARG_ADDED,\n          description: `A required arg ${newArg.name} on directive ${oldDirective.name} was added.`\n        });\n      }\n    }\n    for (const oldArg of argsDiff.removed) {\n      schemaChanges.push({\n        type: BreakingChangeType.DIRECTIVE_ARG_REMOVED,\n        description: `${oldArg.name} was removed from ${oldDirective.name}.`\n      });\n    }\n    if (oldDirective.isRepeatable && !newDirective.isRepeatable) {\n      schemaChanges.push({\n        type: BreakingChangeType.DIRECTIVE_REPEATABLE_REMOVED,\n        description: `Repeatable flag was removed from ${oldDirective.name}.`\n      });\n    }\n    for (const location of oldDirective.locations) {\n      if (!newDirective.locations.includes(location)) {\n        schemaChanges.push({\n          type: BreakingChangeType.DIRECTIVE_LOCATION_REMOVED,\n          description: `${location} was removed from ${oldDirective.name}.`\n        });\n      }\n    }\n  }\n  return schemaChanges;\n}\nfunction findTypeChanges(oldSchema, newSchema) {\n  const schemaChanges = [];\n  const typesDiff = diff(Object.values(oldSchema.getTypeMap()), Object.values(newSchema.getTypeMap()));\n  for (const oldType of typesDiff.removed) {\n    schemaChanges.push({\n      type: BreakingChangeType.TYPE_REMOVED,\n      description: (0,_type_scalars_mjs__WEBPACK_IMPORTED_MODULE_1__.isSpecifiedScalarType)(oldType) ? `Standard scalar ${oldType.name} was removed because it is not referenced anymore.` : `${oldType.name} was removed.`\n    });\n  }\n  for (const [oldType, newType] of typesDiff.persisted) {\n    if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isEnumType)(oldType) && (0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isEnumType)(newType)) {\n      schemaChanges.push(...findEnumTypeChanges(oldType, newType));\n    } else if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isUnionType)(oldType) && (0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isUnionType)(newType)) {\n      schemaChanges.push(...findUnionTypeChanges(oldType, newType));\n    } else if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isInputObjectType)(oldType) && (0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isInputObjectType)(newType)) {\n      schemaChanges.push(...findInputObjectTypeChanges(oldType, newType));\n    } else if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isObjectType)(oldType) && (0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isObjectType)(newType)) {\n      schemaChanges.push(...findFieldChanges(oldType, newType), ...findImplementedInterfacesChanges(oldType, newType));\n    } else if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterfaceType)(oldType) && (0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterfaceType)(newType)) {\n      schemaChanges.push(...findFieldChanges(oldType, newType), ...findImplementedInterfacesChanges(oldType, newType));\n    } else if (oldType.constructor !== newType.constructor) {\n      schemaChanges.push({\n        type: BreakingChangeType.TYPE_CHANGED_KIND,\n        description: `${oldType.name} changed from ` + `${typeKindName(oldType)} to ${typeKindName(newType)}.`\n      });\n    }\n  }\n  return schemaChanges;\n}\nfunction findInputObjectTypeChanges(oldType, newType) {\n  const schemaChanges = [];\n  const fieldsDiff = diff(Object.values(oldType.getFields()), Object.values(newType.getFields()));\n  for (const newField of fieldsDiff.added) {\n    if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isRequiredInputField)(newField)) {\n      schemaChanges.push({\n        type: BreakingChangeType.REQUIRED_INPUT_FIELD_ADDED,\n        description: `A required field ${newField.name} on input type ${oldType.name} was added.`\n      });\n    } else {\n      schemaChanges.push({\n        type: DangerousChangeType.OPTIONAL_INPUT_FIELD_ADDED,\n        description: `An optional field ${newField.name} on input type ${oldType.name} was added.`\n      });\n    }\n  }\n  for (const oldField of fieldsDiff.removed) {\n    schemaChanges.push({\n      type: BreakingChangeType.FIELD_REMOVED,\n      description: `${oldType.name}.${oldField.name} was removed.`\n    });\n  }\n  for (const [oldField, newField] of fieldsDiff.persisted) {\n    const isSafe = isChangeSafeForInputObjectFieldOrFieldArg(oldField.type, newField.type);\n    if (!isSafe) {\n      schemaChanges.push({\n        type: BreakingChangeType.FIELD_CHANGED_KIND,\n        description: `${oldType.name}.${oldField.name} changed type from ` + `${String(oldField.type)} to ${String(newField.type)}.`\n      });\n    }\n  }\n  return schemaChanges;\n}\nfunction findUnionTypeChanges(oldType, newType) {\n  const schemaChanges = [];\n  const possibleTypesDiff = diff(oldType.getTypes(), newType.getTypes());\n  for (const newPossibleType of possibleTypesDiff.added) {\n    schemaChanges.push({\n      type: DangerousChangeType.TYPE_ADDED_TO_UNION,\n      description: `${newPossibleType.name} was added to union type ${oldType.name}.`\n    });\n  }\n  for (const oldPossibleType of possibleTypesDiff.removed) {\n    schemaChanges.push({\n      type: BreakingChangeType.TYPE_REMOVED_FROM_UNION,\n      description: `${oldPossibleType.name} was removed from union type ${oldType.name}.`\n    });\n  }\n  return schemaChanges;\n}\nfunction findEnumTypeChanges(oldType, newType) {\n  const schemaChanges = [];\n  const valuesDiff = diff(oldType.getValues(), newType.getValues());\n  for (const newValue of valuesDiff.added) {\n    schemaChanges.push({\n      type: DangerousChangeType.VALUE_ADDED_TO_ENUM,\n      description: `${newValue.name} was added to enum type ${oldType.name}.`\n    });\n  }\n  for (const oldValue of valuesDiff.removed) {\n    schemaChanges.push({\n      type: BreakingChangeType.VALUE_REMOVED_FROM_ENUM,\n      description: `${oldValue.name} was removed from enum type ${oldType.name}.`\n    });\n  }\n  return schemaChanges;\n}\nfunction findImplementedInterfacesChanges(oldType, newType) {\n  const schemaChanges = [];\n  const interfacesDiff = diff(oldType.getInterfaces(), newType.getInterfaces());\n  for (const newInterface of interfacesDiff.added) {\n    schemaChanges.push({\n      type: DangerousChangeType.IMPLEMENTED_INTERFACE_ADDED,\n      description: `${newInterface.name} added to interfaces implemented by ${oldType.name}.`\n    });\n  }\n  for (const oldInterface of interfacesDiff.removed) {\n    schemaChanges.push({\n      type: BreakingChangeType.IMPLEMENTED_INTERFACE_REMOVED,\n      description: `${oldType.name} no longer implements interface ${oldInterface.name}.`\n    });\n  }\n  return schemaChanges;\n}\nfunction findFieldChanges(oldType, newType) {\n  const schemaChanges = [];\n  const fieldsDiff = diff(Object.values(oldType.getFields()), Object.values(newType.getFields()));\n  for (const oldField of fieldsDiff.removed) {\n    schemaChanges.push({\n      type: BreakingChangeType.FIELD_REMOVED,\n      description: `${oldType.name}.${oldField.name} was removed.`\n    });\n  }\n  for (const [oldField, newField] of fieldsDiff.persisted) {\n    schemaChanges.push(...findArgChanges(oldType, oldField, newField));\n    const isSafe = isChangeSafeForObjectOrInterfaceField(oldField.type, newField.type);\n    if (!isSafe) {\n      schemaChanges.push({\n        type: BreakingChangeType.FIELD_CHANGED_KIND,\n        description: `${oldType.name}.${oldField.name} changed type from ` + `${String(oldField.type)} to ${String(newField.type)}.`\n      });\n    }\n  }\n  return schemaChanges;\n}\nfunction findArgChanges(oldType, oldField, newField) {\n  const schemaChanges = [];\n  const argsDiff = diff(oldField.args, newField.args);\n  for (const oldArg of argsDiff.removed) {\n    schemaChanges.push({\n      type: BreakingChangeType.ARG_REMOVED,\n      description: `${oldType.name}.${oldField.name} arg ${oldArg.name} was removed.`\n    });\n  }\n  for (const [oldArg, newArg] of argsDiff.persisted) {\n    const isSafe = isChangeSafeForInputObjectFieldOrFieldArg(oldArg.type, newArg.type);\n    if (!isSafe) {\n      schemaChanges.push({\n        type: BreakingChangeType.ARG_CHANGED_KIND,\n        description: `${oldType.name}.${oldField.name} arg ${oldArg.name} has changed type from ` + `${String(oldArg.type)} to ${String(newArg.type)}.`\n      });\n    } else if (oldArg.defaultValue !== undefined) {\n      if (newArg.defaultValue === undefined) {\n        schemaChanges.push({\n          type: DangerousChangeType.ARG_DEFAULT_VALUE_CHANGE,\n          description: `${oldType.name}.${oldField.name} arg ${oldArg.name} defaultValue was removed.`\n        });\n      } else {\n        // Since we looking only for client's observable changes we should\n        // compare default values in the same representation as they are\n        // represented inside introspection.\n        const oldValueStr = stringifyValue(oldArg.defaultValue, oldArg.type);\n        const newValueStr = stringifyValue(newArg.defaultValue, newArg.type);\n        if (oldValueStr !== newValueStr) {\n          schemaChanges.push({\n            type: DangerousChangeType.ARG_DEFAULT_VALUE_CHANGE,\n            description: `${oldType.name}.${oldField.name} arg ${oldArg.name} has changed defaultValue from ${oldValueStr} to ${newValueStr}.`\n          });\n        }\n      }\n    }\n  }\n  for (const newArg of argsDiff.added) {\n    if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isRequiredArgument)(newArg)) {\n      schemaChanges.push({\n        type: BreakingChangeType.REQUIRED_ARG_ADDED,\n        description: `A required arg ${newArg.name} on ${oldType.name}.${oldField.name} was added.`\n      });\n    } else {\n      schemaChanges.push({\n        type: DangerousChangeType.OPTIONAL_ARG_ADDED,\n        description: `An optional arg ${newArg.name} on ${oldType.name}.${oldField.name} was added.`\n      });\n    }\n  }\n  return schemaChanges;\n}\nfunction isChangeSafeForObjectOrInterfaceField(oldType, newType) {\n  if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isListType)(oldType)) {\n    return (\n      // if they're both lists, make sure the underlying types are compatible\n      (0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isListType)(newType) && isChangeSafeForObjectOrInterfaceField(oldType.ofType, newType.ofType) ||\n      // moving from nullable to non-null of the same underlying type is safe\n      (0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isNonNullType)(newType) && isChangeSafeForObjectOrInterfaceField(oldType, newType.ofType)\n    );\n  }\n  if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isNonNullType)(oldType)) {\n    // if they're both non-null, make sure the underlying types are compatible\n    return (0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isNonNullType)(newType) && isChangeSafeForObjectOrInterfaceField(oldType.ofType, newType.ofType);\n  }\n  return (\n    // if they're both named types, see if their names are equivalent\n    (0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isNamedType)(newType) && oldType.name === newType.name ||\n    // moving from nullable to non-null of the same underlying type is safe\n    (0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isNonNullType)(newType) && isChangeSafeForObjectOrInterfaceField(oldType, newType.ofType)\n  );\n}\nfunction isChangeSafeForInputObjectFieldOrFieldArg(oldType, newType) {\n  if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isListType)(oldType)) {\n    // if they're both lists, make sure the underlying types are compatible\n    return (0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isListType)(newType) && isChangeSafeForInputObjectFieldOrFieldArg(oldType.ofType, newType.ofType);\n  }\n  if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isNonNullType)(oldType)) {\n    return (\n      // if they're both non-null, make sure the underlying types are\n      // compatible\n      (0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isNonNullType)(newType) && isChangeSafeForInputObjectFieldOrFieldArg(oldType.ofType, newType.ofType) ||\n      // moving from non-null to nullable of the same underlying type is safe\n      !(0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isNonNullType)(newType) && isChangeSafeForInputObjectFieldOrFieldArg(oldType.ofType, newType)\n    );\n  } // if they're both named types, see if their names are equivalent\n\n  return (0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isNamedType)(newType) && oldType.name === newType.name;\n}\nfunction typeKindName(type) {\n  if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isScalarType)(type)) {\n    return 'a Scalar type';\n  }\n  if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isObjectType)(type)) {\n    return 'an Object type';\n  }\n  if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterfaceType)(type)) {\n    return 'an Interface type';\n  }\n  if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isUnionType)(type)) {\n    return 'a Union type';\n  }\n  if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isEnumType)(type)) {\n    return 'an Enum type';\n  }\n  if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isInputObjectType)(type)) {\n    return 'an Input type';\n  }\n  /* c8 ignore next 3 */\n  // Not reachable, all possible types have been considered.\n\n   false || (0,_jsutils_invariant_mjs__WEBPACK_IMPORTED_MODULE_2__.invariant)(false, 'Unexpected type: ' + (0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_3__.inspect)(type));\n}\nfunction stringifyValue(value, type) {\n  const ast = (0,_astFromValue_mjs__WEBPACK_IMPORTED_MODULE_4__.astFromValue)(value, type);\n  ast != null || (0,_jsutils_invariant_mjs__WEBPACK_IMPORTED_MODULE_2__.invariant)(false);\n  return (0,_language_printer_mjs__WEBPACK_IMPORTED_MODULE_5__.print)((0,_sortValueNode_mjs__WEBPACK_IMPORTED_MODULE_6__.sortValueNode)(ast));\n}\nfunction diff(oldArray, newArray) {\n  const added = [];\n  const removed = [];\n  const persisted = [];\n  const oldMap = (0,_jsutils_keyMap_mjs__WEBPACK_IMPORTED_MODULE_7__.keyMap)(oldArray, ({\n    name\n  }) => name);\n  const newMap = (0,_jsutils_keyMap_mjs__WEBPACK_IMPORTED_MODULE_7__.keyMap)(newArray, ({\n    name\n  }) => name);\n  for (const oldItem of oldArray) {\n    const newItem = newMap[oldItem.name];\n    if (newItem === undefined) {\n      removed.push(oldItem);\n    } else {\n      persisted.push([oldItem, newItem]);\n    }\n  }\n  for (const newItem of newArray) {\n    if (oldMap[newItem.name] === undefined) {\n      added.push(newItem);\n    }\n  }\n  return {\n    added,\n    persisted,\n    removed\n  };\n}\n\n//# sourceURL=webpack://my-app/../../graphql/utilities/findBreakingChanges.mjs?");

/***/ }),

/***/ "../../graphql/utilities/getIntrospectionQuery.mjs":
/*!*********************************************************!*\
  !*** ../../graphql/utilities/getIntrospectionQuery.mjs ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getIntrospectionQuery: () => (/* binding */ getIntrospectionQuery)\n/* harmony export */ });\n/**\n * Produce the GraphQL query recommended for a full schema introspection.\n * Accepts optional IntrospectionOptions.\n */\nfunction getIntrospectionQuery(options) {\n  const optionsWithDefault = {\n    descriptions: true,\n    specifiedByUrl: false,\n    directiveIsRepeatable: false,\n    schemaDescription: false,\n    inputValueDeprecation: false,\n    ...options\n  };\n  const descriptions = optionsWithDefault.descriptions ? 'description' : '';\n  const specifiedByUrl = optionsWithDefault.specifiedByUrl ? 'specifiedByURL' : '';\n  const directiveIsRepeatable = optionsWithDefault.directiveIsRepeatable ? 'isRepeatable' : '';\n  const schemaDescription = optionsWithDefault.schemaDescription ? descriptions : '';\n  function inputDeprecation(str) {\n    return optionsWithDefault.inputValueDeprecation ? str : '';\n  }\n  return `\n    query IntrospectionQuery {\n      __schema {\n        ${schemaDescription}\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          ${descriptions}\n          ${directiveIsRepeatable}\n          locations\n          args${inputDeprecation('(includeDeprecated: true)')} {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      ${descriptions}\n      ${specifiedByUrl}\n      fields(includeDeprecated: true) {\n        name\n        ${descriptions}\n        args${inputDeprecation('(includeDeprecated: true)')} {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields${inputDeprecation('(includeDeprecated: true)')} {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        ${descriptions}\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      ${descriptions}\n      type { ...TypeRef }\n      defaultValue\n      ${inputDeprecation('isDeprecated')}\n      ${inputDeprecation('deprecationReason')}\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                    ofType {\n                      kind\n                      name\n                      ofType {\n                        kind\n                        name\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `;\n}\n\n//# sourceURL=webpack://my-app/../../graphql/utilities/getIntrospectionQuery.mjs?");

/***/ }),

/***/ "../../graphql/utilities/getOperationAST.mjs":
/*!***************************************************!*\
  !*** ../../graphql/utilities/getOperationAST.mjs ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getOperationAST: () => (/* binding */ getOperationAST)\n/* harmony export */ });\n/* harmony import */ var _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../language/kinds.mjs */ \"../../graphql/language/kinds.mjs\");\n\n/**\n * Returns an operation AST given a document AST and optionally an operation\n * name. If a name is not provided, an operation is only returned if only one is\n * provided in the document.\n */\n\nfunction getOperationAST(documentAST, operationName) {\n  let operation = null;\n  for (const definition of documentAST.definitions) {\n    if (definition.kind === _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.OPERATION_DEFINITION) {\n      var _definition$name;\n      if (operationName == null) {\n        // If no operation name was provided, only return an Operation if there\n        // is one defined in the document. Upon encountering the second, return\n        // null.\n        if (operation) {\n          return null;\n        }\n        operation = definition;\n      } else if (((_definition$name = definition.name) === null || _definition$name === void 0 ? void 0 : _definition$name.value) === operationName) {\n        return definition;\n      }\n    }\n  }\n  return operation;\n}\n\n//# sourceURL=webpack://my-app/../../graphql/utilities/getOperationAST.mjs?");

/***/ }),

/***/ "../../graphql/utilities/getOperationRootType.mjs":
/*!********************************************************!*\
  !*** ../../graphql/utilities/getOperationRootType.mjs ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getOperationRootType: () => (/* binding */ getOperationRootType)\n/* harmony export */ });\n/* harmony import */ var _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error/GraphQLError.mjs */ \"../../graphql/error/GraphQLError.mjs\");\n\n\n/**\n * Extracts the root type of the operation from the schema.\n *\n * @deprecated Please use `GraphQLSchema.getRootType` instead. Will be removed in v17\n */\nfunction getOperationRootType(schema, operation) {\n  if (operation.operation === 'query') {\n    const queryType = schema.getQueryType();\n    if (!queryType) {\n      throw new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLError('Schema does not define the required query root type.', {\n        nodes: operation\n      });\n    }\n    return queryType;\n  }\n  if (operation.operation === 'mutation') {\n    const mutationType = schema.getMutationType();\n    if (!mutationType) {\n      throw new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLError('Schema is not configured for mutations.', {\n        nodes: operation\n      });\n    }\n    return mutationType;\n  }\n  if (operation.operation === 'subscription') {\n    const subscriptionType = schema.getSubscriptionType();\n    if (!subscriptionType) {\n      throw new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLError('Schema is not configured for subscriptions.', {\n        nodes: operation\n      });\n    }\n    return subscriptionType;\n  }\n  throw new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLError('Can only have query, mutation and subscription operations.', {\n    nodes: operation\n  });\n}\n\n//# sourceURL=webpack://my-app/../../graphql/utilities/getOperationRootType.mjs?");

/***/ }),

/***/ "../../graphql/utilities/introspectionFromSchema.mjs":
/*!***********************************************************!*\
  !*** ../../graphql/utilities/introspectionFromSchema.mjs ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   introspectionFromSchema: () => (/* binding */ introspectionFromSchema)\n/* harmony export */ });\n/* harmony import */ var _jsutils_invariant_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../jsutils/invariant.mjs */ \"../../graphql/jsutils/invariant.mjs\");\n/* harmony import */ var _language_parser_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../language/parser.mjs */ \"../../graphql/language/parser.mjs\");\n/* harmony import */ var _execution_execute_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../execution/execute.mjs */ \"../../graphql/execution/execute.mjs\");\n/* harmony import */ var _getIntrospectionQuery_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getIntrospectionQuery.mjs */ \"../../graphql/utilities/getIntrospectionQuery.mjs\");\n\n\n\n\n/**\n * Build an IntrospectionQuery from a GraphQLSchema\n *\n * IntrospectionQuery is useful for utilities that care about type and field\n * relationships, but do not need to traverse through those relationships.\n *\n * This is the inverse of buildClientSchema. The primary use case is outside\n * of the server context, for instance when doing schema comparisons.\n */\n\nfunction introspectionFromSchema(schema, options) {\n  const optionsWithDefaults = {\n    specifiedByUrl: true,\n    directiveIsRepeatable: true,\n    schemaDescription: true,\n    inputValueDeprecation: true,\n    ...options\n  };\n  const document = (0,_language_parser_mjs__WEBPACK_IMPORTED_MODULE_0__.parse)((0,_getIntrospectionQuery_mjs__WEBPACK_IMPORTED_MODULE_1__.getIntrospectionQuery)(optionsWithDefaults));\n  const result = (0,_execution_execute_mjs__WEBPACK_IMPORTED_MODULE_2__.executeSync)({\n    schema,\n    document\n  });\n  !result.errors && result.data || (0,_jsutils_invariant_mjs__WEBPACK_IMPORTED_MODULE_3__.invariant)(false);\n  return result.data;\n}\n\n//# sourceURL=webpack://my-app/../../graphql/utilities/introspectionFromSchema.mjs?");

/***/ }),

/***/ "../../graphql/utilities/lexicographicSortSchema.mjs":
/*!***********************************************************!*\
  !*** ../../graphql/utilities/lexicographicSortSchema.mjs ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   lexicographicSortSchema: () => (/* binding */ lexicographicSortSchema)\n/* harmony export */ });\n/* harmony import */ var _jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../jsutils/inspect.mjs */ \"../../graphql/jsutils/inspect.mjs\");\n/* harmony import */ var _jsutils_invariant_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../jsutils/invariant.mjs */ \"../../graphql/jsutils/invariant.mjs\");\n/* harmony import */ var _jsutils_keyValMap_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../jsutils/keyValMap.mjs */ \"../../graphql/jsutils/keyValMap.mjs\");\n/* harmony import */ var _jsutils_naturalCompare_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../jsutils/naturalCompare.mjs */ \"../../graphql/jsutils/naturalCompare.mjs\");\n/* harmony import */ var _type_definition_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../type/definition.mjs */ \"../../graphql/type/definition.mjs\");\n/* harmony import */ var _type_directives_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../type/directives.mjs */ \"../../graphql/type/directives.mjs\");\n/* harmony import */ var _type_introspection_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../type/introspection.mjs */ \"../../graphql/type/introspection.mjs\");\n/* harmony import */ var _type_schema_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../type/schema.mjs */ \"../../graphql/type/schema.mjs\");\n\n\n\n\n\n\n\n\n/**\n * Sort GraphQLSchema.\n *\n * This function returns a sorted copy of the given GraphQLSchema.\n */\n\nfunction lexicographicSortSchema(schema) {\n  const schemaConfig = schema.toConfig();\n  const typeMap = (0,_jsutils_keyValMap_mjs__WEBPACK_IMPORTED_MODULE_0__.keyValMap)(sortByName(schemaConfig.types), type => type.name, sortNamedType);\n  return new _type_schema_mjs__WEBPACK_IMPORTED_MODULE_1__.GraphQLSchema({\n    ...schemaConfig,\n    types: Object.values(typeMap),\n    directives: sortByName(schemaConfig.directives).map(sortDirective),\n    query: replaceMaybeType(schemaConfig.query),\n    mutation: replaceMaybeType(schemaConfig.mutation),\n    subscription: replaceMaybeType(schemaConfig.subscription)\n  });\n  function replaceType(type) {\n    if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_2__.isListType)(type)) {\n      // @ts-expect-error\n      return new _type_definition_mjs__WEBPACK_IMPORTED_MODULE_2__.GraphQLList(replaceType(type.ofType));\n    } else if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_2__.isNonNullType)(type)) {\n      // @ts-expect-error\n      return new _type_definition_mjs__WEBPACK_IMPORTED_MODULE_2__.GraphQLNonNull(replaceType(type.ofType));\n    } // @ts-expect-error FIXME: TS Conversion\n\n    return replaceNamedType(type);\n  }\n  function replaceNamedType(type) {\n    return typeMap[type.name];\n  }\n  function replaceMaybeType(maybeType) {\n    return maybeType && replaceNamedType(maybeType);\n  }\n  function sortDirective(directive) {\n    const config = directive.toConfig();\n    return new _type_directives_mjs__WEBPACK_IMPORTED_MODULE_3__.GraphQLDirective({\n      ...config,\n      locations: sortBy(config.locations, x => x),\n      args: sortArgs(config.args)\n    });\n  }\n  function sortArgs(args) {\n    return sortObjMap(args, arg => ({\n      ...arg,\n      type: replaceType(arg.type)\n    }));\n  }\n  function sortFields(fieldsMap) {\n    return sortObjMap(fieldsMap, field => ({\n      ...field,\n      type: replaceType(field.type),\n      args: field.args && sortArgs(field.args)\n    }));\n  }\n  function sortInputFields(fieldsMap) {\n    return sortObjMap(fieldsMap, field => ({\n      ...field,\n      type: replaceType(field.type)\n    }));\n  }\n  function sortTypes(array) {\n    return sortByName(array).map(replaceNamedType);\n  }\n  function sortNamedType(type) {\n    if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_2__.isScalarType)(type) || (0,_type_introspection_mjs__WEBPACK_IMPORTED_MODULE_4__.isIntrospectionType)(type)) {\n      return type;\n    }\n    if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_2__.isObjectType)(type)) {\n      const config = type.toConfig();\n      return new _type_definition_mjs__WEBPACK_IMPORTED_MODULE_2__.GraphQLObjectType({\n        ...config,\n        interfaces: () => sortTypes(config.interfaces),\n        fields: () => sortFields(config.fields)\n      });\n    }\n    if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_2__.isInterfaceType)(type)) {\n      const config = type.toConfig();\n      return new _type_definition_mjs__WEBPACK_IMPORTED_MODULE_2__.GraphQLInterfaceType({\n        ...config,\n        interfaces: () => sortTypes(config.interfaces),\n        fields: () => sortFields(config.fields)\n      });\n    }\n    if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_2__.isUnionType)(type)) {\n      const config = type.toConfig();\n      return new _type_definition_mjs__WEBPACK_IMPORTED_MODULE_2__.GraphQLUnionType({\n        ...config,\n        types: () => sortTypes(config.types)\n      });\n    }\n    if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_2__.isEnumType)(type)) {\n      const config = type.toConfig();\n      return new _type_definition_mjs__WEBPACK_IMPORTED_MODULE_2__.GraphQLEnumType({\n        ...config,\n        values: sortObjMap(config.values, value => value)\n      });\n    }\n    if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_2__.isInputObjectType)(type)) {\n      const config = type.toConfig();\n      return new _type_definition_mjs__WEBPACK_IMPORTED_MODULE_2__.GraphQLInputObjectType({\n        ...config,\n        fields: () => sortInputFields(config.fields)\n      });\n    }\n    /* c8 ignore next 3 */\n    // Not reachable, all possible types have been considered.\n\n     false || (0,_jsutils_invariant_mjs__WEBPACK_IMPORTED_MODULE_5__.invariant)(false, 'Unexpected type: ' + (0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_6__.inspect)(type));\n  }\n}\nfunction sortObjMap(map, sortValueFn) {\n  const sortedMap = Object.create(null);\n  for (const key of Object.keys(map).sort(_jsutils_naturalCompare_mjs__WEBPACK_IMPORTED_MODULE_7__.naturalCompare)) {\n    sortedMap[key] = sortValueFn(map[key]);\n  }\n  return sortedMap;\n}\nfunction sortByName(array) {\n  return sortBy(array, obj => obj.name);\n}\nfunction sortBy(array, mapToKey) {\n  return array.slice().sort((obj1, obj2) => {\n    const key1 = mapToKey(obj1);\n    const key2 = mapToKey(obj2);\n    return (0,_jsutils_naturalCompare_mjs__WEBPACK_IMPORTED_MODULE_7__.naturalCompare)(key1, key2);\n  });\n}\n\n//# sourceURL=webpack://my-app/../../graphql/utilities/lexicographicSortSchema.mjs?");

/***/ }),

/***/ "../../graphql/utilities/printSchema.mjs":
/*!***********************************************!*\
  !*** ../../graphql/utilities/printSchema.mjs ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   printIntrospectionSchema: () => (/* binding */ printIntrospectionSchema),\n/* harmony export */   printSchema: () => (/* binding */ printSchema),\n/* harmony export */   printType: () => (/* binding */ printType)\n/* harmony export */ });\n/* harmony import */ var _jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../jsutils/inspect.mjs */ \"../../graphql/jsutils/inspect.mjs\");\n/* harmony import */ var _jsutils_invariant_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../jsutils/invariant.mjs */ \"../../graphql/jsutils/invariant.mjs\");\n/* harmony import */ var _language_blockString_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../language/blockString.mjs */ \"../../graphql/language/blockString.mjs\");\n/* harmony import */ var _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../language/kinds.mjs */ \"../../graphql/language/kinds.mjs\");\n/* harmony import */ var _language_printer_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../language/printer.mjs */ \"../../graphql/language/printer.mjs\");\n/* harmony import */ var _type_definition_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../type/definition.mjs */ \"../../graphql/type/definition.mjs\");\n/* harmony import */ var _type_directives_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../type/directives.mjs */ \"../../graphql/type/directives.mjs\");\n/* harmony import */ var _type_introspection_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../type/introspection.mjs */ \"../../graphql/type/introspection.mjs\");\n/* harmony import */ var _type_scalars_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../type/scalars.mjs */ \"../../graphql/type/scalars.mjs\");\n/* harmony import */ var _astFromValue_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./astFromValue.mjs */ \"../../graphql/utilities/astFromValue.mjs\");\n\n\n\n\n\n\n\n\n\n\nfunction printSchema(schema) {\n  return printFilteredSchema(schema, n => !(0,_type_directives_mjs__WEBPACK_IMPORTED_MODULE_0__.isSpecifiedDirective)(n), isDefinedType);\n}\nfunction printIntrospectionSchema(schema) {\n  return printFilteredSchema(schema, _type_directives_mjs__WEBPACK_IMPORTED_MODULE_0__.isSpecifiedDirective, _type_introspection_mjs__WEBPACK_IMPORTED_MODULE_1__.isIntrospectionType);\n}\nfunction isDefinedType(type) {\n  return !(0,_type_scalars_mjs__WEBPACK_IMPORTED_MODULE_2__.isSpecifiedScalarType)(type) && !(0,_type_introspection_mjs__WEBPACK_IMPORTED_MODULE_1__.isIntrospectionType)(type);\n}\nfunction printFilteredSchema(schema, directiveFilter, typeFilter) {\n  const directives = schema.getDirectives().filter(directiveFilter);\n  const types = Object.values(schema.getTypeMap()).filter(typeFilter);\n  return [printSchemaDefinition(schema), ...directives.map(directive => printDirective(directive)), ...types.map(type => printType(type))].filter(Boolean).join('\\n\\n');\n}\nfunction printSchemaDefinition(schema) {\n  if (schema.description == null && isSchemaOfCommonNames(schema)) {\n    return;\n  }\n  const operationTypes = [];\n  const queryType = schema.getQueryType();\n  if (queryType) {\n    operationTypes.push(`  query: ${queryType.name}`);\n  }\n  const mutationType = schema.getMutationType();\n  if (mutationType) {\n    operationTypes.push(`  mutation: ${mutationType.name}`);\n  }\n  const subscriptionType = schema.getSubscriptionType();\n  if (subscriptionType) {\n    operationTypes.push(`  subscription: ${subscriptionType.name}`);\n  }\n  return printDescription(schema) + `schema {\\n${operationTypes.join('\\n')}\\n}`;\n}\n/**\n * GraphQL schema define root types for each type of operation. These types are\n * the same as any other type and can be named in any manner, however there is\n * a common naming convention:\n *\n * ```graphql\n *   schema {\n *     query: Query\n *     mutation: Mutation\n *     subscription: Subscription\n *   }\n * ```\n *\n * When using this naming convention, the schema description can be omitted.\n */\n\nfunction isSchemaOfCommonNames(schema) {\n  const queryType = schema.getQueryType();\n  if (queryType && queryType.name !== 'Query') {\n    return false;\n  }\n  const mutationType = schema.getMutationType();\n  if (mutationType && mutationType.name !== 'Mutation') {\n    return false;\n  }\n  const subscriptionType = schema.getSubscriptionType();\n  if (subscriptionType && subscriptionType.name !== 'Subscription') {\n    return false;\n  }\n  return true;\n}\nfunction printType(type) {\n  if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_3__.isScalarType)(type)) {\n    return printScalar(type);\n  }\n  if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_3__.isObjectType)(type)) {\n    return printObject(type);\n  }\n  if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_3__.isInterfaceType)(type)) {\n    return printInterface(type);\n  }\n  if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_3__.isUnionType)(type)) {\n    return printUnion(type);\n  }\n  if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_3__.isEnumType)(type)) {\n    return printEnum(type);\n  }\n  if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_3__.isInputObjectType)(type)) {\n    return printInputObject(type);\n  }\n  /* c8 ignore next 3 */\n  // Not reachable, all possible types have been considered.\n\n   false || (0,_jsutils_invariant_mjs__WEBPACK_IMPORTED_MODULE_4__.invariant)(false, 'Unexpected type: ' + (0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_5__.inspect)(type));\n}\nfunction printScalar(type) {\n  return printDescription(type) + `scalar ${type.name}` + printSpecifiedByURL(type);\n}\nfunction printImplementedInterfaces(type) {\n  const interfaces = type.getInterfaces();\n  return interfaces.length ? ' implements ' + interfaces.map(i => i.name).join(' & ') : '';\n}\nfunction printObject(type) {\n  return printDescription(type) + `type ${type.name}` + printImplementedInterfaces(type) + printFields(type);\n}\nfunction printInterface(type) {\n  return printDescription(type) + `interface ${type.name}` + printImplementedInterfaces(type) + printFields(type);\n}\nfunction printUnion(type) {\n  const types = type.getTypes();\n  const possibleTypes = types.length ? ' = ' + types.join(' | ') : '';\n  return printDescription(type) + 'union ' + type.name + possibleTypes;\n}\nfunction printEnum(type) {\n  const values = type.getValues().map((value, i) => printDescription(value, '  ', !i) + '  ' + value.name + printDeprecated(value.deprecationReason));\n  return printDescription(type) + `enum ${type.name}` + printBlock(values);\n}\nfunction printInputObject(type) {\n  const fields = Object.values(type.getFields()).map((f, i) => printDescription(f, '  ', !i) + '  ' + printInputValue(f));\n  return printDescription(type) + `input ${type.name}` + printBlock(fields);\n}\nfunction printFields(type) {\n  const fields = Object.values(type.getFields()).map((f, i) => printDescription(f, '  ', !i) + '  ' + f.name + printArgs(f.args, '  ') + ': ' + String(f.type) + printDeprecated(f.deprecationReason));\n  return printBlock(fields);\n}\nfunction printBlock(items) {\n  return items.length !== 0 ? ' {\\n' + items.join('\\n') + '\\n}' : '';\n}\nfunction printArgs(args, indentation = '') {\n  if (args.length === 0) {\n    return '';\n  } // If every arg does not have a description, print them on one line.\n\n  if (args.every(arg => !arg.description)) {\n    return '(' + args.map(printInputValue).join(', ') + ')';\n  }\n  return '(\\n' + args.map((arg, i) => printDescription(arg, '  ' + indentation, !i) + '  ' + indentation + printInputValue(arg)).join('\\n') + '\\n' + indentation + ')';\n}\nfunction printInputValue(arg) {\n  const defaultAST = (0,_astFromValue_mjs__WEBPACK_IMPORTED_MODULE_6__.astFromValue)(arg.defaultValue, arg.type);\n  let argDecl = arg.name + ': ' + String(arg.type);\n  if (defaultAST) {\n    argDecl += ` = ${(0,_language_printer_mjs__WEBPACK_IMPORTED_MODULE_7__.print)(defaultAST)}`;\n  }\n  return argDecl + printDeprecated(arg.deprecationReason);\n}\nfunction printDirective(directive) {\n  return printDescription(directive) + 'directive @' + directive.name + printArgs(directive.args) + (directive.isRepeatable ? ' repeatable' : '') + ' on ' + directive.locations.join(' | ');\n}\nfunction printDeprecated(reason) {\n  if (reason == null) {\n    return '';\n  }\n  if (reason !== _type_directives_mjs__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_DEPRECATION_REASON) {\n    const astValue = (0,_language_printer_mjs__WEBPACK_IMPORTED_MODULE_7__.print)({\n      kind: _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_8__.Kind.STRING,\n      value: reason\n    });\n    return ` @deprecated(reason: ${astValue})`;\n  }\n  return ' @deprecated';\n}\nfunction printSpecifiedByURL(scalar) {\n  if (scalar.specifiedByURL == null) {\n    return '';\n  }\n  const astValue = (0,_language_printer_mjs__WEBPACK_IMPORTED_MODULE_7__.print)({\n    kind: _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_8__.Kind.STRING,\n    value: scalar.specifiedByURL\n  });\n  return ` @specifiedBy(url: ${astValue})`;\n}\nfunction printDescription(def, indentation = '', firstInBlock = true) {\n  const {\n    description\n  } = def;\n  if (description == null) {\n    return '';\n  }\n  const blockString = (0,_language_printer_mjs__WEBPACK_IMPORTED_MODULE_7__.print)({\n    kind: _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_8__.Kind.STRING,\n    value: description,\n    block: (0,_language_blockString_mjs__WEBPACK_IMPORTED_MODULE_9__.isPrintableAsBlockString)(description)\n  });\n  const prefix = indentation && !firstInBlock ? '\\n' + indentation : indentation;\n  return prefix + blockString.replace(/\\n/g, '\\n' + indentation) + '\\n';\n}\n\n//# sourceURL=webpack://my-app/../../graphql/utilities/printSchema.mjs?");

/***/ }),

/***/ "../../graphql/utilities/separateOperations.mjs":
/*!******************************************************!*\
  !*** ../../graphql/utilities/separateOperations.mjs ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   separateOperations: () => (/* binding */ separateOperations)\n/* harmony export */ });\n/* harmony import */ var _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../language/kinds.mjs */ \"../../graphql/language/kinds.mjs\");\n/* harmony import */ var _language_visitor_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../language/visitor.mjs */ \"../../graphql/language/visitor.mjs\");\n\n\n/**\n * separateOperations accepts a single AST document which may contain many\n * operations and fragments and returns a collection of AST documents each of\n * which contains a single operation as well the fragment definitions it\n * refers to.\n */\n\nfunction separateOperations(documentAST) {\n  const operations = [];\n  const depGraph = Object.create(null); // Populate metadata and build a dependency graph.\n\n  for (const definitionNode of documentAST.definitions) {\n    switch (definitionNode.kind) {\n      case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.OPERATION_DEFINITION:\n        operations.push(definitionNode);\n        break;\n      case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.FRAGMENT_DEFINITION:\n        depGraph[definitionNode.name.value] = collectDependencies(definitionNode.selectionSet);\n        break;\n      default: // ignore non-executable definitions\n    }\n  } // For each operation, produce a new synthesized AST which includes only what\n  // is necessary for completing that operation.\n\n  const separatedDocumentASTs = Object.create(null);\n  for (const operation of operations) {\n    const dependencies = new Set();\n    for (const fragmentName of collectDependencies(operation.selectionSet)) {\n      collectTransitiveDependencies(dependencies, depGraph, fragmentName);\n    } // Provides the empty string for anonymous operations.\n\n    const operationName = operation.name ? operation.name.value : ''; // The list of definition nodes to be included for this operation, sorted\n    // to retain the same order as the original document.\n\n    separatedDocumentASTs[operationName] = {\n      kind: _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.DOCUMENT,\n      definitions: documentAST.definitions.filter(node => node === operation || node.kind === _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.FRAGMENT_DEFINITION && dependencies.has(node.name.value))\n    };\n  }\n  return separatedDocumentASTs;\n}\n\n// From a dependency graph, collects a list of transitive dependencies by\n// recursing through a dependency graph.\nfunction collectTransitiveDependencies(collected, depGraph, fromName) {\n  if (!collected.has(fromName)) {\n    collected.add(fromName);\n    const immediateDeps = depGraph[fromName];\n    if (immediateDeps !== undefined) {\n      for (const toName of immediateDeps) {\n        collectTransitiveDependencies(collected, depGraph, toName);\n      }\n    }\n  }\n}\nfunction collectDependencies(selectionSet) {\n  const dependencies = [];\n  (0,_language_visitor_mjs__WEBPACK_IMPORTED_MODULE_1__.visit)(selectionSet, {\n    FragmentSpread(node) {\n      dependencies.push(node.name.value);\n    }\n  });\n  return dependencies;\n}\n\n//# sourceURL=webpack://my-app/../../graphql/utilities/separateOperations.mjs?");

/***/ }),

/***/ "../../graphql/utilities/sortValueNode.mjs":
/*!*************************************************!*\
  !*** ../../graphql/utilities/sortValueNode.mjs ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sortValueNode: () => (/* binding */ sortValueNode)\n/* harmony export */ });\n/* harmony import */ var _jsutils_naturalCompare_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../jsutils/naturalCompare.mjs */ \"../../graphql/jsutils/naturalCompare.mjs\");\n/* harmony import */ var _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../language/kinds.mjs */ \"../../graphql/language/kinds.mjs\");\n\n\n/**\n * Sort ValueNode.\n *\n * This function returns a sorted copy of the given ValueNode.\n *\n * @internal\n */\n\nfunction sortValueNode(valueNode) {\n  switch (valueNode.kind) {\n    case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.OBJECT:\n      return {\n        ...valueNode,\n        fields: sortFields(valueNode.fields)\n      };\n    case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.LIST:\n      return {\n        ...valueNode,\n        values: valueNode.values.map(sortValueNode)\n      };\n    case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.INT:\n    case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.FLOAT:\n    case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.STRING:\n    case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.BOOLEAN:\n    case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.NULL:\n    case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.ENUM:\n    case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.VARIABLE:\n      return valueNode;\n  }\n}\nfunction sortFields(fields) {\n  return fields.map(fieldNode => ({\n    ...fieldNode,\n    value: sortValueNode(fieldNode.value)\n  })).sort((fieldA, fieldB) => (0,_jsutils_naturalCompare_mjs__WEBPACK_IMPORTED_MODULE_1__.naturalCompare)(fieldA.name.value, fieldB.name.value));\n}\n\n//# sourceURL=webpack://my-app/../../graphql/utilities/sortValueNode.mjs?");

/***/ }),

/***/ "../../graphql/utilities/stripIgnoredCharacters.mjs":
/*!**********************************************************!*\
  !*** ../../graphql/utilities/stripIgnoredCharacters.mjs ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   stripIgnoredCharacters: () => (/* binding */ stripIgnoredCharacters)\n/* harmony export */ });\n/* harmony import */ var _language_blockString_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../language/blockString.mjs */ \"../../graphql/language/blockString.mjs\");\n/* harmony import */ var _language_lexer_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../language/lexer.mjs */ \"../../graphql/language/lexer.mjs\");\n/* harmony import */ var _language_source_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../language/source.mjs */ \"../../graphql/language/source.mjs\");\n/* harmony import */ var _language_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../language/tokenKind.mjs */ \"../../graphql/language/tokenKind.mjs\");\n\n\n\n\n/**\n * Strips characters that are not significant to the validity or execution\n * of a GraphQL document:\n *   - UnicodeBOM\n *   - WhiteSpace\n *   - LineTerminator\n *   - Comment\n *   - Comma\n *   - BlockString indentation\n *\n * Note: It is required to have a delimiter character between neighboring\n * non-punctuator tokens and this function always uses single space as delimiter.\n *\n * It is guaranteed that both input and output documents if parsed would result\n * in the exact same AST except for nodes location.\n *\n * Warning: It is guaranteed that this function will always produce stable results.\n * However, it's not guaranteed that it will stay the same between different\n * releases due to bugfixes or changes in the GraphQL specification.\n *\n * Query example:\n *\n * ```graphql\n * query SomeQuery($foo: String!, $bar: String) {\n *   someField(foo: $foo, bar: $bar) {\n *     a\n *     b {\n *       c\n *       d\n *     }\n *   }\n * }\n * ```\n *\n * Becomes:\n *\n * ```graphql\n * query SomeQuery($foo:String!$bar:String){someField(foo:$foo bar:$bar){a b{c d}}}\n * ```\n *\n * SDL example:\n *\n * ```graphql\n * \"\"\"\n * Type description\n * \"\"\"\n * type Foo {\n *   \"\"\"\n *   Field description\n *   \"\"\"\n *   bar: String\n * }\n * ```\n *\n * Becomes:\n *\n * ```graphql\n * \"\"\"Type description\"\"\" type Foo{\"\"\"Field description\"\"\" bar:String}\n * ```\n */\n\nfunction stripIgnoredCharacters(source) {\n  const sourceObj = (0,_language_source_mjs__WEBPACK_IMPORTED_MODULE_0__.isSource)(source) ? source : new _language_source_mjs__WEBPACK_IMPORTED_MODULE_0__.Source(source);\n  const body = sourceObj.body;\n  const lexer = new _language_lexer_mjs__WEBPACK_IMPORTED_MODULE_1__.Lexer(sourceObj);\n  let strippedBody = '';\n  let wasLastAddedTokenNonPunctuator = false;\n  while (lexer.advance().kind !== _language_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_2__.TokenKind.EOF) {\n    const currentToken = lexer.token;\n    const tokenKind = currentToken.kind;\n    /**\n     * Every two non-punctuator tokens should have space between them.\n     * Also prevent case of non-punctuator token following by spread resulting\n     * in invalid token (e.g. `1...` is invalid Float token).\n     */\n\n    const isNonPunctuator = !(0,_language_lexer_mjs__WEBPACK_IMPORTED_MODULE_1__.isPunctuatorTokenKind)(currentToken.kind);\n    if (wasLastAddedTokenNonPunctuator) {\n      if (isNonPunctuator || currentToken.kind === _language_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_2__.TokenKind.SPREAD) {\n        strippedBody += ' ';\n      }\n    }\n    const tokenBody = body.slice(currentToken.start, currentToken.end);\n    if (tokenKind === _language_tokenKind_mjs__WEBPACK_IMPORTED_MODULE_2__.TokenKind.BLOCK_STRING) {\n      strippedBody += (0,_language_blockString_mjs__WEBPACK_IMPORTED_MODULE_3__.printBlockString)(currentToken.value, {\n        minimize: true\n      });\n    } else {\n      strippedBody += tokenBody;\n    }\n    wasLastAddedTokenNonPunctuator = isNonPunctuator;\n  }\n  return strippedBody;\n}\n\n//# sourceURL=webpack://my-app/../../graphql/utilities/stripIgnoredCharacters.mjs?");

/***/ }),

/***/ "../../graphql/utilities/typeComparators.mjs":
/*!***************************************************!*\
  !*** ../../graphql/utilities/typeComparators.mjs ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   doTypesOverlap: () => (/* binding */ doTypesOverlap),\n/* harmony export */   isEqualType: () => (/* binding */ isEqualType),\n/* harmony export */   isTypeSubTypeOf: () => (/* binding */ isTypeSubTypeOf)\n/* harmony export */ });\n/* harmony import */ var _type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../type/definition.mjs */ \"../../graphql/type/definition.mjs\");\n\n\n/**\n * Provided two types, return true if the types are equal (invariant).\n */\nfunction isEqualType(typeA, typeB) {\n  // Equivalent types are equal.\n  if (typeA === typeB) {\n    return true;\n  } // If either type is non-null, the other must also be non-null.\n\n  if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isNonNullType)(typeA) && (0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isNonNullType)(typeB)) {\n    return isEqualType(typeA.ofType, typeB.ofType);\n  } // If either type is a list, the other must also be a list.\n\n  if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isListType)(typeA) && (0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isListType)(typeB)) {\n    return isEqualType(typeA.ofType, typeB.ofType);\n  } // Otherwise the types are not equal.\n\n  return false;\n}\n/**\n * Provided a type and a super type, return true if the first type is either\n * equal or a subset of the second super type (covariant).\n */\n\nfunction isTypeSubTypeOf(schema, maybeSubType, superType) {\n  // Equivalent type is a valid subtype\n  if (maybeSubType === superType) {\n    return true;\n  } // If superType is non-null, maybeSubType must also be non-null.\n\n  if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isNonNullType)(superType)) {\n    if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isNonNullType)(maybeSubType)) {\n      return isTypeSubTypeOf(schema, maybeSubType.ofType, superType.ofType);\n    }\n    return false;\n  }\n  if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isNonNullType)(maybeSubType)) {\n    // If superType is nullable, maybeSubType may be non-null or nullable.\n    return isTypeSubTypeOf(schema, maybeSubType.ofType, superType);\n  } // If superType type is a list, maybeSubType type must also be a list.\n\n  if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isListType)(superType)) {\n    if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isListType)(maybeSubType)) {\n      return isTypeSubTypeOf(schema, maybeSubType.ofType, superType.ofType);\n    }\n    return false;\n  }\n  if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isListType)(maybeSubType)) {\n    // If superType is not a list, maybeSubType must also be not a list.\n    return false;\n  } // If superType type is an abstract type, check if it is super type of maybeSubType.\n  // Otherwise, the child type is not a valid subtype of the parent type.\n\n  return (0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isAbstractType)(superType) && ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterfaceType)(maybeSubType) || (0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isObjectType)(maybeSubType)) && schema.isSubType(superType, maybeSubType);\n}\n/**\n * Provided two composite types, determine if they \"overlap\". Two composite\n * types overlap when the Sets of possible concrete types for each intersect.\n *\n * This is often used to determine if a fragment of a given type could possibly\n * be visited in a context of another type.\n *\n * This function is commutative.\n */\n\nfunction doTypesOverlap(schema, typeA, typeB) {\n  // Equivalent types overlap\n  if (typeA === typeB) {\n    return true;\n  }\n  if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isAbstractType)(typeA)) {\n    if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isAbstractType)(typeB)) {\n      // If both types are abstract, then determine if there is any intersection\n      // between possible concrete types of each.\n      return schema.getPossibleTypes(typeA).some(type => schema.isSubType(typeB, type));\n    } // Determine if the latter type is a possible concrete type of the former.\n\n    return schema.isSubType(typeA, typeB);\n  }\n  if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isAbstractType)(typeB)) {\n    // Determine if the former type is a possible concrete type of the latter.\n    return schema.isSubType(typeB, typeA);\n  } // Otherwise the types do not overlap.\n\n  return false;\n}\n\n//# sourceURL=webpack://my-app/../../graphql/utilities/typeComparators.mjs?");

/***/ }),

/***/ "../../graphql/utilities/typeFromAST.mjs":
/*!***********************************************!*\
  !*** ../../graphql/utilities/typeFromAST.mjs ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   typeFromAST: () => (/* binding */ typeFromAST)\n/* harmony export */ });\n/* harmony import */ var _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../language/kinds.mjs */ \"../../graphql/language/kinds.mjs\");\n/* harmony import */ var _type_definition_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../type/definition.mjs */ \"../../graphql/type/definition.mjs\");\n\n\nfunction typeFromAST(schema, typeNode) {\n  switch (typeNode.kind) {\n    case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.LIST_TYPE:\n      {\n        const innerType = typeFromAST(schema, typeNode.type);\n        return innerType && new _type_definition_mjs__WEBPACK_IMPORTED_MODULE_1__.GraphQLList(innerType);\n      }\n    case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.NON_NULL_TYPE:\n      {\n        const innerType = typeFromAST(schema, typeNode.type);\n        return innerType && new _type_definition_mjs__WEBPACK_IMPORTED_MODULE_1__.GraphQLNonNull(innerType);\n      }\n    case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.NAMED_TYPE:\n      return schema.getType(typeNode.name.value);\n  }\n}\n\n//# sourceURL=webpack://my-app/../../graphql/utilities/typeFromAST.mjs?");

/***/ }),

/***/ "../../graphql/utilities/valueFromAST.mjs":
/*!************************************************!*\
  !*** ../../graphql/utilities/valueFromAST.mjs ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   valueFromAST: () => (/* binding */ valueFromAST)\n/* harmony export */ });\n/* harmony import */ var _jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../jsutils/inspect.mjs */ \"../../graphql/jsutils/inspect.mjs\");\n/* harmony import */ var _jsutils_invariant_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../jsutils/invariant.mjs */ \"../../graphql/jsutils/invariant.mjs\");\n/* harmony import */ var _jsutils_keyMap_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../jsutils/keyMap.mjs */ \"../../graphql/jsutils/keyMap.mjs\");\n/* harmony import */ var _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../language/kinds.mjs */ \"../../graphql/language/kinds.mjs\");\n/* harmony import */ var _type_definition_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../type/definition.mjs */ \"../../graphql/type/definition.mjs\");\n\n\n\n\n\n/**\n * Produces a JavaScript value given a GraphQL Value AST.\n *\n * A GraphQL type must be provided, which will be used to interpret different\n * GraphQL Value literals.\n *\n * Returns `undefined` when the value could not be validly coerced according to\n * the provided type.\n *\n * | GraphQL Value        | JSON Value    |\n * | -------------------- | ------------- |\n * | Input Object         | Object        |\n * | List                 | Array         |\n * | Boolean              | Boolean       |\n * | String               | String        |\n * | Int / Float          | Number        |\n * | Enum Value           | Unknown       |\n * | NullValue            | null          |\n *\n */\n\nfunction valueFromAST(valueNode, type, variables) {\n  if (!valueNode) {\n    // When there is no node, then there is also no value.\n    // Importantly, this is different from returning the value null.\n    return;\n  }\n  if (valueNode.kind === _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.VARIABLE) {\n    const variableName = valueNode.name.value;\n    if (variables == null || variables[variableName] === undefined) {\n      // No valid return value.\n      return;\n    }\n    const variableValue = variables[variableName];\n    if (variableValue === null && (0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_1__.isNonNullType)(type)) {\n      return; // Invalid: intentionally return no value.\n    } // Note: This does no further checking that this variable is correct.\n    // This assumes that this query has been validated and the variable\n    // usage here is of the correct type.\n\n    return variableValue;\n  }\n  if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_1__.isNonNullType)(type)) {\n    if (valueNode.kind === _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.NULL) {\n      return; // Invalid: intentionally return no value.\n    }\n    return valueFromAST(valueNode, type.ofType, variables);\n  }\n  if (valueNode.kind === _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.NULL) {\n    // This is explicitly returning the value null.\n    return null;\n  }\n  if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_1__.isListType)(type)) {\n    const itemType = type.ofType;\n    if (valueNode.kind === _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.LIST) {\n      const coercedValues = [];\n      for (const itemNode of valueNode.values) {\n        if (isMissingVariable(itemNode, variables)) {\n          // If an array contains a missing variable, it is either coerced to\n          // null or if the item type is non-null, it considered invalid.\n          if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_1__.isNonNullType)(itemType)) {\n            return; // Invalid: intentionally return no value.\n          }\n          coercedValues.push(null);\n        } else {\n          const itemValue = valueFromAST(itemNode, itemType, variables);\n          if (itemValue === undefined) {\n            return; // Invalid: intentionally return no value.\n          }\n          coercedValues.push(itemValue);\n        }\n      }\n      return coercedValues;\n    }\n    const coercedValue = valueFromAST(valueNode, itemType, variables);\n    if (coercedValue === undefined) {\n      return; // Invalid: intentionally return no value.\n    }\n    return [coercedValue];\n  }\n  if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_1__.isInputObjectType)(type)) {\n    if (valueNode.kind !== _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.OBJECT) {\n      return; // Invalid: intentionally return no value.\n    }\n    const coercedObj = Object.create(null);\n    const fieldNodes = (0,_jsutils_keyMap_mjs__WEBPACK_IMPORTED_MODULE_2__.keyMap)(valueNode.fields, field => field.name.value);\n    for (const field of Object.values(type.getFields())) {\n      const fieldNode = fieldNodes[field.name];\n      if (!fieldNode || isMissingVariable(fieldNode.value, variables)) {\n        if (field.defaultValue !== undefined) {\n          coercedObj[field.name] = field.defaultValue;\n        } else if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_1__.isNonNullType)(field.type)) {\n          return; // Invalid: intentionally return no value.\n        }\n        continue;\n      }\n      const fieldValue = valueFromAST(fieldNode.value, field.type, variables);\n      if (fieldValue === undefined) {\n        return; // Invalid: intentionally return no value.\n      }\n      coercedObj[field.name] = fieldValue;\n    }\n    return coercedObj;\n  }\n  if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_1__.isLeafType)(type)) {\n    // Scalars and Enums fulfill parsing a literal value via parseLiteral().\n    // Invalid values represent a failure to parse correctly, in which case\n    // no value is returned.\n    let result;\n    try {\n      result = type.parseLiteral(valueNode, variables);\n    } catch (_error) {\n      return; // Invalid: intentionally return no value.\n    }\n    if (result === undefined) {\n      return; // Invalid: intentionally return no value.\n    }\n    return result;\n  }\n  /* c8 ignore next 3 */\n  // Not reachable, all possible input types have been considered.\n\n   false || (0,_jsutils_invariant_mjs__WEBPACK_IMPORTED_MODULE_3__.invariant)(false, 'Unexpected input type: ' + (0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_4__.inspect)(type));\n} // Returns true if the provided valueNode is a variable which is not defined\n// in the set of variables.\n\nfunction isMissingVariable(valueNode, variables) {\n  return valueNode.kind === _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.VARIABLE && (variables == null || variables[valueNode.name.value] === undefined);\n}\n\n//# sourceURL=webpack://my-app/../../graphql/utilities/valueFromAST.mjs?");

/***/ }),

/***/ "../../graphql/utilities/valueFromASTUntyped.mjs":
/*!*******************************************************!*\
  !*** ../../graphql/utilities/valueFromASTUntyped.mjs ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   valueFromASTUntyped: () => (/* binding */ valueFromASTUntyped)\n/* harmony export */ });\n/* harmony import */ var _jsutils_keyValMap_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../jsutils/keyValMap.mjs */ \"../../graphql/jsutils/keyValMap.mjs\");\n/* harmony import */ var _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../language/kinds.mjs */ \"../../graphql/language/kinds.mjs\");\n\n\n/**\n * Produces a JavaScript value given a GraphQL Value AST.\n *\n * Unlike `valueFromAST()`, no type is provided. The resulting JavaScript value\n * will reflect the provided GraphQL value AST.\n *\n * | GraphQL Value        | JavaScript Value |\n * | -------------------- | ---------------- |\n * | Input Object         | Object           |\n * | List                 | Array            |\n * | Boolean              | Boolean          |\n * | String / Enum        | String           |\n * | Int / Float          | Number           |\n * | Null                 | null             |\n *\n */\n\nfunction valueFromASTUntyped(valueNode, variables) {\n  switch (valueNode.kind) {\n    case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.NULL:\n      return null;\n    case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.INT:\n      return parseInt(valueNode.value, 10);\n    case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.FLOAT:\n      return parseFloat(valueNode.value);\n    case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.STRING:\n    case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.ENUM:\n    case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.BOOLEAN:\n      return valueNode.value;\n    case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.LIST:\n      return valueNode.values.map(node => valueFromASTUntyped(node, variables));\n    case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.OBJECT:\n      return (0,_jsutils_keyValMap_mjs__WEBPACK_IMPORTED_MODULE_1__.keyValMap)(valueNode.fields, field => field.name.value, field => valueFromASTUntyped(field.value, variables));\n    case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.VARIABLE:\n      return variables === null || variables === void 0 ? void 0 : variables[valueNode.name.value];\n  }\n}\n\n//# sourceURL=webpack://my-app/../../graphql/utilities/valueFromASTUntyped.mjs?");

/***/ }),

/***/ "../../graphql/validation/ValidationContext.mjs":
/*!******************************************************!*\
  !*** ../../graphql/validation/ValidationContext.mjs ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ASTValidationContext: () => (/* binding */ ASTValidationContext),\n/* harmony export */   SDLValidationContext: () => (/* binding */ SDLValidationContext),\n/* harmony export */   ValidationContext: () => (/* binding */ ValidationContext)\n/* harmony export */ });\n/* harmony import */ var _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../language/kinds.mjs */ \"../../graphql/language/kinds.mjs\");\n/* harmony import */ var _language_visitor_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../language/visitor.mjs */ \"../../graphql/language/visitor.mjs\");\n/* harmony import */ var _utilities_TypeInfo_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utilities/TypeInfo.mjs */ \"../../graphql/utilities/TypeInfo.mjs\");\n\n\n\n\n/**\n * An instance of this class is passed as the \"this\" context to all validators,\n * allowing access to commonly useful contextual information from within a\n * validation rule.\n */\nclass ASTValidationContext {\n  constructor(ast, onError) {\n    this._ast = ast;\n    this._fragments = undefined;\n    this._fragmentSpreads = new Map();\n    this._recursivelyReferencedFragments = new Map();\n    this._onError = onError;\n  }\n  get [Symbol.toStringTag]() {\n    return 'ASTValidationContext';\n  }\n  reportError(error) {\n    this._onError(error);\n  }\n  getDocument() {\n    return this._ast;\n  }\n  getFragment(name) {\n    let fragments;\n    if (this._fragments) {\n      fragments = this._fragments;\n    } else {\n      fragments = Object.create(null);\n      for (const defNode of this.getDocument().definitions) {\n        if (defNode.kind === _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.FRAGMENT_DEFINITION) {\n          fragments[defNode.name.value] = defNode;\n        }\n      }\n      this._fragments = fragments;\n    }\n    return fragments[name];\n  }\n  getFragmentSpreads(node) {\n    let spreads = this._fragmentSpreads.get(node);\n    if (!spreads) {\n      spreads = [];\n      const setsToVisit = [node];\n      let set;\n      while (set = setsToVisit.pop()) {\n        for (const selection of set.selections) {\n          if (selection.kind === _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.FRAGMENT_SPREAD) {\n            spreads.push(selection);\n          } else if (selection.selectionSet) {\n            setsToVisit.push(selection.selectionSet);\n          }\n        }\n      }\n      this._fragmentSpreads.set(node, spreads);\n    }\n    return spreads;\n  }\n  getRecursivelyReferencedFragments(operation) {\n    let fragments = this._recursivelyReferencedFragments.get(operation);\n    if (!fragments) {\n      fragments = [];\n      const collectedNames = Object.create(null);\n      const nodesToVisit = [operation.selectionSet];\n      let node;\n      while (node = nodesToVisit.pop()) {\n        for (const spread of this.getFragmentSpreads(node)) {\n          const fragName = spread.name.value;\n          if (collectedNames[fragName] !== true) {\n            collectedNames[fragName] = true;\n            const fragment = this.getFragment(fragName);\n            if (fragment) {\n              fragments.push(fragment);\n              nodesToVisit.push(fragment.selectionSet);\n            }\n          }\n        }\n      }\n      this._recursivelyReferencedFragments.set(operation, fragments);\n    }\n    return fragments;\n  }\n}\nclass SDLValidationContext extends ASTValidationContext {\n  constructor(ast, schema, onError) {\n    super(ast, onError);\n    this._schema = schema;\n  }\n  get [Symbol.toStringTag]() {\n    return 'SDLValidationContext';\n  }\n  getSchema() {\n    return this._schema;\n  }\n}\nclass ValidationContext extends ASTValidationContext {\n  constructor(schema, ast, typeInfo, onError) {\n    super(ast, onError);\n    this._schema = schema;\n    this._typeInfo = typeInfo;\n    this._variableUsages = new Map();\n    this._recursiveVariableUsages = new Map();\n  }\n  get [Symbol.toStringTag]() {\n    return 'ValidationContext';\n  }\n  getSchema() {\n    return this._schema;\n  }\n  getVariableUsages(node) {\n    let usages = this._variableUsages.get(node);\n    if (!usages) {\n      const newUsages = [];\n      const typeInfo = new _utilities_TypeInfo_mjs__WEBPACK_IMPORTED_MODULE_1__.TypeInfo(this._schema);\n      (0,_language_visitor_mjs__WEBPACK_IMPORTED_MODULE_2__.visit)(node, (0,_utilities_TypeInfo_mjs__WEBPACK_IMPORTED_MODULE_1__.visitWithTypeInfo)(typeInfo, {\n        VariableDefinition: () => false,\n        Variable(variable) {\n          newUsages.push({\n            node: variable,\n            type: typeInfo.getInputType(),\n            defaultValue: typeInfo.getDefaultValue()\n          });\n        }\n      }));\n      usages = newUsages;\n      this._variableUsages.set(node, usages);\n    }\n    return usages;\n  }\n  getRecursiveVariableUsages(operation) {\n    let usages = this._recursiveVariableUsages.get(operation);\n    if (!usages) {\n      usages = this.getVariableUsages(operation);\n      for (const frag of this.getRecursivelyReferencedFragments(operation)) {\n        usages = usages.concat(this.getVariableUsages(frag));\n      }\n      this._recursiveVariableUsages.set(operation, usages);\n    }\n    return usages;\n  }\n  getType() {\n    return this._typeInfo.getType();\n  }\n  getParentType() {\n    return this._typeInfo.getParentType();\n  }\n  getInputType() {\n    return this._typeInfo.getInputType();\n  }\n  getParentInputType() {\n    return this._typeInfo.getParentInputType();\n  }\n  getFieldDef() {\n    return this._typeInfo.getFieldDef();\n  }\n  getDirective() {\n    return this._typeInfo.getDirective();\n  }\n  getArgument() {\n    return this._typeInfo.getArgument();\n  }\n  getEnumValue() {\n    return this._typeInfo.getEnumValue();\n  }\n}\n\n//# sourceURL=webpack://my-app/../../graphql/validation/ValidationContext.mjs?");

/***/ }),

/***/ "../../graphql/validation/rules/ExecutableDefinitionsRule.mjs":
/*!********************************************************************!*\
  !*** ../../graphql/validation/rules/ExecutableDefinitionsRule.mjs ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ExecutableDefinitionsRule: () => (/* binding */ ExecutableDefinitionsRule)\n/* harmony export */ });\n/* harmony import */ var _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../error/GraphQLError.mjs */ \"../../graphql/error/GraphQLError.mjs\");\n/* harmony import */ var _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../language/kinds.mjs */ \"../../graphql/language/kinds.mjs\");\n/* harmony import */ var _language_predicates_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../language/predicates.mjs */ \"../../graphql/language/predicates.mjs\");\n\n\n\n\n/**\n * Executable definitions\n *\n * A GraphQL document is only valid for execution if all definitions are either\n * operation or fragment definitions.\n *\n * See https://spec.graphql.org/draft/#sec-Executable-Definitions\n */\nfunction ExecutableDefinitionsRule(context) {\n  return {\n    Document(node) {\n      for (const definition of node.definitions) {\n        if (!(0,_language_predicates_mjs__WEBPACK_IMPORTED_MODULE_0__.isExecutableDefinitionNode)(definition)) {\n          const defName = definition.kind === _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.SCHEMA_DEFINITION || definition.kind === _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.SCHEMA_EXTENSION ? 'schema' : '\"' + definition.name.value + '\"';\n          context.reportError(new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_2__.GraphQLError(`The ${defName} definition is not executable.`, {\n            nodes: definition\n          }));\n        }\n      }\n      return false;\n    }\n  };\n}\n\n//# sourceURL=webpack://my-app/../../graphql/validation/rules/ExecutableDefinitionsRule.mjs?");

/***/ }),

/***/ "../../graphql/validation/rules/FieldsOnCorrectTypeRule.mjs":
/*!******************************************************************!*\
  !*** ../../graphql/validation/rules/FieldsOnCorrectTypeRule.mjs ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FieldsOnCorrectTypeRule: () => (/* binding */ FieldsOnCorrectTypeRule)\n/* harmony export */ });\n/* harmony import */ var _jsutils_didYouMean_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../jsutils/didYouMean.mjs */ \"../../graphql/jsutils/didYouMean.mjs\");\n/* harmony import */ var _jsutils_naturalCompare_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../jsutils/naturalCompare.mjs */ \"../../graphql/jsutils/naturalCompare.mjs\");\n/* harmony import */ var _jsutils_suggestionList_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../jsutils/suggestionList.mjs */ \"../../graphql/jsutils/suggestionList.mjs\");\n/* harmony import */ var _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../error/GraphQLError.mjs */ \"../../graphql/error/GraphQLError.mjs\");\n/* harmony import */ var _type_definition_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../type/definition.mjs */ \"../../graphql/type/definition.mjs\");\n\n\n\n\n\n\n/**\n * Fields on correct type\n *\n * A GraphQL document is only valid if all fields selected are defined by the\n * parent type, or are an allowed meta field such as __typename.\n *\n * See https://spec.graphql.org/draft/#sec-Field-Selections\n */\nfunction FieldsOnCorrectTypeRule(context) {\n  return {\n    Field(node) {\n      const type = context.getParentType();\n      if (type) {\n        const fieldDef = context.getFieldDef();\n        if (!fieldDef) {\n          // This field doesn't exist, lets look for suggestions.\n          const schema = context.getSchema();\n          const fieldName = node.name.value; // First determine if there are any suggested types to condition on.\n\n          let suggestion = (0,_jsutils_didYouMean_mjs__WEBPACK_IMPORTED_MODULE_0__.didYouMean)('to use an inline fragment on', getSuggestedTypeNames(schema, type, fieldName)); // If there are no suggested types, then perhaps this was a typo?\n\n          if (suggestion === '') {\n            suggestion = (0,_jsutils_didYouMean_mjs__WEBPACK_IMPORTED_MODULE_0__.didYouMean)(getSuggestedFieldNames(type, fieldName));\n          } // Report an error, including helpful suggestions.\n\n          context.reportError(new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_1__.GraphQLError(`Cannot query field \"${fieldName}\" on type \"${type.name}\".` + suggestion, {\n            nodes: node\n          }));\n        }\n      }\n    }\n  };\n}\n/**\n * Go through all of the implementations of type, as well as the interfaces that\n * they implement. If any of those types include the provided field, suggest them,\n * sorted by how often the type is referenced.\n */\n\nfunction getSuggestedTypeNames(schema, type, fieldName) {\n  if (!(0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_2__.isAbstractType)(type)) {\n    // Must be an Object type, which does not have possible fields.\n    return [];\n  }\n  const suggestedTypes = new Set();\n  const usageCount = Object.create(null);\n  for (const possibleType of schema.getPossibleTypes(type)) {\n    if (!possibleType.getFields()[fieldName]) {\n      continue;\n    } // This object type defines this field.\n\n    suggestedTypes.add(possibleType);\n    usageCount[possibleType.name] = 1;\n    for (const possibleInterface of possibleType.getInterfaces()) {\n      var _usageCount$possibleI;\n      if (!possibleInterface.getFields()[fieldName]) {\n        continue;\n      } // This interface type defines this field.\n\n      suggestedTypes.add(possibleInterface);\n      usageCount[possibleInterface.name] = ((_usageCount$possibleI = usageCount[possibleInterface.name]) !== null && _usageCount$possibleI !== void 0 ? _usageCount$possibleI : 0) + 1;\n    }\n  }\n  return [...suggestedTypes].sort((typeA, typeB) => {\n    // Suggest both interface and object types based on how common they are.\n    const usageCountDiff = usageCount[typeB.name] - usageCount[typeA.name];\n    if (usageCountDiff !== 0) {\n      return usageCountDiff;\n    } // Suggest super types first followed by subtypes\n\n    if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_2__.isInterfaceType)(typeA) && schema.isSubType(typeA, typeB)) {\n      return -1;\n    }\n    if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_2__.isInterfaceType)(typeB) && schema.isSubType(typeB, typeA)) {\n      return 1;\n    }\n    return (0,_jsutils_naturalCompare_mjs__WEBPACK_IMPORTED_MODULE_3__.naturalCompare)(typeA.name, typeB.name);\n  }).map(x => x.name);\n}\n/**\n * For the field name provided, determine if there are any similar field names\n * that may be the result of a typo.\n */\n\nfunction getSuggestedFieldNames(type, fieldName) {\n  if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_2__.isObjectType)(type) || (0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_2__.isInterfaceType)(type)) {\n    const possibleFieldNames = Object.keys(type.getFields());\n    return (0,_jsutils_suggestionList_mjs__WEBPACK_IMPORTED_MODULE_4__.suggestionList)(fieldName, possibleFieldNames);\n  } // Otherwise, must be a Union type, which does not define fields.\n\n  return [];\n}\n\n//# sourceURL=webpack://my-app/../../graphql/validation/rules/FieldsOnCorrectTypeRule.mjs?");

/***/ }),

/***/ "../../graphql/validation/rules/FragmentsOnCompositeTypesRule.mjs":
/*!************************************************************************!*\
  !*** ../../graphql/validation/rules/FragmentsOnCompositeTypesRule.mjs ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FragmentsOnCompositeTypesRule: () => (/* binding */ FragmentsOnCompositeTypesRule)\n/* harmony export */ });\n/* harmony import */ var _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../error/GraphQLError.mjs */ \"../../graphql/error/GraphQLError.mjs\");\n/* harmony import */ var _language_printer_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../language/printer.mjs */ \"../../graphql/language/printer.mjs\");\n/* harmony import */ var _type_definition_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../type/definition.mjs */ \"../../graphql/type/definition.mjs\");\n/* harmony import */ var _utilities_typeFromAST_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utilities/typeFromAST.mjs */ \"../../graphql/utilities/typeFromAST.mjs\");\n\n\n\n\n\n/**\n * Fragments on composite type\n *\n * Fragments use a type condition to determine if they apply, since fragments\n * can only be spread into a composite type (object, interface, or union), the\n * type condition must also be a composite type.\n *\n * See https://spec.graphql.org/draft/#sec-Fragments-On-Composite-Types\n */\nfunction FragmentsOnCompositeTypesRule(context) {\n  return {\n    InlineFragment(node) {\n      const typeCondition = node.typeCondition;\n      if (typeCondition) {\n        const type = (0,_utilities_typeFromAST_mjs__WEBPACK_IMPORTED_MODULE_0__.typeFromAST)(context.getSchema(), typeCondition);\n        if (type && !(0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_1__.isCompositeType)(type)) {\n          const typeStr = (0,_language_printer_mjs__WEBPACK_IMPORTED_MODULE_2__.print)(typeCondition);\n          context.reportError(new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_3__.GraphQLError(`Fragment cannot condition on non composite type \"${typeStr}\".`, {\n            nodes: typeCondition\n          }));\n        }\n      }\n    },\n    FragmentDefinition(node) {\n      const type = (0,_utilities_typeFromAST_mjs__WEBPACK_IMPORTED_MODULE_0__.typeFromAST)(context.getSchema(), node.typeCondition);\n      if (type && !(0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_1__.isCompositeType)(type)) {\n        const typeStr = (0,_language_printer_mjs__WEBPACK_IMPORTED_MODULE_2__.print)(node.typeCondition);\n        context.reportError(new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_3__.GraphQLError(`Fragment \"${node.name.value}\" cannot condition on non composite type \"${typeStr}\".`, {\n          nodes: node.typeCondition\n        }));\n      }\n    }\n  };\n}\n\n//# sourceURL=webpack://my-app/../../graphql/validation/rules/FragmentsOnCompositeTypesRule.mjs?");

/***/ }),

/***/ "../../graphql/validation/rules/KnownArgumentNamesRule.mjs":
/*!*****************************************************************!*\
  !*** ../../graphql/validation/rules/KnownArgumentNamesRule.mjs ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   KnownArgumentNamesOnDirectivesRule: () => (/* binding */ KnownArgumentNamesOnDirectivesRule),\n/* harmony export */   KnownArgumentNamesRule: () => (/* binding */ KnownArgumentNamesRule)\n/* harmony export */ });\n/* harmony import */ var _jsutils_didYouMean_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../jsutils/didYouMean.mjs */ \"../../graphql/jsutils/didYouMean.mjs\");\n/* harmony import */ var _jsutils_suggestionList_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../jsutils/suggestionList.mjs */ \"../../graphql/jsutils/suggestionList.mjs\");\n/* harmony import */ var _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../error/GraphQLError.mjs */ \"../../graphql/error/GraphQLError.mjs\");\n/* harmony import */ var _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../language/kinds.mjs */ \"../../graphql/language/kinds.mjs\");\n/* harmony import */ var _type_directives_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../type/directives.mjs */ \"../../graphql/type/directives.mjs\");\n\n\n\n\n\n\n/**\n * Known argument names\n *\n * A GraphQL field is only valid if all supplied arguments are defined by\n * that field.\n *\n * See https://spec.graphql.org/draft/#sec-Argument-Names\n * See https://spec.graphql.org/draft/#sec-Directives-Are-In-Valid-Locations\n */\nfunction KnownArgumentNamesRule(context) {\n  return {\n    // eslint-disable-next-line new-cap\n    ...KnownArgumentNamesOnDirectivesRule(context),\n    Argument(argNode) {\n      const argDef = context.getArgument();\n      const fieldDef = context.getFieldDef();\n      const parentType = context.getParentType();\n      if (!argDef && fieldDef && parentType) {\n        const argName = argNode.name.value;\n        const knownArgsNames = fieldDef.args.map(arg => arg.name);\n        const suggestions = (0,_jsutils_suggestionList_mjs__WEBPACK_IMPORTED_MODULE_0__.suggestionList)(argName, knownArgsNames);\n        context.reportError(new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_1__.GraphQLError(`Unknown argument \"${argName}\" on field \"${parentType.name}.${fieldDef.name}\".` + (0,_jsutils_didYouMean_mjs__WEBPACK_IMPORTED_MODULE_2__.didYouMean)(suggestions), {\n          nodes: argNode\n        }));\n      }\n    }\n  };\n}\n/**\n * @internal\n */\n\nfunction KnownArgumentNamesOnDirectivesRule(context) {\n  const directiveArgs = Object.create(null);\n  const schema = context.getSchema();\n  const definedDirectives = schema ? schema.getDirectives() : _type_directives_mjs__WEBPACK_IMPORTED_MODULE_3__.specifiedDirectives;\n  for (const directive of definedDirectives) {\n    directiveArgs[directive.name] = directive.args.map(arg => arg.name);\n  }\n  const astDefinitions = context.getDocument().definitions;\n  for (const def of astDefinitions) {\n    if (def.kind === _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_4__.Kind.DIRECTIVE_DEFINITION) {\n      var _def$arguments;\n\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n      /* c8 ignore next */\n      const argsNodes = (_def$arguments = def.arguments) !== null && _def$arguments !== void 0 ? _def$arguments : [];\n      directiveArgs[def.name.value] = argsNodes.map(arg => arg.name.value);\n    }\n  }\n  return {\n    Directive(directiveNode) {\n      const directiveName = directiveNode.name.value;\n      const knownArgs = directiveArgs[directiveName];\n      if (directiveNode.arguments && knownArgs) {\n        for (const argNode of directiveNode.arguments) {\n          const argName = argNode.name.value;\n          if (!knownArgs.includes(argName)) {\n            const suggestions = (0,_jsutils_suggestionList_mjs__WEBPACK_IMPORTED_MODULE_0__.suggestionList)(argName, knownArgs);\n            context.reportError(new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_1__.GraphQLError(`Unknown argument \"${argName}\" on directive \"@${directiveName}\".` + (0,_jsutils_didYouMean_mjs__WEBPACK_IMPORTED_MODULE_2__.didYouMean)(suggestions), {\n              nodes: argNode\n            }));\n          }\n        }\n      }\n      return false;\n    }\n  };\n}\n\n//# sourceURL=webpack://my-app/../../graphql/validation/rules/KnownArgumentNamesRule.mjs?");

/***/ }),

/***/ "../../graphql/validation/rules/KnownDirectivesRule.mjs":
/*!**************************************************************!*\
  !*** ../../graphql/validation/rules/KnownDirectivesRule.mjs ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   KnownDirectivesRule: () => (/* binding */ KnownDirectivesRule)\n/* harmony export */ });\n/* harmony import */ var _jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../jsutils/inspect.mjs */ \"../../graphql/jsutils/inspect.mjs\");\n/* harmony import */ var _jsutils_invariant_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../jsutils/invariant.mjs */ \"../../graphql/jsutils/invariant.mjs\");\n/* harmony import */ var _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../error/GraphQLError.mjs */ \"../../graphql/error/GraphQLError.mjs\");\n/* harmony import */ var _language_ast_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../language/ast.mjs */ \"../../graphql/language/ast.mjs\");\n/* harmony import */ var _language_directiveLocation_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../language/directiveLocation.mjs */ \"../../graphql/language/directiveLocation.mjs\");\n/* harmony import */ var _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../language/kinds.mjs */ \"../../graphql/language/kinds.mjs\");\n/* harmony import */ var _type_directives_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../type/directives.mjs */ \"../../graphql/type/directives.mjs\");\n\n\n\n\n\n\n\n\n/**\n * Known directives\n *\n * A GraphQL document is only valid if all `@directives` are known by the\n * schema and legally positioned.\n *\n * See https://spec.graphql.org/draft/#sec-Directives-Are-Defined\n */\nfunction KnownDirectivesRule(context) {\n  const locationsMap = Object.create(null);\n  const schema = context.getSchema();\n  const definedDirectives = schema ? schema.getDirectives() : _type_directives_mjs__WEBPACK_IMPORTED_MODULE_0__.specifiedDirectives;\n  for (const directive of definedDirectives) {\n    locationsMap[directive.name] = directive.locations;\n  }\n  const astDefinitions = context.getDocument().definitions;\n  for (const def of astDefinitions) {\n    if (def.kind === _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.DIRECTIVE_DEFINITION) {\n      locationsMap[def.name.value] = def.locations.map(name => name.value);\n    }\n  }\n  return {\n    Directive(node, _key, _parent, _path, ancestors) {\n      const name = node.name.value;\n      const locations = locationsMap[name];\n      if (!locations) {\n        context.reportError(new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_2__.GraphQLError(`Unknown directive \"@${name}\".`, {\n          nodes: node\n        }));\n        return;\n      }\n      const candidateLocation = getDirectiveLocationForASTPath(ancestors);\n      if (candidateLocation && !locations.includes(candidateLocation)) {\n        context.reportError(new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_2__.GraphQLError(`Directive \"@${name}\" may not be used on ${candidateLocation}.`, {\n          nodes: node\n        }));\n      }\n    }\n  };\n}\nfunction getDirectiveLocationForASTPath(ancestors) {\n  const appliedTo = ancestors[ancestors.length - 1];\n  'kind' in appliedTo || (0,_jsutils_invariant_mjs__WEBPACK_IMPORTED_MODULE_3__.invariant)(false);\n  switch (appliedTo.kind) {\n    case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.OPERATION_DEFINITION:\n      return getDirectiveLocationForOperation(appliedTo.operation);\n    case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.FIELD:\n      return _language_directiveLocation_mjs__WEBPACK_IMPORTED_MODULE_4__.DirectiveLocation.FIELD;\n    case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.FRAGMENT_SPREAD:\n      return _language_directiveLocation_mjs__WEBPACK_IMPORTED_MODULE_4__.DirectiveLocation.FRAGMENT_SPREAD;\n    case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.INLINE_FRAGMENT:\n      return _language_directiveLocation_mjs__WEBPACK_IMPORTED_MODULE_4__.DirectiveLocation.INLINE_FRAGMENT;\n    case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.FRAGMENT_DEFINITION:\n      return _language_directiveLocation_mjs__WEBPACK_IMPORTED_MODULE_4__.DirectiveLocation.FRAGMENT_DEFINITION;\n    case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.VARIABLE_DEFINITION:\n      return _language_directiveLocation_mjs__WEBPACK_IMPORTED_MODULE_4__.DirectiveLocation.VARIABLE_DEFINITION;\n    case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.SCHEMA_DEFINITION:\n    case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.SCHEMA_EXTENSION:\n      return _language_directiveLocation_mjs__WEBPACK_IMPORTED_MODULE_4__.DirectiveLocation.SCHEMA;\n    case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.SCALAR_TYPE_DEFINITION:\n    case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.SCALAR_TYPE_EXTENSION:\n      return _language_directiveLocation_mjs__WEBPACK_IMPORTED_MODULE_4__.DirectiveLocation.SCALAR;\n    case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.OBJECT_TYPE_DEFINITION:\n    case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.OBJECT_TYPE_EXTENSION:\n      return _language_directiveLocation_mjs__WEBPACK_IMPORTED_MODULE_4__.DirectiveLocation.OBJECT;\n    case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.FIELD_DEFINITION:\n      return _language_directiveLocation_mjs__WEBPACK_IMPORTED_MODULE_4__.DirectiveLocation.FIELD_DEFINITION;\n    case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.INTERFACE_TYPE_DEFINITION:\n    case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.INTERFACE_TYPE_EXTENSION:\n      return _language_directiveLocation_mjs__WEBPACK_IMPORTED_MODULE_4__.DirectiveLocation.INTERFACE;\n    case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.UNION_TYPE_DEFINITION:\n    case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.UNION_TYPE_EXTENSION:\n      return _language_directiveLocation_mjs__WEBPACK_IMPORTED_MODULE_4__.DirectiveLocation.UNION;\n    case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.ENUM_TYPE_DEFINITION:\n    case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.ENUM_TYPE_EXTENSION:\n      return _language_directiveLocation_mjs__WEBPACK_IMPORTED_MODULE_4__.DirectiveLocation.ENUM;\n    case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.ENUM_VALUE_DEFINITION:\n      return _language_directiveLocation_mjs__WEBPACK_IMPORTED_MODULE_4__.DirectiveLocation.ENUM_VALUE;\n    case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.INPUT_OBJECT_TYPE_DEFINITION:\n    case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.INPUT_OBJECT_TYPE_EXTENSION:\n      return _language_directiveLocation_mjs__WEBPACK_IMPORTED_MODULE_4__.DirectiveLocation.INPUT_OBJECT;\n    case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.INPUT_VALUE_DEFINITION:\n      {\n        const parentNode = ancestors[ancestors.length - 3];\n        'kind' in parentNode || (0,_jsutils_invariant_mjs__WEBPACK_IMPORTED_MODULE_3__.invariant)(false);\n        return parentNode.kind === _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.INPUT_OBJECT_TYPE_DEFINITION ? _language_directiveLocation_mjs__WEBPACK_IMPORTED_MODULE_4__.DirectiveLocation.INPUT_FIELD_DEFINITION : _language_directiveLocation_mjs__WEBPACK_IMPORTED_MODULE_4__.DirectiveLocation.ARGUMENT_DEFINITION;\n      }\n    // Not reachable, all possible types have been considered.\n\n    /* c8 ignore next */\n\n    default:\n       false || (0,_jsutils_invariant_mjs__WEBPACK_IMPORTED_MODULE_3__.invariant)(false, 'Unexpected kind: ' + (0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_5__.inspect)(appliedTo.kind));\n  }\n}\nfunction getDirectiveLocationForOperation(operation) {\n  switch (operation) {\n    case _language_ast_mjs__WEBPACK_IMPORTED_MODULE_6__.OperationTypeNode.QUERY:\n      return _language_directiveLocation_mjs__WEBPACK_IMPORTED_MODULE_4__.DirectiveLocation.QUERY;\n    case _language_ast_mjs__WEBPACK_IMPORTED_MODULE_6__.OperationTypeNode.MUTATION:\n      return _language_directiveLocation_mjs__WEBPACK_IMPORTED_MODULE_4__.DirectiveLocation.MUTATION;\n    case _language_ast_mjs__WEBPACK_IMPORTED_MODULE_6__.OperationTypeNode.SUBSCRIPTION:\n      return _language_directiveLocation_mjs__WEBPACK_IMPORTED_MODULE_4__.DirectiveLocation.SUBSCRIPTION;\n  }\n}\n\n//# sourceURL=webpack://my-app/../../graphql/validation/rules/KnownDirectivesRule.mjs?");

/***/ }),

/***/ "../../graphql/validation/rules/KnownFragmentNamesRule.mjs":
/*!*****************************************************************!*\
  !*** ../../graphql/validation/rules/KnownFragmentNamesRule.mjs ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   KnownFragmentNamesRule: () => (/* binding */ KnownFragmentNamesRule)\n/* harmony export */ });\n/* harmony import */ var _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../error/GraphQLError.mjs */ \"../../graphql/error/GraphQLError.mjs\");\n\n\n/**\n * Known fragment names\n *\n * A GraphQL document is only valid if all `...Fragment` fragment spreads refer\n * to fragments defined in the same document.\n *\n * See https://spec.graphql.org/draft/#sec-Fragment-spread-target-defined\n */\nfunction KnownFragmentNamesRule(context) {\n  return {\n    FragmentSpread(node) {\n      const fragmentName = node.name.value;\n      const fragment = context.getFragment(fragmentName);\n      if (!fragment) {\n        context.reportError(new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLError(`Unknown fragment \"${fragmentName}\".`, {\n          nodes: node.name\n        }));\n      }\n    }\n  };\n}\n\n//# sourceURL=webpack://my-app/../../graphql/validation/rules/KnownFragmentNamesRule.mjs?");

/***/ }),

/***/ "../../graphql/validation/rules/KnownTypeNamesRule.mjs":
/*!*************************************************************!*\
  !*** ../../graphql/validation/rules/KnownTypeNamesRule.mjs ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   KnownTypeNamesRule: () => (/* binding */ KnownTypeNamesRule)\n/* harmony export */ });\n/* harmony import */ var _jsutils_didYouMean_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../jsutils/didYouMean.mjs */ \"../../graphql/jsutils/didYouMean.mjs\");\n/* harmony import */ var _jsutils_suggestionList_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../jsutils/suggestionList.mjs */ \"../../graphql/jsutils/suggestionList.mjs\");\n/* harmony import */ var _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../error/GraphQLError.mjs */ \"../../graphql/error/GraphQLError.mjs\");\n/* harmony import */ var _language_predicates_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../language/predicates.mjs */ \"../../graphql/language/predicates.mjs\");\n/* harmony import */ var _type_introspection_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../type/introspection.mjs */ \"../../graphql/type/introspection.mjs\");\n/* harmony import */ var _type_scalars_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../type/scalars.mjs */ \"../../graphql/type/scalars.mjs\");\n\n\n\n\n\n\n\n/**\n * Known type names\n *\n * A GraphQL document is only valid if referenced types (specifically\n * variable definitions and fragment conditions) are defined by the type schema.\n *\n * See https://spec.graphql.org/draft/#sec-Fragment-Spread-Type-Existence\n */\nfunction KnownTypeNamesRule(context) {\n  const schema = context.getSchema();\n  const existingTypesMap = schema ? schema.getTypeMap() : Object.create(null);\n  const definedTypes = Object.create(null);\n  for (const def of context.getDocument().definitions) {\n    if ((0,_language_predicates_mjs__WEBPACK_IMPORTED_MODULE_0__.isTypeDefinitionNode)(def)) {\n      definedTypes[def.name.value] = true;\n    }\n  }\n  const typeNames = [...Object.keys(existingTypesMap), ...Object.keys(definedTypes)];\n  return {\n    NamedType(node, _1, parent, _2, ancestors) {\n      const typeName = node.name.value;\n      if (!existingTypesMap[typeName] && !definedTypes[typeName]) {\n        var _ancestors$;\n        const definitionNode = (_ancestors$ = ancestors[2]) !== null && _ancestors$ !== void 0 ? _ancestors$ : parent;\n        const isSDL = definitionNode != null && isSDLNode(definitionNode);\n        if (isSDL && standardTypeNames.includes(typeName)) {\n          return;\n        }\n        const suggestedTypes = (0,_jsutils_suggestionList_mjs__WEBPACK_IMPORTED_MODULE_1__.suggestionList)(typeName, isSDL ? standardTypeNames.concat(typeNames) : typeNames);\n        context.reportError(new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_2__.GraphQLError(`Unknown type \"${typeName}\".` + (0,_jsutils_didYouMean_mjs__WEBPACK_IMPORTED_MODULE_3__.didYouMean)(suggestedTypes), {\n          nodes: node\n        }));\n      }\n    }\n  };\n}\nconst standardTypeNames = [..._type_scalars_mjs__WEBPACK_IMPORTED_MODULE_4__.specifiedScalarTypes, ..._type_introspection_mjs__WEBPACK_IMPORTED_MODULE_5__.introspectionTypes].map(type => type.name);\nfunction isSDLNode(value) {\n  return 'kind' in value && ((0,_language_predicates_mjs__WEBPACK_IMPORTED_MODULE_0__.isTypeSystemDefinitionNode)(value) || (0,_language_predicates_mjs__WEBPACK_IMPORTED_MODULE_0__.isTypeSystemExtensionNode)(value));\n}\n\n//# sourceURL=webpack://my-app/../../graphql/validation/rules/KnownTypeNamesRule.mjs?");

/***/ }),

/***/ "../../graphql/validation/rules/LoneAnonymousOperationRule.mjs":
/*!*********************************************************************!*\
  !*** ../../graphql/validation/rules/LoneAnonymousOperationRule.mjs ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LoneAnonymousOperationRule: () => (/* binding */ LoneAnonymousOperationRule)\n/* harmony export */ });\n/* harmony import */ var _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../error/GraphQLError.mjs */ \"../../graphql/error/GraphQLError.mjs\");\n/* harmony import */ var _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../language/kinds.mjs */ \"../../graphql/language/kinds.mjs\");\n\n\n\n/**\n * Lone anonymous operation\n *\n * A GraphQL document is only valid if when it contains an anonymous operation\n * (the query short-hand) that it contains only that one operation definition.\n *\n * See https://spec.graphql.org/draft/#sec-Lone-Anonymous-Operation\n */\nfunction LoneAnonymousOperationRule(context) {\n  let operationCount = 0;\n  return {\n    Document(node) {\n      operationCount = node.definitions.filter(definition => definition.kind === _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.OPERATION_DEFINITION).length;\n    },\n    OperationDefinition(node) {\n      if (!node.name && operationCount > 1) {\n        context.reportError(new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_1__.GraphQLError('This anonymous operation must be the only defined operation.', {\n          nodes: node\n        }));\n      }\n    }\n  };\n}\n\n//# sourceURL=webpack://my-app/../../graphql/validation/rules/LoneAnonymousOperationRule.mjs?");

/***/ }),

/***/ "../../graphql/validation/rules/LoneSchemaDefinitionRule.mjs":
/*!*******************************************************************!*\
  !*** ../../graphql/validation/rules/LoneSchemaDefinitionRule.mjs ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LoneSchemaDefinitionRule: () => (/* binding */ LoneSchemaDefinitionRule)\n/* harmony export */ });\n/* harmony import */ var _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../error/GraphQLError.mjs */ \"../../graphql/error/GraphQLError.mjs\");\n\n\n/**\n * Lone Schema definition\n *\n * A GraphQL document is only valid if it contains only one schema definition.\n */\nfunction LoneSchemaDefinitionRule(context) {\n  var _ref, _ref2, _oldSchema$astNode;\n  const oldSchema = context.getSchema();\n  const alreadyDefined = (_ref = (_ref2 = (_oldSchema$astNode = oldSchema === null || oldSchema === void 0 ? void 0 : oldSchema.astNode) !== null && _oldSchema$astNode !== void 0 ? _oldSchema$astNode : oldSchema === null || oldSchema === void 0 ? void 0 : oldSchema.getQueryType()) !== null && _ref2 !== void 0 ? _ref2 : oldSchema === null || oldSchema === void 0 ? void 0 : oldSchema.getMutationType()) !== null && _ref !== void 0 ? _ref : oldSchema === null || oldSchema === void 0 ? void 0 : oldSchema.getSubscriptionType();\n  let schemaDefinitionsCount = 0;\n  return {\n    SchemaDefinition(node) {\n      if (alreadyDefined) {\n        context.reportError(new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLError('Cannot define a new schema within a schema extension.', {\n          nodes: node\n        }));\n        return;\n      }\n      if (schemaDefinitionsCount > 0) {\n        context.reportError(new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLError('Must provide only one schema definition.', {\n          nodes: node\n        }));\n      }\n      ++schemaDefinitionsCount;\n    }\n  };\n}\n\n//# sourceURL=webpack://my-app/../../graphql/validation/rules/LoneSchemaDefinitionRule.mjs?");

/***/ }),

/***/ "../../graphql/validation/rules/NoFragmentCyclesRule.mjs":
/*!***************************************************************!*\
  !*** ../../graphql/validation/rules/NoFragmentCyclesRule.mjs ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NoFragmentCyclesRule: () => (/* binding */ NoFragmentCyclesRule)\n/* harmony export */ });\n/* harmony import */ var _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../error/GraphQLError.mjs */ \"../../graphql/error/GraphQLError.mjs\");\n\n\n/**\n * No fragment cycles\n *\n * The graph of fragment spreads must not form any cycles including spreading itself.\n * Otherwise an operation could infinitely spread or infinitely execute on cycles in the underlying data.\n *\n * See https://spec.graphql.org/draft/#sec-Fragment-spreads-must-not-form-cycles\n */\nfunction NoFragmentCyclesRule(context) {\n  // Tracks already visited fragments to maintain O(N) and to ensure that cycles\n  // are not redundantly reported.\n  const visitedFrags = Object.create(null); // Array of AST nodes used to produce meaningful errors\n\n  const spreadPath = []; // Position in the spread path\n\n  const spreadPathIndexByName = Object.create(null);\n  return {\n    OperationDefinition: () => false,\n    FragmentDefinition(node) {\n      detectCycleRecursive(node);\n      return false;\n    }\n  }; // This does a straight-forward DFS to find cycles.\n  // It does not terminate when a cycle was found but continues to explore\n  // the graph to find all possible cycles.\n\n  function detectCycleRecursive(fragment) {\n    if (visitedFrags[fragment.name.value]) {\n      return;\n    }\n    const fragmentName = fragment.name.value;\n    visitedFrags[fragmentName] = true;\n    const spreadNodes = context.getFragmentSpreads(fragment.selectionSet);\n    if (spreadNodes.length === 0) {\n      return;\n    }\n    spreadPathIndexByName[fragmentName] = spreadPath.length;\n    for (const spreadNode of spreadNodes) {\n      const spreadName = spreadNode.name.value;\n      const cycleIndex = spreadPathIndexByName[spreadName];\n      spreadPath.push(spreadNode);\n      if (cycleIndex === undefined) {\n        const spreadFragment = context.getFragment(spreadName);\n        if (spreadFragment) {\n          detectCycleRecursive(spreadFragment);\n        }\n      } else {\n        const cyclePath = spreadPath.slice(cycleIndex);\n        const viaPath = cyclePath.slice(0, -1).map(s => '\"' + s.name.value + '\"').join(', ');\n        context.reportError(new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLError(`Cannot spread fragment \"${spreadName}\" within itself` + (viaPath !== '' ? ` via ${viaPath}.` : '.'), {\n          nodes: cyclePath\n        }));\n      }\n      spreadPath.pop();\n    }\n    spreadPathIndexByName[fragmentName] = undefined;\n  }\n}\n\n//# sourceURL=webpack://my-app/../../graphql/validation/rules/NoFragmentCyclesRule.mjs?");

/***/ }),

/***/ "../../graphql/validation/rules/NoUndefinedVariablesRule.mjs":
/*!*******************************************************************!*\
  !*** ../../graphql/validation/rules/NoUndefinedVariablesRule.mjs ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NoUndefinedVariablesRule: () => (/* binding */ NoUndefinedVariablesRule)\n/* harmony export */ });\n/* harmony import */ var _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../error/GraphQLError.mjs */ \"../../graphql/error/GraphQLError.mjs\");\n\n\n/**\n * No undefined variables\n *\n * A GraphQL operation is only valid if all variables encountered, both directly\n * and via fragment spreads, are defined by that operation.\n *\n * See https://spec.graphql.org/draft/#sec-All-Variable-Uses-Defined\n */\nfunction NoUndefinedVariablesRule(context) {\n  let variableNameDefined = Object.create(null);\n  return {\n    OperationDefinition: {\n      enter() {\n        variableNameDefined = Object.create(null);\n      },\n      leave(operation) {\n        const usages = context.getRecursiveVariableUsages(operation);\n        for (const {\n          node\n        } of usages) {\n          const varName = node.name.value;\n          if (variableNameDefined[varName] !== true) {\n            context.reportError(new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLError(operation.name ? `Variable \"$${varName}\" is not defined by operation \"${operation.name.value}\".` : `Variable \"$${varName}\" is not defined.`, {\n              nodes: [node, operation]\n            }));\n          }\n        }\n      }\n    },\n    VariableDefinition(node) {\n      variableNameDefined[node.variable.name.value] = true;\n    }\n  };\n}\n\n//# sourceURL=webpack://my-app/../../graphql/validation/rules/NoUndefinedVariablesRule.mjs?");

/***/ }),

/***/ "../../graphql/validation/rules/NoUnusedFragmentsRule.mjs":
/*!****************************************************************!*\
  !*** ../../graphql/validation/rules/NoUnusedFragmentsRule.mjs ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NoUnusedFragmentsRule: () => (/* binding */ NoUnusedFragmentsRule)\n/* harmony export */ });\n/* harmony import */ var _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../error/GraphQLError.mjs */ \"../../graphql/error/GraphQLError.mjs\");\n\n\n/**\n * No unused fragments\n *\n * A GraphQL document is only valid if all fragment definitions are spread\n * within operations, or spread within other fragments spread within operations.\n *\n * See https://spec.graphql.org/draft/#sec-Fragments-Must-Be-Used\n */\nfunction NoUnusedFragmentsRule(context) {\n  const operationDefs = [];\n  const fragmentDefs = [];\n  return {\n    OperationDefinition(node) {\n      operationDefs.push(node);\n      return false;\n    },\n    FragmentDefinition(node) {\n      fragmentDefs.push(node);\n      return false;\n    },\n    Document: {\n      leave() {\n        const fragmentNameUsed = Object.create(null);\n        for (const operation of operationDefs) {\n          for (const fragment of context.getRecursivelyReferencedFragments(operation)) {\n            fragmentNameUsed[fragment.name.value] = true;\n          }\n        }\n        for (const fragmentDef of fragmentDefs) {\n          const fragName = fragmentDef.name.value;\n          if (fragmentNameUsed[fragName] !== true) {\n            context.reportError(new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLError(`Fragment \"${fragName}\" is never used.`, {\n              nodes: fragmentDef\n            }));\n          }\n        }\n      }\n    }\n  };\n}\n\n//# sourceURL=webpack://my-app/../../graphql/validation/rules/NoUnusedFragmentsRule.mjs?");

/***/ }),

/***/ "../../graphql/validation/rules/NoUnusedVariablesRule.mjs":
/*!****************************************************************!*\
  !*** ../../graphql/validation/rules/NoUnusedVariablesRule.mjs ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NoUnusedVariablesRule: () => (/* binding */ NoUnusedVariablesRule)\n/* harmony export */ });\n/* harmony import */ var _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../error/GraphQLError.mjs */ \"../../graphql/error/GraphQLError.mjs\");\n\n\n/**\n * No unused variables\n *\n * A GraphQL operation is only valid if all variables defined by an operation\n * are used, either directly or within a spread fragment.\n *\n * See https://spec.graphql.org/draft/#sec-All-Variables-Used\n */\nfunction NoUnusedVariablesRule(context) {\n  let variableDefs = [];\n  return {\n    OperationDefinition: {\n      enter() {\n        variableDefs = [];\n      },\n      leave(operation) {\n        const variableNameUsed = Object.create(null);\n        const usages = context.getRecursiveVariableUsages(operation);\n        for (const {\n          node\n        } of usages) {\n          variableNameUsed[node.name.value] = true;\n        }\n        for (const variableDef of variableDefs) {\n          const variableName = variableDef.variable.name.value;\n          if (variableNameUsed[variableName] !== true) {\n            context.reportError(new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLError(operation.name ? `Variable \"$${variableName}\" is never used in operation \"${operation.name.value}\".` : `Variable \"$${variableName}\" is never used.`, {\n              nodes: variableDef\n            }));\n          }\n        }\n      }\n    },\n    VariableDefinition(def) {\n      variableDefs.push(def);\n    }\n  };\n}\n\n//# sourceURL=webpack://my-app/../../graphql/validation/rules/NoUnusedVariablesRule.mjs?");

/***/ }),

/***/ "../../graphql/validation/rules/OverlappingFieldsCanBeMergedRule.mjs":
/*!***************************************************************************!*\
  !*** ../../graphql/validation/rules/OverlappingFieldsCanBeMergedRule.mjs ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OverlappingFieldsCanBeMergedRule: () => (/* binding */ OverlappingFieldsCanBeMergedRule)\n/* harmony export */ });\n/* harmony import */ var _jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../jsutils/inspect.mjs */ \"../../graphql/jsutils/inspect.mjs\");\n/* harmony import */ var _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../error/GraphQLError.mjs */ \"../../graphql/error/GraphQLError.mjs\");\n/* harmony import */ var _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../language/kinds.mjs */ \"../../graphql/language/kinds.mjs\");\n/* harmony import */ var _language_printer_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../language/printer.mjs */ \"../../graphql/language/printer.mjs\");\n/* harmony import */ var _type_definition_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../type/definition.mjs */ \"../../graphql/type/definition.mjs\");\n/* harmony import */ var _utilities_sortValueNode_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utilities/sortValueNode.mjs */ \"../../graphql/utilities/sortValueNode.mjs\");\n/* harmony import */ var _utilities_typeFromAST_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utilities/typeFromAST.mjs */ \"../../graphql/utilities/typeFromAST.mjs\");\n\n\n\n\n\n\n\nfunction reasonMessage(reason) {\n  if (Array.isArray(reason)) {\n    return reason.map(([responseName, subReason]) => `subfields \"${responseName}\" conflict because ` + reasonMessage(subReason)).join(' and ');\n  }\n  return reason;\n}\n/**\n * Overlapping fields can be merged\n *\n * A selection set is only valid if all fields (including spreading any\n * fragments) either correspond to distinct response names or can be merged\n * without ambiguity.\n *\n * See https://spec.graphql.org/draft/#sec-Field-Selection-Merging\n */\n\nfunction OverlappingFieldsCanBeMergedRule(context) {\n  // A memoization for when two fragments are compared \"between\" each other for\n  // conflicts. Two fragments may be compared many times, so memoizing this can\n  // dramatically improve the performance of this validator.\n  const comparedFragmentPairs = new PairSet(); // A cache for the \"field map\" and list of fragment names found in any given\n  // selection set. Selection sets may be asked for this information multiple\n  // times, so this improves the performance of this validator.\n\n  const cachedFieldsAndFragmentNames = new Map();\n  return {\n    SelectionSet(selectionSet) {\n      const conflicts = findConflictsWithinSelectionSet(context, cachedFieldsAndFragmentNames, comparedFragmentPairs, context.getParentType(), selectionSet);\n      for (const [[responseName, reason], fields1, fields2] of conflicts) {\n        const reasonMsg = reasonMessage(reason);\n        context.reportError(new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLError(`Fields \"${responseName}\" conflict because ${reasonMsg}. Use different aliases on the fields to fetch both if this was intentional.`, {\n          nodes: fields1.concat(fields2)\n        }));\n      }\n    }\n  };\n}\n\n/**\n * Algorithm:\n *\n * Conflicts occur when two fields exist in a query which will produce the same\n * response name, but represent differing values, thus creating a conflict.\n * The algorithm below finds all conflicts via making a series of comparisons\n * between fields. In order to compare as few fields as possible, this makes\n * a series of comparisons \"within\" sets of fields and \"between\" sets of fields.\n *\n * Given any selection set, a collection produces both a set of fields by\n * also including all inline fragments, as well as a list of fragments\n * referenced by fragment spreads.\n *\n * A) Each selection set represented in the document first compares \"within\" its\n * collected set of fields, finding any conflicts between every pair of\n * overlapping fields.\n * Note: This is the *only time* that a the fields \"within\" a set are compared\n * to each other. After this only fields \"between\" sets are compared.\n *\n * B) Also, if any fragment is referenced in a selection set, then a\n * comparison is made \"between\" the original set of fields and the\n * referenced fragment.\n *\n * C) Also, if multiple fragments are referenced, then comparisons\n * are made \"between\" each referenced fragment.\n *\n * D) When comparing \"between\" a set of fields and a referenced fragment, first\n * a comparison is made between each field in the original set of fields and\n * each field in the the referenced set of fields.\n *\n * E) Also, if any fragment is referenced in the referenced selection set,\n * then a comparison is made \"between\" the original set of fields and the\n * referenced fragment (recursively referring to step D).\n *\n * F) When comparing \"between\" two fragments, first a comparison is made between\n * each field in the first referenced set of fields and each field in the the\n * second referenced set of fields.\n *\n * G) Also, any fragments referenced by the first must be compared to the\n * second, and any fragments referenced by the second must be compared to the\n * first (recursively referring to step F).\n *\n * H) When comparing two fields, if both have selection sets, then a comparison\n * is made \"between\" both selection sets, first comparing the set of fields in\n * the first selection set with the set of fields in the second.\n *\n * I) Also, if any fragment is referenced in either selection set, then a\n * comparison is made \"between\" the other set of fields and the\n * referenced fragment.\n *\n * J) Also, if two fragments are referenced in both selection sets, then a\n * comparison is made \"between\" the two fragments.\n *\n */\n// Find all conflicts found \"within\" a selection set, including those found\n// via spreading in fragments. Called when visiting each SelectionSet in the\n// GraphQL Document.\nfunction findConflictsWithinSelectionSet(context, cachedFieldsAndFragmentNames, comparedFragmentPairs, parentType, selectionSet) {\n  const conflicts = [];\n  const [fieldMap, fragmentNames] = getFieldsAndFragmentNames(context, cachedFieldsAndFragmentNames, parentType, selectionSet); // (A) Find find all conflicts \"within\" the fields of this selection set.\n  // Note: this is the *only place* `collectConflictsWithin` is called.\n\n  collectConflictsWithin(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, fieldMap);\n  if (fragmentNames.length !== 0) {\n    // (B) Then collect conflicts between these fields and those represented by\n    // each spread fragment name found.\n    for (let i = 0; i < fragmentNames.length; i++) {\n      collectConflictsBetweenFieldsAndFragment(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, false, fieldMap, fragmentNames[i]); // (C) Then compare this fragment with all other fragments found in this\n      // selection set to collect conflicts between fragments spread together.\n      // This compares each item in the list of fragment names to every other\n      // item in that same list (except for itself).\n\n      for (let j = i + 1; j < fragmentNames.length; j++) {\n        collectConflictsBetweenFragments(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, false, fragmentNames[i], fragmentNames[j]);\n      }\n    }\n  }\n  return conflicts;\n} // Collect all conflicts found between a set of fields and a fragment reference\n// including via spreading in any nested fragments.\n\nfunction collectConflictsBetweenFieldsAndFragment(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, fieldMap, fragmentName) {\n  const fragment = context.getFragment(fragmentName);\n  if (!fragment) {\n    return;\n  }\n  const [fieldMap2, referencedFragmentNames] = getReferencedFieldsAndFragmentNames(context, cachedFieldsAndFragmentNames, fragment); // Do not compare a fragment's fieldMap to itself.\n\n  if (fieldMap === fieldMap2) {\n    return;\n  } // (D) First collect any conflicts between the provided collection of fields\n  // and the collection of fields represented by the given fragment.\n\n  collectConflictsBetween(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, fieldMap, fieldMap2); // (E) Then collect any conflicts between the provided collection of fields\n  // and any fragment names found in the given fragment.\n\n  for (const referencedFragmentName of referencedFragmentNames) {\n    // Memoize so two fragments are not compared for conflicts more than once.\n    if (comparedFragmentPairs.has(referencedFragmentName, fragmentName, areMutuallyExclusive)) {\n      continue;\n    }\n    comparedFragmentPairs.add(referencedFragmentName, fragmentName, areMutuallyExclusive);\n    collectConflictsBetweenFieldsAndFragment(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, fieldMap, referencedFragmentName);\n  }\n} // Collect all conflicts found between two fragments, including via spreading in\n// any nested fragments.\n\nfunction collectConflictsBetweenFragments(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, fragmentName1, fragmentName2) {\n  // No need to compare a fragment to itself.\n  if (fragmentName1 === fragmentName2) {\n    return;\n  } // Memoize so two fragments are not compared for conflicts more than once.\n\n  if (comparedFragmentPairs.has(fragmentName1, fragmentName2, areMutuallyExclusive)) {\n    return;\n  }\n  comparedFragmentPairs.add(fragmentName1, fragmentName2, areMutuallyExclusive);\n  const fragment1 = context.getFragment(fragmentName1);\n  const fragment2 = context.getFragment(fragmentName2);\n  if (!fragment1 || !fragment2) {\n    return;\n  }\n  const [fieldMap1, referencedFragmentNames1] = getReferencedFieldsAndFragmentNames(context, cachedFieldsAndFragmentNames, fragment1);\n  const [fieldMap2, referencedFragmentNames2] = getReferencedFieldsAndFragmentNames(context, cachedFieldsAndFragmentNames, fragment2); // (F) First, collect all conflicts between these two collections of fields\n  // (not including any nested fragments).\n\n  collectConflictsBetween(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, fieldMap1, fieldMap2); // (G) Then collect conflicts between the first fragment and any nested\n  // fragments spread in the second fragment.\n\n  for (const referencedFragmentName2 of referencedFragmentNames2) {\n    collectConflictsBetweenFragments(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, fragmentName1, referencedFragmentName2);\n  } // (G) Then collect conflicts between the second fragment and any nested\n  // fragments spread in the first fragment.\n\n  for (const referencedFragmentName1 of referencedFragmentNames1) {\n    collectConflictsBetweenFragments(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, referencedFragmentName1, fragmentName2);\n  }\n} // Find all conflicts found between two selection sets, including those found\n// via spreading in fragments. Called when determining if conflicts exist\n// between the sub-fields of two overlapping fields.\n\nfunction findConflictsBetweenSubSelectionSets(context, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, parentType1, selectionSet1, parentType2, selectionSet2) {\n  const conflicts = [];\n  const [fieldMap1, fragmentNames1] = getFieldsAndFragmentNames(context, cachedFieldsAndFragmentNames, parentType1, selectionSet1);\n  const [fieldMap2, fragmentNames2] = getFieldsAndFragmentNames(context, cachedFieldsAndFragmentNames, parentType2, selectionSet2); // (H) First, collect all conflicts between these two collections of field.\n\n  collectConflictsBetween(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, fieldMap1, fieldMap2); // (I) Then collect conflicts between the first collection of fields and\n  // those referenced by each fragment name associated with the second.\n\n  for (const fragmentName2 of fragmentNames2) {\n    collectConflictsBetweenFieldsAndFragment(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, fieldMap1, fragmentName2);\n  } // (I) Then collect conflicts between the second collection of fields and\n  // those referenced by each fragment name associated with the first.\n\n  for (const fragmentName1 of fragmentNames1) {\n    collectConflictsBetweenFieldsAndFragment(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, fieldMap2, fragmentName1);\n  } // (J) Also collect conflicts between any fragment names by the first and\n  // fragment names by the second. This compares each item in the first set of\n  // names to each item in the second set of names.\n\n  for (const fragmentName1 of fragmentNames1) {\n    for (const fragmentName2 of fragmentNames2) {\n      collectConflictsBetweenFragments(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, fragmentName1, fragmentName2);\n    }\n  }\n  return conflicts;\n} // Collect all Conflicts \"within\" one collection of fields.\n\nfunction collectConflictsWithin(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, fieldMap) {\n  // A field map is a keyed collection, where each key represents a response\n  // name and the value at that key is a list of all fields which provide that\n  // response name. For every response name, if there are multiple fields, they\n  // must be compared to find a potential conflict.\n  for (const [responseName, fields] of Object.entries(fieldMap)) {\n    // This compares every field in the list to every other field in this list\n    // (except to itself). If the list only has one item, nothing needs to\n    // be compared.\n    if (fields.length > 1) {\n      for (let i = 0; i < fields.length; i++) {\n        for (let j = i + 1; j < fields.length; j++) {\n          const conflict = findConflict(context, cachedFieldsAndFragmentNames, comparedFragmentPairs, false,\n          // within one collection is never mutually exclusive\n          responseName, fields[i], fields[j]);\n          if (conflict) {\n            conflicts.push(conflict);\n          }\n        }\n      }\n    }\n  }\n} // Collect all Conflicts between two collections of fields. This is similar to,\n// but different from the `collectConflictsWithin` function above. This check\n// assumes that `collectConflictsWithin` has already been called on each\n// provided collection of fields. This is true because this validator traverses\n// each individual selection set.\n\nfunction collectConflictsBetween(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, parentFieldsAreMutuallyExclusive, fieldMap1, fieldMap2) {\n  // A field map is a keyed collection, where each key represents a response\n  // name and the value at that key is a list of all fields which provide that\n  // response name. For any response name which appears in both provided field\n  // maps, each field from the first field map must be compared to every field\n  // in the second field map to find potential conflicts.\n  for (const [responseName, fields1] of Object.entries(fieldMap1)) {\n    const fields2 = fieldMap2[responseName];\n    if (fields2) {\n      for (const field1 of fields1) {\n        for (const field2 of fields2) {\n          const conflict = findConflict(context, cachedFieldsAndFragmentNames, comparedFragmentPairs, parentFieldsAreMutuallyExclusive, responseName, field1, field2);\n          if (conflict) {\n            conflicts.push(conflict);\n          }\n        }\n      }\n    }\n  }\n} // Determines if there is a conflict between two particular fields, including\n// comparing their sub-fields.\n\nfunction findConflict(context, cachedFieldsAndFragmentNames, comparedFragmentPairs, parentFieldsAreMutuallyExclusive, responseName, field1, field2) {\n  const [parentType1, node1, def1] = field1;\n  const [parentType2, node2, def2] = field2; // If it is known that two fields could not possibly apply at the same\n  // time, due to the parent types, then it is safe to permit them to diverge\n  // in aliased field or arguments used as they will not present any ambiguity\n  // by differing.\n  // It is known that two parent types could never overlap if they are\n  // different Object types. Interface or Union types might overlap - if not\n  // in the current state of the schema, then perhaps in some future version,\n  // thus may not safely diverge.\n\n  const areMutuallyExclusive = parentFieldsAreMutuallyExclusive || parentType1 !== parentType2 && (0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_1__.isObjectType)(parentType1) && (0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_1__.isObjectType)(parentType2);\n  if (!areMutuallyExclusive) {\n    // Two aliases must refer to the same field.\n    const name1 = node1.name.value;\n    const name2 = node2.name.value;\n    if (name1 !== name2) {\n      return [[responseName, `\"${name1}\" and \"${name2}\" are different fields`], [node1], [node2]];\n    } // Two field calls must have the same arguments.\n\n    if (!sameArguments(node1, node2)) {\n      return [[responseName, 'they have differing arguments'], [node1], [node2]];\n    }\n  } // The return type for each field.\n\n  const type1 = def1 === null || def1 === void 0 ? void 0 : def1.type;\n  const type2 = def2 === null || def2 === void 0 ? void 0 : def2.type;\n  if (type1 && type2 && doTypesConflict(type1, type2)) {\n    return [[responseName, `they return conflicting types \"${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_2__.inspect)(type1)}\" and \"${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_2__.inspect)(type2)}\"`], [node1], [node2]];\n  } // Collect and compare sub-fields. Use the same \"visited fragment names\" list\n  // for both collections so fields in a fragment reference are never\n  // compared to themselves.\n\n  const selectionSet1 = node1.selectionSet;\n  const selectionSet2 = node2.selectionSet;\n  if (selectionSet1 && selectionSet2) {\n    const conflicts = findConflictsBetweenSubSelectionSets(context, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, (0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_1__.getNamedType)(type1), selectionSet1, (0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_1__.getNamedType)(type2), selectionSet2);\n    return subfieldConflicts(conflicts, responseName, node1, node2);\n  }\n}\nfunction sameArguments(node1, node2) {\n  const args1 = node1.arguments;\n  const args2 = node2.arguments;\n  if (args1 === undefined || args1.length === 0) {\n    return args2 === undefined || args2.length === 0;\n  }\n  if (args2 === undefined || args2.length === 0) {\n    return false;\n  }\n  /* c8 ignore next */\n\n  if (args1.length !== args2.length) {\n    /* c8 ignore next */\n    return false;\n    /* c8 ignore next */\n  }\n  const values2 = new Map(args2.map(({\n    name,\n    value\n  }) => [name.value, value]));\n  return args1.every(arg1 => {\n    const value1 = arg1.value;\n    const value2 = values2.get(arg1.name.value);\n    if (value2 === undefined) {\n      return false;\n    }\n    return stringifyValue(value1) === stringifyValue(value2);\n  });\n}\nfunction stringifyValue(value) {\n  return (0,_language_printer_mjs__WEBPACK_IMPORTED_MODULE_3__.print)((0,_utilities_sortValueNode_mjs__WEBPACK_IMPORTED_MODULE_4__.sortValueNode)(value));\n} // Two types conflict if both types could not apply to a value simultaneously.\n// Composite types are ignored as their individual field types will be compared\n// later recursively. However List and Non-Null types must match.\n\nfunction doTypesConflict(type1, type2) {\n  if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_1__.isListType)(type1)) {\n    return (0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_1__.isListType)(type2) ? doTypesConflict(type1.ofType, type2.ofType) : true;\n  }\n  if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_1__.isListType)(type2)) {\n    return true;\n  }\n  if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_1__.isNonNullType)(type1)) {\n    return (0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_1__.isNonNullType)(type2) ? doTypesConflict(type1.ofType, type2.ofType) : true;\n  }\n  if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_1__.isNonNullType)(type2)) {\n    return true;\n  }\n  if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_1__.isLeafType)(type1) || (0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_1__.isLeafType)(type2)) {\n    return type1 !== type2;\n  }\n  return false;\n} // Given a selection set, return the collection of fields (a mapping of response\n// name to field nodes and definitions) as well as a list of fragment names\n// referenced via fragment spreads.\n\nfunction getFieldsAndFragmentNames(context, cachedFieldsAndFragmentNames, parentType, selectionSet) {\n  const cached = cachedFieldsAndFragmentNames.get(selectionSet);\n  if (cached) {\n    return cached;\n  }\n  const nodeAndDefs = Object.create(null);\n  const fragmentNames = Object.create(null);\n  _collectFieldsAndFragmentNames(context, parentType, selectionSet, nodeAndDefs, fragmentNames);\n  const result = [nodeAndDefs, Object.keys(fragmentNames)];\n  cachedFieldsAndFragmentNames.set(selectionSet, result);\n  return result;\n} // Given a reference to a fragment, return the represented collection of fields\n// as well as a list of nested fragment names referenced via fragment spreads.\n\nfunction getReferencedFieldsAndFragmentNames(context, cachedFieldsAndFragmentNames, fragment) {\n  // Short-circuit building a type from the node if possible.\n  const cached = cachedFieldsAndFragmentNames.get(fragment.selectionSet);\n  if (cached) {\n    return cached;\n  }\n  const fragmentType = (0,_utilities_typeFromAST_mjs__WEBPACK_IMPORTED_MODULE_5__.typeFromAST)(context.getSchema(), fragment.typeCondition);\n  return getFieldsAndFragmentNames(context, cachedFieldsAndFragmentNames, fragmentType, fragment.selectionSet);\n}\nfunction _collectFieldsAndFragmentNames(context, parentType, selectionSet, nodeAndDefs, fragmentNames) {\n  for (const selection of selectionSet.selections) {\n    switch (selection.kind) {\n      case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_6__.Kind.FIELD:\n        {\n          const fieldName = selection.name.value;\n          let fieldDef;\n          if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_1__.isObjectType)(parentType) || (0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_1__.isInterfaceType)(parentType)) {\n            fieldDef = parentType.getFields()[fieldName];\n          }\n          const responseName = selection.alias ? selection.alias.value : fieldName;\n          if (!nodeAndDefs[responseName]) {\n            nodeAndDefs[responseName] = [];\n          }\n          nodeAndDefs[responseName].push([parentType, selection, fieldDef]);\n          break;\n        }\n      case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_6__.Kind.FRAGMENT_SPREAD:\n        fragmentNames[selection.name.value] = true;\n        break;\n      case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_6__.Kind.INLINE_FRAGMENT:\n        {\n          const typeCondition = selection.typeCondition;\n          const inlineFragmentType = typeCondition ? (0,_utilities_typeFromAST_mjs__WEBPACK_IMPORTED_MODULE_5__.typeFromAST)(context.getSchema(), typeCondition) : parentType;\n          _collectFieldsAndFragmentNames(context, inlineFragmentType, selection.selectionSet, nodeAndDefs, fragmentNames);\n          break;\n        }\n    }\n  }\n} // Given a series of Conflicts which occurred between two sub-fields, generate\n// a single Conflict.\n\nfunction subfieldConflicts(conflicts, responseName, node1, node2) {\n  if (conflicts.length > 0) {\n    return [[responseName, conflicts.map(([reason]) => reason)], [node1, ...conflicts.map(([, fields1]) => fields1).flat()], [node2, ...conflicts.map(([,, fields2]) => fields2).flat()]];\n  }\n}\n/**\n * A way to keep track of pairs of things when the ordering of the pair does not matter.\n */\n\nclass PairSet {\n  constructor() {\n    this._data = new Map();\n  }\n  has(a, b, areMutuallyExclusive) {\n    var _this$_data$get;\n    const [key1, key2] = a < b ? [a, b] : [b, a];\n    const result = (_this$_data$get = this._data.get(key1)) === null || _this$_data$get === void 0 ? void 0 : _this$_data$get.get(key2);\n    if (result === undefined) {\n      return false;\n    } // areMutuallyExclusive being false is a superset of being true, hence if\n    // we want to know if this PairSet \"has\" these two with no exclusivity,\n    // we have to ensure it was added as such.\n\n    return areMutuallyExclusive ? true : areMutuallyExclusive === result;\n  }\n  add(a, b, areMutuallyExclusive) {\n    const [key1, key2] = a < b ? [a, b] : [b, a];\n    const map = this._data.get(key1);\n    if (map === undefined) {\n      this._data.set(key1, new Map([[key2, areMutuallyExclusive]]));\n    } else {\n      map.set(key2, areMutuallyExclusive);\n    }\n  }\n}\n\n//# sourceURL=webpack://my-app/../../graphql/validation/rules/OverlappingFieldsCanBeMergedRule.mjs?");

/***/ }),

/***/ "../../graphql/validation/rules/PossibleFragmentSpreadsRule.mjs":
/*!**********************************************************************!*\
  !*** ../../graphql/validation/rules/PossibleFragmentSpreadsRule.mjs ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PossibleFragmentSpreadsRule: () => (/* binding */ PossibleFragmentSpreadsRule)\n/* harmony export */ });\n/* harmony import */ var _jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../jsutils/inspect.mjs */ \"../../graphql/jsutils/inspect.mjs\");\n/* harmony import */ var _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../error/GraphQLError.mjs */ \"../../graphql/error/GraphQLError.mjs\");\n/* harmony import */ var _type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../type/definition.mjs */ \"../../graphql/type/definition.mjs\");\n/* harmony import */ var _utilities_typeComparators_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utilities/typeComparators.mjs */ \"../../graphql/utilities/typeComparators.mjs\");\n/* harmony import */ var _utilities_typeFromAST_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utilities/typeFromAST.mjs */ \"../../graphql/utilities/typeFromAST.mjs\");\n\n\n\n\n\n\n/**\n * Possible fragment spread\n *\n * A fragment spread is only valid if the type condition could ever possibly\n * be true: if there is a non-empty intersection of the possible parent types,\n * and possible types which pass the type condition.\n */\nfunction PossibleFragmentSpreadsRule(context) {\n  return {\n    InlineFragment(node) {\n      const fragType = context.getType();\n      const parentType = context.getParentType();\n      if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isCompositeType)(fragType) && (0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isCompositeType)(parentType) && !(0,_utilities_typeComparators_mjs__WEBPACK_IMPORTED_MODULE_1__.doTypesOverlap)(context.getSchema(), fragType, parentType)) {\n        const parentTypeStr = (0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_2__.inspect)(parentType);\n        const fragTypeStr = (0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_2__.inspect)(fragType);\n        context.reportError(new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_3__.GraphQLError(`Fragment cannot be spread here as objects of type \"${parentTypeStr}\" can never be of type \"${fragTypeStr}\".`, {\n          nodes: node\n        }));\n      }\n    },\n    FragmentSpread(node) {\n      const fragName = node.name.value;\n      const fragType = getFragmentType(context, fragName);\n      const parentType = context.getParentType();\n      if (fragType && parentType && !(0,_utilities_typeComparators_mjs__WEBPACK_IMPORTED_MODULE_1__.doTypesOverlap)(context.getSchema(), fragType, parentType)) {\n        const parentTypeStr = (0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_2__.inspect)(parentType);\n        const fragTypeStr = (0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_2__.inspect)(fragType);\n        context.reportError(new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_3__.GraphQLError(`Fragment \"${fragName}\" cannot be spread here as objects of type \"${parentTypeStr}\" can never be of type \"${fragTypeStr}\".`, {\n          nodes: node\n        }));\n      }\n    }\n  };\n}\nfunction getFragmentType(context, name) {\n  const frag = context.getFragment(name);\n  if (frag) {\n    const type = (0,_utilities_typeFromAST_mjs__WEBPACK_IMPORTED_MODULE_4__.typeFromAST)(context.getSchema(), frag.typeCondition);\n    if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isCompositeType)(type)) {\n      return type;\n    }\n  }\n}\n\n//# sourceURL=webpack://my-app/../../graphql/validation/rules/PossibleFragmentSpreadsRule.mjs?");

/***/ }),

/***/ "../../graphql/validation/rules/PossibleTypeExtensionsRule.mjs":
/*!*********************************************************************!*\
  !*** ../../graphql/validation/rules/PossibleTypeExtensionsRule.mjs ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PossibleTypeExtensionsRule: () => (/* binding */ PossibleTypeExtensionsRule)\n/* harmony export */ });\n/* harmony import */ var _jsutils_didYouMean_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../jsutils/didYouMean.mjs */ \"../../graphql/jsutils/didYouMean.mjs\");\n/* harmony import */ var _jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../jsutils/inspect.mjs */ \"../../graphql/jsutils/inspect.mjs\");\n/* harmony import */ var _jsutils_invariant_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../jsutils/invariant.mjs */ \"../../graphql/jsutils/invariant.mjs\");\n/* harmony import */ var _jsutils_suggestionList_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../jsutils/suggestionList.mjs */ \"../../graphql/jsutils/suggestionList.mjs\");\n/* harmony import */ var _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../error/GraphQLError.mjs */ \"../../graphql/error/GraphQLError.mjs\");\n/* harmony import */ var _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../language/kinds.mjs */ \"../../graphql/language/kinds.mjs\");\n/* harmony import */ var _language_predicates_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../language/predicates.mjs */ \"../../graphql/language/predicates.mjs\");\n/* harmony import */ var _type_definition_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../type/definition.mjs */ \"../../graphql/type/definition.mjs\");\n\n\n\n\n\n\n\n\n\n/**\n * Possible type extension\n *\n * A type extension is only valid if the type is defined and has the same kind.\n */\nfunction PossibleTypeExtensionsRule(context) {\n  const schema = context.getSchema();\n  const definedTypes = Object.create(null);\n  for (const def of context.getDocument().definitions) {\n    if ((0,_language_predicates_mjs__WEBPACK_IMPORTED_MODULE_0__.isTypeDefinitionNode)(def)) {\n      definedTypes[def.name.value] = def;\n    }\n  }\n  return {\n    ScalarTypeExtension: checkExtension,\n    ObjectTypeExtension: checkExtension,\n    InterfaceTypeExtension: checkExtension,\n    UnionTypeExtension: checkExtension,\n    EnumTypeExtension: checkExtension,\n    InputObjectTypeExtension: checkExtension\n  };\n  function checkExtension(node) {\n    const typeName = node.name.value;\n    const defNode = definedTypes[typeName];\n    const existingType = schema === null || schema === void 0 ? void 0 : schema.getType(typeName);\n    let expectedKind;\n    if (defNode) {\n      expectedKind = defKindToExtKind[defNode.kind];\n    } else if (existingType) {\n      expectedKind = typeToExtKind(existingType);\n    }\n    if (expectedKind) {\n      if (expectedKind !== node.kind) {\n        const kindStr = extensionKindToTypeName(node.kind);\n        context.reportError(new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_1__.GraphQLError(`Cannot extend non-${kindStr} type \"${typeName}\".`, {\n          nodes: defNode ? [defNode, node] : node\n        }));\n      }\n    } else {\n      const allTypeNames = Object.keys({\n        ...definedTypes,\n        ...(schema === null || schema === void 0 ? void 0 : schema.getTypeMap())\n      });\n      const suggestedTypes = (0,_jsutils_suggestionList_mjs__WEBPACK_IMPORTED_MODULE_2__.suggestionList)(typeName, allTypeNames);\n      context.reportError(new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_1__.GraphQLError(`Cannot extend type \"${typeName}\" because it is not defined.` + (0,_jsutils_didYouMean_mjs__WEBPACK_IMPORTED_MODULE_3__.didYouMean)(suggestedTypes), {\n        nodes: node.name\n      }));\n    }\n  }\n}\nconst defKindToExtKind = {\n  [_language_kinds_mjs__WEBPACK_IMPORTED_MODULE_4__.Kind.SCALAR_TYPE_DEFINITION]: _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_4__.Kind.SCALAR_TYPE_EXTENSION,\n  [_language_kinds_mjs__WEBPACK_IMPORTED_MODULE_4__.Kind.OBJECT_TYPE_DEFINITION]: _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_4__.Kind.OBJECT_TYPE_EXTENSION,\n  [_language_kinds_mjs__WEBPACK_IMPORTED_MODULE_4__.Kind.INTERFACE_TYPE_DEFINITION]: _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_4__.Kind.INTERFACE_TYPE_EXTENSION,\n  [_language_kinds_mjs__WEBPACK_IMPORTED_MODULE_4__.Kind.UNION_TYPE_DEFINITION]: _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_4__.Kind.UNION_TYPE_EXTENSION,\n  [_language_kinds_mjs__WEBPACK_IMPORTED_MODULE_4__.Kind.ENUM_TYPE_DEFINITION]: _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_4__.Kind.ENUM_TYPE_EXTENSION,\n  [_language_kinds_mjs__WEBPACK_IMPORTED_MODULE_4__.Kind.INPUT_OBJECT_TYPE_DEFINITION]: _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_4__.Kind.INPUT_OBJECT_TYPE_EXTENSION\n};\nfunction typeToExtKind(type) {\n  if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_5__.isScalarType)(type)) {\n    return _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_4__.Kind.SCALAR_TYPE_EXTENSION;\n  }\n  if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_5__.isObjectType)(type)) {\n    return _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_4__.Kind.OBJECT_TYPE_EXTENSION;\n  }\n  if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_5__.isInterfaceType)(type)) {\n    return _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_4__.Kind.INTERFACE_TYPE_EXTENSION;\n  }\n  if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_5__.isUnionType)(type)) {\n    return _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_4__.Kind.UNION_TYPE_EXTENSION;\n  }\n  if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_5__.isEnumType)(type)) {\n    return _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_4__.Kind.ENUM_TYPE_EXTENSION;\n  }\n  if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_5__.isInputObjectType)(type)) {\n    return _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_4__.Kind.INPUT_OBJECT_TYPE_EXTENSION;\n  }\n  /* c8 ignore next 3 */\n  // Not reachable. All possible types have been considered\n\n   false || (0,_jsutils_invariant_mjs__WEBPACK_IMPORTED_MODULE_6__.invariant)(false, 'Unexpected type: ' + (0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_7__.inspect)(type));\n}\nfunction extensionKindToTypeName(kind) {\n  switch (kind) {\n    case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_4__.Kind.SCALAR_TYPE_EXTENSION:\n      return 'scalar';\n    case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_4__.Kind.OBJECT_TYPE_EXTENSION:\n      return 'object';\n    case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_4__.Kind.INTERFACE_TYPE_EXTENSION:\n      return 'interface';\n    case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_4__.Kind.UNION_TYPE_EXTENSION:\n      return 'union';\n    case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_4__.Kind.ENUM_TYPE_EXTENSION:\n      return 'enum';\n    case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_4__.Kind.INPUT_OBJECT_TYPE_EXTENSION:\n      return 'input object';\n    // Not reachable. All possible types have been considered\n\n    /* c8 ignore next */\n\n    default:\n       false || (0,_jsutils_invariant_mjs__WEBPACK_IMPORTED_MODULE_6__.invariant)(false, 'Unexpected kind: ' + (0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_7__.inspect)(kind));\n  }\n}\n\n//# sourceURL=webpack://my-app/../../graphql/validation/rules/PossibleTypeExtensionsRule.mjs?");

/***/ }),

/***/ "../../graphql/validation/rules/ProvidedRequiredArgumentsRule.mjs":
/*!************************************************************************!*\
  !*** ../../graphql/validation/rules/ProvidedRequiredArgumentsRule.mjs ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ProvidedRequiredArgumentsOnDirectivesRule: () => (/* binding */ ProvidedRequiredArgumentsOnDirectivesRule),\n/* harmony export */   ProvidedRequiredArgumentsRule: () => (/* binding */ ProvidedRequiredArgumentsRule)\n/* harmony export */ });\n/* harmony import */ var _jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../jsutils/inspect.mjs */ \"../../graphql/jsutils/inspect.mjs\");\n/* harmony import */ var _jsutils_keyMap_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../jsutils/keyMap.mjs */ \"../../graphql/jsutils/keyMap.mjs\");\n/* harmony import */ var _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../error/GraphQLError.mjs */ \"../../graphql/error/GraphQLError.mjs\");\n/* harmony import */ var _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../language/kinds.mjs */ \"../../graphql/language/kinds.mjs\");\n/* harmony import */ var _language_printer_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../language/printer.mjs */ \"../../graphql/language/printer.mjs\");\n/* harmony import */ var _type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../type/definition.mjs */ \"../../graphql/type/definition.mjs\");\n/* harmony import */ var _type_directives_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../type/directives.mjs */ \"../../graphql/type/directives.mjs\");\n\n\n\n\n\n\n\n\n/**\n * Provided required arguments\n *\n * A field or directive is only valid if all required (non-null without a\n * default value) field arguments have been provided.\n */\nfunction ProvidedRequiredArgumentsRule(context) {\n  return {\n    // eslint-disable-next-line new-cap\n    ...ProvidedRequiredArgumentsOnDirectivesRule(context),\n    Field: {\n      // Validate on leave to allow for deeper errors to appear first.\n      leave(fieldNode) {\n        var _fieldNode$arguments;\n        const fieldDef = context.getFieldDef();\n        if (!fieldDef) {\n          return false;\n        }\n        const providedArgs = new Set(\n        // FIXME: https://github.com/graphql/graphql-js/issues/2203\n        /* c8 ignore next */\n        (_fieldNode$arguments = fieldNode.arguments) === null || _fieldNode$arguments === void 0 ? void 0 : _fieldNode$arguments.map(arg => arg.name.value));\n        for (const argDef of fieldDef.args) {\n          if (!providedArgs.has(argDef.name) && (0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isRequiredArgument)(argDef)) {\n            const argTypeStr = (0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_1__.inspect)(argDef.type);\n            context.reportError(new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_2__.GraphQLError(`Field \"${fieldDef.name}\" argument \"${argDef.name}\" of type \"${argTypeStr}\" is required, but it was not provided.`, {\n              nodes: fieldNode\n            }));\n          }\n        }\n      }\n    }\n  };\n}\n/**\n * @internal\n */\n\nfunction ProvidedRequiredArgumentsOnDirectivesRule(context) {\n  var _schema$getDirectives;\n  const requiredArgsMap = Object.create(null);\n  const schema = context.getSchema();\n  const definedDirectives = (_schema$getDirectives = schema === null || schema === void 0 ? void 0 : schema.getDirectives()) !== null && _schema$getDirectives !== void 0 ? _schema$getDirectives : _type_directives_mjs__WEBPACK_IMPORTED_MODULE_3__.specifiedDirectives;\n  for (const directive of definedDirectives) {\n    requiredArgsMap[directive.name] = (0,_jsutils_keyMap_mjs__WEBPACK_IMPORTED_MODULE_4__.keyMap)(directive.args.filter(_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isRequiredArgument), arg => arg.name);\n  }\n  const astDefinitions = context.getDocument().definitions;\n  for (const def of astDefinitions) {\n    if (def.kind === _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_5__.Kind.DIRECTIVE_DEFINITION) {\n      var _def$arguments;\n\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n      /* c8 ignore next */\n      const argNodes = (_def$arguments = def.arguments) !== null && _def$arguments !== void 0 ? _def$arguments : [];\n      requiredArgsMap[def.name.value] = (0,_jsutils_keyMap_mjs__WEBPACK_IMPORTED_MODULE_4__.keyMap)(argNodes.filter(isRequiredArgumentNode), arg => arg.name.value);\n    }\n  }\n  return {\n    Directive: {\n      // Validate on leave to allow for deeper errors to appear first.\n      leave(directiveNode) {\n        const directiveName = directiveNode.name.value;\n        const requiredArgs = requiredArgsMap[directiveName];\n        if (requiredArgs) {\n          var _directiveNode$argume;\n\n          // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n          /* c8 ignore next */\n          const argNodes = (_directiveNode$argume = directiveNode.arguments) !== null && _directiveNode$argume !== void 0 ? _directiveNode$argume : [];\n          const argNodeMap = new Set(argNodes.map(arg => arg.name.value));\n          for (const [argName, argDef] of Object.entries(requiredArgs)) {\n            if (!argNodeMap.has(argName)) {\n              const argType = (0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isType)(argDef.type) ? (0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_1__.inspect)(argDef.type) : (0,_language_printer_mjs__WEBPACK_IMPORTED_MODULE_6__.print)(argDef.type);\n              context.reportError(new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_2__.GraphQLError(`Directive \"@${directiveName}\" argument \"${argName}\" of type \"${argType}\" is required, but it was not provided.`, {\n                nodes: directiveNode\n              }));\n            }\n          }\n        }\n      }\n    }\n  };\n}\nfunction isRequiredArgumentNode(arg) {\n  return arg.type.kind === _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_5__.Kind.NON_NULL_TYPE && arg.defaultValue == null;\n}\n\n//# sourceURL=webpack://my-app/../../graphql/validation/rules/ProvidedRequiredArgumentsRule.mjs?");

/***/ }),

/***/ "../../graphql/validation/rules/ScalarLeafsRule.mjs":
/*!**********************************************************!*\
  !*** ../../graphql/validation/rules/ScalarLeafsRule.mjs ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ScalarLeafsRule: () => (/* binding */ ScalarLeafsRule)\n/* harmony export */ });\n/* harmony import */ var _jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../jsutils/inspect.mjs */ \"../../graphql/jsutils/inspect.mjs\");\n/* harmony import */ var _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../error/GraphQLError.mjs */ \"../../graphql/error/GraphQLError.mjs\");\n/* harmony import */ var _type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../type/definition.mjs */ \"../../graphql/type/definition.mjs\");\n\n\n\n\n/**\n * Scalar leafs\n *\n * A GraphQL document is valid only if all leaf fields (fields without\n * sub selections) are of scalar or enum types.\n */\nfunction ScalarLeafsRule(context) {\n  return {\n    Field(node) {\n      const type = context.getType();\n      const selectionSet = node.selectionSet;\n      if (type) {\n        if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isLeafType)((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.getNamedType)(type))) {\n          if (selectionSet) {\n            const fieldName = node.name.value;\n            const typeStr = (0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_1__.inspect)(type);\n            context.reportError(new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_2__.GraphQLError(`Field \"${fieldName}\" must not have a selection since type \"${typeStr}\" has no subfields.`, {\n              nodes: selectionSet\n            }));\n          }\n        } else if (!selectionSet) {\n          const fieldName = node.name.value;\n          const typeStr = (0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_1__.inspect)(type);\n          context.reportError(new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_2__.GraphQLError(`Field \"${fieldName}\" of type \"${typeStr}\" must have a selection of subfields. Did you mean \"${fieldName} { ... }\"?`, {\n            nodes: node\n          }));\n        }\n      }\n    }\n  };\n}\n\n//# sourceURL=webpack://my-app/../../graphql/validation/rules/ScalarLeafsRule.mjs?");

/***/ }),

/***/ "../../graphql/validation/rules/SingleFieldSubscriptionsRule.mjs":
/*!***********************************************************************!*\
  !*** ../../graphql/validation/rules/SingleFieldSubscriptionsRule.mjs ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SingleFieldSubscriptionsRule: () => (/* binding */ SingleFieldSubscriptionsRule)\n/* harmony export */ });\n/* harmony import */ var _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../error/GraphQLError.mjs */ \"../../graphql/error/GraphQLError.mjs\");\n/* harmony import */ var _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../language/kinds.mjs */ \"../../graphql/language/kinds.mjs\");\n/* harmony import */ var _execution_collectFields_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../execution/collectFields.mjs */ \"../../graphql/execution/collectFields.mjs\");\n\n\n\n\n/**\n * Subscriptions must only include a non-introspection field.\n *\n * A GraphQL subscription is valid only if it contains a single root field and\n * that root field is not an introspection field.\n *\n * See https://spec.graphql.org/draft/#sec-Single-root-field\n */\nfunction SingleFieldSubscriptionsRule(context) {\n  return {\n    OperationDefinition(node) {\n      if (node.operation === 'subscription') {\n        const schema = context.getSchema();\n        const subscriptionType = schema.getSubscriptionType();\n        if (subscriptionType) {\n          const operationName = node.name ? node.name.value : null;\n          const variableValues = Object.create(null);\n          const document = context.getDocument();\n          const fragments = Object.create(null);\n          for (const definition of document.definitions) {\n            if (definition.kind === _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_0__.Kind.FRAGMENT_DEFINITION) {\n              fragments[definition.name.value] = definition;\n            }\n          }\n          const fields = (0,_execution_collectFields_mjs__WEBPACK_IMPORTED_MODULE_1__.collectFields)(schema, fragments, variableValues, subscriptionType, node.selectionSet);\n          if (fields.size > 1) {\n            const fieldSelectionLists = [...fields.values()];\n            const extraFieldSelectionLists = fieldSelectionLists.slice(1);\n            const extraFieldSelections = extraFieldSelectionLists.flat();\n            context.reportError(new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_2__.GraphQLError(operationName != null ? `Subscription \"${operationName}\" must select only one top level field.` : 'Anonymous Subscription must select only one top level field.', {\n              nodes: extraFieldSelections\n            }));\n          }\n          for (const fieldNodes of fields.values()) {\n            const field = fieldNodes[0];\n            const fieldName = field.name.value;\n            if (fieldName.startsWith('__')) {\n              context.reportError(new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_2__.GraphQLError(operationName != null ? `Subscription \"${operationName}\" must not select an introspection top level field.` : 'Anonymous Subscription must not select an introspection top level field.', {\n                nodes: fieldNodes\n              }));\n            }\n          }\n        }\n      }\n    }\n  };\n}\n\n//# sourceURL=webpack://my-app/../../graphql/validation/rules/SingleFieldSubscriptionsRule.mjs?");

/***/ }),

/***/ "../../graphql/validation/rules/UniqueArgumentDefinitionNamesRule.mjs":
/*!****************************************************************************!*\
  !*** ../../graphql/validation/rules/UniqueArgumentDefinitionNamesRule.mjs ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UniqueArgumentDefinitionNamesRule: () => (/* binding */ UniqueArgumentDefinitionNamesRule)\n/* harmony export */ });\n/* harmony import */ var _jsutils_groupBy_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../jsutils/groupBy.mjs */ \"../../graphql/jsutils/groupBy.mjs\");\n/* harmony import */ var _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../error/GraphQLError.mjs */ \"../../graphql/error/GraphQLError.mjs\");\n\n\n\n/**\n * Unique argument definition names\n *\n * A GraphQL Object or Interface type is only valid if all its fields have uniquely named arguments.\n * A GraphQL Directive is only valid if all its arguments are uniquely named.\n */\nfunction UniqueArgumentDefinitionNamesRule(context) {\n  return {\n    DirectiveDefinition(directiveNode) {\n      var _directiveNode$argume;\n\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n      /* c8 ignore next */\n      const argumentNodes = (_directiveNode$argume = directiveNode.arguments) !== null && _directiveNode$argume !== void 0 ? _directiveNode$argume : [];\n      return checkArgUniqueness(`@${directiveNode.name.value}`, argumentNodes);\n    },\n    InterfaceTypeDefinition: checkArgUniquenessPerField,\n    InterfaceTypeExtension: checkArgUniquenessPerField,\n    ObjectTypeDefinition: checkArgUniquenessPerField,\n    ObjectTypeExtension: checkArgUniquenessPerField\n  };\n  function checkArgUniquenessPerField(typeNode) {\n    var _typeNode$fields;\n    const typeName = typeNode.name.value; // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n    /* c8 ignore next */\n\n    const fieldNodes = (_typeNode$fields = typeNode.fields) !== null && _typeNode$fields !== void 0 ? _typeNode$fields : [];\n    for (const fieldDef of fieldNodes) {\n      var _fieldDef$arguments;\n      const fieldName = fieldDef.name.value; // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n      /* c8 ignore next */\n\n      const argumentNodes = (_fieldDef$arguments = fieldDef.arguments) !== null && _fieldDef$arguments !== void 0 ? _fieldDef$arguments : [];\n      checkArgUniqueness(`${typeName}.${fieldName}`, argumentNodes);\n    }\n    return false;\n  }\n  function checkArgUniqueness(parentName, argumentNodes) {\n    const seenArgs = (0,_jsutils_groupBy_mjs__WEBPACK_IMPORTED_MODULE_0__.groupBy)(argumentNodes, arg => arg.name.value);\n    for (const [argName, argNodes] of seenArgs) {\n      if (argNodes.length > 1) {\n        context.reportError(new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_1__.GraphQLError(`Argument \"${parentName}(${argName}:)\" can only be defined once.`, {\n          nodes: argNodes.map(node => node.name)\n        }));\n      }\n    }\n    return false;\n  }\n}\n\n//# sourceURL=webpack://my-app/../../graphql/validation/rules/UniqueArgumentDefinitionNamesRule.mjs?");

/***/ }),

/***/ "../../graphql/validation/rules/UniqueArgumentNamesRule.mjs":
/*!******************************************************************!*\
  !*** ../../graphql/validation/rules/UniqueArgumentNamesRule.mjs ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UniqueArgumentNamesRule: () => (/* binding */ UniqueArgumentNamesRule)\n/* harmony export */ });\n/* harmony import */ var _jsutils_groupBy_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../jsutils/groupBy.mjs */ \"../../graphql/jsutils/groupBy.mjs\");\n/* harmony import */ var _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../error/GraphQLError.mjs */ \"../../graphql/error/GraphQLError.mjs\");\n\n\n\n/**\n * Unique argument names\n *\n * A GraphQL field or directive is only valid if all supplied arguments are\n * uniquely named.\n *\n * See https://spec.graphql.org/draft/#sec-Argument-Names\n */\nfunction UniqueArgumentNamesRule(context) {\n  return {\n    Field: checkArgUniqueness,\n    Directive: checkArgUniqueness\n  };\n  function checkArgUniqueness(parentNode) {\n    var _parentNode$arguments;\n\n    // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n    /* c8 ignore next */\n    const argumentNodes = (_parentNode$arguments = parentNode.arguments) !== null && _parentNode$arguments !== void 0 ? _parentNode$arguments : [];\n    const seenArgs = (0,_jsutils_groupBy_mjs__WEBPACK_IMPORTED_MODULE_0__.groupBy)(argumentNodes, arg => arg.name.value);\n    for (const [argName, argNodes] of seenArgs) {\n      if (argNodes.length > 1) {\n        context.reportError(new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_1__.GraphQLError(`There can be only one argument named \"${argName}\".`, {\n          nodes: argNodes.map(node => node.name)\n        }));\n      }\n    }\n  }\n}\n\n//# sourceURL=webpack://my-app/../../graphql/validation/rules/UniqueArgumentNamesRule.mjs?");

/***/ }),

/***/ "../../graphql/validation/rules/UniqueDirectiveNamesRule.mjs":
/*!*******************************************************************!*\
  !*** ../../graphql/validation/rules/UniqueDirectiveNamesRule.mjs ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UniqueDirectiveNamesRule: () => (/* binding */ UniqueDirectiveNamesRule)\n/* harmony export */ });\n/* harmony import */ var _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../error/GraphQLError.mjs */ \"../../graphql/error/GraphQLError.mjs\");\n\n\n/**\n * Unique directive names\n *\n * A GraphQL document is only valid if all defined directives have unique names.\n */\nfunction UniqueDirectiveNamesRule(context) {\n  const knownDirectiveNames = Object.create(null);\n  const schema = context.getSchema();\n  return {\n    DirectiveDefinition(node) {\n      const directiveName = node.name.value;\n      if (schema !== null && schema !== void 0 && schema.getDirective(directiveName)) {\n        context.reportError(new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLError(`Directive \"@${directiveName}\" already exists in the schema. It cannot be redefined.`, {\n          nodes: node.name\n        }));\n        return;\n      }\n      if (knownDirectiveNames[directiveName]) {\n        context.reportError(new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLError(`There can be only one directive named \"@${directiveName}\".`, {\n          nodes: [knownDirectiveNames[directiveName], node.name]\n        }));\n      } else {\n        knownDirectiveNames[directiveName] = node.name;\n      }\n      return false;\n    }\n  };\n}\n\n//# sourceURL=webpack://my-app/../../graphql/validation/rules/UniqueDirectiveNamesRule.mjs?");

/***/ }),

/***/ "../../graphql/validation/rules/UniqueDirectivesPerLocationRule.mjs":
/*!**************************************************************************!*\
  !*** ../../graphql/validation/rules/UniqueDirectivesPerLocationRule.mjs ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UniqueDirectivesPerLocationRule: () => (/* binding */ UniqueDirectivesPerLocationRule)\n/* harmony export */ });\n/* harmony import */ var _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../error/GraphQLError.mjs */ \"../../graphql/error/GraphQLError.mjs\");\n/* harmony import */ var _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../language/kinds.mjs */ \"../../graphql/language/kinds.mjs\");\n/* harmony import */ var _language_predicates_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../language/predicates.mjs */ \"../../graphql/language/predicates.mjs\");\n/* harmony import */ var _type_directives_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../type/directives.mjs */ \"../../graphql/type/directives.mjs\");\n\n\n\n\n\n/**\n * Unique directive names per location\n *\n * A GraphQL document is only valid if all non-repeatable directives at\n * a given location are uniquely named.\n *\n * See https://spec.graphql.org/draft/#sec-Directives-Are-Unique-Per-Location\n */\nfunction UniqueDirectivesPerLocationRule(context) {\n  const uniqueDirectiveMap = Object.create(null);\n  const schema = context.getSchema();\n  const definedDirectives = schema ? schema.getDirectives() : _type_directives_mjs__WEBPACK_IMPORTED_MODULE_0__.specifiedDirectives;\n  for (const directive of definedDirectives) {\n    uniqueDirectiveMap[directive.name] = !directive.isRepeatable;\n  }\n  const astDefinitions = context.getDocument().definitions;\n  for (const def of astDefinitions) {\n    if (def.kind === _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.DIRECTIVE_DEFINITION) {\n      uniqueDirectiveMap[def.name.value] = !def.repeatable;\n    }\n  }\n  const schemaDirectives = Object.create(null);\n  const typeDirectivesMap = Object.create(null);\n  return {\n    // Many different AST nodes may contain directives. Rather than listing\n    // them all, just listen for entering any node, and check to see if it\n    // defines any directives.\n    enter(node) {\n      if (!('directives' in node) || !node.directives) {\n        return;\n      }\n      let seenDirectives;\n      if (node.kind === _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.SCHEMA_DEFINITION || node.kind === _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_1__.Kind.SCHEMA_EXTENSION) {\n        seenDirectives = schemaDirectives;\n      } else if ((0,_language_predicates_mjs__WEBPACK_IMPORTED_MODULE_2__.isTypeDefinitionNode)(node) || (0,_language_predicates_mjs__WEBPACK_IMPORTED_MODULE_2__.isTypeExtensionNode)(node)) {\n        const typeName = node.name.value;\n        seenDirectives = typeDirectivesMap[typeName];\n        if (seenDirectives === undefined) {\n          typeDirectivesMap[typeName] = seenDirectives = Object.create(null);\n        }\n      } else {\n        seenDirectives = Object.create(null);\n      }\n      for (const directive of node.directives) {\n        const directiveName = directive.name.value;\n        if (uniqueDirectiveMap[directiveName]) {\n          if (seenDirectives[directiveName]) {\n            context.reportError(new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_3__.GraphQLError(`The directive \"@${directiveName}\" can only be used once at this location.`, {\n              nodes: [seenDirectives[directiveName], directive]\n            }));\n          } else {\n            seenDirectives[directiveName] = directive;\n          }\n        }\n      }\n    }\n  };\n}\n\n//# sourceURL=webpack://my-app/../../graphql/validation/rules/UniqueDirectivesPerLocationRule.mjs?");

/***/ }),

/***/ "../../graphql/validation/rules/UniqueEnumValueNamesRule.mjs":
/*!*******************************************************************!*\
  !*** ../../graphql/validation/rules/UniqueEnumValueNamesRule.mjs ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UniqueEnumValueNamesRule: () => (/* binding */ UniqueEnumValueNamesRule)\n/* harmony export */ });\n/* harmony import */ var _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../error/GraphQLError.mjs */ \"../../graphql/error/GraphQLError.mjs\");\n/* harmony import */ var _type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../type/definition.mjs */ \"../../graphql/type/definition.mjs\");\n\n\n\n/**\n * Unique enum value names\n *\n * A GraphQL enum type is only valid if all its values are uniquely named.\n */\nfunction UniqueEnumValueNamesRule(context) {\n  const schema = context.getSchema();\n  const existingTypeMap = schema ? schema.getTypeMap() : Object.create(null);\n  const knownValueNames = Object.create(null);\n  return {\n    EnumTypeDefinition: checkValueUniqueness,\n    EnumTypeExtension: checkValueUniqueness\n  };\n  function checkValueUniqueness(node) {\n    var _node$values;\n    const typeName = node.name.value;\n    if (!knownValueNames[typeName]) {\n      knownValueNames[typeName] = Object.create(null);\n    } // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n    /* c8 ignore next */\n\n    const valueNodes = (_node$values = node.values) !== null && _node$values !== void 0 ? _node$values : [];\n    const valueNames = knownValueNames[typeName];\n    for (const valueDef of valueNodes) {\n      const valueName = valueDef.name.value;\n      const existingType = existingTypeMap[typeName];\n      if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isEnumType)(existingType) && existingType.getValue(valueName)) {\n        context.reportError(new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_1__.GraphQLError(`Enum value \"${typeName}.${valueName}\" already exists in the schema. It cannot also be defined in this type extension.`, {\n          nodes: valueDef.name\n        }));\n      } else if (valueNames[valueName]) {\n        context.reportError(new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_1__.GraphQLError(`Enum value \"${typeName}.${valueName}\" can only be defined once.`, {\n          nodes: [valueNames[valueName], valueDef.name]\n        }));\n      } else {\n        valueNames[valueName] = valueDef.name;\n      }\n    }\n    return false;\n  }\n}\n\n//# sourceURL=webpack://my-app/../../graphql/validation/rules/UniqueEnumValueNamesRule.mjs?");

/***/ }),

/***/ "../../graphql/validation/rules/UniqueFieldDefinitionNamesRule.mjs":
/*!*************************************************************************!*\
  !*** ../../graphql/validation/rules/UniqueFieldDefinitionNamesRule.mjs ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UniqueFieldDefinitionNamesRule: () => (/* binding */ UniqueFieldDefinitionNamesRule)\n/* harmony export */ });\n/* harmony import */ var _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../error/GraphQLError.mjs */ \"../../graphql/error/GraphQLError.mjs\");\n/* harmony import */ var _type_definition_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../type/definition.mjs */ \"../../graphql/type/definition.mjs\");\n\n\n\n/**\n * Unique field definition names\n *\n * A GraphQL complex type is only valid if all its fields are uniquely named.\n */\nfunction UniqueFieldDefinitionNamesRule(context) {\n  const schema = context.getSchema();\n  const existingTypeMap = schema ? schema.getTypeMap() : Object.create(null);\n  const knownFieldNames = Object.create(null);\n  return {\n    InputObjectTypeDefinition: checkFieldUniqueness,\n    InputObjectTypeExtension: checkFieldUniqueness,\n    InterfaceTypeDefinition: checkFieldUniqueness,\n    InterfaceTypeExtension: checkFieldUniqueness,\n    ObjectTypeDefinition: checkFieldUniqueness,\n    ObjectTypeExtension: checkFieldUniqueness\n  };\n  function checkFieldUniqueness(node) {\n    var _node$fields;\n    const typeName = node.name.value;\n    if (!knownFieldNames[typeName]) {\n      knownFieldNames[typeName] = Object.create(null);\n    } // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n    /* c8 ignore next */\n\n    const fieldNodes = (_node$fields = node.fields) !== null && _node$fields !== void 0 ? _node$fields : [];\n    const fieldNames = knownFieldNames[typeName];\n    for (const fieldDef of fieldNodes) {\n      const fieldName = fieldDef.name.value;\n      if (hasField(existingTypeMap[typeName], fieldName)) {\n        context.reportError(new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLError(`Field \"${typeName}.${fieldName}\" already exists in the schema. It cannot also be defined in this type extension.`, {\n          nodes: fieldDef.name\n        }));\n      } else if (fieldNames[fieldName]) {\n        context.reportError(new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLError(`Field \"${typeName}.${fieldName}\" can only be defined once.`, {\n          nodes: [fieldNames[fieldName], fieldDef.name]\n        }));\n      } else {\n        fieldNames[fieldName] = fieldDef.name;\n      }\n    }\n    return false;\n  }\n}\nfunction hasField(type, fieldName) {\n  if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_1__.isObjectType)(type) || (0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_1__.isInterfaceType)(type) || (0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_1__.isInputObjectType)(type)) {\n    return type.getFields()[fieldName] != null;\n  }\n  return false;\n}\n\n//# sourceURL=webpack://my-app/../../graphql/validation/rules/UniqueFieldDefinitionNamesRule.mjs?");

/***/ }),

/***/ "../../graphql/validation/rules/UniqueFragmentNamesRule.mjs":
/*!******************************************************************!*\
  !*** ../../graphql/validation/rules/UniqueFragmentNamesRule.mjs ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UniqueFragmentNamesRule: () => (/* binding */ UniqueFragmentNamesRule)\n/* harmony export */ });\n/* harmony import */ var _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../error/GraphQLError.mjs */ \"../../graphql/error/GraphQLError.mjs\");\n\n\n/**\n * Unique fragment names\n *\n * A GraphQL document is only valid if all defined fragments have unique names.\n *\n * See https://spec.graphql.org/draft/#sec-Fragment-Name-Uniqueness\n */\nfunction UniqueFragmentNamesRule(context) {\n  const knownFragmentNames = Object.create(null);\n  return {\n    OperationDefinition: () => false,\n    FragmentDefinition(node) {\n      const fragmentName = node.name.value;\n      if (knownFragmentNames[fragmentName]) {\n        context.reportError(new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLError(`There can be only one fragment named \"${fragmentName}\".`, {\n          nodes: [knownFragmentNames[fragmentName], node.name]\n        }));\n      } else {\n        knownFragmentNames[fragmentName] = node.name;\n      }\n      return false;\n    }\n  };\n}\n\n//# sourceURL=webpack://my-app/../../graphql/validation/rules/UniqueFragmentNamesRule.mjs?");

/***/ }),

/***/ "../../graphql/validation/rules/UniqueInputFieldNamesRule.mjs":
/*!********************************************************************!*\
  !*** ../../graphql/validation/rules/UniqueInputFieldNamesRule.mjs ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UniqueInputFieldNamesRule: () => (/* binding */ UniqueInputFieldNamesRule)\n/* harmony export */ });\n/* harmony import */ var _jsutils_invariant_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../jsutils/invariant.mjs */ \"../../graphql/jsutils/invariant.mjs\");\n/* harmony import */ var _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../error/GraphQLError.mjs */ \"../../graphql/error/GraphQLError.mjs\");\n\n\n\n/**\n * Unique input field names\n *\n * A GraphQL input object value is only valid if all supplied fields are\n * uniquely named.\n *\n * See https://spec.graphql.org/draft/#sec-Input-Object-Field-Uniqueness\n */\nfunction UniqueInputFieldNamesRule(context) {\n  const knownNameStack = [];\n  let knownNames = Object.create(null);\n  return {\n    ObjectValue: {\n      enter() {\n        knownNameStack.push(knownNames);\n        knownNames = Object.create(null);\n      },\n      leave() {\n        const prevKnownNames = knownNameStack.pop();\n        prevKnownNames || (0,_jsutils_invariant_mjs__WEBPACK_IMPORTED_MODULE_0__.invariant)(false);\n        knownNames = prevKnownNames;\n      }\n    },\n    ObjectField(node) {\n      const fieldName = node.name.value;\n      if (knownNames[fieldName]) {\n        context.reportError(new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_1__.GraphQLError(`There can be only one input field named \"${fieldName}\".`, {\n          nodes: [knownNames[fieldName], node.name]\n        }));\n      } else {\n        knownNames[fieldName] = node.name;\n      }\n    }\n  };\n}\n\n//# sourceURL=webpack://my-app/../../graphql/validation/rules/UniqueInputFieldNamesRule.mjs?");

/***/ }),

/***/ "../../graphql/validation/rules/UniqueOperationNamesRule.mjs":
/*!*******************************************************************!*\
  !*** ../../graphql/validation/rules/UniqueOperationNamesRule.mjs ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UniqueOperationNamesRule: () => (/* binding */ UniqueOperationNamesRule)\n/* harmony export */ });\n/* harmony import */ var _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../error/GraphQLError.mjs */ \"../../graphql/error/GraphQLError.mjs\");\n\n\n/**\n * Unique operation names\n *\n * A GraphQL document is only valid if all defined operations have unique names.\n *\n * See https://spec.graphql.org/draft/#sec-Operation-Name-Uniqueness\n */\nfunction UniqueOperationNamesRule(context) {\n  const knownOperationNames = Object.create(null);\n  return {\n    OperationDefinition(node) {\n      const operationName = node.name;\n      if (operationName) {\n        if (knownOperationNames[operationName.value]) {\n          context.reportError(new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLError(`There can be only one operation named \"${operationName.value}\".`, {\n            nodes: [knownOperationNames[operationName.value], operationName]\n          }));\n        } else {\n          knownOperationNames[operationName.value] = operationName;\n        }\n      }\n      return false;\n    },\n    FragmentDefinition: () => false\n  };\n}\n\n//# sourceURL=webpack://my-app/../../graphql/validation/rules/UniqueOperationNamesRule.mjs?");

/***/ }),

/***/ "../../graphql/validation/rules/UniqueOperationTypesRule.mjs":
/*!*******************************************************************!*\
  !*** ../../graphql/validation/rules/UniqueOperationTypesRule.mjs ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UniqueOperationTypesRule: () => (/* binding */ UniqueOperationTypesRule)\n/* harmony export */ });\n/* harmony import */ var _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../error/GraphQLError.mjs */ \"../../graphql/error/GraphQLError.mjs\");\n\n\n/**\n * Unique operation types\n *\n * A GraphQL document is only valid if it has only one type per operation.\n */\nfunction UniqueOperationTypesRule(context) {\n  const schema = context.getSchema();\n  const definedOperationTypes = Object.create(null);\n  const existingOperationTypes = schema ? {\n    query: schema.getQueryType(),\n    mutation: schema.getMutationType(),\n    subscription: schema.getSubscriptionType()\n  } : {};\n  return {\n    SchemaDefinition: checkOperationTypes,\n    SchemaExtension: checkOperationTypes\n  };\n  function checkOperationTypes(node) {\n    var _node$operationTypes;\n\n    // See: https://github.com/graphql/graphql-js/issues/2203\n\n    /* c8 ignore next */\n    const operationTypesNodes = (_node$operationTypes = node.operationTypes) !== null && _node$operationTypes !== void 0 ? _node$operationTypes : [];\n    for (const operationType of operationTypesNodes) {\n      const operation = operationType.operation;\n      const alreadyDefinedOperationType = definedOperationTypes[operation];\n      if (existingOperationTypes[operation]) {\n        context.reportError(new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLError(`Type for ${operation} already defined in the schema. It cannot be redefined.`, {\n          nodes: operationType\n        }));\n      } else if (alreadyDefinedOperationType) {\n        context.reportError(new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLError(`There can be only one ${operation} type in schema.`, {\n          nodes: [alreadyDefinedOperationType, operationType]\n        }));\n      } else {\n        definedOperationTypes[operation] = operationType;\n      }\n    }\n    return false;\n  }\n}\n\n//# sourceURL=webpack://my-app/../../graphql/validation/rules/UniqueOperationTypesRule.mjs?");

/***/ }),

/***/ "../../graphql/validation/rules/UniqueTypeNamesRule.mjs":
/*!**************************************************************!*\
  !*** ../../graphql/validation/rules/UniqueTypeNamesRule.mjs ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UniqueTypeNamesRule: () => (/* binding */ UniqueTypeNamesRule)\n/* harmony export */ });\n/* harmony import */ var _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../error/GraphQLError.mjs */ \"../../graphql/error/GraphQLError.mjs\");\n\n\n/**\n * Unique type names\n *\n * A GraphQL document is only valid if all defined types have unique names.\n */\nfunction UniqueTypeNamesRule(context) {\n  const knownTypeNames = Object.create(null);\n  const schema = context.getSchema();\n  return {\n    ScalarTypeDefinition: checkTypeName,\n    ObjectTypeDefinition: checkTypeName,\n    InterfaceTypeDefinition: checkTypeName,\n    UnionTypeDefinition: checkTypeName,\n    EnumTypeDefinition: checkTypeName,\n    InputObjectTypeDefinition: checkTypeName\n  };\n  function checkTypeName(node) {\n    const typeName = node.name.value;\n    if (schema !== null && schema !== void 0 && schema.getType(typeName)) {\n      context.reportError(new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLError(`Type \"${typeName}\" already exists in the schema. It cannot also be defined in this type definition.`, {\n        nodes: node.name\n      }));\n      return;\n    }\n    if (knownTypeNames[typeName]) {\n      context.reportError(new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_0__.GraphQLError(`There can be only one type named \"${typeName}\".`, {\n        nodes: [knownTypeNames[typeName], node.name]\n      }));\n    } else {\n      knownTypeNames[typeName] = node.name;\n    }\n    return false;\n  }\n}\n\n//# sourceURL=webpack://my-app/../../graphql/validation/rules/UniqueTypeNamesRule.mjs?");

/***/ }),

/***/ "../../graphql/validation/rules/UniqueVariableNamesRule.mjs":
/*!******************************************************************!*\
  !*** ../../graphql/validation/rules/UniqueVariableNamesRule.mjs ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UniqueVariableNamesRule: () => (/* binding */ UniqueVariableNamesRule)\n/* harmony export */ });\n/* harmony import */ var _jsutils_groupBy_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../jsutils/groupBy.mjs */ \"../../graphql/jsutils/groupBy.mjs\");\n/* harmony import */ var _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../error/GraphQLError.mjs */ \"../../graphql/error/GraphQLError.mjs\");\n\n\n\n/**\n * Unique variable names\n *\n * A GraphQL operation is only valid if all its variables are uniquely named.\n */\nfunction UniqueVariableNamesRule(context) {\n  return {\n    OperationDefinition(operationNode) {\n      var _operationNode$variab;\n\n      // See: https://github.com/graphql/graphql-js/issues/2203\n\n      /* c8 ignore next */\n      const variableDefinitions = (_operationNode$variab = operationNode.variableDefinitions) !== null && _operationNode$variab !== void 0 ? _operationNode$variab : [];\n      const seenVariableDefinitions = (0,_jsutils_groupBy_mjs__WEBPACK_IMPORTED_MODULE_0__.groupBy)(variableDefinitions, node => node.variable.name.value);\n      for (const [variableName, variableNodes] of seenVariableDefinitions) {\n        if (variableNodes.length > 1) {\n          context.reportError(new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_1__.GraphQLError(`There can be only one variable named \"$${variableName}\".`, {\n            nodes: variableNodes.map(node => node.variable.name)\n          }));\n        }\n      }\n    }\n  };\n}\n\n//# sourceURL=webpack://my-app/../../graphql/validation/rules/UniqueVariableNamesRule.mjs?");

/***/ }),

/***/ "../../graphql/validation/rules/ValuesOfCorrectTypeRule.mjs":
/*!******************************************************************!*\
  !*** ../../graphql/validation/rules/ValuesOfCorrectTypeRule.mjs ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ValuesOfCorrectTypeRule: () => (/* binding */ ValuesOfCorrectTypeRule)\n/* harmony export */ });\n/* harmony import */ var _jsutils_didYouMean_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../jsutils/didYouMean.mjs */ \"../../graphql/jsutils/didYouMean.mjs\");\n/* harmony import */ var _jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../jsutils/inspect.mjs */ \"../../graphql/jsutils/inspect.mjs\");\n/* harmony import */ var _jsutils_keyMap_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../jsutils/keyMap.mjs */ \"../../graphql/jsutils/keyMap.mjs\");\n/* harmony import */ var _jsutils_suggestionList_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../jsutils/suggestionList.mjs */ \"../../graphql/jsutils/suggestionList.mjs\");\n/* harmony import */ var _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../error/GraphQLError.mjs */ \"../../graphql/error/GraphQLError.mjs\");\n/* harmony import */ var _language_printer_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../language/printer.mjs */ \"../../graphql/language/printer.mjs\");\n/* harmony import */ var _type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../type/definition.mjs */ \"../../graphql/type/definition.mjs\");\n\n\n\n\n\n\n\n\n/**\n * Value literals of correct type\n *\n * A GraphQL document is only valid if all value literals are of the type\n * expected at their position.\n *\n * See https://spec.graphql.org/draft/#sec-Values-of-Correct-Type\n */\nfunction ValuesOfCorrectTypeRule(context) {\n  return {\n    ListValue(node) {\n      // Note: TypeInfo will traverse into a list's item type, so look to the\n      // parent input type to check if it is a list.\n      const type = (0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.getNullableType)(context.getParentInputType());\n      if (!(0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isListType)(type)) {\n        isValidValueNode(context, node);\n        return false; // Don't traverse further.\n      }\n    },\n    ObjectValue(node) {\n      const type = (0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.getNamedType)(context.getInputType());\n      if (!(0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isInputObjectType)(type)) {\n        isValidValueNode(context, node);\n        return false; // Don't traverse further.\n      } // Ensure every required field exists.\n\n      const fieldNodeMap = (0,_jsutils_keyMap_mjs__WEBPACK_IMPORTED_MODULE_1__.keyMap)(node.fields, field => field.name.value);\n      for (const fieldDef of Object.values(type.getFields())) {\n        const fieldNode = fieldNodeMap[fieldDef.name];\n        if (!fieldNode && (0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isRequiredInputField)(fieldDef)) {\n          const typeStr = (0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_2__.inspect)(fieldDef.type);\n          context.reportError(new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_3__.GraphQLError(`Field \"${type.name}.${fieldDef.name}\" of required type \"${typeStr}\" was not provided.`, {\n            nodes: node\n          }));\n        }\n      }\n    },\n    ObjectField(node) {\n      const parentType = (0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.getNamedType)(context.getParentInputType());\n      const fieldType = context.getInputType();\n      if (!fieldType && (0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isInputObjectType)(parentType)) {\n        const suggestions = (0,_jsutils_suggestionList_mjs__WEBPACK_IMPORTED_MODULE_4__.suggestionList)(node.name.value, Object.keys(parentType.getFields()));\n        context.reportError(new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_3__.GraphQLError(`Field \"${node.name.value}\" is not defined by type \"${parentType.name}\".` + (0,_jsutils_didYouMean_mjs__WEBPACK_IMPORTED_MODULE_5__.didYouMean)(suggestions), {\n          nodes: node\n        }));\n      }\n    },\n    NullValue(node) {\n      const type = context.getInputType();\n      if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isNonNullType)(type)) {\n        context.reportError(new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_3__.GraphQLError(`Expected value of type \"${(0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_2__.inspect)(type)}\", found ${(0,_language_printer_mjs__WEBPACK_IMPORTED_MODULE_6__.print)(node)}.`, {\n          nodes: node\n        }));\n      }\n    },\n    EnumValue: node => isValidValueNode(context, node),\n    IntValue: node => isValidValueNode(context, node),\n    FloatValue: node => isValidValueNode(context, node),\n    StringValue: node => isValidValueNode(context, node),\n    BooleanValue: node => isValidValueNode(context, node)\n  };\n}\n/**\n * Any value literal may be a valid representation of a Scalar, depending on\n * that scalar type.\n */\n\nfunction isValidValueNode(context, node) {\n  // Report any error at the full type expected by the location.\n  const locationType = context.getInputType();\n  if (!locationType) {\n    return;\n  }\n  const type = (0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.getNamedType)(locationType);\n  if (!(0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.isLeafType)(type)) {\n    const typeStr = (0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_2__.inspect)(locationType);\n    context.reportError(new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_3__.GraphQLError(`Expected value of type \"${typeStr}\", found ${(0,_language_printer_mjs__WEBPACK_IMPORTED_MODULE_6__.print)(node)}.`, {\n      nodes: node\n    }));\n    return;\n  } // Scalars and Enums determine if a literal value is valid via parseLiteral(),\n  // which may throw or return an invalid value to indicate failure.\n\n  try {\n    const parseResult = type.parseLiteral(node, undefined\n    /* variables */);\n    if (parseResult === undefined) {\n      const typeStr = (0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_2__.inspect)(locationType);\n      context.reportError(new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_3__.GraphQLError(`Expected value of type \"${typeStr}\", found ${(0,_language_printer_mjs__WEBPACK_IMPORTED_MODULE_6__.print)(node)}.`, {\n        nodes: node\n      }));\n    }\n  } catch (error) {\n    const typeStr = (0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_2__.inspect)(locationType);\n    if (error instanceof _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_3__.GraphQLError) {\n      context.reportError(error);\n    } else {\n      context.reportError(new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_3__.GraphQLError(`Expected value of type \"${typeStr}\", found ${(0,_language_printer_mjs__WEBPACK_IMPORTED_MODULE_6__.print)(node)}; ` + error.message, {\n        nodes: node,\n        originalError: error\n      }));\n    }\n  }\n}\n\n//# sourceURL=webpack://my-app/../../graphql/validation/rules/ValuesOfCorrectTypeRule.mjs?");

/***/ }),

/***/ "../../graphql/validation/rules/VariablesAreInputTypesRule.mjs":
/*!*********************************************************************!*\
  !*** ../../graphql/validation/rules/VariablesAreInputTypesRule.mjs ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VariablesAreInputTypesRule: () => (/* binding */ VariablesAreInputTypesRule)\n/* harmony export */ });\n/* harmony import */ var _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../error/GraphQLError.mjs */ \"../../graphql/error/GraphQLError.mjs\");\n/* harmony import */ var _language_printer_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../language/printer.mjs */ \"../../graphql/language/printer.mjs\");\n/* harmony import */ var _type_definition_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../type/definition.mjs */ \"../../graphql/type/definition.mjs\");\n/* harmony import */ var _utilities_typeFromAST_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utilities/typeFromAST.mjs */ \"../../graphql/utilities/typeFromAST.mjs\");\n\n\n\n\n\n/**\n * Variables are input types\n *\n * A GraphQL operation is only valid if all the variables it defines are of\n * input types (scalar, enum, or input object).\n *\n * See https://spec.graphql.org/draft/#sec-Variables-Are-Input-Types\n */\nfunction VariablesAreInputTypesRule(context) {\n  return {\n    VariableDefinition(node) {\n      const type = (0,_utilities_typeFromAST_mjs__WEBPACK_IMPORTED_MODULE_0__.typeFromAST)(context.getSchema(), node.type);\n      if (type !== undefined && !(0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_1__.isInputType)(type)) {\n        const variableName = node.variable.name.value;\n        const typeName = (0,_language_printer_mjs__WEBPACK_IMPORTED_MODULE_2__.print)(node.type);\n        context.reportError(new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_3__.GraphQLError(`Variable \"$${variableName}\" cannot be non-input type \"${typeName}\".`, {\n          nodes: node.type\n        }));\n      }\n    }\n  };\n}\n\n//# sourceURL=webpack://my-app/../../graphql/validation/rules/VariablesAreInputTypesRule.mjs?");

/***/ }),

/***/ "../../graphql/validation/rules/VariablesInAllowedPositionRule.mjs":
/*!*************************************************************************!*\
  !*** ../../graphql/validation/rules/VariablesInAllowedPositionRule.mjs ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VariablesInAllowedPositionRule: () => (/* binding */ VariablesInAllowedPositionRule)\n/* harmony export */ });\n/* harmony import */ var _jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../jsutils/inspect.mjs */ \"../../graphql/jsutils/inspect.mjs\");\n/* harmony import */ var _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../error/GraphQLError.mjs */ \"../../graphql/error/GraphQLError.mjs\");\n/* harmony import */ var _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../language/kinds.mjs */ \"../../graphql/language/kinds.mjs\");\n/* harmony import */ var _type_definition_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../type/definition.mjs */ \"../../graphql/type/definition.mjs\");\n/* harmony import */ var _utilities_typeComparators_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utilities/typeComparators.mjs */ \"../../graphql/utilities/typeComparators.mjs\");\n/* harmony import */ var _utilities_typeFromAST_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utilities/typeFromAST.mjs */ \"../../graphql/utilities/typeFromAST.mjs\");\n\n\n\n\n\n\n\n/**\n * Variables in allowed position\n *\n * Variable usages must be compatible with the arguments they are passed to.\n *\n * See https://spec.graphql.org/draft/#sec-All-Variable-Usages-are-Allowed\n */\nfunction VariablesInAllowedPositionRule(context) {\n  let varDefMap = Object.create(null);\n  return {\n    OperationDefinition: {\n      enter() {\n        varDefMap = Object.create(null);\n      },\n      leave(operation) {\n        const usages = context.getRecursiveVariableUsages(operation);\n        for (const {\n          node,\n          type,\n          defaultValue\n        } of usages) {\n          const varName = node.name.value;\n          const varDef = varDefMap[varName];\n          if (varDef && type) {\n            // A var type is allowed if it is the same or more strict (e.g. is\n            // a subtype of) than the expected type. It can be more strict if\n            // the variable type is non-null when the expected type is nullable.\n            // If both are list types, the variable item type can be more strict\n            // than the expected item type (contravariant).\n            const schema = context.getSchema();\n            const varType = (0,_utilities_typeFromAST_mjs__WEBPACK_IMPORTED_MODULE_0__.typeFromAST)(schema, varDef.type);\n            if (varType && !allowedVariableUsage(schema, varType, varDef.defaultValue, type, defaultValue)) {\n              const varTypeStr = (0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_1__.inspect)(varType);\n              const typeStr = (0,_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_1__.inspect)(type);\n              context.reportError(new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_2__.GraphQLError(`Variable \"$${varName}\" of type \"${varTypeStr}\" used in position expecting type \"${typeStr}\".`, {\n                nodes: [varDef, node]\n              }));\n            }\n          }\n        }\n      }\n    },\n    VariableDefinition(node) {\n      varDefMap[node.variable.name.value] = node;\n    }\n  };\n}\n/**\n * Returns true if the variable is allowed in the location it was found,\n * which includes considering if default values exist for either the variable\n * or the location at which it is located.\n */\n\nfunction allowedVariableUsage(schema, varType, varDefaultValue, locationType, locationDefaultValue) {\n  if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_3__.isNonNullType)(locationType) && !(0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_3__.isNonNullType)(varType)) {\n    const hasNonNullVariableDefaultValue = varDefaultValue != null && varDefaultValue.kind !== _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_4__.Kind.NULL;\n    const hasLocationDefaultValue = locationDefaultValue !== undefined;\n    if (!hasNonNullVariableDefaultValue && !hasLocationDefaultValue) {\n      return false;\n    }\n    const nullableLocationType = locationType.ofType;\n    return (0,_utilities_typeComparators_mjs__WEBPACK_IMPORTED_MODULE_5__.isTypeSubTypeOf)(schema, varType, nullableLocationType);\n  }\n  return (0,_utilities_typeComparators_mjs__WEBPACK_IMPORTED_MODULE_5__.isTypeSubTypeOf)(schema, varType, locationType);\n}\n\n//# sourceURL=webpack://my-app/../../graphql/validation/rules/VariablesInAllowedPositionRule.mjs?");

/***/ }),

/***/ "../../graphql/validation/rules/custom/NoDeprecatedCustomRule.mjs":
/*!************************************************************************!*\
  !*** ../../graphql/validation/rules/custom/NoDeprecatedCustomRule.mjs ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NoDeprecatedCustomRule: () => (/* binding */ NoDeprecatedCustomRule)\n/* harmony export */ });\n/* harmony import */ var _jsutils_invariant_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../jsutils/invariant.mjs */ \"../../graphql/jsutils/invariant.mjs\");\n/* harmony import */ var _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../error/GraphQLError.mjs */ \"../../graphql/error/GraphQLError.mjs\");\n/* harmony import */ var _type_definition_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../type/definition.mjs */ \"../../graphql/type/definition.mjs\");\n\n\n\n\n/**\n * No deprecated\n *\n * A GraphQL document is only valid if all selected fields and all used enum values have not been\n * deprecated.\n *\n * Note: This rule is optional and is not part of the Validation section of the GraphQL\n * Specification. The main purpose of this rule is detection of deprecated usages and not\n * necessarily to forbid their use when querying a service.\n */\nfunction NoDeprecatedCustomRule(context) {\n  return {\n    Field(node) {\n      const fieldDef = context.getFieldDef();\n      const deprecationReason = fieldDef === null || fieldDef === void 0 ? void 0 : fieldDef.deprecationReason;\n      if (fieldDef && deprecationReason != null) {\n        const parentType = context.getParentType();\n        parentType != null || (0,_jsutils_invariant_mjs__WEBPACK_IMPORTED_MODULE_0__.invariant)(false);\n        context.reportError(new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_1__.GraphQLError(`The field ${parentType.name}.${fieldDef.name} is deprecated. ${deprecationReason}`, {\n          nodes: node\n        }));\n      }\n    },\n    Argument(node) {\n      const argDef = context.getArgument();\n      const deprecationReason = argDef === null || argDef === void 0 ? void 0 : argDef.deprecationReason;\n      if (argDef && deprecationReason != null) {\n        const directiveDef = context.getDirective();\n        if (directiveDef != null) {\n          context.reportError(new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_1__.GraphQLError(`Directive \"@${directiveDef.name}\" argument \"${argDef.name}\" is deprecated. ${deprecationReason}`, {\n            nodes: node\n          }));\n        } else {\n          const parentType = context.getParentType();\n          const fieldDef = context.getFieldDef();\n          parentType != null && fieldDef != null || (0,_jsutils_invariant_mjs__WEBPACK_IMPORTED_MODULE_0__.invariant)(false);\n          context.reportError(new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_1__.GraphQLError(`Field \"${parentType.name}.${fieldDef.name}\" argument \"${argDef.name}\" is deprecated. ${deprecationReason}`, {\n            nodes: node\n          }));\n        }\n      }\n    },\n    ObjectField(node) {\n      const inputObjectDef = (0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_2__.getNamedType)(context.getParentInputType());\n      if ((0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_2__.isInputObjectType)(inputObjectDef)) {\n        const inputFieldDef = inputObjectDef.getFields()[node.name.value];\n        const deprecationReason = inputFieldDef === null || inputFieldDef === void 0 ? void 0 : inputFieldDef.deprecationReason;\n        if (deprecationReason != null) {\n          context.reportError(new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_1__.GraphQLError(`The input field ${inputObjectDef.name}.${inputFieldDef.name} is deprecated. ${deprecationReason}`, {\n            nodes: node\n          }));\n        }\n      }\n    },\n    EnumValue(node) {\n      const enumValueDef = context.getEnumValue();\n      const deprecationReason = enumValueDef === null || enumValueDef === void 0 ? void 0 : enumValueDef.deprecationReason;\n      if (enumValueDef && deprecationReason != null) {\n        const enumTypeDef = (0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_2__.getNamedType)(context.getInputType());\n        enumTypeDef != null || (0,_jsutils_invariant_mjs__WEBPACK_IMPORTED_MODULE_0__.invariant)(false);\n        context.reportError(new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_1__.GraphQLError(`The enum value \"${enumTypeDef.name}.${enumValueDef.name}\" is deprecated. ${deprecationReason}`, {\n          nodes: node\n        }));\n      }\n    }\n  };\n}\n\n//# sourceURL=webpack://my-app/../../graphql/validation/rules/custom/NoDeprecatedCustomRule.mjs?");

/***/ }),

/***/ "../../graphql/validation/rules/custom/NoSchemaIntrospectionCustomRule.mjs":
/*!*********************************************************************************!*\
  !*** ../../graphql/validation/rules/custom/NoSchemaIntrospectionCustomRule.mjs ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NoSchemaIntrospectionCustomRule: () => (/* binding */ NoSchemaIntrospectionCustomRule)\n/* harmony export */ });\n/* harmony import */ var _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../error/GraphQLError.mjs */ \"../../graphql/error/GraphQLError.mjs\");\n/* harmony import */ var _type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../type/definition.mjs */ \"../../graphql/type/definition.mjs\");\n/* harmony import */ var _type_introspection_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../type/introspection.mjs */ \"../../graphql/type/introspection.mjs\");\n\n\n\n\n/**\n * Prohibit introspection queries\n *\n * A GraphQL document is only valid if all fields selected are not fields that\n * return an introspection type.\n *\n * Note: This rule is optional and is not part of the Validation section of the\n * GraphQL Specification. This rule effectively disables introspection, which\n * does not reflect best practices and should only be done if absolutely necessary.\n */\nfunction NoSchemaIntrospectionCustomRule(context) {\n  return {\n    Field(node) {\n      const type = (0,_type_definition_mjs__WEBPACK_IMPORTED_MODULE_0__.getNamedType)(context.getType());\n      if (type && (0,_type_introspection_mjs__WEBPACK_IMPORTED_MODULE_1__.isIntrospectionType)(type)) {\n        context.reportError(new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_2__.GraphQLError(`GraphQL introspection has been disabled, but the requested query contained the field \"${node.name.value}\".`, {\n          nodes: node\n        }));\n      }\n    }\n  };\n}\n\n//# sourceURL=webpack://my-app/../../graphql/validation/rules/custom/NoSchemaIntrospectionCustomRule.mjs?");

/***/ }),

/***/ "../../graphql/validation/specifiedRules.mjs":
/*!***************************************************!*\
  !*** ../../graphql/validation/specifiedRules.mjs ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   specifiedRules: () => (/* binding */ specifiedRules),\n/* harmony export */   specifiedSDLRules: () => (/* binding */ specifiedSDLRules)\n/* harmony export */ });\n/* harmony import */ var _rules_ExecutableDefinitionsRule_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rules/ExecutableDefinitionsRule.mjs */ \"../../graphql/validation/rules/ExecutableDefinitionsRule.mjs\");\n/* harmony import */ var _rules_FieldsOnCorrectTypeRule_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./rules/FieldsOnCorrectTypeRule.mjs */ \"../../graphql/validation/rules/FieldsOnCorrectTypeRule.mjs\");\n/* harmony import */ var _rules_FragmentsOnCompositeTypesRule_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./rules/FragmentsOnCompositeTypesRule.mjs */ \"../../graphql/validation/rules/FragmentsOnCompositeTypesRule.mjs\");\n/* harmony import */ var _rules_KnownArgumentNamesRule_mjs__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./rules/KnownArgumentNamesRule.mjs */ \"../../graphql/validation/rules/KnownArgumentNamesRule.mjs\");\n/* harmony import */ var _rules_KnownDirectivesRule_mjs__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./rules/KnownDirectivesRule.mjs */ \"../../graphql/validation/rules/KnownDirectivesRule.mjs\");\n/* harmony import */ var _rules_KnownFragmentNamesRule_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./rules/KnownFragmentNamesRule.mjs */ \"../../graphql/validation/rules/KnownFragmentNamesRule.mjs\");\n/* harmony import */ var _rules_KnownTypeNamesRule_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./rules/KnownTypeNamesRule.mjs */ \"../../graphql/validation/rules/KnownTypeNamesRule.mjs\");\n/* harmony import */ var _rules_LoneAnonymousOperationRule_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./rules/LoneAnonymousOperationRule.mjs */ \"../../graphql/validation/rules/LoneAnonymousOperationRule.mjs\");\n/* harmony import */ var _rules_LoneSchemaDefinitionRule_mjs__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./rules/LoneSchemaDefinitionRule.mjs */ \"../../graphql/validation/rules/LoneSchemaDefinitionRule.mjs\");\n/* harmony import */ var _rules_NoFragmentCyclesRule_mjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./rules/NoFragmentCyclesRule.mjs */ \"../../graphql/validation/rules/NoFragmentCyclesRule.mjs\");\n/* harmony import */ var _rules_NoUndefinedVariablesRule_mjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./rules/NoUndefinedVariablesRule.mjs */ \"../../graphql/validation/rules/NoUndefinedVariablesRule.mjs\");\n/* harmony import */ var _rules_NoUnusedFragmentsRule_mjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./rules/NoUnusedFragmentsRule.mjs */ \"../../graphql/validation/rules/NoUnusedFragmentsRule.mjs\");\n/* harmony import */ var _rules_NoUnusedVariablesRule_mjs__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./rules/NoUnusedVariablesRule.mjs */ \"../../graphql/validation/rules/NoUnusedVariablesRule.mjs\");\n/* harmony import */ var _rules_OverlappingFieldsCanBeMergedRule_mjs__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./rules/OverlappingFieldsCanBeMergedRule.mjs */ \"../../graphql/validation/rules/OverlappingFieldsCanBeMergedRule.mjs\");\n/* harmony import */ var _rules_PossibleFragmentSpreadsRule_mjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./rules/PossibleFragmentSpreadsRule.mjs */ \"../../graphql/validation/rules/PossibleFragmentSpreadsRule.mjs\");\n/* harmony import */ var _rules_PossibleTypeExtensionsRule_mjs__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./rules/PossibleTypeExtensionsRule.mjs */ \"../../graphql/validation/rules/PossibleTypeExtensionsRule.mjs\");\n/* harmony import */ var _rules_ProvidedRequiredArgumentsRule_mjs__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./rules/ProvidedRequiredArgumentsRule.mjs */ \"../../graphql/validation/rules/ProvidedRequiredArgumentsRule.mjs\");\n/* harmony import */ var _rules_ScalarLeafsRule_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./rules/ScalarLeafsRule.mjs */ \"../../graphql/validation/rules/ScalarLeafsRule.mjs\");\n/* harmony import */ var _rules_SingleFieldSubscriptionsRule_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./rules/SingleFieldSubscriptionsRule.mjs */ \"../../graphql/validation/rules/SingleFieldSubscriptionsRule.mjs\");\n/* harmony import */ var _rules_UniqueArgumentDefinitionNamesRule_mjs__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./rules/UniqueArgumentDefinitionNamesRule.mjs */ \"../../graphql/validation/rules/UniqueArgumentDefinitionNamesRule.mjs\");\n/* harmony import */ var _rules_UniqueArgumentNamesRule_mjs__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./rules/UniqueArgumentNamesRule.mjs */ \"../../graphql/validation/rules/UniqueArgumentNamesRule.mjs\");\n/* harmony import */ var _rules_UniqueDirectiveNamesRule_mjs__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./rules/UniqueDirectiveNamesRule.mjs */ \"../../graphql/validation/rules/UniqueDirectiveNamesRule.mjs\");\n/* harmony import */ var _rules_UniqueDirectivesPerLocationRule_mjs__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./rules/UniqueDirectivesPerLocationRule.mjs */ \"../../graphql/validation/rules/UniqueDirectivesPerLocationRule.mjs\");\n/* harmony import */ var _rules_UniqueEnumValueNamesRule_mjs__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./rules/UniqueEnumValueNamesRule.mjs */ \"../../graphql/validation/rules/UniqueEnumValueNamesRule.mjs\");\n/* harmony import */ var _rules_UniqueFieldDefinitionNamesRule_mjs__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./rules/UniqueFieldDefinitionNamesRule.mjs */ \"../../graphql/validation/rules/UniqueFieldDefinitionNamesRule.mjs\");\n/* harmony import */ var _rules_UniqueFragmentNamesRule_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./rules/UniqueFragmentNamesRule.mjs */ \"../../graphql/validation/rules/UniqueFragmentNamesRule.mjs\");\n/* harmony import */ var _rules_UniqueInputFieldNamesRule_mjs__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./rules/UniqueInputFieldNamesRule.mjs */ \"../../graphql/validation/rules/UniqueInputFieldNamesRule.mjs\");\n/* harmony import */ var _rules_UniqueOperationNamesRule_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./rules/UniqueOperationNamesRule.mjs */ \"../../graphql/validation/rules/UniqueOperationNamesRule.mjs\");\n/* harmony import */ var _rules_UniqueOperationTypesRule_mjs__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./rules/UniqueOperationTypesRule.mjs */ \"../../graphql/validation/rules/UniqueOperationTypesRule.mjs\");\n/* harmony import */ var _rules_UniqueTypeNamesRule_mjs__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./rules/UniqueTypeNamesRule.mjs */ \"../../graphql/validation/rules/UniqueTypeNamesRule.mjs\");\n/* harmony import */ var _rules_UniqueVariableNamesRule_mjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./rules/UniqueVariableNamesRule.mjs */ \"../../graphql/validation/rules/UniqueVariableNamesRule.mjs\");\n/* harmony import */ var _rules_ValuesOfCorrectTypeRule_mjs__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./rules/ValuesOfCorrectTypeRule.mjs */ \"../../graphql/validation/rules/ValuesOfCorrectTypeRule.mjs\");\n/* harmony import */ var _rules_VariablesAreInputTypesRule_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./rules/VariablesAreInputTypesRule.mjs */ \"../../graphql/validation/rules/VariablesAreInputTypesRule.mjs\");\n/* harmony import */ var _rules_VariablesInAllowedPositionRule_mjs__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./rules/VariablesInAllowedPositionRule.mjs */ \"../../graphql/validation/rules/VariablesInAllowedPositionRule.mjs\");\n// Spec Section: \"Executable Definitions\"\n // Spec Section: \"Field Selections on Objects, Interfaces, and Unions Types\"\n\n // Spec Section: \"Fragments on Composite Types\"\n\n // Spec Section: \"Argument Names\"\n\n // Spec Section: \"Directives Are Defined\"\n\n // Spec Section: \"Fragment spread target defined\"\n\n // Spec Section: \"Fragment Spread Type Existence\"\n\n // Spec Section: \"Lone Anonymous Operation\"\n\n // SDL-specific validation rules\n\n // Spec Section: \"Fragments must not form cycles\"\n\n // Spec Section: \"All Variable Used Defined\"\n\n // Spec Section: \"Fragments must be used\"\n\n // Spec Section: \"All Variables Used\"\n\n // Spec Section: \"Field Selection Merging\"\n\n // Spec Section: \"Fragment spread is possible\"\n\n\n // Spec Section: \"Argument Optionality\"\n\n // Spec Section: \"Leaf Field Selections\"\n\n // Spec Section: \"Subscriptions with Single Root Field\"\n\n\n // Spec Section: \"Argument Uniqueness\"\n\n\n // Spec Section: \"Directives Are Unique Per Location\"\n\n\n\n // Spec Section: \"Fragment Name Uniqueness\"\n\n // Spec Section: \"Input Object Field Uniqueness\"\n\n // Spec Section: \"Operation Name Uniqueness\"\n\n\n\n // Spec Section: \"Variable Uniqueness\"\n\n // Spec Section: \"Value Type Correctness\"\n\n // Spec Section: \"Variables are Input Types\"\n\n // Spec Section: \"All Variable Usages Are Allowed\"\n\n\n\n/**\n * This set includes all validation rules defined by the GraphQL spec.\n *\n * The order of the rules in this list has been adjusted to lead to the\n * most clear output when encountering multiple validation errors.\n */\nconst specifiedRules = Object.freeze([_rules_ExecutableDefinitionsRule_mjs__WEBPACK_IMPORTED_MODULE_0__.ExecutableDefinitionsRule, _rules_UniqueOperationNamesRule_mjs__WEBPACK_IMPORTED_MODULE_1__.UniqueOperationNamesRule, _rules_LoneAnonymousOperationRule_mjs__WEBPACK_IMPORTED_MODULE_2__.LoneAnonymousOperationRule, _rules_SingleFieldSubscriptionsRule_mjs__WEBPACK_IMPORTED_MODULE_3__.SingleFieldSubscriptionsRule, _rules_KnownTypeNamesRule_mjs__WEBPACK_IMPORTED_MODULE_4__.KnownTypeNamesRule, _rules_FragmentsOnCompositeTypesRule_mjs__WEBPACK_IMPORTED_MODULE_5__.FragmentsOnCompositeTypesRule, _rules_VariablesAreInputTypesRule_mjs__WEBPACK_IMPORTED_MODULE_6__.VariablesAreInputTypesRule, _rules_ScalarLeafsRule_mjs__WEBPACK_IMPORTED_MODULE_7__.ScalarLeafsRule, _rules_FieldsOnCorrectTypeRule_mjs__WEBPACK_IMPORTED_MODULE_8__.FieldsOnCorrectTypeRule, _rules_UniqueFragmentNamesRule_mjs__WEBPACK_IMPORTED_MODULE_9__.UniqueFragmentNamesRule, _rules_KnownFragmentNamesRule_mjs__WEBPACK_IMPORTED_MODULE_10__.KnownFragmentNamesRule, _rules_NoUnusedFragmentsRule_mjs__WEBPACK_IMPORTED_MODULE_11__.NoUnusedFragmentsRule, _rules_PossibleFragmentSpreadsRule_mjs__WEBPACK_IMPORTED_MODULE_12__.PossibleFragmentSpreadsRule, _rules_NoFragmentCyclesRule_mjs__WEBPACK_IMPORTED_MODULE_13__.NoFragmentCyclesRule, _rules_UniqueVariableNamesRule_mjs__WEBPACK_IMPORTED_MODULE_14__.UniqueVariableNamesRule, _rules_NoUndefinedVariablesRule_mjs__WEBPACK_IMPORTED_MODULE_15__.NoUndefinedVariablesRule, _rules_NoUnusedVariablesRule_mjs__WEBPACK_IMPORTED_MODULE_16__.NoUnusedVariablesRule, _rules_KnownDirectivesRule_mjs__WEBPACK_IMPORTED_MODULE_17__.KnownDirectivesRule, _rules_UniqueDirectivesPerLocationRule_mjs__WEBPACK_IMPORTED_MODULE_18__.UniqueDirectivesPerLocationRule, _rules_KnownArgumentNamesRule_mjs__WEBPACK_IMPORTED_MODULE_19__.KnownArgumentNamesRule, _rules_UniqueArgumentNamesRule_mjs__WEBPACK_IMPORTED_MODULE_20__.UniqueArgumentNamesRule, _rules_ValuesOfCorrectTypeRule_mjs__WEBPACK_IMPORTED_MODULE_21__.ValuesOfCorrectTypeRule, _rules_ProvidedRequiredArgumentsRule_mjs__WEBPACK_IMPORTED_MODULE_22__.ProvidedRequiredArgumentsRule, _rules_VariablesInAllowedPositionRule_mjs__WEBPACK_IMPORTED_MODULE_23__.VariablesInAllowedPositionRule, _rules_OverlappingFieldsCanBeMergedRule_mjs__WEBPACK_IMPORTED_MODULE_24__.OverlappingFieldsCanBeMergedRule, _rules_UniqueInputFieldNamesRule_mjs__WEBPACK_IMPORTED_MODULE_25__.UniqueInputFieldNamesRule]);\n/**\n * @internal\n */\n\nconst specifiedSDLRules = Object.freeze([_rules_LoneSchemaDefinitionRule_mjs__WEBPACK_IMPORTED_MODULE_26__.LoneSchemaDefinitionRule, _rules_UniqueOperationTypesRule_mjs__WEBPACK_IMPORTED_MODULE_27__.UniqueOperationTypesRule, _rules_UniqueTypeNamesRule_mjs__WEBPACK_IMPORTED_MODULE_28__.UniqueTypeNamesRule, _rules_UniqueEnumValueNamesRule_mjs__WEBPACK_IMPORTED_MODULE_29__.UniqueEnumValueNamesRule, _rules_UniqueFieldDefinitionNamesRule_mjs__WEBPACK_IMPORTED_MODULE_30__.UniqueFieldDefinitionNamesRule, _rules_UniqueArgumentDefinitionNamesRule_mjs__WEBPACK_IMPORTED_MODULE_31__.UniqueArgumentDefinitionNamesRule, _rules_UniqueDirectiveNamesRule_mjs__WEBPACK_IMPORTED_MODULE_32__.UniqueDirectiveNamesRule, _rules_KnownTypeNamesRule_mjs__WEBPACK_IMPORTED_MODULE_4__.KnownTypeNamesRule, _rules_KnownDirectivesRule_mjs__WEBPACK_IMPORTED_MODULE_17__.KnownDirectivesRule, _rules_UniqueDirectivesPerLocationRule_mjs__WEBPACK_IMPORTED_MODULE_18__.UniqueDirectivesPerLocationRule, _rules_PossibleTypeExtensionsRule_mjs__WEBPACK_IMPORTED_MODULE_33__.PossibleTypeExtensionsRule, _rules_KnownArgumentNamesRule_mjs__WEBPACK_IMPORTED_MODULE_19__.KnownArgumentNamesOnDirectivesRule, _rules_UniqueArgumentNamesRule_mjs__WEBPACK_IMPORTED_MODULE_20__.UniqueArgumentNamesRule, _rules_UniqueInputFieldNamesRule_mjs__WEBPACK_IMPORTED_MODULE_25__.UniqueInputFieldNamesRule, _rules_ProvidedRequiredArgumentsRule_mjs__WEBPACK_IMPORTED_MODULE_22__.ProvidedRequiredArgumentsOnDirectivesRule]);\n\n//# sourceURL=webpack://my-app/../../graphql/validation/specifiedRules.mjs?");

/***/ }),

/***/ "../../graphql/validation/validate.mjs":
/*!*********************************************!*\
  !*** ../../graphql/validation/validate.mjs ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assertValidSDL: () => (/* binding */ assertValidSDL),\n/* harmony export */   assertValidSDLExtension: () => (/* binding */ assertValidSDLExtension),\n/* harmony export */   validate: () => (/* binding */ validate),\n/* harmony export */   validateSDL: () => (/* binding */ validateSDL)\n/* harmony export */ });\n/* harmony import */ var _jsutils_devAssert_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../jsutils/devAssert.mjs */ \"../../graphql/jsutils/devAssert.mjs\");\n/* harmony import */ var _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../error/GraphQLError.mjs */ \"../../graphql/error/GraphQLError.mjs\");\n/* harmony import */ var _language_visitor_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../language/visitor.mjs */ \"../../graphql/language/visitor.mjs\");\n/* harmony import */ var _type_validate_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../type/validate.mjs */ \"../../graphql/type/validate.mjs\");\n/* harmony import */ var _utilities_TypeInfo_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utilities/TypeInfo.mjs */ \"../../graphql/utilities/TypeInfo.mjs\");\n/* harmony import */ var _specifiedRules_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./specifiedRules.mjs */ \"../../graphql/validation/specifiedRules.mjs\");\n/* harmony import */ var _ValidationContext_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ValidationContext.mjs */ \"../../graphql/validation/ValidationContext.mjs\");\n\n\n\n\n\n\n\n/**\n * Implements the \"Validation\" section of the spec.\n *\n * Validation runs synchronously, returning an array of encountered errors, or\n * an empty array if no errors were encountered and the document is valid.\n *\n * A list of specific validation rules may be provided. If not provided, the\n * default list of rules defined by the GraphQL specification will be used.\n *\n * Each validation rules is a function which returns a visitor\n * (see the language/visitor API). Visitor methods are expected to return\n * GraphQLErrors, or Arrays of GraphQLErrors when invalid.\n *\n * Validate will stop validation after a `maxErrors` limit has been reached.\n * Attackers can send pathologically invalid queries to induce a DoS attack,\n * so by default `maxErrors` set to 100 errors.\n *\n * Optionally a custom TypeInfo instance may be provided. If not provided, one\n * will be created from the provided schema.\n */\n\nfunction validate(schema, documentAST, rules = _specifiedRules_mjs__WEBPACK_IMPORTED_MODULE_0__.specifiedRules, options, /** @deprecated will be removed in 17.0.0 */\ntypeInfo = new _utilities_TypeInfo_mjs__WEBPACK_IMPORTED_MODULE_1__.TypeInfo(schema)) {\n  var _options$maxErrors;\n  const maxErrors = (_options$maxErrors = options === null || options === void 0 ? void 0 : options.maxErrors) !== null && _options$maxErrors !== void 0 ? _options$maxErrors : 100;\n  documentAST || (0,_jsutils_devAssert_mjs__WEBPACK_IMPORTED_MODULE_2__.devAssert)(false, 'Must provide document.'); // If the schema used for validation is invalid, throw an error.\n\n  (0,_type_validate_mjs__WEBPACK_IMPORTED_MODULE_3__.assertValidSchema)(schema);\n  const abortObj = Object.freeze({});\n  const errors = [];\n  const context = new _ValidationContext_mjs__WEBPACK_IMPORTED_MODULE_4__.ValidationContext(schema, documentAST, typeInfo, error => {\n    if (errors.length >= maxErrors) {\n      errors.push(new _error_GraphQLError_mjs__WEBPACK_IMPORTED_MODULE_5__.GraphQLError('Too many validation errors, error limit reached. Validation aborted.')); // eslint-disable-next-line @typescript-eslint/no-throw-literal\n\n      throw abortObj;\n    }\n    errors.push(error);\n  }); // This uses a specialized visitor which runs multiple visitors in parallel,\n  // while maintaining the visitor skip and break API.\n\n  const visitor = (0,_language_visitor_mjs__WEBPACK_IMPORTED_MODULE_6__.visitInParallel)(rules.map(rule => rule(context))); // Visit the whole document with each instance of all provided rules.\n\n  try {\n    (0,_language_visitor_mjs__WEBPACK_IMPORTED_MODULE_6__.visit)(documentAST, (0,_utilities_TypeInfo_mjs__WEBPACK_IMPORTED_MODULE_1__.visitWithTypeInfo)(typeInfo, visitor));\n  } catch (e) {\n    if (e !== abortObj) {\n      throw e;\n    }\n  }\n  return errors;\n}\n/**\n * @internal\n */\n\nfunction validateSDL(documentAST, schemaToExtend, rules = _specifiedRules_mjs__WEBPACK_IMPORTED_MODULE_0__.specifiedSDLRules) {\n  const errors = [];\n  const context = new _ValidationContext_mjs__WEBPACK_IMPORTED_MODULE_4__.SDLValidationContext(documentAST, schemaToExtend, error => {\n    errors.push(error);\n  });\n  const visitors = rules.map(rule => rule(context));\n  (0,_language_visitor_mjs__WEBPACK_IMPORTED_MODULE_6__.visit)(documentAST, (0,_language_visitor_mjs__WEBPACK_IMPORTED_MODULE_6__.visitInParallel)(visitors));\n  return errors;\n}\n/**\n * Utility function which asserts a SDL document is valid by throwing an error\n * if it is invalid.\n *\n * @internal\n */\n\nfunction assertValidSDL(documentAST) {\n  const errors = validateSDL(documentAST);\n  if (errors.length !== 0) {\n    throw new Error(errors.map(error => error.message).join('\\n\\n'));\n  }\n}\n/**\n * Utility function which asserts a SDL document is valid by throwing an error\n * if it is invalid.\n *\n * @internal\n */\n\nfunction assertValidSDLExtension(documentAST, schema) {\n  const errors = validateSDL(documentAST, schema);\n  if (errors.length !== 0) {\n    throw new Error(errors.map(error => error.message).join('\\n\\n'));\n  }\n}\n\n//# sourceURL=webpack://my-app/../../graphql/validation/validate.mjs?");

/***/ }),

/***/ "../../graphql/version.mjs":
/*!*********************************!*\
  !*** ../../graphql/version.mjs ***!
  \*********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   version: () => (/* binding */ version),\n/* harmony export */   versionInfo: () => (/* binding */ versionInfo)\n/* harmony export */ });\n// Note: This file is autogenerated using \"resources/gen-version.js\" script and\n// automatically updated by \"npm version\" command.\n\n/**\n * A string containing the version of the GraphQL.js library\n */\nconst version = '16.8.1';\n/**\n * An object containing the components of the GraphQL.js version string\n */\n\nconst versionInfo = Object.freeze({\n  major: 16,\n  minor: 8,\n  patch: 1,\n  preReleaseTag: null\n});\n\n//# sourceURL=webpack://my-app/../../graphql/version.mjs?");

/***/ })

}]);